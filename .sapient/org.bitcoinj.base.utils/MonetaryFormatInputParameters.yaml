---
modelFingerprint: "51B2D5E44DBD6E615B756B0153B450EB"
methods:
- method:
    name: "negativeSign"
    signature: "negativeSign(char) : org.bitcoinj.base.utils.MonetaryFormat"
    sourceCodeSignature: "MonetaryFormat negativeSign(char negativeSign)"
    instructionFingerprint: "F889DDFC36BA14526CC6472A87F9A818"
  paths:
  - pathId: "path4"
    testPathName: "negativeSignWhenCharacterIsDigitNegativeSignThrowsIllegalArgumentException"
    constructorSignature: "<init>(boolean) : void"
    modelFingerprint: "3D1BCA8E6297C2A26EF39E224568E64B"
    problemWasSolvedByProver: false
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "1812E57E39789A36E2C25DE1B2306BEA"
      index: 1
      valueUuid: "target"
    - type: "INPUT"
      name: "negativeSign"
      modelFingerprint: "2025AFA085D3B814D46DEFD8C806B63A"
      index: 2
      valueUuid: "negativeSign_char1"
    - type: "STATIC"
      name: "Preconditions"
      modelFingerprint: "D2E579C66034555D6E24363DE5916136"
      index: 3
      valueUuid: "uuid4"
      methodExercised:
        target: "org.bitcoinj.base.internal.Preconditions"
        name: "checkArgument"
        parameters:
        - name: "expression"
          valueUuid: "uuid1"
        - name: "messageSupplier"
          valueUuid: "uuid2"
        signature: "checkArgument(boolean,Supplier): void"
        returnValueUuid: "uuid3"
        access: 9
    - type: "RESULT"
      name: "result"
      modelFingerprint: "3E9C76AB51311DE97AE9C2294CD5E1D6"
      index: 4
      valueUuid: "uuid5"
    uuid: "82510699-208f-3216-b79d-d23ba54f97db"
    deleted: false
    disabled: true
    ignoredBySystem: false
    failureReason:
      reason: "PROVER_COULD_NOT_SOLVE_THE_PROBLEM"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: true
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.bitcoinj.base.utils.MonetaryFormat"
        parameters:
        - name: "useSymbol"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: false
            valueType: "boolean"
            uuid: "<init>_boolean1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      valueType: "org.bitcoinj.base.utils.MonetaryFormat"
      uuid: "target"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "A"
      valueType: "char"
      uuid: "negativeSign_char1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "REAL"
      valueType: "org.bitcoinj.base.internal.Preconditions"
      uuid: "uuid4"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "EXCEPTION"
      content: !<new>
        target: "java.lang.IllegalArgumentException"
        parameters: []
        privateConstructor: false
        createdByTargetCode: false
      valueType: "java.lang.IllegalArgumentException"
      uuid: "uuid3"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "uuid1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "PRIVATE_INNER_CLASS_OR_LAMBDA"
      valueType: "java.util.function.Supplier"
      genericValueType: "java.lang.String"
      uuid: "uuid2"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "EXCEPTION"
      content: !<new>
        target: "java.lang.IllegalArgumentException"
        parameters: []
        privateConstructor: false
        createdByTargetCode: false
      valueType: "java.lang.IllegalArgumentException"
      uuid: "uuid5"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
  - pathId: "path3"
    testPathName: "negativeSignWhenNegativeSignNotGreaterThan0ThrowsIllegalArgumentException"
    constructorSignature: "<init>(boolean) : void"
    modelFingerprint: "C4A9534A27FC3D8537FD41407E557E00"
    problemWasSolvedByProver: true
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "158F306D9B26D5466D8938D2940F98BC"
      index: 1
      valueUuid: "target"
    - type: "INPUT"
      name: "negativeSign"
      modelFingerprint: "30C03954454A7129AC8DBE7103E6B712"
      index: 2
      valueUuid: "negativeSign_char1"
    - type: "STATIC"
      name: "Preconditions"
      modelFingerprint: "EE07D40EFD4ADC96C83D317FAE9481C2"
      index: 3
      valueUuid: "uuid8"
      methodExercised:
        target: "org.bitcoinj.base.internal.Preconditions"
        name: "checkArgument"
        parameters:
        - name: "expression"
          valueUuid: "uuid6"
        - name: "messageSupplier"
          valueUuid: "uuid7"
        signature: "checkArgument(boolean,Supplier): void"
        returnValueUuid: "negativeSign_void1"
        access: 9
    - type: "STATIC"
      name: "Preconditions"
      modelFingerprint: "D2E579C66034555D6E24363DE5916136"
      index: 4
      valueUuid: "uuid12"
      methodExercised:
        target: "org.bitcoinj.base.internal.Preconditions"
        name: "checkArgument"
        parameters:
        - name: "expression"
          valueUuid: "uuid9"
        - name: "messageSupplier"
          valueUuid: "uuid10"
        signature: "checkArgument(boolean,Supplier): void"
        returnValueUuid: "uuid11"
        access: 9
    - type: "RESULT"
      name: "result"
      modelFingerprint: "3E9C76AB51311DE97AE9C2294CD5E1D6"
      index: 5
      valueUuid: "uuid13"
    uuid: "3229caf1-60c2-3c65-bfa2-fc45ca7e9159"
    deleted: false
    disabled: false
    ignoredBySystem: false
    prover: "DEFAULT"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.bitcoinj.base.utils.MonetaryFormat"
        parameters:
        - name: "useSymbol"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: true
            valueType: "boolean"
            uuid: "<init>_boolean1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      valueType: "org.bitcoinj.base.utils.MonetaryFormat"
      uuid: "target"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "\\u0000"
      valueType: "char"
      uuid: "negativeSign_char1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "REAL"
      valueType: "org.bitcoinj.base.internal.Preconditions"
      uuid: "uuid8"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      valueType: "void"
      uuid: "negativeSign_void1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "uuid6"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "PRIVATE_INNER_CLASS_OR_LAMBDA"
      valueType: "java.util.function.Supplier"
      genericValueType: "java.lang.String"
      uuid: "uuid7"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "REAL"
      valueType: "org.bitcoinj.base.internal.Preconditions"
      uuid: "uuid12"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "EXCEPTION"
      content: !<new>
        target: "java.lang.IllegalArgumentException"
        parameters: []
        privateConstructor: false
        createdByTargetCode: false
      valueType: "java.lang.IllegalArgumentException"
      uuid: "uuid11"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "uuid9"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "PRIVATE_INNER_CLASS_OR_LAMBDA"
      valueType: "java.util.function.Supplier"
      genericValueType: "java.lang.String"
      uuid: "uuid10"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "EXCEPTION"
      content: !<new>
        target: "java.lang.IllegalArgumentException"
        parameters: []
        privateConstructor: false
        createdByTargetCode: false
      valueType: "java.lang.IllegalArgumentException"
      uuid: "uuid13"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
  - pathId: "path1"
    testPathName: "negativeSignWhenNegativeSignEqualsThisNegativeSign"
    constructorSignature: "<init>(boolean) : void"
    modelFingerprint: "D246BECA3993429F42A7529555BF0FBC"
    problemWasSolvedByProver: true
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "158F306D9B26D5466D8938D2940F98BC"
      index: 1
      valueUuid: "target"
    - type: "INPUT"
      name: "negativeSign"
      modelFingerprint: "92C590519AE762EE5F47AA9742263B59"
      index: 2
      valueUuid: "negativeSign_char1"
    - type: "STATIC"
      name: "Preconditions"
      modelFingerprint: "EE07D40EFD4ADC96C83D317FAE9481C2"
      index: 3
      valueUuid: "uuid16"
      methodExercised:
        target: "org.bitcoinj.base.internal.Preconditions"
        name: "checkArgument"
        parameters:
        - name: "expression"
          valueUuid: "uuid14"
        - name: "messageSupplier"
          valueUuid: "uuid15"
        signature: "checkArgument(boolean,Supplier): void"
        returnValueUuid: "negativeSign_void1"
        access: 9
    - type: "STATIC"
      name: "Preconditions"
      modelFingerprint: "EE07D40EFD4ADC96C83D317FAE9481C2"
      index: 4
      valueUuid: "uuid19"
      methodExercised:
        target: "org.bitcoinj.base.internal.Preconditions"
        name: "checkArgument"
        parameters:
        - name: "expression"
          valueUuid: "uuid17"
        - name: "messageSupplier"
          valueUuid: "uuid18"
        signature: "checkArgument(boolean,Supplier): void"
        returnValueUuid: "negativeSign_void2"
        access: 9
    - type: "RESULT"
      name: "result"
      modelFingerprint: "E837F136F4829B4CB1873F85583D11F1"
      index: 5
      valueUuid: "targetClassObject"
    uuid: "7ed85d63-fded-32db-ab29-efe70276000d"
    deleted: false
    disabled: false
    ignoredBySystem: false
    prover: "DEFAULT"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.bitcoinj.base.utils.MonetaryFormat"
        parameters:
        - name: "useSymbol"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: true
            valueType: "boolean"
            uuid: "<init>_boolean1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      valueType: "org.bitcoinj.base.utils.MonetaryFormat"
      uuid: "target"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "-"
      valueType: "char"
      uuid: "negativeSign_char1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "REAL"
      valueType: "org.bitcoinj.base.internal.Preconditions"
      uuid: "uuid16"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      valueType: "void"
      uuid: "negativeSign_void1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "uuid14"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "PRIVATE_INNER_CLASS_OR_LAMBDA"
      valueType: "java.util.function.Supplier"
      genericValueType: "java.lang.String"
      uuid: "uuid15"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "REAL"
      valueType: "org.bitcoinj.base.internal.Preconditions"
      uuid: "uuid19"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      valueType: "void"
      uuid: "negativeSign_void2"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "uuid17"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "PRIVATE_INNER_CLASS_OR_LAMBDA"
      valueType: "java.util.function.Supplier"
      genericValueType: "java.lang.String"
      uuid: "uuid18"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "THIS"
      valueType: "org.bitcoinj.base.utils.MonetaryFormat"
      uuid: "targetClassObject"
      fixed: true
      equalsMethodPresent: true
      explicitCastNeeded: false
  - pathId: "path2"
    testPathName: "negativeSignWhenNegativeSignNotEqualsThisNegativeSign"
    constructorSignature: "<init>(boolean) : void"
    modelFingerprint: "43F76CF27FE73A1520806DDFF0019226"
    problemWasSolvedByProver: true
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "158F306D9B26D5466D8938D2940F98BC"
      index: 1
      valueUuid: "target"
    - type: "INPUT"
      name: "negativeSign"
      modelFingerprint: "565F8A392CDB740AB1FC5E328B50C956"
      index: 2
      valueUuid: "negativeSign_char1"
    - type: "STATIC"
      name: "Preconditions"
      modelFingerprint: "EE07D40EFD4ADC96C83D317FAE9481C2"
      index: 3
      valueUuid: "uuid22"
      methodExercised:
        target: "org.bitcoinj.base.internal.Preconditions"
        name: "checkArgument"
        parameters:
        - name: "expression"
          valueUuid: "uuid20"
        - name: "messageSupplier"
          valueUuid: "uuid21"
        signature: "checkArgument(boolean,Supplier): void"
        returnValueUuid: "negativeSign_void1"
        access: 9
    - type: "STATIC"
      name: "Preconditions"
      modelFingerprint: "EE07D40EFD4ADC96C83D317FAE9481C2"
      index: 4
      valueUuid: "uuid25"
      methodExercised:
        target: "org.bitcoinj.base.internal.Preconditions"
        name: "checkArgument"
        parameters:
        - name: "expression"
          valueUuid: "uuid23"
        - name: "messageSupplier"
          valueUuid: "uuid24"
        signature: "checkArgument(boolean,Supplier): void"
        returnValueUuid: "negativeSign_void2"
        access: 9
    - type: "RESULT"
      name: "result"
      modelFingerprint: "D81F041D965073BD2125CCE0286601A4"
      index: 5
      valueUuid: "negativeSign_monetaryFormat1"
    uuid: "9ec7ea02-1e86-342a-9733-d8b53a49beb7"
    deleted: false
    disabled: false
    ignoredBySystem: false
    prover: "DEFAULT"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.bitcoinj.base.utils.MonetaryFormat"
        parameters:
        - name: "useSymbol"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: true
            valueType: "boolean"
            uuid: "<init>_boolean1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      valueType: "org.bitcoinj.base.utils.MonetaryFormat"
      uuid: "target"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "\\uD83F"
      valueType: "char"
      uuid: "negativeSign_char1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "REAL"
      valueType: "org.bitcoinj.base.internal.Preconditions"
      uuid: "uuid22"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      valueType: "void"
      uuid: "negativeSign_void1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "uuid20"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "PRIVATE_INNER_CLASS_OR_LAMBDA"
      valueType: "java.util.function.Supplier"
      genericValueType: "java.lang.String"
      uuid: "uuid21"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "REAL"
      valueType: "org.bitcoinj.base.internal.Preconditions"
      uuid: "uuid25"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      valueType: "void"
      uuid: "negativeSign_void2"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "uuid23"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "PRIVATE_INNER_CLASS_OR_LAMBDA"
      valueType: "java.util.function.Supplier"
      genericValueType: "java.lang.String"
      uuid: "uuid24"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.bitcoinj.base.utils.MonetaryFormat"
        parameters:
        - name: "negativeSign"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "\\uD83F"
            valueType: "char"
            uuid: "negativeSign_char1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "positiveSign"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "\\u0000"
            valueType: "char"
            uuid: "<init>_int42"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "zeroDigit"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "0"
            valueType: "char"
            uuid: "<init>_int43"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "decimalMark"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "."
            valueType: "char"
            uuid: "<init>_int44"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "minDecimals"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 2
            valueType: "int"
            uuid: "<init>_int45"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "decimalGroups"
          value:
            sapientType: "NULL"
            valueType: "java.util.List"
            genericValueType: "java.lang.Integer"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "shift"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 0
            valueType: "int"
            uuid: "<init>_int46"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "roundingMode"
          value:
            sapientType: "ENUM"
            content: !<regular>
              value: "HALF_UP"
            valueType: "java.math.RoundingMode"
            uuid: "Enum-java.math.RoundingMode-HALF_UP"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "codes"
          value:
            sapientType: "ARRAY"
            content: !<array>
              values:
                0:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: "\\u20BF"
                  valueType: "java.lang.String"
                  fixed: true
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                1:
                  sapientType: "NULL"
                  valueType: "java.lang.String"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                2:
                  sapientType: "NULL"
                  valueType: "java.lang.String"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                3:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: "m\\u20BF"
                  valueType: "java.lang.String"
                  fixed: true
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                4:
                  sapientType: "NULL"
                  valueType: "java.lang.String"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                5:
                  sapientType: "NULL"
                  valueType: "java.lang.String"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                6:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: "\\u00B5\\u20BF"
                  valueType: "java.lang.String"
                  fixed: true
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                7:
                  sapientType: "NULL"
                  valueType: "java.lang.String"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                8:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: "\\u0219"
                  valueType: "java.lang.String"
                  fixed: true
                  equalsMethodPresent: false
                  explicitCastNeeded: false
            valueType: "java.lang.String[]"
            uuid: "<init>_string[]6"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "codeSeparator"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: " "
            valueType: "char"
            uuid: "<init>_int47"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "codePrefixed"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: true
            valueType: "boolean"
            uuid: "<init>_int48"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: true
        createdByTargetCode: true
      valueType: "org.bitcoinj.base.utils.MonetaryFormat"
      uuid: "negativeSign_monetaryFormat1"
      fixed: true
      equalsMethodPresent: true
      explicitCastNeeded: false
- method:
    name: "positiveSign"
    signature: "positiveSign(char) : org.bitcoinj.base.utils.MonetaryFormat"
    sourceCodeSignature: "MonetaryFormat positiveSign(char positiveSign)"
    instructionFingerprint: "39B89AEA936F4EB82F731532485DA2B0"
  paths:
  - pathId: "path3"
    testPathName: "positiveSignWhenCharacterIsDigitPositiveSignThrowsIllegalArgumentException"
    constructorSignature: "<init>(boolean) : void"
    modelFingerprint: "4A4C093B81315F9A208A7FA7A9068E23"
    problemWasSolvedByProver: false
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "1812E57E39789A36E2C25DE1B2306BEA"
      index: 1
      valueUuid: "target"
    - type: "INPUT"
      name: "positiveSign"
      modelFingerprint: "971123B0BF2E687C6F27AF09DA7E0D56"
      index: 2
      valueUuid: "positiveSign_char1"
    - type: "STATIC"
      name: "Preconditions"
      modelFingerprint: "D2E579C66034555D6E24363DE5916136"
      index: 3
      valueUuid: "uuid29"
      methodExercised:
        target: "org.bitcoinj.base.internal.Preconditions"
        name: "checkArgument"
        parameters:
        - name: "expression"
          valueUuid: "uuid26"
        - name: "messageSupplier"
          valueUuid: "uuid27"
        signature: "checkArgument(boolean,Supplier): void"
        returnValueUuid: "uuid28"
        access: 9
    - type: "RESULT"
      name: "result"
      modelFingerprint: "3E9C76AB51311DE97AE9C2294CD5E1D6"
      index: 4
      valueUuid: "uuid30"
    uuid: "be5d81f5-c486-3ee2-bf04-9380b406bc8a"
    deleted: false
    disabled: true
    ignoredBySystem: false
    failureReason:
      reason: "PROVER_COULD_NOT_SOLVE_THE_PROBLEM"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: true
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.bitcoinj.base.utils.MonetaryFormat"
        parameters:
        - name: "useSymbol"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: false
            valueType: "boolean"
            uuid: "<init>_boolean1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      valueType: "org.bitcoinj.base.utils.MonetaryFormat"
      uuid: "target"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "A"
      valueType: "char"
      uuid: "positiveSign_char1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "REAL"
      valueType: "org.bitcoinj.base.internal.Preconditions"
      uuid: "uuid29"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "EXCEPTION"
      content: !<new>
        target: "java.lang.IllegalArgumentException"
        parameters: []
        privateConstructor: false
        createdByTargetCode: false
      valueType: "java.lang.IllegalArgumentException"
      uuid: "uuid28"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "uuid26"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "PRIVATE_INNER_CLASS_OR_LAMBDA"
      valueType: "java.util.function.Supplier"
      genericValueType: "java.lang.String"
      uuid: "uuid27"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "EXCEPTION"
      content: !<new>
        target: "java.lang.IllegalArgumentException"
        parameters: []
        privateConstructor: false
        createdByTargetCode: false
      valueType: "java.lang.IllegalArgumentException"
      uuid: "uuid30"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
  - pathId: "path1"
    testPathName: "positiveSignWhenPositiveSignEqualsThisPositiveSign"
    constructorSignature: "<init>(boolean) : void"
    modelFingerprint: "C80E63514D6FCF44811A80DAED63D7C3"
    problemWasSolvedByProver: true
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "158F306D9B26D5466D8938D2940F98BC"
      index: 1
      valueUuid: "target"
    - type: "INPUT"
      name: "positiveSign"
      modelFingerprint: "657216F95C800072038284FCCF215CCE"
      index: 2
      valueUuid: "positiveSign_char1"
    - type: "STATIC"
      name: "Preconditions"
      modelFingerprint: "EE07D40EFD4ADC96C83D317FAE9481C2"
      index: 3
      valueUuid: "uuid33"
      methodExercised:
        target: "org.bitcoinj.base.internal.Preconditions"
        name: "checkArgument"
        parameters:
        - name: "expression"
          valueUuid: "uuid31"
        - name: "messageSupplier"
          valueUuid: "uuid32"
        signature: "checkArgument(boolean,Supplier): void"
        returnValueUuid: "positiveSign_void1"
        access: 9
    - type: "RESULT"
      name: "result"
      modelFingerprint: "E837F136F4829B4CB1873F85583D11F1"
      index: 4
      valueUuid: "targetClassObject"
    uuid: "3082a4a2-3b1c-3cba-870f-9fe70a72e877"
    deleted: false
    disabled: false
    ignoredBySystem: false
    prover: "DEFAULT"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.bitcoinj.base.utils.MonetaryFormat"
        parameters:
        - name: "useSymbol"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: true
            valueType: "boolean"
            uuid: "<init>_boolean1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      valueType: "org.bitcoinj.base.utils.MonetaryFormat"
      uuid: "target"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "\\u0000"
      valueType: "char"
      uuid: "positiveSign_char1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "REAL"
      valueType: "org.bitcoinj.base.internal.Preconditions"
      uuid: "uuid33"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      valueType: "void"
      uuid: "positiveSign_void1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "uuid31"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "PRIVATE_INNER_CLASS_OR_LAMBDA"
      valueType: "java.util.function.Supplier"
      genericValueType: "java.lang.String"
      uuid: "uuid32"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "THIS"
      valueType: "org.bitcoinj.base.utils.MonetaryFormat"
      uuid: "targetClassObject"
      fixed: true
      equalsMethodPresent: true
      explicitCastNeeded: false
  - pathId: "path2"
    testPathName: "positiveSignWhenPositiveSignNotEqualsThisPositiveSign"
    constructorSignature: "<init>(boolean) : void"
    modelFingerprint: "6B6DD55331B0D2F89AC63C86BE807E92"
    problemWasSolvedByProver: true
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "158F306D9B26D5466D8938D2940F98BC"
      index: 1
      valueUuid: "target"
    - type: "INPUT"
      name: "positiveSign"
      modelFingerprint: "1D93425C0F22DA4C0AA9F5CA2D447DE8"
      index: 2
      valueUuid: "positiveSign_char1"
    - type: "STATIC"
      name: "Preconditions"
      modelFingerprint: "EE07D40EFD4ADC96C83D317FAE9481C2"
      index: 3
      valueUuid: "uuid36"
      methodExercised:
        target: "org.bitcoinj.base.internal.Preconditions"
        name: "checkArgument"
        parameters:
        - name: "expression"
          valueUuid: "uuid34"
        - name: "messageSupplier"
          valueUuid: "uuid35"
        signature: "checkArgument(boolean,Supplier): void"
        returnValueUuid: "positiveSign_void1"
        access: 9
    - type: "RESULT"
      name: "result"
      modelFingerprint: "83E528CA6B5E28F178EDE89E64443606"
      index: 4
      valueUuid: "positiveSign_monetaryFormat1"
    uuid: "e50e351c-b8ae-3da4-b637-d9f0a98e77b4"
    deleted: false
    disabled: false
    ignoredBySystem: false
    prover: "DEFAULT"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.bitcoinj.base.utils.MonetaryFormat"
        parameters:
        - name: "useSymbol"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: true
            valueType: "boolean"
            uuid: "<init>_boolean1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      valueType: "org.bitcoinj.base.utils.MonetaryFormat"
      uuid: "target"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "A"
      valueType: "char"
      uuid: "positiveSign_char1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "REAL"
      valueType: "org.bitcoinj.base.internal.Preconditions"
      uuid: "uuid36"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      valueType: "void"
      uuid: "positiveSign_void1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "uuid34"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "PRIVATE_INNER_CLASS_OR_LAMBDA"
      valueType: "java.util.function.Supplier"
      genericValueType: "java.lang.String"
      uuid: "uuid35"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.bitcoinj.base.utils.MonetaryFormat"
        parameters:
        - name: "negativeSign"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "-"
            valueType: "char"
            uuid: "<init>_int41"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "positiveSign"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "A"
            valueType: "char"
            uuid: "positiveSign_char1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "zeroDigit"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "0"
            valueType: "char"
            uuid: "<init>_int43"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "decimalMark"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "."
            valueType: "char"
            uuid: "<init>_int44"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "minDecimals"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 2
            valueType: "int"
            uuid: "<init>_int45"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "decimalGroups"
          value:
            sapientType: "NULL"
            valueType: "java.util.List"
            genericValueType: "java.lang.Integer"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "shift"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 0
            valueType: "int"
            uuid: "<init>_int46"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "roundingMode"
          value:
            sapientType: "ENUM"
            content: !<regular>
              value: "HALF_UP"
            valueType: "java.math.RoundingMode"
            uuid: "Enum-java.math.RoundingMode-HALF_UP"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "codes"
          value:
            sapientType: "ARRAY"
            content: !<array>
              values:
                0:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: "\\u20BF"
                  valueType: "java.lang.String"
                  fixed: true
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                1:
                  sapientType: "NULL"
                  valueType: "java.lang.String"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                2:
                  sapientType: "NULL"
                  valueType: "java.lang.String"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                3:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: "m\\u20BF"
                  valueType: "java.lang.String"
                  fixed: true
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                4:
                  sapientType: "NULL"
                  valueType: "java.lang.String"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                5:
                  sapientType: "NULL"
                  valueType: "java.lang.String"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                6:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: "\\u00B5\\u20BF"
                  valueType: "java.lang.String"
                  fixed: true
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                7:
                  sapientType: "NULL"
                  valueType: "java.lang.String"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                8:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: "\\u0219"
                  valueType: "java.lang.String"
                  fixed: true
                  equalsMethodPresent: false
                  explicitCastNeeded: false
            valueType: "java.lang.String[]"
            uuid: "<init>_string[]6"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "codeSeparator"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: " "
            valueType: "char"
            uuid: "<init>_int47"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "codePrefixed"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: true
            valueType: "boolean"
            uuid: "<init>_int48"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: true
        createdByTargetCode: true
      valueType: "org.bitcoinj.base.utils.MonetaryFormat"
      uuid: "positiveSign_monetaryFormat1"
      fixed: true
      equalsMethodPresent: true
      explicitCastNeeded: false
- method:
    name: "digits"
    signature: "digits(char) : org.bitcoinj.base.utils.MonetaryFormat"
    sourceCodeSignature: "MonetaryFormat digits(char zeroDigit)"
    instructionFingerprint: "D699C4C32FC199E444B8885E63F55EA7"
  paths:
  - pathId: "path1"
    testPathName: "digitsWhenZeroDigitEqualsThisZeroDigit"
    constructorSignature: "<init>(boolean) : void"
    modelFingerprint: "0B4323292E98128AB16125140B14E033"
    problemWasSolvedByProver: true
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "158F306D9B26D5466D8938D2940F98BC"
      index: 1
      valueUuid: "target"
    - type: "INPUT"
      name: "zeroDigit"
      modelFingerprint: "74005C486F89EC58E7D435340A57EA49"
      index: 2
      valueUuid: "digits_char1"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "E837F136F4829B4CB1873F85583D11F1"
      index: 3
      valueUuid: "targetClassObject"
    uuid: "5446d07c-8d1d-3205-ae25-e98db4cf900f"
    deleted: false
    disabled: false
    ignoredBySystem: false
    prover: "DEFAULT"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.bitcoinj.base.utils.MonetaryFormat"
        parameters:
        - name: "useSymbol"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: true
            valueType: "boolean"
            uuid: "<init>_boolean1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      valueType: "org.bitcoinj.base.utils.MonetaryFormat"
      uuid: "target"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "0"
      valueType: "char"
      uuid: "digits_char1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "THIS"
      valueType: "org.bitcoinj.base.utils.MonetaryFormat"
      uuid: "targetClassObject"
      fixed: true
      equalsMethodPresent: true
      explicitCastNeeded: false
  - pathId: "path2"
    testPathName: "digitsWhenZeroDigitNotEqualsThisZeroDigit"
    constructorSignature: "<init>(boolean) : void"
    modelFingerprint: "DE6B5CE11901925F9B2B7A50781ED461"
    problemWasSolvedByProver: true
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "158F306D9B26D5466D8938D2940F98BC"
      index: 1
      valueUuid: "target"
    - type: "INPUT"
      name: "zeroDigit"
      modelFingerprint: "923430C53F922677016BB3C41F425B07"
      index: 2
      valueUuid: "digits_char1"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "44EA0590DF00F69852896BBE422A7819"
      index: 3
      valueUuid: "digits_monetaryFormat1"
    uuid: "143eb855-4f63-30eb-9a6f-7142c5e1abb2"
    deleted: false
    disabled: false
    ignoredBySystem: false
    prover: "DEFAULT"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.bitcoinj.base.utils.MonetaryFormat"
        parameters:
        - name: "useSymbol"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: true
            valueType: "boolean"
            uuid: "<init>_boolean1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      valueType: "org.bitcoinj.base.utils.MonetaryFormat"
      uuid: "target"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "A"
      valueType: "char"
      uuid: "digits_char1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.bitcoinj.base.utils.MonetaryFormat"
        parameters:
        - name: "negativeSign"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "-"
            valueType: "char"
            uuid: "<init>_int41"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "positiveSign"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "\\u0000"
            valueType: "char"
            uuid: "<init>_int42"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "zeroDigit"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "A"
            valueType: "char"
            uuid: "digits_char1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "decimalMark"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "."
            valueType: "char"
            uuid: "<init>_int44"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "minDecimals"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 2
            valueType: "int"
            uuid: "<init>_int45"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "decimalGroups"
          value:
            sapientType: "NULL"
            valueType: "java.util.List"
            genericValueType: "java.lang.Integer"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "shift"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 0
            valueType: "int"
            uuid: "<init>_int46"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "roundingMode"
          value:
            sapientType: "ENUM"
            content: !<regular>
              value: "HALF_UP"
            valueType: "java.math.RoundingMode"
            uuid: "Enum-java.math.RoundingMode-HALF_UP"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "codes"
          value:
            sapientType: "ARRAY"
            content: !<array>
              values:
                0:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: "\\u20BF"
                  valueType: "java.lang.String"
                  fixed: true
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                1:
                  sapientType: "NULL"
                  valueType: "java.lang.String"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                2:
                  sapientType: "NULL"
                  valueType: "java.lang.String"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                3:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: "m\\u20BF"
                  valueType: "java.lang.String"
                  fixed: true
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                4:
                  sapientType: "NULL"
                  valueType: "java.lang.String"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                5:
                  sapientType: "NULL"
                  valueType: "java.lang.String"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                6:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: "\\u00B5\\u20BF"
                  valueType: "java.lang.String"
                  fixed: true
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                7:
                  sapientType: "NULL"
                  valueType: "java.lang.String"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                8:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: "\\u0219"
                  valueType: "java.lang.String"
                  fixed: true
                  equalsMethodPresent: false
                  explicitCastNeeded: false
            valueType: "java.lang.String[]"
            uuid: "<init>_string[]6"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "codeSeparator"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: " "
            valueType: "char"
            uuid: "<init>_int47"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "codePrefixed"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: true
            valueType: "boolean"
            uuid: "<init>_int48"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: true
        createdByTargetCode: true
      valueType: "org.bitcoinj.base.utils.MonetaryFormat"
      uuid: "digits_monetaryFormat1"
      fixed: true
      equalsMethodPresent: true
      explicitCastNeeded: false
- method:
    name: "decimalMark"
    signature: "decimalMark(char) : org.bitcoinj.base.utils.MonetaryFormat"
    sourceCodeSignature: "MonetaryFormat decimalMark(char decimalMark)"
    instructionFingerprint: "99D64F5BDEBF983C7CB2021D92E2B0C0"
  paths:
  - pathId: "path4"
    testPathName: "decimalMarkWhenCharacterIsDigitDecimalMarkThrowsIllegalArgumentException"
    constructorSignature: "<init>(boolean) : void"
    modelFingerprint: "0B218572EC060CDB0B8446A67E88DBAA"
    problemWasSolvedByProver: false
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "1812E57E39789A36E2C25DE1B2306BEA"
      index: 1
      valueUuid: "target"
    - type: "INPUT"
      name: "decimalMark"
      modelFingerprint: "3381E4D9728C066B030665CFD237CD8A"
      index: 2
      valueUuid: "decimalMark_char1"
    - type: "STATIC"
      name: "Preconditions"
      modelFingerprint: "D2E579C66034555D6E24363DE5916136"
      index: 3
      valueUuid: "uuid40"
      methodExercised:
        target: "org.bitcoinj.base.internal.Preconditions"
        name: "checkArgument"
        parameters:
        - name: "expression"
          valueUuid: "uuid37"
        - name: "messageSupplier"
          valueUuid: "uuid38"
        signature: "checkArgument(boolean,Supplier): void"
        returnValueUuid: "uuid39"
        access: 9
    - type: "RESULT"
      name: "result"
      modelFingerprint: "3E9C76AB51311DE97AE9C2294CD5E1D6"
      index: 4
      valueUuid: "uuid41"
    uuid: "5ddaf9a0-df81-3b76-9ead-5bf50894084c"
    deleted: false
    disabled: true
    ignoredBySystem: false
    failureReason:
      reason: "PROVER_COULD_NOT_SOLVE_THE_PROBLEM"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: true
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.bitcoinj.base.utils.MonetaryFormat"
        parameters:
        - name: "useSymbol"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: false
            valueType: "boolean"
            uuid: "<init>_boolean1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      valueType: "org.bitcoinj.base.utils.MonetaryFormat"
      uuid: "target"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "A"
      valueType: "char"
      uuid: "decimalMark_char1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "REAL"
      valueType: "org.bitcoinj.base.internal.Preconditions"
      uuid: "uuid40"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "EXCEPTION"
      content: !<new>
        target: "java.lang.IllegalArgumentException"
        parameters: []
        privateConstructor: false
        createdByTargetCode: false
      valueType: "java.lang.IllegalArgumentException"
      uuid: "uuid39"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "uuid37"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "PRIVATE_INNER_CLASS_OR_LAMBDA"
      valueType: "java.util.function.Supplier"
      genericValueType: "java.lang.String"
      uuid: "uuid38"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "EXCEPTION"
      content: !<new>
        target: "java.lang.IllegalArgumentException"
        parameters: []
        privateConstructor: false
        createdByTargetCode: false
      valueType: "java.lang.IllegalArgumentException"
      uuid: "uuid41"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
  - pathId: "path3"
    testPathName: "decimalMarkWhenDecimalMarkNotGreaterThan0ThrowsIllegalArgumentException"
    constructorSignature: "<init>(boolean) : void"
    modelFingerprint: "5873BFC06BDC3822D7DAAA9A06A6549E"
    problemWasSolvedByProver: true
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "158F306D9B26D5466D8938D2940F98BC"
      index: 1
      valueUuid: "target"
    - type: "INPUT"
      name: "decimalMark"
      modelFingerprint: "E84CF956602CAFC7945AD711232FAD4C"
      index: 2
      valueUuid: "decimalMark_char1"
    - type: "STATIC"
      name: "Preconditions"
      modelFingerprint: "EE07D40EFD4ADC96C83D317FAE9481C2"
      index: 3
      valueUuid: "uuid44"
      methodExercised:
        target: "org.bitcoinj.base.internal.Preconditions"
        name: "checkArgument"
        parameters:
        - name: "expression"
          valueUuid: "uuid42"
        - name: "messageSupplier"
          valueUuid: "uuid43"
        signature: "checkArgument(boolean,Supplier): void"
        returnValueUuid: "decimalMark_void1"
        access: 9
    - type: "STATIC"
      name: "Preconditions"
      modelFingerprint: "D2E579C66034555D6E24363DE5916136"
      index: 4
      valueUuid: "uuid48"
      methodExercised:
        target: "org.bitcoinj.base.internal.Preconditions"
        name: "checkArgument"
        parameters:
        - name: "expression"
          valueUuid: "uuid45"
        - name: "messageSupplier"
          valueUuid: "uuid46"
        signature: "checkArgument(boolean,Supplier): void"
        returnValueUuid: "uuid47"
        access: 9
    - type: "RESULT"
      name: "result"
      modelFingerprint: "3E9C76AB51311DE97AE9C2294CD5E1D6"
      index: 5
      valueUuid: "uuid49"
    uuid: "dfa31e1b-7ef8-35e2-adc0-1bf19a02a45f"
    deleted: false
    disabled: false
    ignoredBySystem: false
    prover: "DEFAULT"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.bitcoinj.base.utils.MonetaryFormat"
        parameters:
        - name: "useSymbol"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: true
            valueType: "boolean"
            uuid: "<init>_boolean1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      valueType: "org.bitcoinj.base.utils.MonetaryFormat"
      uuid: "target"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "\\u0000"
      valueType: "char"
      uuid: "decimalMark_char1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "REAL"
      valueType: "org.bitcoinj.base.internal.Preconditions"
      uuid: "uuid44"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      valueType: "void"
      uuid: "decimalMark_void1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "uuid42"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "PRIVATE_INNER_CLASS_OR_LAMBDA"
      valueType: "java.util.function.Supplier"
      genericValueType: "java.lang.String"
      uuid: "uuid43"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "REAL"
      valueType: "org.bitcoinj.base.internal.Preconditions"
      uuid: "uuid48"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "EXCEPTION"
      content: !<new>
        target: "java.lang.IllegalArgumentException"
        parameters: []
        privateConstructor: false
        createdByTargetCode: false
      valueType: "java.lang.IllegalArgumentException"
      uuid: "uuid47"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "uuid45"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "PRIVATE_INNER_CLASS_OR_LAMBDA"
      valueType: "java.util.function.Supplier"
      genericValueType: "java.lang.String"
      uuid: "uuid46"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "EXCEPTION"
      content: !<new>
        target: "java.lang.IllegalArgumentException"
        parameters: []
        privateConstructor: false
        createdByTargetCode: false
      valueType: "java.lang.IllegalArgumentException"
      uuid: "uuid49"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
  - pathId: "path1"
    testPathName: "decimalMarkWhenDecimalMarkEqualsThisDecimalMark"
    constructorSignature: "<init>(boolean) : void"
    modelFingerprint: "CCE3229EEF8803592A298309003D6124"
    problemWasSolvedByProver: true
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "158F306D9B26D5466D8938D2940F98BC"
      index: 1
      valueUuid: "target"
    - type: "INPUT"
      name: "decimalMark"
      modelFingerprint: "35C6B9D1E051A88BA3093208553CA01C"
      index: 2
      valueUuid: "decimalMark_char1"
    - type: "STATIC"
      name: "Preconditions"
      modelFingerprint: "EE07D40EFD4ADC96C83D317FAE9481C2"
      index: 3
      valueUuid: "uuid52"
      methodExercised:
        target: "org.bitcoinj.base.internal.Preconditions"
        name: "checkArgument"
        parameters:
        - name: "expression"
          valueUuid: "uuid50"
        - name: "messageSupplier"
          valueUuid: "uuid51"
        signature: "checkArgument(boolean,Supplier): void"
        returnValueUuid: "decimalMark_void1"
        access: 9
    - type: "STATIC"
      name: "Preconditions"
      modelFingerprint: "EE07D40EFD4ADC96C83D317FAE9481C2"
      index: 4
      valueUuid: "uuid55"
      methodExercised:
        target: "org.bitcoinj.base.internal.Preconditions"
        name: "checkArgument"
        parameters:
        - name: "expression"
          valueUuid: "uuid53"
        - name: "messageSupplier"
          valueUuid: "uuid54"
        signature: "checkArgument(boolean,Supplier): void"
        returnValueUuid: "decimalMark_void2"
        access: 9
    - type: "RESULT"
      name: "result"
      modelFingerprint: "E837F136F4829B4CB1873F85583D11F1"
      index: 5
      valueUuid: "targetClassObject"
    uuid: "106fcdd4-331b-31bd-b4f9-8075b9082315"
    deleted: false
    disabled: false
    ignoredBySystem: false
    prover: "DEFAULT"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.bitcoinj.base.utils.MonetaryFormat"
        parameters:
        - name: "useSymbol"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: true
            valueType: "boolean"
            uuid: "<init>_boolean1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      valueType: "org.bitcoinj.base.utils.MonetaryFormat"
      uuid: "target"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "."
      valueType: "char"
      uuid: "decimalMark_char1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "REAL"
      valueType: "org.bitcoinj.base.internal.Preconditions"
      uuid: "uuid52"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      valueType: "void"
      uuid: "decimalMark_void1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "uuid50"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "PRIVATE_INNER_CLASS_OR_LAMBDA"
      valueType: "java.util.function.Supplier"
      genericValueType: "java.lang.String"
      uuid: "uuid51"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "REAL"
      valueType: "org.bitcoinj.base.internal.Preconditions"
      uuid: "uuid55"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      valueType: "void"
      uuid: "decimalMark_void2"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "uuid53"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "PRIVATE_INNER_CLASS_OR_LAMBDA"
      valueType: "java.util.function.Supplier"
      genericValueType: "java.lang.String"
      uuid: "uuid54"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "THIS"
      valueType: "org.bitcoinj.base.utils.MonetaryFormat"
      uuid: "targetClassObject"
      fixed: true
      equalsMethodPresent: true
      explicitCastNeeded: false
  - pathId: "path2"
    testPathName: "decimalMarkWhenDecimalMarkNotEqualsThisDecimalMark"
    constructorSignature: "<init>(boolean) : void"
    modelFingerprint: "E89249DFEC138B4B8FD91FE1423FA881"
    problemWasSolvedByProver: true
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "158F306D9B26D5466D8938D2940F98BC"
      index: 1
      valueUuid: "target"
    - type: "INPUT"
      name: "decimalMark"
      modelFingerprint: "FDA43A6CC43487530FEDF6CEE8644A24"
      index: 2
      valueUuid: "decimalMark_char1"
    - type: "STATIC"
      name: "Preconditions"
      modelFingerprint: "EE07D40EFD4ADC96C83D317FAE9481C2"
      index: 3
      valueUuid: "uuid58"
      methodExercised:
        target: "org.bitcoinj.base.internal.Preconditions"
        name: "checkArgument"
        parameters:
        - name: "expression"
          valueUuid: "uuid56"
        - name: "messageSupplier"
          valueUuid: "uuid57"
        signature: "checkArgument(boolean,Supplier): void"
        returnValueUuid: "decimalMark_void1"
        access: 9
    - type: "STATIC"
      name: "Preconditions"
      modelFingerprint: "EE07D40EFD4ADC96C83D317FAE9481C2"
      index: 4
      valueUuid: "uuid61"
      methodExercised:
        target: "org.bitcoinj.base.internal.Preconditions"
        name: "checkArgument"
        parameters:
        - name: "expression"
          valueUuid: "uuid59"
        - name: "messageSupplier"
          valueUuid: "uuid60"
        signature: "checkArgument(boolean,Supplier): void"
        returnValueUuid: "decimalMark_void2"
        access: 9
    - type: "RESULT"
      name: "result"
      modelFingerprint: "227FFCF5F131E0CB6CFB819F0844E294"
      index: 5
      valueUuid: "decimalMark_monetaryFormat1"
    uuid: "22c1f48a-0e87-3add-ab60-f4de673cd1f3"
    deleted: false
    disabled: false
    ignoredBySystem: false
    prover: "DEFAULT"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.bitcoinj.base.utils.MonetaryFormat"
        parameters:
        - name: "useSymbol"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: true
            valueType: "boolean"
            uuid: "<init>_boolean1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      valueType: "org.bitcoinj.base.utils.MonetaryFormat"
      uuid: "target"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "\\uD83F"
      valueType: "char"
      uuid: "decimalMark_char1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "REAL"
      valueType: "org.bitcoinj.base.internal.Preconditions"
      uuid: "uuid58"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      valueType: "void"
      uuid: "decimalMark_void1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "uuid56"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "PRIVATE_INNER_CLASS_OR_LAMBDA"
      valueType: "java.util.function.Supplier"
      genericValueType: "java.lang.String"
      uuid: "uuid57"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "REAL"
      valueType: "org.bitcoinj.base.internal.Preconditions"
      uuid: "uuid61"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      valueType: "void"
      uuid: "decimalMark_void2"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "uuid59"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "PRIVATE_INNER_CLASS_OR_LAMBDA"
      valueType: "java.util.function.Supplier"
      genericValueType: "java.lang.String"
      uuid: "uuid60"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.bitcoinj.base.utils.MonetaryFormat"
        parameters:
        - name: "negativeSign"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "-"
            valueType: "char"
            uuid: "<init>_int41"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "positiveSign"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "\\u0000"
            valueType: "char"
            uuid: "<init>_int42"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "zeroDigit"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "0"
            valueType: "char"
            uuid: "<init>_int43"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "decimalMark"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "\\uD83F"
            valueType: "char"
            uuid: "decimalMark_char1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "minDecimals"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 2
            valueType: "int"
            uuid: "<init>_int45"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "decimalGroups"
          value:
            sapientType: "NULL"
            valueType: "java.util.List"
            genericValueType: "java.lang.Integer"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "shift"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 0
            valueType: "int"
            uuid: "<init>_int46"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "roundingMode"
          value:
            sapientType: "ENUM"
            content: !<regular>
              value: "HALF_UP"
            valueType: "java.math.RoundingMode"
            uuid: "Enum-java.math.RoundingMode-HALF_UP"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "codes"
          value:
            sapientType: "ARRAY"
            content: !<array>
              values:
                0:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: "\\u20BF"
                  valueType: "java.lang.String"
                  fixed: true
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                1:
                  sapientType: "NULL"
                  valueType: "java.lang.String"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                2:
                  sapientType: "NULL"
                  valueType: "java.lang.String"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                3:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: "m\\u20BF"
                  valueType: "java.lang.String"
                  fixed: true
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                4:
                  sapientType: "NULL"
                  valueType: "java.lang.String"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                5:
                  sapientType: "NULL"
                  valueType: "java.lang.String"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                6:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: "\\u00B5\\u20BF"
                  valueType: "java.lang.String"
                  fixed: true
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                7:
                  sapientType: "NULL"
                  valueType: "java.lang.String"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                8:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: "\\u0219"
                  valueType: "java.lang.String"
                  fixed: true
                  equalsMethodPresent: false
                  explicitCastNeeded: false
            valueType: "java.lang.String[]"
            uuid: "<init>_string[]6"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "codeSeparator"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: " "
            valueType: "char"
            uuid: "<init>_int47"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "codePrefixed"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: true
            valueType: "boolean"
            uuid: "<init>_int48"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: true
        createdByTargetCode: true
      valueType: "org.bitcoinj.base.utils.MonetaryFormat"
      uuid: "decimalMark_monetaryFormat1"
      fixed: true
      equalsMethodPresent: true
      explicitCastNeeded: false
- method:
    name: "minDecimals"
    signature: "minDecimals(int) : org.bitcoinj.base.utils.MonetaryFormat"
    sourceCodeSignature: "MonetaryFormat minDecimals(int minDecimals)"
    instructionFingerprint: "0AD61A80B0829A7D58A6EA5FFE99C06A"
  paths:
  - pathId: "path1"
    testPathName: "minDecimalsWhenMinDecimalsEqualsThisMinDecimals"
    constructorSignature: "<init>(boolean) : void"
    modelFingerprint: "24FBAB1D56D4A0E7AF69F95744262FF3"
    problemWasSolvedByProver: true
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "158F306D9B26D5466D8938D2940F98BC"
      index: 1
      valueUuid: "target"
    - type: "INPUT"
      name: "minDecimals"
      modelFingerprint: "0CB5AC3578BEAEC35438E171A8896E86"
      index: 2
      valueUuid: "minDecimals_int1"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "E837F136F4829B4CB1873F85583D11F1"
      index: 3
      valueUuid: "targetClassObject"
    uuid: "3562bf3c-d3ea-3df3-8346-01c0a0a75fbe"
    deleted: false
    disabled: false
    ignoredBySystem: false
    prover: "DEFAULT"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.bitcoinj.base.utils.MonetaryFormat"
        parameters:
        - name: "useSymbol"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: true
            valueType: "boolean"
            uuid: "<init>_boolean1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      valueType: "org.bitcoinj.base.utils.MonetaryFormat"
      uuid: "target"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: 2
      valueType: "int"
      uuid: "minDecimals_int1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "THIS"
      valueType: "org.bitcoinj.base.utils.MonetaryFormat"
      uuid: "targetClassObject"
      fixed: true
      equalsMethodPresent: true
      explicitCastNeeded: false
  - pathId: "path2"
    testPathName: "minDecimalsWhenMinDecimalsNotEqualsThisMinDecimals"
    constructorSignature: "<init>(boolean) : void"
    modelFingerprint: "92D30C0FD8587ADABC1413BC8C1071B8"
    problemWasSolvedByProver: true
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "158F306D9B26D5466D8938D2940F98BC"
      index: 1
      valueUuid: "target"
    - type: "INPUT"
      name: "minDecimals"
      modelFingerprint: "3C61F6C15B8CFDEC683AC6D9A5D3199E"
      index: 2
      valueUuid: "minDecimals_int1"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "DD3EA90352E06D56F4C8274050F68AFF"
      index: 3
      valueUuid: "minDecimals_monetaryFormat1"
    uuid: "7f9025a4-fea9-3149-b580-7bc482325f51"
    deleted: false
    disabled: false
    ignoredBySystem: false
    prover: "DEFAULT"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.bitcoinj.base.utils.MonetaryFormat"
        parameters:
        - name: "useSymbol"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: true
            valueType: "boolean"
            uuid: "<init>_boolean1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      valueType: "org.bitcoinj.base.utils.MonetaryFormat"
      uuid: "target"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: 1
      valueType: "int"
      uuid: "minDecimals_int1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.bitcoinj.base.utils.MonetaryFormat"
        parameters:
        - name: "negativeSign"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "-"
            valueType: "char"
            uuid: "<init>_int41"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "positiveSign"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "\\u0000"
            valueType: "char"
            uuid: "<init>_int42"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "zeroDigit"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "0"
            valueType: "char"
            uuid: "<init>_int43"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "decimalMark"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "."
            valueType: "char"
            uuid: "<init>_int44"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "minDecimals"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 1
            valueType: "int"
            uuid: "minDecimals_int1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "decimalGroups"
          value:
            sapientType: "NULL"
            valueType: "java.util.List"
            genericValueType: "java.lang.Integer"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "shift"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 0
            valueType: "int"
            uuid: "<init>_int46"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "roundingMode"
          value:
            sapientType: "ENUM"
            content: !<regular>
              value: "HALF_UP"
            valueType: "java.math.RoundingMode"
            uuid: "Enum-java.math.RoundingMode-HALF_UP"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "codes"
          value:
            sapientType: "ARRAY"
            content: !<array>
              values:
                0:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: "\\u20BF"
                  valueType: "java.lang.String"
                  fixed: true
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                1:
                  sapientType: "NULL"
                  valueType: "java.lang.String"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                2:
                  sapientType: "NULL"
                  valueType: "java.lang.String"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                3:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: "m\\u20BF"
                  valueType: "java.lang.String"
                  fixed: true
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                4:
                  sapientType: "NULL"
                  valueType: "java.lang.String"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                5:
                  sapientType: "NULL"
                  valueType: "java.lang.String"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                6:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: "\\u00B5\\u20BF"
                  valueType: "java.lang.String"
                  fixed: true
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                7:
                  sapientType: "NULL"
                  valueType: "java.lang.String"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                8:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: "\\u0219"
                  valueType: "java.lang.String"
                  fixed: true
                  equalsMethodPresent: false
                  explicitCastNeeded: false
            valueType: "java.lang.String[]"
            uuid: "<init>_string[]6"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "codeSeparator"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: " "
            valueType: "char"
            uuid: "<init>_int47"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "codePrefixed"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: true
            valueType: "boolean"
            uuid: "<init>_int48"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: true
        createdByTargetCode: true
      valueType: "org.bitcoinj.base.utils.MonetaryFormat"
      uuid: "minDecimals_monetaryFormat1"
      fixed: true
      equalsMethodPresent: true
      explicitCastNeeded: false
- method:
    name: "optionalDecimals"
    signature: "optionalDecimals(int[]) : org.bitcoinj.base.utils.MonetaryFormat"
    sourceCodeSignature: "MonetaryFormat optionalDecimals(int... groups)"
    instructionFingerprint: "8C36ED8C08FBBBAC33A000AFF56FED75"
  paths:
  - pathId: "path1"
    testPathName: "optionalDecimalsWhenGroupsIsNotEmpty"
    constructorSignature: "<init>(boolean) : void"
    modelFingerprint: "9B7BBFC13EF0F3C208446DB77BCBC496"
    problemWasSolvedByProver: true
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "E8AAA76518010EB4B9E2B05B3FF8C364"
      index: 1
      valueUuid: "target"
    - type: "INPUT"
      name: "groups"
      modelFingerprint: "6E8865D6BE45955F1D0C87113B169723"
      index: 2
      valueUuid: "optionalDecimals_int[]1"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "A555747FB1DF0089625ADAF8A7F97841"
      index: 3
      valueUuid: "optionalDecimals_monetaryFormat1"
    uuid: "92462d72-7597-386a-a33f-a83ee93c5b71"
    deleted: false
    disabled: false
    ignoredBySystem: false
    prover: "DEFAULT"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.bitcoinj.base.utils.MonetaryFormat"
        parameters:
        - name: "useSymbol"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: true
            valueType: "boolean"
            uuid: "<init>_boolean1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      valueType: "org.bitcoinj.base.utils.MonetaryFormat"
      uuid: "target"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "ARRAY"
      content: !<array>
        values:
          0:
            sapientType: "BASIC"
            content: !<regular>
              value: 1
            valueType: "int"
            uuid: "optionalDecimals_int4"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
      valueType: "int[]"
      uuid: "optionalDecimals_int[]1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.bitcoinj.base.utils.MonetaryFormat"
        parameters:
        - name: "negativeSign"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "-"
            valueType: "char"
            uuid: "<init>_int41"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "positiveSign"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "\\u0000"
            valueType: "char"
            uuid: "<init>_int42"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "zeroDigit"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "0"
            valueType: "char"
            uuid: "<init>_int43"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "decimalMark"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "."
            valueType: "char"
            uuid: "<init>_int44"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "minDecimals"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 2
            valueType: "int"
            uuid: "<init>_int45"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "decimalGroups"
          value:
            sapientType: "COLLECTION"
            content: !<collection>
              collectionClass: "java.util.ArrayList"
              parameters: []
              values:
              - sapientType: "BASIC"
                content: !<regular>
                  value: 1
                valueType: "java.lang.Integer"
                uuid: "optionalDecimals_arrayList1-item0"
                fixed: true
                collectionUuid: "optionalDecimals_arrayList1"
                equalsMethodPresent: false
                explicitCastNeeded: false
            valueType: "java.util.List"
            genericValueType: "java.lang.Integer"
            uuid: "optionalDecimals_arrayList1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "shift"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 0
            valueType: "int"
            uuid: "<init>_int46"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "roundingMode"
          value:
            sapientType: "ENUM"
            content: !<regular>
              value: "HALF_UP"
            valueType: "java.math.RoundingMode"
            uuid: "Enum-java.math.RoundingMode-HALF_UP"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "codes"
          value:
            sapientType: "ARRAY"
            content: !<array>
              values:
                0:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: "\\u20BF"
                  valueType: "java.lang.String"
                  fixed: true
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                1:
                  sapientType: "NULL"
                  valueType: "java.lang.String"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                2:
                  sapientType: "NULL"
                  valueType: "java.lang.String"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                3:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: "m\\u20BF"
                  valueType: "java.lang.String"
                  fixed: true
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                4:
                  sapientType: "NULL"
                  valueType: "java.lang.String"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                5:
                  sapientType: "NULL"
                  valueType: "java.lang.String"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                6:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: "\\u00B5\\u20BF"
                  valueType: "java.lang.String"
                  fixed: true
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                7:
                  sapientType: "NULL"
                  valueType: "java.lang.String"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                8:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: "\\u0219"
                  valueType: "java.lang.String"
                  fixed: true
                  equalsMethodPresent: false
                  explicitCastNeeded: false
            valueType: "java.lang.String[]"
            uuid: "<init>_string[]6"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "codeSeparator"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: " "
            valueType: "char"
            uuid: "<init>_int47"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "codePrefixed"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: true
            valueType: "boolean"
            uuid: "<init>_int48"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: true
        createdByTargetCode: true
      valueType: "org.bitcoinj.base.utils.MonetaryFormat"
      uuid: "optionalDecimals_monetaryFormat1"
      fixed: true
      equalsMethodPresent: true
      explicitCastNeeded: false
  - pathId: "path2"
    testPathName: "optionalDecimalsWhenGroupsIsEmpty"
    constructorSignature: "<init>(boolean) : void"
    modelFingerprint: "9EB4496E847F9E522353873DA3B6266B"
    problemWasSolvedByProver: true
    truncated: true
    inputParameters: []
    uuid: "b9775fe9-572a-3340-9eae-df3431a7effe"
    deleted: true
    disabled: false
    ignoredBySystem: true
    prover: "DEFAULT"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues: []
- method:
    name: "repeatOptionalDecimals"
    signature: "repeatOptionalDecimals(int,int) : org.bitcoinj.base.utils.MonetaryFormat"
    sourceCodeSignature: "MonetaryFormat repeatOptionalDecimals(int decimals, int\
      \ repetitions)"
    instructionFingerprint: "96E006F6ACDBCD55F7DFB3BAB6FA3B6C"
  paths:
  - pathId: "path3"
    testPathName: "repeatOptionalDecimalsWhenRepetitionsLessThan0ThrowsIllegalArgumentException"
    constructorSignature: "<init>(boolean) : void"
    modelFingerprint: "56E1F829F8C935A556C4AB7990FF672A"
    problemWasSolvedByProver: true
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "158F306D9B26D5466D8938D2940F98BC"
      index: 1
      valueUuid: "target"
    - type: "INPUT"
      name: "decimals"
      modelFingerprint: "AACBFE1757A9933690C57B7E527249E2"
      index: 2
      valueUuid: "repeatOptionalDecimals_int1"
    - type: "INPUT"
      name: "repetitions"
      modelFingerprint: "433620C92BD864E02FA41F181FC1AACE"
      index: 3
      valueUuid: "repeatOptionalDecimals_int2"
    - type: "STATIC"
      name: "Preconditions"
      modelFingerprint: "D2E579C66034555D6E24363DE5916136"
      index: 4
      valueUuid: "uuid65"
      methodExercised:
        target: "org.bitcoinj.base.internal.Preconditions"
        name: "checkArgument"
        parameters:
        - name: "expression"
          valueUuid: "uuid62"
        - name: "messageSupplier"
          valueUuid: "uuid63"
        signature: "checkArgument(boolean,Supplier): void"
        returnValueUuid: "uuid64"
        access: 9
    - type: "RESULT"
      name: "result"
      modelFingerprint: "3E9C76AB51311DE97AE9C2294CD5E1D6"
      index: 5
      valueUuid: "uuid66"
    uuid: "d9eedd8b-a3a2-3070-952f-7ab6850262cf"
    deleted: false
    disabled: false
    ignoredBySystem: false
    prover: "DEFAULT"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.bitcoinj.base.utils.MonetaryFormat"
        parameters:
        - name: "useSymbol"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: true
            valueType: "boolean"
            uuid: "<init>_boolean1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      valueType: "org.bitcoinj.base.utils.MonetaryFormat"
      uuid: "target"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: 0
      valueType: "int"
      uuid: "repeatOptionalDecimals_int1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: -1
      valueType: "int"
      uuid: "repeatOptionalDecimals_int2"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "REAL"
      valueType: "org.bitcoinj.base.internal.Preconditions"
      uuid: "uuid65"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "EXCEPTION"
      content: !<new>
        target: "java.lang.IllegalArgumentException"
        parameters: []
        privateConstructor: false
        createdByTargetCode: false
      valueType: "java.lang.IllegalArgumentException"
      uuid: "uuid64"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "uuid62"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "PRIVATE_INNER_CLASS_OR_LAMBDA"
      valueType: "java.util.function.Supplier"
      genericValueType: "java.lang.String"
      uuid: "uuid63"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "EXCEPTION"
      content: !<new>
        target: "java.lang.IllegalArgumentException"
        parameters: []
        privateConstructor: false
        createdByTargetCode: false
      valueType: "java.lang.IllegalArgumentException"
      uuid: "uuid66"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
  - pathId: "path1"
    testPathName: "repeatOptionalDecimalsWhenILessThanRepetitions"
    constructorSignature: "<init>(boolean) : void"
    modelFingerprint: "BAAAF96300CDAB225872366B531E5E43"
    problemWasSolvedByProver: true
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "E8AAA76518010EB4B9E2B05B3FF8C364"
      index: 1
      valueUuid: "target"
    - type: "INPUT"
      name: "decimals"
      modelFingerprint: "78690990838A600EFFB34E697DEFE7C4"
      index: 2
      valueUuid: "repeatOptionalDecimals_int1"
    - type: "INPUT"
      name: "repetitions"
      modelFingerprint: "5D8FB987C3A20A2131CBD0CBC396B7BF"
      index: 3
      valueUuid: "repeatOptionalDecimals_int2"
    - type: "STATIC"
      name: "Preconditions"
      modelFingerprint: "EE07D40EFD4ADC96C83D317FAE9481C2"
      index: 4
      valueUuid: "uuid3"
      methodExercised:
        target: "org.bitcoinj.base.internal.Preconditions"
        name: "checkArgument"
        parameters:
        - name: "expression"
          valueUuid: "uuid1"
        - name: "messageSupplier"
          valueUuid: "uuid2"
        signature: "checkArgument(boolean,Supplier): void"
        returnValueUuid: "repeatOptionalDecimals_void1"
        access: 9
    - type: "RESULT"
      name: "result"
      modelFingerprint: "A555747FB1DF0089625ADAF8A7F97841"
      index: 5
      valueUuid: "repeatOptionalDecimals_monetaryFormat1"
    uuid: "7e2882fb-08d8-36ce-8620-3ad9b74c6e58"
    deleted: false
    disabled: false
    ignoredBySystem: false
    prover: "DEFAULT"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.bitcoinj.base.utils.MonetaryFormat"
        parameters:
        - name: "useSymbol"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: true
            valueType: "boolean"
            uuid: "<init>_boolean1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      valueType: "org.bitcoinj.base.utils.MonetaryFormat"
      uuid: "target"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: 1
      valueType: "int"
      uuid: "repeatOptionalDecimals_int1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: 1
      valueType: "int"
      uuid: "repeatOptionalDecimals_int2"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "REAL"
      valueType: "org.bitcoinj.base.internal.Preconditions"
      uuid: "uuid3"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      valueType: "void"
      uuid: "repeatOptionalDecimals_void1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "uuid1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "PRIVATE_INNER_CLASS_OR_LAMBDA"
      valueType: "java.util.function.Supplier"
      genericValueType: "java.lang.String"
      uuid: "uuid2"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.bitcoinj.base.utils.MonetaryFormat"
        parameters:
        - name: "negativeSign"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "-"
            valueType: "char"
            uuid: "<init>_int41"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "positiveSign"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "\\u0000"
            valueType: "char"
            uuid: "<init>_int42"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "zeroDigit"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "0"
            valueType: "char"
            uuid: "<init>_int43"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "decimalMark"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "."
            valueType: "char"
            uuid: "<init>_int44"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "minDecimals"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 2
            valueType: "int"
            uuid: "<init>_int45"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "decimalGroups"
          value:
            sapientType: "COLLECTION"
            content: !<collection>
              collectionClass: "java.util.ArrayList"
              parameters: []
              values:
              - sapientType: "BASIC"
                content: !<regular>
                  value: 1
                valueType: "java.lang.Integer"
                uuid: "repeatOptionalDecimals_arrayList1-item0"
                fixed: true
                collectionUuid: "repeatOptionalDecimals_arrayList1"
                equalsMethodPresent: false
                explicitCastNeeded: false
            valueType: "java.util.List"
            genericValueType: "java.lang.Integer"
            uuid: "repeatOptionalDecimals_arrayList1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "shift"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 0
            valueType: "int"
            uuid: "<init>_int46"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "roundingMode"
          value:
            sapientType: "ENUM"
            content: !<regular>
              value: "HALF_UP"
            valueType: "java.math.RoundingMode"
            uuid: "Enum-java.math.RoundingMode-HALF_UP"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "codes"
          value:
            sapientType: "ARRAY"
            content: !<array>
              values:
                0:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: "\\u20BF"
                  valueType: "java.lang.String"
                  fixed: true
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                1:
                  sapientType: "NULL"
                  valueType: "java.lang.String"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                2:
                  sapientType: "NULL"
                  valueType: "java.lang.String"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                3:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: "m\\u20BF"
                  valueType: "java.lang.String"
                  fixed: true
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                4:
                  sapientType: "NULL"
                  valueType: "java.lang.String"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                5:
                  sapientType: "NULL"
                  valueType: "java.lang.String"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                6:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: "\\u00B5\\u20BF"
                  valueType: "java.lang.String"
                  fixed: true
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                7:
                  sapientType: "NULL"
                  valueType: "java.lang.String"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                8:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: "\\u0219"
                  valueType: "java.lang.String"
                  fixed: true
                  equalsMethodPresent: false
                  explicitCastNeeded: false
            valueType: "java.lang.String[]"
            uuid: "<init>_string[]6"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "codeSeparator"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: " "
            valueType: "char"
            uuid: "<init>_int47"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "codePrefixed"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: true
            valueType: "boolean"
            uuid: "<init>_int48"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: true
        createdByTargetCode: true
      valueType: "org.bitcoinj.base.utils.MonetaryFormat"
      uuid: "repeatOptionalDecimals_monetaryFormat1"
      fixed: true
      equalsMethodPresent: true
      explicitCastNeeded: false
  - pathId: "path2"
    testPathName: "repeatOptionalDecimalsWhenINotLessThanRepetitions"
    constructorSignature: "<init>(boolean) : void"
    modelFingerprint: "47E6247F47DD3BC896608D4D4705800A"
    problemWasSolvedByProver: true
    truncated: true
    inputParameters: []
    uuid: "dd3c5afb-0cae-30f9-b31e-b457413e17de"
    deleted: true
    disabled: false
    ignoredBySystem: true
    prover: "DEFAULT"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues: []
- method:
    name: "shift"
    signature: "shift(int) : org.bitcoinj.base.utils.MonetaryFormat"
    sourceCodeSignature: "MonetaryFormat shift(int shift)"
    instructionFingerprint: "873B2E3BD7502DDB57053F2556C43943"
  paths:
  - pathId: "path1"
    testPathName: "shiftWhenShiftEqualsThisShift"
    constructorSignature: "<init>(boolean) : void"
    modelFingerprint: "C1E34FD70E63440CA0B74738A26A7DD5"
    problemWasSolvedByProver: true
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "158F306D9B26D5466D8938D2940F98BC"
      index: 1
      valueUuid: "target"
    - type: "INPUT"
      name: "shift"
      modelFingerprint: "B28A840A3E46D61DE68F2BA069B2DFFE"
      index: 2
      valueUuid: "shift_int1"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "E837F136F4829B4CB1873F85583D11F1"
      index: 3
      valueUuid: "targetClassObject"
    uuid: "43e4e20a-2db3-3ef4-9353-7c215f6376cb"
    deleted: false
    disabled: false
    ignoredBySystem: false
    prover: "DEFAULT"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.bitcoinj.base.utils.MonetaryFormat"
        parameters:
        - name: "useSymbol"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: true
            valueType: "boolean"
            uuid: "<init>_boolean1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      valueType: "org.bitcoinj.base.utils.MonetaryFormat"
      uuid: "target"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: 0
      valueType: "int"
      uuid: "shift_int1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "THIS"
      valueType: "org.bitcoinj.base.utils.MonetaryFormat"
      uuid: "targetClassObject"
      fixed: true
      equalsMethodPresent: true
      explicitCastNeeded: false
  - pathId: "path2"
    testPathName: "shiftWhenShiftNotEqualsThisShift"
    constructorSignature: "<init>(boolean) : void"
    modelFingerprint: "B4E488D843D44A8A5C1CEB599EBB41CF"
    problemWasSolvedByProver: true
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "158F306D9B26D5466D8938D2940F98BC"
      index: 1
      valueUuid: "target"
    - type: "INPUT"
      name: "shift"
      modelFingerprint: "7244E6FF83BAE71D68C395C4995A4DF2"
      index: 2
      valueUuid: "shift_int1"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "D9451ACB50B796A1C155916445692EDF"
      index: 3
      valueUuid: "shift_monetaryFormat1"
    uuid: "8cfadf6f-8b56-3df8-a95e-3333caf39724"
    deleted: false
    disabled: false
    ignoredBySystem: false
    prover: "DEFAULT"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.bitcoinj.base.utils.MonetaryFormat"
        parameters:
        - name: "useSymbol"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: true
            valueType: "boolean"
            uuid: "<init>_boolean1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      valueType: "org.bitcoinj.base.utils.MonetaryFormat"
      uuid: "target"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: 1
      valueType: "int"
      uuid: "shift_int1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.bitcoinj.base.utils.MonetaryFormat"
        parameters:
        - name: "negativeSign"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "-"
            valueType: "char"
            uuid: "<init>_int41"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "positiveSign"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "\\u0000"
            valueType: "char"
            uuid: "<init>_int42"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "zeroDigit"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "0"
            valueType: "char"
            uuid: "<init>_int43"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "decimalMark"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "."
            valueType: "char"
            uuid: "<init>_int44"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "minDecimals"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 2
            valueType: "int"
            uuid: "<init>_int45"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "decimalGroups"
          value:
            sapientType: "NULL"
            valueType: "java.util.List"
            genericValueType: "java.lang.Integer"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "shift"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 1
            valueType: "int"
            uuid: "shift_int1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "roundingMode"
          value:
            sapientType: "ENUM"
            content: !<regular>
              value: "HALF_UP"
            valueType: "java.math.RoundingMode"
            uuid: "Enum-java.math.RoundingMode-HALF_UP"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "codes"
          value:
            sapientType: "ARRAY"
            content: !<array>
              values:
                0:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: "\\u20BF"
                  valueType: "java.lang.String"
                  fixed: true
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                1:
                  sapientType: "NULL"
                  valueType: "java.lang.String"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                2:
                  sapientType: "NULL"
                  valueType: "java.lang.String"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                3:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: "m\\u20BF"
                  valueType: "java.lang.String"
                  fixed: true
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                4:
                  sapientType: "NULL"
                  valueType: "java.lang.String"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                5:
                  sapientType: "NULL"
                  valueType: "java.lang.String"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                6:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: "\\u00B5\\u20BF"
                  valueType: "java.lang.String"
                  fixed: true
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                7:
                  sapientType: "NULL"
                  valueType: "java.lang.String"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                8:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: "\\u0219"
                  valueType: "java.lang.String"
                  fixed: true
                  equalsMethodPresent: false
                  explicitCastNeeded: false
            valueType: "java.lang.String[]"
            uuid: "<init>_string[]6"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "codeSeparator"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: " "
            valueType: "char"
            uuid: "<init>_int47"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "codePrefixed"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: true
            valueType: "boolean"
            uuid: "<init>_int48"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: true
        createdByTargetCode: true
      valueType: "org.bitcoinj.base.utils.MonetaryFormat"
      uuid: "shift_monetaryFormat1"
      fixed: true
      equalsMethodPresent: true
      explicitCastNeeded: false
- method:
    name: "roundingMode"
    signature: "roundingMode(java.math.RoundingMode) : org.bitcoinj.base.utils.MonetaryFormat"
    sourceCodeSignature: "MonetaryFormat roundingMode(RoundingMode roundingMode)"
    instructionFingerprint: "E6B6ECC2AEA231A21DAB4B6F35F08B56"
  paths:
  - pathId: "path1"
    testPathName: "roundingModeWhenRoundingModeEqualsThisRoundingMode"
    constructorSignature: "<init>(boolean) : void"
    modelFingerprint: "166DDDD7DB03DE1133D94EDE2A3F40BB"
    problemWasSolvedByProver: true
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "158F306D9B26D5466D8938D2940F98BC"
      index: 1
      valueUuid: "target"
    - type: "INPUT"
      name: "roundingMode"
      modelFingerprint: "8B0B542C36A8F538E23868004F0E5AE5"
      index: 2
      valueUuid: "roundingMode_roundingMode1"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "E837F136F4829B4CB1873F85583D11F1"
      index: 3
      valueUuid: "targetClassObject"
    uuid: "b4c9b158-e2dc-3e26-a9d7-a64c0451b549"
    deleted: false
    disabled: false
    ignoredBySystem: false
    prover: "DEFAULT"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.bitcoinj.base.utils.MonetaryFormat"
        parameters:
        - name: "useSymbol"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: true
            valueType: "boolean"
            uuid: "<init>_boolean1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      valueType: "org.bitcoinj.base.utils.MonetaryFormat"
      uuid: "target"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "ENUM"
      content: !<regular>
        value: "HALF_UP"
      valueType: "java.math.RoundingMode"
      uuid: "roundingMode_roundingMode1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "THIS"
      valueType: "org.bitcoinj.base.utils.MonetaryFormat"
      uuid: "targetClassObject"
      fixed: true
      equalsMethodPresent: true
      explicitCastNeeded: false
  - pathId: "path2"
    testPathName: "roundingModeWhenRoundingModeNotEqualsThisRoundingMode"
    constructorSignature: "<init>(boolean) : void"
    modelFingerprint: "CF97624B4D6F4F0A6EAF6DA6E49DF497"
    problemWasSolvedByProver: true
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "158F306D9B26D5466D8938D2940F98BC"
      index: 1
      valueUuid: "target"
    - type: "INPUT"
      name: "roundingMode"
      modelFingerprint: "E99D2A0DD23D594EE9F8963EA36EAECE"
      index: 2
      valueUuid: "roundingMode_roundingMode1"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "8F9E8384E00A613FBD4C9F3906233AEE"
      index: 3
      valueUuid: "roundingMode_monetaryFormat1"
    uuid: "eae234ba-a3a1-30fc-96ae-dbc2f074d429"
    deleted: false
    disabled: false
    ignoredBySystem: false
    prover: "DEFAULT"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.bitcoinj.base.utils.MonetaryFormat"
        parameters:
        - name: "useSymbol"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: true
            valueType: "boolean"
            uuid: "<init>_boolean1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      valueType: "org.bitcoinj.base.utils.MonetaryFormat"
      uuid: "target"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "ENUM"
      content: !<regular>
        value: "UNNECESSARY"
      valueType: "java.math.RoundingMode"
      uuid: "roundingMode_roundingMode1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.bitcoinj.base.utils.MonetaryFormat"
        parameters:
        - name: "negativeSign"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "-"
            valueType: "char"
            uuid: "<init>_int41"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "positiveSign"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "\\u0000"
            valueType: "char"
            uuid: "<init>_int42"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "zeroDigit"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "0"
            valueType: "char"
            uuid: "<init>_int43"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "decimalMark"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "."
            valueType: "char"
            uuid: "<init>_int44"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "minDecimals"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 2
            valueType: "int"
            uuid: "<init>_int45"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "decimalGroups"
          value:
            sapientType: "NULL"
            valueType: "java.util.List"
            genericValueType: "java.lang.Integer"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "shift"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 0
            valueType: "int"
            uuid: "<init>_int46"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "roundingMode"
          value:
            sapientType: "ENUM"
            content: !<regular>
              value: "UNNECESSARY"
            valueType: "java.math.RoundingMode"
            uuid: "roundingMode_roundingMode1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "codes"
          value:
            sapientType: "ARRAY"
            content: !<array>
              values:
                0:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: "\\u20BF"
                  valueType: "java.lang.String"
                  fixed: true
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                1:
                  sapientType: "NULL"
                  valueType: "java.lang.String"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                2:
                  sapientType: "NULL"
                  valueType: "java.lang.String"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                3:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: "m\\u20BF"
                  valueType: "java.lang.String"
                  fixed: true
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                4:
                  sapientType: "NULL"
                  valueType: "java.lang.String"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                5:
                  sapientType: "NULL"
                  valueType: "java.lang.String"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                6:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: "\\u00B5\\u20BF"
                  valueType: "java.lang.String"
                  fixed: true
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                7:
                  sapientType: "NULL"
                  valueType: "java.lang.String"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                8:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: "\\u0219"
                  valueType: "java.lang.String"
                  fixed: true
                  equalsMethodPresent: false
                  explicitCastNeeded: false
            valueType: "java.lang.String[]"
            uuid: "<init>_string[]6"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "codeSeparator"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: " "
            valueType: "char"
            uuid: "<init>_int47"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "codePrefixed"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: true
            valueType: "boolean"
            uuid: "<init>_int48"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: true
        createdByTargetCode: true
      valueType: "org.bitcoinj.base.utils.MonetaryFormat"
      uuid: "roundingMode_monetaryFormat1"
      fixed: true
      equalsMethodPresent: true
      explicitCastNeeded: false
- method:
    name: "noCode"
    signature: "noCode() : org.bitcoinj.base.utils.MonetaryFormat"
    sourceCodeSignature: "MonetaryFormat noCode()"
    instructionFingerprint: "EEBF6D726B012DC9C3E1D104402F7B62"
  paths:
  - pathId: "path1"
    testPathName: "noCodeWhenCodesIsNotNull"
    constructorSignature: "<init>(boolean) : void"
    modelFingerprint: "6BF9961F12F0A4067AE38A2A6516EF54"
    problemWasSolvedByProver: true
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "158F306D9B26D5466D8938D2940F98BC"
      index: 1
      valueUuid: "target"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "EFD18201D7DD2BFC0EDADCE132BE1A48"
      index: 2
      valueUuid: "noCode_monetaryFormat1"
    uuid: "a5ca7d3b-e8e7-30fa-a852-68423de0564b"
    deleted: false
    disabled: false
    ignoredBySystem: false
    prover: "DEFAULT"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.bitcoinj.base.utils.MonetaryFormat"
        parameters:
        - name: "useSymbol"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: true
            valueType: "boolean"
            uuid: "<init>_boolean1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      valueType: "org.bitcoinj.base.utils.MonetaryFormat"
      uuid: "target"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.bitcoinj.base.utils.MonetaryFormat"
        parameters:
        - name: "negativeSign"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "-"
            valueType: "char"
            uuid: "<init>_int41"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "positiveSign"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "\\u0000"
            valueType: "char"
            uuid: "<init>_int42"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "zeroDigit"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "0"
            valueType: "char"
            uuid: "<init>_int43"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "decimalMark"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "."
            valueType: "char"
            uuid: "<init>_int44"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "minDecimals"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 2
            valueType: "int"
            uuid: "<init>_int45"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "decimalGroups"
          value:
            sapientType: "NULL"
            valueType: "java.util.List"
            genericValueType: "java.lang.Integer"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "shift"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 0
            valueType: "int"
            uuid: "<init>_int46"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "roundingMode"
          value:
            sapientType: "ENUM"
            content: !<regular>
              value: "HALF_UP"
            valueType: "java.math.RoundingMode"
            uuid: "Enum-java.math.RoundingMode-HALF_UP"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "codes"
          value:
            sapientType: "NULL"
            valueType: "java.lang.String[]"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "codeSeparator"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: " "
            valueType: "char"
            uuid: "<init>_int47"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "codePrefixed"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: true
            valueType: "boolean"
            uuid: "<init>_int48"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: true
        createdByTargetCode: true
      valueType: "org.bitcoinj.base.utils.MonetaryFormat"
      uuid: "noCode_monetaryFormat1"
      fixed: true
      equalsMethodPresent: true
      explicitCastNeeded: false
- method:
    name: "code"
    signature: "code(int,java.lang.String) : org.bitcoinj.base.utils.MonetaryFormat"
    sourceCodeSignature: "MonetaryFormat code(int codeShift, String code)"
    instructionFingerprint: "F363FC83FD9373FAC29832546ABC8618"
  paths:
  - pathId: "path3"
    testPathName: "codeWhenCodeShiftLessThan0ThrowsIllegalArgumentException"
    constructorSignature: "<init>(boolean) : void"
    modelFingerprint: "D2B739992EADFCDCC2275731B1538942"
    problemWasSolvedByProver: true
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "158F306D9B26D5466D8938D2940F98BC"
      index: 1
      valueUuid: "target"
    - type: "INPUT"
      name: "codeShift"
      modelFingerprint: "48F96FD6C0F933FEF8FDDF529C3A4F27"
      index: 2
      valueUuid: "code_int1"
    - type: "INPUT"
      name: "code"
      modelFingerprint: "07E07A7F8BE284CF76644F8F26D09F21"
      index: 3
      valueUuid: "code_string1"
    - type: "STATIC"
      name: "Preconditions"
      modelFingerprint: "D2E579C66034555D6E24363DE5916136"
      index: 4
      valueUuid: "uuid76"
      methodExercised:
        target: "org.bitcoinj.base.internal.Preconditions"
        name: "checkArgument"
        parameters:
        - name: "expression"
          valueUuid: "uuid73"
        - name: "messageSupplier"
          valueUuid: "uuid74"
        signature: "checkArgument(boolean,Supplier): void"
        returnValueUuid: "uuid75"
        access: 9
    - type: "RESULT"
      name: "result"
      modelFingerprint: "3E9C76AB51311DE97AE9C2294CD5E1D6"
      index: 5
      valueUuid: "uuid77"
    uuid: "01e29c09-a7e9-394e-9b1c-cf8d9c596442"
    deleted: false
    disabled: false
    ignoredBySystem: false
    prover: "DEFAULT"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.bitcoinj.base.utils.MonetaryFormat"
        parameters:
        - name: "useSymbol"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: true
            valueType: "boolean"
            uuid: "<init>_boolean1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      valueType: "org.bitcoinj.base.utils.MonetaryFormat"
      uuid: "target"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: -1
      valueType: "int"
      uuid: "code_int1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "code1"
      valueType: "java.lang.String"
      uuid: "code_string1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "REAL"
      valueType: "org.bitcoinj.base.internal.Preconditions"
      uuid: "uuid76"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "EXCEPTION"
      content: !<new>
        target: "java.lang.IllegalArgumentException"
        parameters: []
        privateConstructor: false
        createdByTargetCode: false
      valueType: "java.lang.IllegalArgumentException"
      uuid: "uuid75"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "uuid73"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "PRIVATE_INNER_CLASS_OR_LAMBDA"
      valueType: "java.util.function.Supplier"
      genericValueType: "java.lang.String"
      uuid: "uuid74"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "EXCEPTION"
      content: !<new>
        target: "java.lang.IllegalArgumentException"
        parameters: []
        privateConstructor: false
        createdByTargetCode: false
      valueType: "java.lang.IllegalArgumentException"
      uuid: "uuid77"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
  - pathId: "path1"
    testPathName: "codeWhenThisCodesIsNull"
    constructorSignature: "<init>(boolean) : void"
    modelFingerprint: "6501837CD711DBD23DEC10C733F62F23"
    problemWasSolvedByProver: true
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "158F306D9B26D5466D8938D2940F98BC"
      index: 1
      valueUuid: "target"
    - type: "INPUT"
      name: "codeShift"
      modelFingerprint: "456BC6B913119811F0BC731590270952"
      index: 2
      valueUuid: "code_int1"
    - type: "INPUT"
      name: "code"
      modelFingerprint: "07E07A7F8BE284CF76644F8F26D09F21"
      index: 3
      valueUuid: "code_string1"
    - type: "STATIC"
      name: "Preconditions"
      modelFingerprint: "EE07D40EFD4ADC96C83D317FAE9481C2"
      index: 4
      valueUuid: "uuid80"
      methodExercised:
        target: "org.bitcoinj.base.internal.Preconditions"
        name: "checkArgument"
        parameters:
        - name: "expression"
          valueUuid: "uuid78"
        - name: "messageSupplier"
          valueUuid: "uuid79"
        signature: "checkArgument(boolean,Supplier): void"
        returnValueUuid: "code_void1"
        access: 9
    - type: "RESULT"
      name: "result"
      modelFingerprint: "19DF9BB14ED0DE5D50C38F340421712B"
      index: 5
      valueUuid: "code_monetaryFormat1"
    uuid: "963e62ab-720c-3335-b337-b7a4608d8bc9"
    deleted: false
    disabled: false
    ignoredBySystem: false
    prover: "DEFAULT"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.bitcoinj.base.utils.MonetaryFormat"
        parameters:
        - name: "useSymbol"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: true
            valueType: "boolean"
            uuid: "<init>_boolean1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      valueType: "org.bitcoinj.base.utils.MonetaryFormat"
      uuid: "target"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: 1
      valueType: "int"
      uuid: "code_int1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "code1"
      valueType: "java.lang.String"
      uuid: "code_string1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "REAL"
      valueType: "org.bitcoinj.base.internal.Preconditions"
      uuid: "uuid80"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      valueType: "void"
      uuid: "code_void1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "uuid78"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "PRIVATE_INNER_CLASS_OR_LAMBDA"
      valueType: "java.util.function.Supplier"
      genericValueType: "java.lang.String"
      uuid: "uuid79"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.bitcoinj.base.utils.MonetaryFormat"
        parameters:
        - name: "negativeSign"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "-"
            valueType: "char"
            uuid: "<init>_int41"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "positiveSign"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "\\u0000"
            valueType: "char"
            uuid: "<init>_int42"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "zeroDigit"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "0"
            valueType: "char"
            uuid: "<init>_int43"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "decimalMark"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "."
            valueType: "char"
            uuid: "<init>_int44"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "minDecimals"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 2
            valueType: "int"
            uuid: "<init>_int45"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "decimalGroups"
          value:
            sapientType: "NULL"
            valueType: "java.util.List"
            genericValueType: "java.lang.Integer"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "shift"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 0
            valueType: "int"
            uuid: "<init>_int46"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "roundingMode"
          value:
            sapientType: "ENUM"
            content: !<regular>
              value: "HALF_UP"
            valueType: "java.math.RoundingMode"
            uuid: "Enum-java.math.RoundingMode-HALF_UP"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "codes"
          value:
            sapientType: "ARRAY"
            content: !<array>
              values:
                0:
                  sapientType: "NULL"
                  valueType: "java.lang.String"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                1:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: "code1"
                  valueType: "java.lang.String"
                  uuid: "code_string1"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                2:
                  sapientType: "NULL"
                  valueType: "java.lang.String"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                3:
                  sapientType: "NULL"
                  valueType: "java.lang.String"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                4:
                  sapientType: "NULL"
                  valueType: "java.lang.String"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                5:
                  sapientType: "NULL"
                  valueType: "java.lang.String"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                6:
                  sapientType: "NULL"
                  valueType: "java.lang.String"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                7:
                  sapientType: "NULL"
                  valueType: "java.lang.String"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
            valueType: "java.lang.String[]"
            uuid: "code_string[]1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "codeSeparator"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: " "
            valueType: "char"
            uuid: "<init>_int47"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "codePrefixed"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: true
            valueType: "boolean"
            uuid: "<init>_int48"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: true
        createdByTargetCode: true
      valueType: "org.bitcoinj.base.utils.MonetaryFormat"
      uuid: "code_monetaryFormat1"
      fixed: true
      equalsMethodPresent: true
      explicitCastNeeded: false
  - pathId: "path2"
    testPathName: "codeWhenThisCodesIsNotNull"
    constructorSignature: "<init>(boolean) : void"
    modelFingerprint: "C9532897C3B0CEADC3D50F000CF09202"
    problemWasSolvedByProver: true
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "158F306D9B26D5466D8938D2940F98BC"
      index: 1
      valueUuid: "target"
    - type: "INPUT"
      name: "codeShift"
      modelFingerprint: "456BC6B913119811F0BC731590270952"
      index: 2
      valueUuid: "code_int1"
    - type: "INPUT"
      name: "code"
      modelFingerprint: "07E07A7F8BE284CF76644F8F26D09F21"
      index: 3
      valueUuid: "code_string1"
    - type: "STATIC"
      name: "Preconditions"
      modelFingerprint: "EE07D40EFD4ADC96C83D317FAE9481C2"
      index: 4
      valueUuid: "uuid83"
      methodExercised:
        target: "org.bitcoinj.base.internal.Preconditions"
        name: "checkArgument"
        parameters:
        - name: "expression"
          valueUuid: "uuid81"
        - name: "messageSupplier"
          valueUuid: "uuid82"
        signature: "checkArgument(boolean,Supplier): void"
        returnValueUuid: "code_void1"
        access: 9
    - type: "RESULT"
      name: "result"
      modelFingerprint: "25536A6CDFEFFC69B8C9EC3214F75822"
      index: 5
      valueUuid: "code_monetaryFormat1"
    uuid: "47fdf695-5162-3f40-8756-0cc1e6d87bba"
    deleted: false
    disabled: false
    ignoredBySystem: false
    prover: "DEFAULT"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.bitcoinj.base.utils.MonetaryFormat"
        parameters:
        - name: "useSymbol"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: true
            valueType: "boolean"
            uuid: "<init>_boolean1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      valueType: "org.bitcoinj.base.utils.MonetaryFormat"
      uuid: "target"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: 1
      valueType: "int"
      uuid: "code_int1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "code1"
      valueType: "java.lang.String"
      uuid: "code_string1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "REAL"
      valueType: "org.bitcoinj.base.internal.Preconditions"
      uuid: "uuid83"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      valueType: "void"
      uuid: "code_void1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "uuid81"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "PRIVATE_INNER_CLASS_OR_LAMBDA"
      valueType: "java.util.function.Supplier"
      genericValueType: "java.lang.String"
      uuid: "uuid82"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.bitcoinj.base.utils.MonetaryFormat"
        parameters:
        - name: "negativeSign"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "-"
            valueType: "char"
            uuid: "<init>_int41"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "positiveSign"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "\\u0000"
            valueType: "char"
            uuid: "<init>_int42"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "zeroDigit"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "0"
            valueType: "char"
            uuid: "<init>_int43"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "decimalMark"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "."
            valueType: "char"
            uuid: "<init>_int44"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "minDecimals"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 2
            valueType: "int"
            uuid: "<init>_int45"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "decimalGroups"
          value:
            sapientType: "NULL"
            valueType: "java.util.List"
            genericValueType: "java.lang.Integer"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "shift"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 0
            valueType: "int"
            uuid: "<init>_int46"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "roundingMode"
          value:
            sapientType: "ENUM"
            content: !<regular>
              value: "HALF_UP"
            valueType: "java.math.RoundingMode"
            uuid: "Enum-java.math.RoundingMode-HALF_UP"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "codes"
          value:
            sapientType: "ARRAY"
            content: !<array>
              values:
                0:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: "\\u20BF"
                  valueType: "java.lang.String"
                  uuid: "code_string[]1-item0"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                1:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: "code1"
                  valueType: "java.lang.String"
                  uuid: "code_string1"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                2:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: "codesItem1"
                  valueType: "java.lang.String"
                  uuid: "code_string[]1-item2"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                3:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: "m\\u20BF"
                  valueType: "java.lang.String"
                  uuid: "code_string[]1-item3"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                4:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: "codesItem1"
                  valueType: "java.lang.String"
                  uuid: "code_string[]1-item4"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                5:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: "codesItem1"
                  valueType: "java.lang.String"
                  uuid: "code_string[]1-item5"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                6:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: "\\u00B5\\u20BF"
                  valueType: "java.lang.String"
                  uuid: "code_string[]1-item6"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                7:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: "codesItem1"
                  valueType: "java.lang.String"
                  uuid: "code_string[]1-item7"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                8:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: "\\u0219"
                  valueType: "java.lang.String"
                  uuid: "code_string[]1-item8"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
            valueType: "java.lang.String[]"
            uuid: "code_string[]1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "codeSeparator"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: " "
            valueType: "char"
            uuid: "<init>_int47"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "codePrefixed"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: true
            valueType: "boolean"
            uuid: "<init>_int48"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: true
        createdByTargetCode: true
      valueType: "org.bitcoinj.base.utils.MonetaryFormat"
      uuid: "code_monetaryFormat1"
      fixed: true
      equalsMethodPresent: true
      explicitCastNeeded: false
- method:
    name: "codeSeparator"
    signature: "codeSeparator(char) : org.bitcoinj.base.utils.MonetaryFormat"
    sourceCodeSignature: "MonetaryFormat codeSeparator(char codeSeparator)"
    instructionFingerprint: "C1D70BDACDD02E76259DCF96F83AD32C"
  paths:
  - pathId: "path4"
    testPathName: "codeSeparatorWhenCharacterIsDigitCodeSeparatorThrowsIllegalArgumentException"
    constructorSignature: "<init>(boolean) : void"
    modelFingerprint: "B742FF5C290887309DB7D8D0B52EA1C5"
    problemWasSolvedByProver: false
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "1812E57E39789A36E2C25DE1B2306BEA"
      index: 1
      valueUuid: "target"
    - type: "INPUT"
      name: "codeSeparator"
      modelFingerprint: "B6E45096313DE4F1E0A46780A36CB7AA"
      index: 2
      valueUuid: "codeSeparator_char1"
    - type: "STATIC"
      name: "Preconditions"
      modelFingerprint: "D2E579C66034555D6E24363DE5916136"
      index: 3
      valueUuid: "uuid87"
      methodExercised:
        target: "org.bitcoinj.base.internal.Preconditions"
        name: "checkArgument"
        parameters:
        - name: "expression"
          valueUuid: "uuid84"
        - name: "messageSupplier"
          valueUuid: "uuid85"
        signature: "checkArgument(boolean,Supplier): void"
        returnValueUuid: "uuid86"
        access: 9
    - type: "RESULT"
      name: "result"
      modelFingerprint: "3E9C76AB51311DE97AE9C2294CD5E1D6"
      index: 4
      valueUuid: "uuid88"
    uuid: "1ff9fc3c-a15e-31d2-af83-29727ff221bf"
    deleted: false
    disabled: true
    ignoredBySystem: false
    failureReason:
      reason: "PROVER_COULD_NOT_SOLVE_THE_PROBLEM"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: true
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.bitcoinj.base.utils.MonetaryFormat"
        parameters:
        - name: "useSymbol"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: false
            valueType: "boolean"
            uuid: "<init>_boolean1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      valueType: "org.bitcoinj.base.utils.MonetaryFormat"
      uuid: "target"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "A"
      valueType: "char"
      uuid: "codeSeparator_char1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "REAL"
      valueType: "org.bitcoinj.base.internal.Preconditions"
      uuid: "uuid87"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "EXCEPTION"
      content: !<new>
        target: "java.lang.IllegalArgumentException"
        parameters: []
        privateConstructor: false
        createdByTargetCode: false
      valueType: "java.lang.IllegalArgumentException"
      uuid: "uuid86"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "uuid84"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "PRIVATE_INNER_CLASS_OR_LAMBDA"
      valueType: "java.util.function.Supplier"
      genericValueType: "java.lang.String"
      uuid: "uuid85"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "EXCEPTION"
      content: !<new>
        target: "java.lang.IllegalArgumentException"
        parameters: []
        privateConstructor: false
        createdByTargetCode: false
      valueType: "java.lang.IllegalArgumentException"
      uuid: "uuid88"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
  - pathId: "path3"
    testPathName: "codeSeparatorWhenCodeSeparatorNotGreaterThan0ThrowsIllegalArgumentException"
    constructorSignature: "<init>(boolean) : void"
    modelFingerprint: "8003A7C7AEF537042FDB9A2DD0AD8694"
    problemWasSolvedByProver: true
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "158F306D9B26D5466D8938D2940F98BC"
      index: 1
      valueUuid: "target"
    - type: "INPUT"
      name: "codeSeparator"
      modelFingerprint: "A9D740D4B12F4C35B64C6AA5E66A4F57"
      index: 2
      valueUuid: "codeSeparator_char1"
    - type: "STATIC"
      name: "Preconditions"
      modelFingerprint: "EE07D40EFD4ADC96C83D317FAE9481C2"
      index: 3
      valueUuid: "uuid91"
      methodExercised:
        target: "org.bitcoinj.base.internal.Preconditions"
        name: "checkArgument"
        parameters:
        - name: "expression"
          valueUuid: "uuid89"
        - name: "messageSupplier"
          valueUuid: "uuid90"
        signature: "checkArgument(boolean,Supplier): void"
        returnValueUuid: "codeSeparator_void1"
        access: 9
    - type: "STATIC"
      name: "Preconditions"
      modelFingerprint: "D2E579C66034555D6E24363DE5916136"
      index: 4
      valueUuid: "uuid95"
      methodExercised:
        target: "org.bitcoinj.base.internal.Preconditions"
        name: "checkArgument"
        parameters:
        - name: "expression"
          valueUuid: "uuid92"
        - name: "messageSupplier"
          valueUuid: "uuid93"
        signature: "checkArgument(boolean,Supplier): void"
        returnValueUuid: "uuid94"
        access: 9
    - type: "RESULT"
      name: "result"
      modelFingerprint: "3E9C76AB51311DE97AE9C2294CD5E1D6"
      index: 5
      valueUuid: "uuid96"
    uuid: "923f2f24-0fb3-3237-883c-04ef6161edc4"
    deleted: false
    disabled: false
    ignoredBySystem: false
    prover: "DEFAULT"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.bitcoinj.base.utils.MonetaryFormat"
        parameters:
        - name: "useSymbol"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: true
            valueType: "boolean"
            uuid: "<init>_boolean1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      valueType: "org.bitcoinj.base.utils.MonetaryFormat"
      uuid: "target"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "\\u0000"
      valueType: "char"
      uuid: "codeSeparator_char1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "REAL"
      valueType: "org.bitcoinj.base.internal.Preconditions"
      uuid: "uuid91"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      valueType: "void"
      uuid: "codeSeparator_void1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "uuid89"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "PRIVATE_INNER_CLASS_OR_LAMBDA"
      valueType: "java.util.function.Supplier"
      genericValueType: "java.lang.String"
      uuid: "uuid90"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "REAL"
      valueType: "org.bitcoinj.base.internal.Preconditions"
      uuid: "uuid95"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "EXCEPTION"
      content: !<new>
        target: "java.lang.IllegalArgumentException"
        parameters: []
        privateConstructor: false
        createdByTargetCode: false
      valueType: "java.lang.IllegalArgumentException"
      uuid: "uuid94"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "uuid92"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "PRIVATE_INNER_CLASS_OR_LAMBDA"
      valueType: "java.util.function.Supplier"
      genericValueType: "java.lang.String"
      uuid: "uuid93"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "EXCEPTION"
      content: !<new>
        target: "java.lang.IllegalArgumentException"
        parameters: []
        privateConstructor: false
        createdByTargetCode: false
      valueType: "java.lang.IllegalArgumentException"
      uuid: "uuid96"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
  - pathId: "path1"
    testPathName: "codeSeparatorWhenCodeSeparatorEqualsThisCodeSeparator"
    constructorSignature: "<init>(boolean) : void"
    modelFingerprint: "BB6C08BB05B53C813BEBA007BCD8E2CA"
    problemWasSolvedByProver: true
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "158F306D9B26D5466D8938D2940F98BC"
      index: 1
      valueUuid: "target"
    - type: "INPUT"
      name: "codeSeparator"
      modelFingerprint: "B5EE1312AADD2AF854310E2BDA792A1B"
      index: 2
      valueUuid: "codeSeparator_char1"
    - type: "STATIC"
      name: "Preconditions"
      modelFingerprint: "EE07D40EFD4ADC96C83D317FAE9481C2"
      index: 3
      valueUuid: "uuid99"
      methodExercised:
        target: "org.bitcoinj.base.internal.Preconditions"
        name: "checkArgument"
        parameters:
        - name: "expression"
          valueUuid: "uuid97"
        - name: "messageSupplier"
          valueUuid: "uuid98"
        signature: "checkArgument(boolean,Supplier): void"
        returnValueUuid: "codeSeparator_void1"
        access: 9
    - type: "STATIC"
      name: "Preconditions"
      modelFingerprint: "EE07D40EFD4ADC96C83D317FAE9481C2"
      index: 4
      valueUuid: "uuid102"
      methodExercised:
        target: "org.bitcoinj.base.internal.Preconditions"
        name: "checkArgument"
        parameters:
        - name: "expression"
          valueUuid: "uuid100"
        - name: "messageSupplier"
          valueUuid: "uuid101"
        signature: "checkArgument(boolean,Supplier): void"
        returnValueUuid: "codeSeparator_void2"
        access: 9
    - type: "RESULT"
      name: "result"
      modelFingerprint: "E837F136F4829B4CB1873F85583D11F1"
      index: 5
      valueUuid: "targetClassObject"
    uuid: "d9044eb9-49c1-3cb0-aa0b-f821ec5a4bf0"
    deleted: false
    disabled: false
    ignoredBySystem: false
    prover: "DEFAULT"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.bitcoinj.base.utils.MonetaryFormat"
        parameters:
        - name: "useSymbol"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: true
            valueType: "boolean"
            uuid: "<init>_boolean1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      valueType: "org.bitcoinj.base.utils.MonetaryFormat"
      uuid: "target"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: " "
      valueType: "char"
      uuid: "codeSeparator_char1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "REAL"
      valueType: "org.bitcoinj.base.internal.Preconditions"
      uuid: "uuid99"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      valueType: "void"
      uuid: "codeSeparator_void1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "uuid97"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "PRIVATE_INNER_CLASS_OR_LAMBDA"
      valueType: "java.util.function.Supplier"
      genericValueType: "java.lang.String"
      uuid: "uuid98"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "REAL"
      valueType: "org.bitcoinj.base.internal.Preconditions"
      uuid: "uuid102"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      valueType: "void"
      uuid: "codeSeparator_void2"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "uuid100"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "PRIVATE_INNER_CLASS_OR_LAMBDA"
      valueType: "java.util.function.Supplier"
      genericValueType: "java.lang.String"
      uuid: "uuid101"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "THIS"
      valueType: "org.bitcoinj.base.utils.MonetaryFormat"
      uuid: "targetClassObject"
      fixed: true
      equalsMethodPresent: true
      explicitCastNeeded: false
  - pathId: "path2"
    testPathName: "codeSeparatorWhenCodeSeparatorNotEqualsThisCodeSeparator"
    constructorSignature: "<init>(boolean) : void"
    modelFingerprint: "D0FA3957B41FABB2182FD9F0DD18BC9F"
    problemWasSolvedByProver: true
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "158F306D9B26D5466D8938D2940F98BC"
      index: 1
      valueUuid: "target"
    - type: "INPUT"
      name: "codeSeparator"
      modelFingerprint: "5D674CC367086EDDF15B91637C904410"
      index: 2
      valueUuid: "codeSeparator_char1"
    - type: "STATIC"
      name: "Preconditions"
      modelFingerprint: "EE07D40EFD4ADC96C83D317FAE9481C2"
      index: 3
      valueUuid: "uuid105"
      methodExercised:
        target: "org.bitcoinj.base.internal.Preconditions"
        name: "checkArgument"
        parameters:
        - name: "expression"
          valueUuid: "uuid103"
        - name: "messageSupplier"
          valueUuid: "uuid104"
        signature: "checkArgument(boolean,Supplier): void"
        returnValueUuid: "codeSeparator_void1"
        access: 9
    - type: "STATIC"
      name: "Preconditions"
      modelFingerprint: "EE07D40EFD4ADC96C83D317FAE9481C2"
      index: 4
      valueUuid: "uuid108"
      methodExercised:
        target: "org.bitcoinj.base.internal.Preconditions"
        name: "checkArgument"
        parameters:
        - name: "expression"
          valueUuid: "uuid106"
        - name: "messageSupplier"
          valueUuid: "uuid107"
        signature: "checkArgument(boolean,Supplier): void"
        returnValueUuid: "codeSeparator_void2"
        access: 9
    - type: "RESULT"
      name: "result"
      modelFingerprint: "90D7C79299C8C4855E58AEC389E64CE0"
      index: 5
      valueUuid: "codeSeparator_monetaryFormat1"
    uuid: "9c03b39f-7b25-316b-81db-7affa0e97c56"
    deleted: false
    disabled: false
    ignoredBySystem: false
    prover: "DEFAULT"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.bitcoinj.base.utils.MonetaryFormat"
        parameters:
        - name: "useSymbol"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: true
            valueType: "boolean"
            uuid: "<init>_boolean1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      valueType: "org.bitcoinj.base.utils.MonetaryFormat"
      uuid: "target"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "\\uD83F"
      valueType: "char"
      uuid: "codeSeparator_char1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "REAL"
      valueType: "org.bitcoinj.base.internal.Preconditions"
      uuid: "uuid105"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      valueType: "void"
      uuid: "codeSeparator_void1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "uuid103"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "PRIVATE_INNER_CLASS_OR_LAMBDA"
      valueType: "java.util.function.Supplier"
      genericValueType: "java.lang.String"
      uuid: "uuid104"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "REAL"
      valueType: "org.bitcoinj.base.internal.Preconditions"
      uuid: "uuid108"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      valueType: "void"
      uuid: "codeSeparator_void2"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "uuid106"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "PRIVATE_INNER_CLASS_OR_LAMBDA"
      valueType: "java.util.function.Supplier"
      genericValueType: "java.lang.String"
      uuid: "uuid107"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.bitcoinj.base.utils.MonetaryFormat"
        parameters:
        - name: "negativeSign"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "-"
            valueType: "char"
            uuid: "<init>_int41"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "positiveSign"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "\\u0000"
            valueType: "char"
            uuid: "<init>_int42"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "zeroDigit"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "0"
            valueType: "char"
            uuid: "<init>_int43"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "decimalMark"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "."
            valueType: "char"
            uuid: "<init>_int44"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "minDecimals"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 2
            valueType: "int"
            uuid: "<init>_int45"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "decimalGroups"
          value:
            sapientType: "NULL"
            valueType: "java.util.List"
            genericValueType: "java.lang.Integer"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "shift"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 0
            valueType: "int"
            uuid: "<init>_int46"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "roundingMode"
          value:
            sapientType: "ENUM"
            content: !<regular>
              value: "HALF_UP"
            valueType: "java.math.RoundingMode"
            uuid: "Enum-java.math.RoundingMode-HALF_UP"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "codes"
          value:
            sapientType: "ARRAY"
            content: !<array>
              values:
                0:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: "\\u20BF"
                  valueType: "java.lang.String"
                  fixed: true
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                1:
                  sapientType: "NULL"
                  valueType: "java.lang.String"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                2:
                  sapientType: "NULL"
                  valueType: "java.lang.String"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                3:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: "m\\u20BF"
                  valueType: "java.lang.String"
                  fixed: true
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                4:
                  sapientType: "NULL"
                  valueType: "java.lang.String"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                5:
                  sapientType: "NULL"
                  valueType: "java.lang.String"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                6:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: "\\u00B5\\u20BF"
                  valueType: "java.lang.String"
                  fixed: true
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                7:
                  sapientType: "NULL"
                  valueType: "java.lang.String"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                8:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: "\\u0219"
                  valueType: "java.lang.String"
                  fixed: true
                  equalsMethodPresent: false
                  explicitCastNeeded: false
            valueType: "java.lang.String[]"
            uuid: "<init>_string[]6"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "codeSeparator"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "\\uD83F"
            valueType: "char"
            uuid: "codeSeparator_char1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "codePrefixed"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: true
            valueType: "boolean"
            uuid: "<init>_int48"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: true
        createdByTargetCode: true
      valueType: "org.bitcoinj.base.utils.MonetaryFormat"
      uuid: "codeSeparator_monetaryFormat1"
      fixed: true
      equalsMethodPresent: true
      explicitCastNeeded: false
- method:
    name: "prefixCode"
    signature: "prefixCode() : org.bitcoinj.base.utils.MonetaryFormat"
    sourceCodeSignature: "MonetaryFormat prefixCode()"
    instructionFingerprint: "230398B1F729D33CA5777E68EB7841D7"
  paths:
  - pathId: "path1"
    testPathName: "prefixCodeWhenCodePrefixed"
    constructorSignature: "<init>(boolean) : void"
    modelFingerprint: "46B94BBBE195AEA380365DE3EFE28376"
    problemWasSolvedByProver: true
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "158F306D9B26D5466D8938D2940F98BC"
      index: 1
      valueUuid: "target"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "E837F136F4829B4CB1873F85583D11F1"
      index: 2
      valueUuid: "targetClassObject"
    uuid: "62fd373b-1dcb-3586-b942-5efbf95c23e7"
    deleted: false
    disabled: false
    ignoredBySystem: false
    prover: "DEFAULT"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.bitcoinj.base.utils.MonetaryFormat"
        parameters:
        - name: "useSymbol"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: true
            valueType: "boolean"
            uuid: "<init>_boolean1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      valueType: "org.bitcoinj.base.utils.MonetaryFormat"
      uuid: "target"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "THIS"
      valueType: "org.bitcoinj.base.utils.MonetaryFormat"
      uuid: "targetClassObject"
      fixed: true
      equalsMethodPresent: true
      explicitCastNeeded: false
- method:
    name: "postfixCode"
    signature: "postfixCode() : org.bitcoinj.base.utils.MonetaryFormat"
    sourceCodeSignature: "MonetaryFormat postfixCode()"
    instructionFingerprint: "FFB07871D5CBE1F4E96F759F0A78E33F"
  paths:
  - pathId: "path1"
    testPathName: "postfixCodeWhenCodePrefixed"
    constructorSignature: "<init>(boolean) : void"
    modelFingerprint: "CD7D8E6524B47D3023D64677CE3D396E"
    problemWasSolvedByProver: true
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "158F306D9B26D5466D8938D2940F98BC"
      index: 1
      valueUuid: "target"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "0CFB1FBF2D8A681BF722052955D61697"
      index: 2
      valueUuid: "postfixCode_monetaryFormat1"
    uuid: "ab14d391-049a-3b77-8af4-b2ad9dac2553"
    deleted: false
    disabled: false
    ignoredBySystem: false
    prover: "DEFAULT"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.bitcoinj.base.utils.MonetaryFormat"
        parameters:
        - name: "useSymbol"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: true
            valueType: "boolean"
            uuid: "<init>_boolean1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      valueType: "org.bitcoinj.base.utils.MonetaryFormat"
      uuid: "target"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.bitcoinj.base.utils.MonetaryFormat"
        parameters:
        - name: "negativeSign"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "-"
            valueType: "char"
            uuid: "<init>_int41"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "positiveSign"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "\\u0000"
            valueType: "char"
            uuid: "<init>_int42"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "zeroDigit"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "0"
            valueType: "char"
            uuid: "<init>_int43"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "decimalMark"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "."
            valueType: "char"
            uuid: "<init>_int44"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "minDecimals"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 2
            valueType: "int"
            uuid: "<init>_int45"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "decimalGroups"
          value:
            sapientType: "NULL"
            valueType: "java.util.List"
            genericValueType: "java.lang.Integer"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "shift"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 0
            valueType: "int"
            uuid: "<init>_int46"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "roundingMode"
          value:
            sapientType: "ENUM"
            content: !<regular>
              value: "HALF_UP"
            valueType: "java.math.RoundingMode"
            uuid: "Enum-java.math.RoundingMode-HALF_UP"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "codes"
          value:
            sapientType: "ARRAY"
            content: !<array>
              values:
                0:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: "\\u20BF"
                  valueType: "java.lang.String"
                  fixed: true
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                1:
                  sapientType: "NULL"
                  valueType: "java.lang.String"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                2:
                  sapientType: "NULL"
                  valueType: "java.lang.String"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                3:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: "m\\u20BF"
                  valueType: "java.lang.String"
                  fixed: true
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                4:
                  sapientType: "NULL"
                  valueType: "java.lang.String"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                5:
                  sapientType: "NULL"
                  valueType: "java.lang.String"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                6:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: "\\u00B5\\u20BF"
                  valueType: "java.lang.String"
                  fixed: true
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                7:
                  sapientType: "NULL"
                  valueType: "java.lang.String"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                8:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: "\\u0219"
                  valueType: "java.lang.String"
                  fixed: true
                  equalsMethodPresent: false
                  explicitCastNeeded: false
            valueType: "java.lang.String[]"
            uuid: "<init>_string[]6"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "codeSeparator"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: " "
            valueType: "char"
            uuid: "<init>_int47"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "codePrefixed"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: false
            valueType: "boolean"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: true
        createdByTargetCode: true
      valueType: "org.bitcoinj.base.utils.MonetaryFormat"
      uuid: "postfixCode_monetaryFormat1"
      fixed: true
      equalsMethodPresent: true
      explicitCastNeeded: false
- method:
    name: "withLocale"
    signature: "withLocale(java.util.Locale) : org.bitcoinj.base.utils.MonetaryFormat"
    sourceCodeSignature: "MonetaryFormat withLocale(Locale locale)"
    instructionFingerprint: "D42F8CE231D38E23CE6B7CC24B0D354C"
  paths:
  - pathId: "path1"
    testPathName: "withLocaleTest"
    constructorSignature: "<init>(boolean) : void"
    modelFingerprint: "3EFE70AD0CAE4E9A040F8805A9B4F516"
    problemWasSolvedByProver: true
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "E8AAA76518010EB4B9E2B05B3FF8C364"
      index: 1
      valueUuid: "target"
    - type: "INPUT"
      name: "locale"
      modelFingerprint: "0018EEBC0C566103AB3B82EC69EE175C"
      index: 2
      valueUuid: "withLocale_locale1"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "4EC377CFAB1A3D28E76AB4B6AC7F3B86"
      index: 3
      valueUuid: "withLocale_monetaryFormat1"
    uuid: "cc2f3863-72a1-35d9-a9af-cf9de1e08603"
    deleted: false
    disabled: false
    ignoredBySystem: false
    prover: "DEFAULT"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.bitcoinj.base.utils.MonetaryFormat"
        parameters:
        - name: "useSymbol"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: true
            valueType: "boolean"
            uuid: "<init>_boolean1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      valueType: "org.bitcoinj.base.utils.MonetaryFormat"
      uuid: "target"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.util.Locale"
        parameters:
        - name: "language"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "language1"
            valueType: "java.lang.String"
            uuid: "withLocale_locale1-language"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      valueType: "java.util.Locale"
      uuid: "withLocale_locale1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.bitcoinj.base.utils.MonetaryFormat"
        parameters:
        - name: "negativeSign"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "-"
            valueType: "char"
            uuid: "withLocale_char1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "positiveSign"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "\\u0000"
            valueType: "char"
            uuid: "<init>_int42"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "zeroDigit"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "0"
            valueType: "char"
            uuid: "withLocale_char2"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "decimalMark"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "."
            valueType: "char"
            uuid: "withLocale_char3"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "minDecimals"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 2
            valueType: "int"
            uuid: "<init>_int45"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "decimalGroups"
          value:
            sapientType: "NULL"
            valueType: "java.util.List"
            genericValueType: "java.lang.Integer"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "shift"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 0
            valueType: "int"
            uuid: "<init>_int46"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "roundingMode"
          value:
            sapientType: "ENUM"
            content: !<regular>
              value: "HALF_UP"
            valueType: "java.math.RoundingMode"
            uuid: "Enum-java.math.RoundingMode-HALF_UP"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "codes"
          value:
            sapientType: "ARRAY"
            content: !<array>
              values:
                0:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: "\\u20BF"
                  valueType: "java.lang.String"
                  fixed: true
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                1:
                  sapientType: "NULL"
                  valueType: "java.lang.String"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                2:
                  sapientType: "NULL"
                  valueType: "java.lang.String"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                3:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: "m\\u20BF"
                  valueType: "java.lang.String"
                  fixed: true
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                4:
                  sapientType: "NULL"
                  valueType: "java.lang.String"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                5:
                  sapientType: "NULL"
                  valueType: "java.lang.String"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                6:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: "\\u00B5\\u20BF"
                  valueType: "java.lang.String"
                  fixed: true
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                7:
                  sapientType: "NULL"
                  valueType: "java.lang.String"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                8:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: "\\u0219"
                  valueType: "java.lang.String"
                  fixed: true
                  equalsMethodPresent: false
                  explicitCastNeeded: false
            valueType: "java.lang.String[]"
            uuid: "<init>_string[]6"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "codeSeparator"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: " "
            valueType: "char"
            uuid: "<init>_int47"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "codePrefixed"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: true
            valueType: "boolean"
            uuid: "<init>_int48"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: true
        createdByTargetCode: true
      valueType: "org.bitcoinj.base.utils.MonetaryFormat"
      uuid: "withLocale_monetaryFormat1"
      fixed: true
      equalsMethodPresent: true
      explicitCastNeeded: false
- method:
    name: "format"
    signature: "format(org.bitcoinj.base.Monetary) : java.lang.CharSequence"
    sourceCodeSignature: "CharSequence format(Monetary monetary)"
    instructionFingerprint: "F986AF523996461AF866F1F9D423EA85"
  paths:
  - pathId: "path8"
    testPathName: "formatWhenMaxVisibleDecimalsGreaterThanSmallestUnitExponentThrowsIllegalStateException"
    constructorSignature: "<init>(boolean) : void"
    modelFingerprint: "9E6F9FCDC0075137D7573AEEDAD3D1B4"
    problemWasSolvedByProver: true
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "158F306D9B26D5466D8938D2940F98BC"
      index: 1
      valueUuid: "target"
    - type: "INPUT"
      name: "monetary"
      modelFingerprint: "D190B03F76A15C43B85FD1624A00BA6F"
      index: 2
      valueUuid: "format_monetary1"
    - type: "LOCAL_VARIABLE"
      name: "monetary"
      modelFingerprint: "F38D71A82CA4FFE7C1DDB4AEF02290B6"
      index: 3
      valueUuid: "format_monetary1"
      methodExercised:
        target: "monetary"
        name: "smallestUnitExponent"
        parameters: []
        signature: "smallestUnitExponent(): int"
        returnValueUuid: "format_int1"
        access: 1025
    - type: "STATIC"
      name: "Preconditions"
      modelFingerprint: "54C4D53CCD04B53C1A47AA185AEE8B06"
      index: 4
      valueUuid: "uuid112"
      methodExercised:
        target: "org.bitcoinj.base.internal.Preconditions"
        name: "checkState"
        parameters:
        - name: "expression"
          valueUuid: "uuid109"
        - name: "messageSupplier"
          valueUuid: "uuid110"
        signature: "checkState(boolean,Supplier): void"
        returnValueUuid: "uuid111"
        access: 9
    - type: "RESULT"
      name: "result"
      modelFingerprint: "C9C68C9339F812BC8DEC7C1D6145A135"
      index: 5
      valueUuid: "uuid113"
    uuid: "6a648dd6-5ded-38b1-8ffe-c69abe6c9e98"
    deleted: false
    disabled: false
    ignoredBySystem: false
    prover: "DEFAULT"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.bitcoinj.base.utils.MonetaryFormat"
        parameters:
        - name: "useSymbol"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: true
            valueType: "boolean"
            uuid: "<init>_boolean1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      valueType: "org.bitcoinj.base.utils.MonetaryFormat"
      uuid: "target"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.bitcoinj.base.Monetary"
      uuid: "format_monetary1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.bitcoinj.base.Monetary"
      uuid: "format_monetary1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: 1
      valueType: "int"
      uuid: "format_int1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "REAL"
      valueType: "org.bitcoinj.base.internal.Preconditions"
      uuid: "uuid112"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "EXCEPTION"
      content: !<new>
        target: "java.lang.IllegalStateException"
        parameters: []
        privateConstructor: false
        createdByTargetCode: false
      valueType: "java.lang.IllegalStateException"
      uuid: "uuid111"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "uuid109"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "PRIVATE_INNER_CLASS_OR_LAMBDA"
      valueType: "java.util.function.Supplier"
      genericValueType: "java.lang.String"
      uuid: "uuid110"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "EXCEPTION"
      content: !<new>
        target: "java.lang.IllegalStateException"
        parameters: []
        privateConstructor: false
        createdByTargetCode: false
      valueType: "java.lang.IllegalStateException"
      uuid: "uuid113"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
  - pathId: "path5"
    testPathName: "formatWhenZeroDigitEquals_0_"
    constructorSignature: "<init>(boolean) : void"
    modelFingerprint: "6F46DD9D9F392065E35D4E787A005BE8"
    problemWasSolvedByProver: false
    truncated: true
    inputParameters: []
    uuid: "daca11f7-c2ca-3905-a1df-2b0b821af111"
    deleted: true
    disabled: false
    ignoredBySystem: true
    failureReason:
      reason: "METHOD_CALL_INSTRUCTION_CONSTRUCTION_UNFILLED_PARAMS"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues: []
  - pathId: "path1"
    testPathName: "formatWhenCodePrefixedAndZeroDigitEquals_0_"
    constructorSignature: "<init>(boolean) : void"
    modelFingerprint: "F6D473A5D09FAEC04308B4BCAD487901"
    problemWasSolvedByProver: false
    truncated: true
    inputParameters: []
    uuid: "4a5418e4-5223-3669-bc86-e951dee08c3b"
    deleted: true
    disabled: false
    ignoredBySystem: true
    failureReason:
      reason: "METHOD_CALL_INSTRUCTION_CONSTRUCTION_UNFILLED_PARAMS"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues: []
  - pathId: "path3"
    testPathName: "formatWhenCodesIsNotNullAndCodePrefixedAndZeroDigitEquals_0_"
    constructorSignature: "<init>(boolean) : void"
    modelFingerprint: "36BD6E775374DA856D1DE51ADE299AB4"
    problemWasSolvedByProver: false
    truncated: true
    inputParameters: []
    uuid: "600117e9-7165-3e8d-a450-fe24d82bb66e"
    deleted: true
    disabled: false
    ignoredBySystem: true
    failureReason:
      reason: "METHOD_CALL_INSTRUCTION_CONSTRUCTION_UNFILLED_PARAMS"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues: []
  - pathId: "path6"
    testPathName: "formatWhenPositiveSignNotEquals0AndCodesIsNotNullAndCodePrefixedAndZeroDigitEquals_0_"
    constructorSignature: "<init>(boolean) : void"
    modelFingerprint: "D7084B7617F8ED34EE5C838C7D6C24C4"
    problemWasSolvedByProver: false
    truncated: true
    inputParameters: []
    uuid: "e452919f-f0c9-370b-93af-cf15909c30e8"
    deleted: true
    disabled: false
    ignoredBySystem: true
    failureReason:
      reason: "METHOD_CALL_INSTRUCTION_CONSTRUCTION_UNFILLED_PARAMS"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues: []
  - pathId: "path7"
    testPathName: "formatWhenMonetaryGetValueLessThan0AndCodesIsNotNullAndCodePrefixedAndZeroDigitEquals_0_"
    constructorSignature: "<init>(boolean) : void"
    modelFingerprint: "F467E9A58AD727F7220C221360A31B77"
    problemWasSolvedByProver: false
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "0CFB76A0AEAE39D3EEAF6176AA2F61E9"
      index: 1
      valueUuid: "target"
    - type: "INPUT"
      name: "monetary"
      modelFingerprint: "775C4D425B5046AF4F27B64288DC6972"
      index: 2
      valueUuid: "format_monetary1"
    - type: "LOCAL_VARIABLE"
      name: "monetary"
      modelFingerprint: "C7A1EA76975C56851C8FC446FF5E5025"
      index: 3
      valueUuid: "format_monetary1"
      methodExercised:
        target: "monetary"
        name: "smallestUnitExponent"
        parameters: []
        signature: "smallestUnitExponent(): int"
        returnValueUuid: "format_int1"
        access: 1025
    - type: "STATIC"
      name: "Preconditions"
      modelFingerprint: "1069224700F44090276BB375F2F3A455"
      index: 4
      valueUuid: "uuid3"
      methodExercised:
        target: "org.bitcoinj.base.internal.Preconditions"
        name: "checkState"
        parameters:
        - name: "expression"
          valueUuid: "uuid1"
        - name: "messageSupplier"
          valueUuid: "uuid2"
        signature: "checkState(boolean,Supplier): void"
        returnValueUuid: "format_void1"
        access: 9
    - type: "LOCAL_VARIABLE"
      name: "monetary"
      modelFingerprint: "9BD6215D686A9981F66E3F195CB2FC79"
      index: 5
      valueUuid: "format_monetary1"
      methodExercised:
        target: "monetary"
        name: "getValue"
        parameters: []
        signature: "getValue(): long"
        returnValueUuid: "format_long1"
        access: 1025
    - type: "LOCAL_VARIABLE"
      name: "monetary"
      modelFingerprint: "9BD6215D686A9981F66E3F195CB2FC79"
      index: 6
      valueUuid: "format_monetary1"
      methodExercised:
        target: "monetary"
        name: "getValue"
        parameters: []
        signature: "getValue(): long"
        returnValueUuid: "format_long5"
        access: 1025
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "97D08A9FF46495433DB674E1C3A1498C"
      index: 7
      methodExercised:
        target: "target"
        name: "code"
        parameters: []
        signature: "code(): String"
        returnValueUuid: "format_string2"
        access: 1
    - type: "RESULT"
      name: "result"
      modelFingerprint: "D672DCF65BEB0EB7D4150E76B50A66CE"
      index: 8
      valueUuid: "format_stringBuilder1"
    uuid: "33b8a937-f370-31f2-a01f-3f5d962fcb03"
    deleted: false
    disabled: true
    ignoredBySystem: false
    failureReason:
      reason: "METHOD_CALL_INSTRUCTION_CONSTRUCTION_UNFILLED_PARAMS"
    prover: "LLM"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: true
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.bitcoinj.base.utils.MonetaryFormat"
        parameters:
        - name: "useSymbol"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: false
            valueType: "boolean"
            uuid: "<init>_boolean1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      valueType: "org.bitcoinj.base.utils.MonetaryFormat"
      uuid: "target"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.bitcoinj.base.Monetary"
      uuid: "format_monetary1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.bitcoinj.base.Monetary"
      uuid: "format_monetary1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: 0
      valueType: "int"
      uuid: "format_int1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "REAL"
      valueType: "org.bitcoinj.base.internal.Preconditions"
      uuid: "uuid3"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      valueType: "void"
      uuid: "format_void1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "uuid1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "PRIVATE_INNER_CLASS_OR_LAMBDA"
      valueType: "java.util.function.Supplier"
      genericValueType: "java.lang.String"
      uuid: "uuid2"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.bitcoinj.base.Monetary"
      uuid: "format_monetary1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: 0
      valueType: "long"
      uuid: "format_long1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.bitcoinj.base.Monetary"
      uuid: "format_monetary1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: 0
      valueType: "long"
      uuid: "format_long5"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_code1"
      valueType: "java.lang.String"
      uuid: "format_string2"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "STRING_BUILDER"
      content: !<string-builder>
        values: []
        initValues:
        - sapientType: "BASIC"
          content: !<regular>
            value: ""
          valueType: "java.lang.String"
          uuid: "format_string1"
          fixed: true
          equalsMethodPresent: false
          explicitCastNeeded: false
      valueType: "java.lang.StringBuilder"
      uuid: "format_stringBuilder1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
  - pathId: "path2"
    testPathName: "formatWhenMonetaryGetValueNotLessThan0AndPositiveSignNotEquals0AndCodesIsNotNullAndCodePrefixedAndZeroDigitEquals_0_"
    constructorSignature: "<init>(boolean) : void"
    modelFingerprint: "3F4C8A9C17D6A42FDCF3378EFC88C9CC"
    problemWasSolvedByProver: false
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "0CFB76A0AEAE39D3EEAF6176AA2F61E9"
      index: 1
      valueUuid: "target"
    - type: "INPUT"
      name: "monetary"
      modelFingerprint: "775C4D425B5046AF4F27B64288DC6972"
      index: 2
      valueUuid: "format_monetary1"
    - type: "LOCAL_VARIABLE"
      name: "monetary"
      modelFingerprint: "C7A1EA76975C56851C8FC446FF5E5025"
      index: 3
      valueUuid: "format_monetary1"
      methodExercised:
        target: "monetary"
        name: "smallestUnitExponent"
        parameters: []
        signature: "smallestUnitExponent(): int"
        returnValueUuid: "format_int1"
        access: 1025
    - type: "STATIC"
      name: "Preconditions"
      modelFingerprint: "1069224700F44090276BB375F2F3A455"
      index: 4
      valueUuid: "uuid3"
      methodExercised:
        target: "org.bitcoinj.base.internal.Preconditions"
        name: "checkState"
        parameters:
        - name: "expression"
          valueUuid: "uuid1"
        - name: "messageSupplier"
          valueUuid: "uuid2"
        signature: "checkState(boolean,Supplier): void"
        returnValueUuid: "format_void1"
        access: 9
    - type: "LOCAL_VARIABLE"
      name: "monetary"
      modelFingerprint: "9BD6215D686A9981F66E3F195CB2FC79"
      index: 5
      valueUuid: "format_monetary1"
      methodExercised:
        target: "monetary"
        name: "getValue"
        parameters: []
        signature: "getValue(): long"
        returnValueUuid: "format_long1"
        access: 1025
    - type: "LOCAL_VARIABLE"
      name: "monetary"
      modelFingerprint: "9BD6215D686A9981F66E3F195CB2FC79"
      index: 6
      valueUuid: "format_monetary1"
      methodExercised:
        target: "monetary"
        name: "getValue"
        parameters: []
        signature: "getValue(): long"
        returnValueUuid: "format_long6"
        access: 1025
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "97D08A9FF46495433DB674E1C3A1498C"
      index: 7
      methodExercised:
        target: "target"
        name: "code"
        parameters: []
        signature: "code(): String"
        returnValueUuid: "format_string4"
        access: 1
    - type: "RESULT"
      name: "result"
      modelFingerprint: "6CDD327C5B87A4FE5C8906DC030B4CEB"
      index: 8
      valueUuid: "format_stringBuilder5"
    uuid: "b66546f3-348b-344e-b792-4890a19950a3"
    deleted: false
    disabled: true
    ignoredBySystem: false
    failureReason:
      reason: "METHOD_CALL_INSTRUCTION_CONSTRUCTION_UNFILLED_PARAMS"
    prover: "LLM"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: true
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.bitcoinj.base.utils.MonetaryFormat"
        parameters:
        - name: "useSymbol"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: false
            valueType: "boolean"
            uuid: "<init>_boolean1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      valueType: "org.bitcoinj.base.utils.MonetaryFormat"
      uuid: "target"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.bitcoinj.base.Monetary"
      uuid: "format_monetary1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.bitcoinj.base.Monetary"
      uuid: "format_monetary1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: 0
      valueType: "int"
      uuid: "format_int1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "REAL"
      valueType: "org.bitcoinj.base.internal.Preconditions"
      uuid: "uuid3"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      valueType: "void"
      uuid: "format_void1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "uuid1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "PRIVATE_INNER_CLASS_OR_LAMBDA"
      valueType: "java.util.function.Supplier"
      genericValueType: "java.lang.String"
      uuid: "uuid2"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.bitcoinj.base.Monetary"
      uuid: "format_monetary1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: 0
      valueType: "long"
      uuid: "format_long1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.bitcoinj.base.Monetary"
      uuid: "format_monetary1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: 0
      valueType: "long"
      uuid: "format_long6"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_code1"
      valueType: "java.lang.String"
      uuid: "format_string4"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "STRING_BUILDER"
      content: !<string-builder>
        values: []
        initValues:
        - sapientType: "BASIC"
          content: !<regular>
            value: "resultItem1"
          valueType: "java.lang.String"
          uuid: "format_string3"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
      valueType: "java.lang.StringBuilder"
      uuid: "format_stringBuilder5"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
  - pathId: "path4"
    testPathName: "formatWhenStrLengthNotGreaterThan0AndMonetaryGetValueNotLessThan0AndPositiveSignNotEquals0AndCodesIsNotNullAndCodePrefi"
    constructorSignature: "<init>(boolean) : void"
    modelFingerprint: "1BAE2EA34F34A6D9A519E7C3A7841A5B"
    problemWasSolvedByProver: false
    truncated: true
    inputParameters: []
    uuid: "1c3651a9-f125-363a-9822-30a06c80d77a"
    deleted: true
    disabled: false
    ignoredBySystem: true
    failureReason:
      reason: "METHOD_CALL_INSTRUCTION_CONSTRUCTION_UNFILLED_PARAMS"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues: []
- method:
    name: "parse"
    signature: "parse(java.lang.String) : org.bitcoinj.base.Coin"
    sourceCodeSignature: "Coin parse(String str)"
    instructionFingerprint: "1A87E2C9ED8F19A90DC5CE14E7EE9107"
  paths:
  - pathId: "path1"
    testPathName: "parseWhenStrIsEmptyThrowsNumberFormatException"
    constructorSignature: "<init>(boolean) : void"
    modelFingerprint: "32FD8363899DC9E21FB726EA0E1B1649"
    problemWasSolvedByProver: true
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "158F306D9B26D5466D8938D2940F98BC"
      index: 1
      valueUuid: "target"
    - type: "INPUT"
      name: "str"
      modelFingerprint: "8B29BF11053EA8ECE2269DD21D27063D"
      index: 2
      valueUuid: "parse_string1"
    - type: "STATIC"
      name: "Preconditions"
      modelFingerprint: "1069224700F44090276BB375F2F3A455"
      index: 3
      valueUuid: "uuid137"
      methodExercised:
        target: "org.bitcoinj.base.internal.Preconditions"
        name: "checkState"
        parameters:
        - name: "expression"
          valueUuid: "uuid135"
        - name: "messageSupplier"
          valueUuid: "uuid136"
        signature: "checkState(boolean,Supplier): void"
        returnValueUuid: "parseValue_void1"
        access: 9
    - type: "RESULT"
      name: "result"
      modelFingerprint: "C2D938DDC374F917412BE9C7E61BA7B3"
      index: 4
      valueUuid: "parseValue_numberFormatException1"
    uuid: "a97e1e33-b1e5-394a-9a33-e33ffcd0ecfc"
    deleted: false
    disabled: false
    ignoredBySystem: false
    prover: "DEFAULT"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.bitcoinj.base.utils.MonetaryFormat"
        parameters:
        - name: "useSymbol"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: true
            valueType: "boolean"
            uuid: "<init>_boolean1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      valueType: "org.bitcoinj.base.utils.MonetaryFormat"
      uuid: "target"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: ""
      valueType: "java.lang.String"
      uuid: "parse_string1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "REAL"
      valueType: "org.bitcoinj.base.internal.Preconditions"
      uuid: "uuid137"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      valueType: "void"
      uuid: "parseValue_void1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "uuid135"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "PRIVATE_INNER_CLASS_OR_LAMBDA"
      valueType: "java.util.function.Supplier"
      genericValueType: "java.lang.String"
      uuid: "uuid136"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "EXCEPTION"
      content: !<new>
        target: "java.lang.NumberFormatException"
        parameters:
        - name: "s"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "empty string"
            valueType: "java.lang.String"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: true
      valueType: "java.lang.NumberFormatException"
      uuid: "parseValue_numberFormatException1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
  - pathId: "path12"
    testPathName: "parseWhenDecimalsIndexOfDecimalMarkNotEqualsMinus1ThrowsNumberFormatException"
    constructorSignature: "<init>(boolean) : void"
    modelFingerprint: "DC133B2A9D973DA92DE3C47155267EA5"
    problemWasSolvedByProver: true
    truncated: true
    inputParameters: []
    uuid: "6b315111-dacf-36cf-b459-dc3b78a3a06d"
    deleted: true
    disabled: false
    ignoredBySystem: true
    prover: "DEFAULT"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues: []
  - pathId: "path14"
    testPathName: "parseWhenCharacterNotIsDigitCThrowsNumberFormatException"
    constructorSignature: "<init>(boolean) : void"
    modelFingerprint: "760619EC97537CCABF97872928F898C8"
    problemWasSolvedByProver: true
    truncated: true
    inputParameters: []
    uuid: "69896eaf-cd4c-37a2-9555-a0e94efbdd52"
    deleted: true
    disabled: false
    ignoredBySystem: true
    prover: "DEFAULT"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues: []
  - pathId: "path2"
    testPathName: "parseWhenDecimalMarkIndexNotEqualsMinus1AndDecimalsIndexOfDecimalMarkNotEqualsMinus1ThrowsNumberFormatException"
    constructorSignature: "<init>(boolean) : void"
    modelFingerprint: "EC9A7FE659DF3BA52860E54201F390F4"
    problemWasSolvedByProver: true
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "158F306D9B26D5466D8938D2940F98BC"
      index: 1
      valueUuid: "target"
    - type: "INPUT"
      name: "str"
      modelFingerprint: "DA6A9B2DB434AE09C7FF76F4C05CB31A"
      index: 2
      valueUuid: "parse_string1"
    - type: "STATIC"
      name: "Preconditions"
      modelFingerprint: "1069224700F44090276BB375F2F3A455"
      index: 3
      valueUuid: "uuid146"
      methodExercised:
        target: "org.bitcoinj.base.internal.Preconditions"
        name: "checkState"
        parameters:
        - name: "expression"
          valueUuid: "uuid144"
        - name: "messageSupplier"
          valueUuid: "uuid145"
        signature: "checkState(boolean,Supplier): void"
        returnValueUuid: "parseValue_void1"
        access: 9
    - type: "RESULT"
      name: "result"
      modelFingerprint: "628CBE8142CF35C4BDAC4BBCFCEFB818"
      index: 4
      valueUuid: "parseValue_numberFormatException1"
    uuid: "97e5be6a-76a3-32fc-8d21-dc45ed2ee22b"
    deleted: false
    disabled: false
    ignoredBySystem: false
    prover: "DEFAULT"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.bitcoinj.base.utils.MonetaryFormat"
        parameters:
        - name: "useSymbol"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: true
            valueType: "boolean"
            uuid: "<init>_boolean1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      valueType: "org.bitcoinj.base.utils.MonetaryFormat"
      uuid: "target"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "\\u0000.."
      valueType: "java.lang.String"
      uuid: "parse_string1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "REAL"
      valueType: "org.bitcoinj.base.internal.Preconditions"
      uuid: "uuid146"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      valueType: "void"
      uuid: "parseValue_void1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "uuid144"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "PRIVATE_INNER_CLASS_OR_LAMBDA"
      valueType: "java.util.function.Supplier"
      genericValueType: "java.lang.String"
      uuid: "uuid145"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "EXCEPTION"
      content: !<new>
        target: "java.lang.NumberFormatException"
        parameters:
        - name: "s"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "more than one decimal mark"
            valueType: "java.lang.String"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: true
      valueType: "java.lang.NumberFormatException"
      uuid: "parseValue_numberFormatException1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
  - pathId: "path7"
    testPathName: "parseWhenFirstNotEqualsPositiveSignAndDecimalMarkIndexNotEqualsMinus1AndDecimalsIndexOfDecimThrowsNumberFormatException"
    constructorSignature: "<init>(boolean) : void"
    modelFingerprint: "8CCBC5A025D27347B10C12BDE9B79378"
    problemWasSolvedByProver: true
    truncated: true
    inputParameters: []
    uuid: "e7948d08-505c-3cdc-987c-15096b906ad8"
    deleted: true
    disabled: false
    ignoredBySystem: true
    prover: "DEFAULT"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues: []
  - pathId: "path13"
    testPathName: "parseWhenSatoshisToCharArrayIsNotEmptyAndCharacterNotIsDigitCThrowsNumberFormatException"
    constructorSignature: "<init>(boolean) : void"
    modelFingerprint: "3603FA5A92B945622FA8286EFB062254"
    problemWasSolvedByProver: true
    truncated: true
    inputParameters: []
    uuid: "ce0d48a8-492a-3aa6-b1a1-24ef11570fc7"
    deleted: true
    disabled: false
    ignoredBySystem: true
    prover: "DEFAULT"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues: []
  - pathId: "path5"
    testPathName: "parseWhenDecimalMarkIndexEqualsMinus1AndSatoshisToCharArrayIsNotEmptyAndCharacterNotIsDigitCThrowsNumberFormatException"
    constructorSignature: "<init>(boolean) : void"
    modelFingerprint: "931EDE4B411EA8882AB49C42151CE60D"
    problemWasSolvedByProver: false
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "158F306D9B26D5466D8938D2940F98BC"
      index: 1
      valueUuid: "target"
    - type: "INPUT"
      name: "str"
      modelFingerprint: "35E2BB964CBEEA82660255E4FCCD4AC5"
      index: 2
      valueUuid: "parse_string1"
    - type: "STATIC"
      name: "Preconditions"
      modelFingerprint: "1069224700F44090276BB375F2F3A455"
      index: 3
      valueUuid: "uuid155"
      methodExercised:
        target: "org.bitcoinj.base.internal.Preconditions"
        name: "checkState"
        parameters:
        - name: "expression"
          valueUuid: "uuid153"
        - name: "messageSupplier"
          valueUuid: "uuid154"
        signature: "checkState(boolean,Supplier): void"
        returnValueUuid: "parseValue_void1"
        access: 9
    - type: "RESULT"
      name: "result"
      modelFingerprint: "5AA6781D7BD72D9EBDC12ED0A169F1B2"
      index: 4
      valueUuid: "parseValue_numberFormatException1"
    uuid: "5500c2a6-7db2-33a5-ab0e-e165ed9ea4fb"
    deleted: false
    disabled: true
    ignoredBySystem: false
    failureReason:
      reason: "UNKNOWN_REASON"
    prover: "DEFAULT"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: true
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.bitcoinj.base.utils.MonetaryFormat"
        parameters:
        - name: "useSymbol"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: true
            valueType: "boolean"
            uuid: "<init>_boolean1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      valueType: "org.bitcoinj.base.utils.MonetaryFormat"
      uuid: "target"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "\\u0000B"
      valueType: "java.lang.String"
      uuid: "parse_string1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "REAL"
      valueType: "org.bitcoinj.base.internal.Preconditions"
      uuid: "uuid155"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      valueType: "void"
      uuid: "parseValue_void1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "uuid153"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "PRIVATE_INNER_CLASS_OR_LAMBDA"
      valueType: "java.util.function.Supplier"
      genericValueType: "java.lang.String"
      uuid: "uuid154"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "EXCEPTION"
      content: !<new>
        target: "java.lang.NumberFormatException"
        parameters:
        - name: "s"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "illegal character: A"
            valueType: "java.lang.String"
            uuid: "parseValue_string5"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: true
      valueType: "java.lang.NumberFormatException"
      uuid: "parseValue_numberFormatException1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
  - pathId: "path10"
    testPathName: "parseWhenFirstNotEqualsPositiveSignAndDecimalMarkIndexEqualsMinus1AndSatoshisToCharArrayIsNoThrowsNumberFormatException"
    constructorSignature: "<init>(boolean) : void"
    modelFingerprint: "FB31A74C89EF21A18AD25AB190757DBE"
    problemWasSolvedByProver: true
    truncated: true
    inputParameters: []
    uuid: "d02a600b-809a-3d1b-8fc1-979822eb2947"
    deleted: true
    disabled: false
    ignoredBySystem: true
    prover: "DEFAULT"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues: []
  - pathId: "path3"
    testPathName: "parseWhenDecimalsIndexOfDecimalMarkEqualsMinus1AndSatoshisToCharArrayIsNotEmptyAndCharacterNThrowsNumberFormatException"
    constructorSignature: "<init>(boolean) : void"
    modelFingerprint: "0099C2A351FC2F5F3B363D733E5243F5"
    problemWasSolvedByProver: true
    truncated: true
    inputParameters: []
    uuid: "6c5d359c-1304-3b7c-88b1-ff1c770cf2cb"
    deleted: true
    disabled: false
    ignoredBySystem: true
    prover: "DEFAULT"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues: []
  - pathId: "path6"
    testPathName: "parseWhenFirstNotEqualsNegativeSign"
    constructorSignature: "<init>(boolean) : void"
    modelFingerprint: "EF86568E32F2E3FF679035DAB0C57D36"
    problemWasSolvedByProver: false
    truncated: true
    inputParameters: []
    uuid: "f96c6cfc-c960-3ddd-acb4-feae97a1f6db"
    deleted: true
    disabled: false
    ignoredBySystem: true
    failureReason:
      reason: "PROVER_COULD_NOT_SOLVE_THE_PROBLEM"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues: []
  - pathId: "path8"
    testPathName: "parseWhenSatoshisToCharArrayIsNotEmptyAndCharacterNotIsDigitC2ThrowsNumberFormatException"
    constructorSignature: "<init>(boolean) : void"
    modelFingerprint: "904CB9950020D35954AD8C931DB01B1D"
    problemWasSolvedByProver: false
    truncated: true
    inputParameters: []
    uuid: "9db559f8-7d2d-3cba-b105-8bc73b453005"
    deleted: true
    disabled: false
    ignoredBySystem: true
    failureReason:
      reason: "PROVER_COULD_NOT_SOLVE_THE_PROBLEM"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues: []
  - pathId: "path11"
    testPathName: "parseWhenCharacterIsDigitCAndFirstNotEqualsNegativeSign"
    constructorSignature: "<init>(boolean) : void"
    modelFingerprint: "C191BE5B899339D0C027B5894115976D"
    problemWasSolvedByProver: false
    truncated: true
    inputParameters: []
    uuid: "c5ea69a9-f698-394d-bf37-8d910e87027f"
    deleted: true
    disabled: false
    ignoredBySystem: true
    failureReason:
      reason: "PROVER_COULD_NOT_SOLVE_THE_PROBLEM"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues: []
  - pathId: "path4"
    testPathName: "parseWhenFirstEqualsNegativeSign"
    constructorSignature: "<init>(boolean) : void"
    modelFingerprint: "1184A6F0667D3C51D4E7FCF6CC7217F1"
    problemWasSolvedByProver: false
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "1812E57E39789A36E2C25DE1B2306BEA"
      index: 1
      valueUuid: "target"
    - type: "INPUT"
      name: "str"
      modelFingerprint: "8B29BF11053EA8ECE2269DD21D27063D"
      index: 2
      valueUuid: "parse_string1"
    - type: "STATIC"
      name: "Preconditions"
      modelFingerprint: "1069224700F44090276BB375F2F3A455"
      index: 3
      valueUuid: "uuid175"
      methodExercised:
        target: "org.bitcoinj.base.internal.Preconditions"
        name: "checkState"
        parameters:
        - name: "expression"
          valueUuid: "uuid173"
        - name: "messageSupplier"
          valueUuid: "uuid174"
        signature: "checkState(boolean,Supplier): void"
        returnValueUuid: "parseValue_void1"
        access: 9
    - type: "STATIC"
      name: "Coin"
      modelFingerprint: "74FF841EF4FEBA0A21DA9867B5F49A57"
      index: 4
      valueUuid: "uuid176"
      methodExercised:
        target: "org.bitcoinj.base.Coin"
        name: "valueOf"
        parameters:
        - name: "satoshis"
          valueUuid: "parseValue_long2"
        signature: "valueOf(long): Coin"
        returnValueUuid: "parse_coin1"
        access: 9
    - type: "RESULT"
      name: "result"
      modelFingerprint: "0BA4BF04ACA4335CDA636F583E8FE771"
      index: 5
      valueUuid: "parse_coin1"
    uuid: "0e40efad-9244-36a2-be08-bc9e10c95918"
    deleted: false
    disabled: true
    ignoredBySystem: false
    failureReason:
      reason: "PROVER_COULD_NOT_SOLVE_THE_PROBLEM"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: true
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.bitcoinj.base.utils.MonetaryFormat"
        parameters:
        - name: "useSymbol"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: false
            valueType: "boolean"
            uuid: "<init>_boolean1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      valueType: "org.bitcoinj.base.utils.MonetaryFormat"
      uuid: "target"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "str1"
      valueType: "java.lang.String"
      uuid: "parse_string1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "REAL"
      valueType: "org.bitcoinj.base.internal.Preconditions"
      uuid: "uuid175"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      valueType: "void"
      uuid: "parseValue_void1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "uuid173"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "PRIVATE_INNER_CLASS_OR_LAMBDA"
      valueType: "java.util.function.Supplier"
      genericValueType: "java.lang.String"
      uuid: "uuid174"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.bitcoinj.base.Coin"
      uuid: "uuid176"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.bitcoinj.base.Coin"
      uuid: "parse_coin1"
      fixed: false
      equalsMethodPresent: true
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: 0
      valueType: "long"
      uuid: "parseValue_long2"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.bitcoinj.base.Coin"
      uuid: "parse_coin1"
      fixed: false
      equalsMethodPresent: true
      explicitCastNeeded: false
  - pathId: "path9"
    testPathName: "parseWhenCharacterIsDigitCAndFirstEqualsNegativeSign"
    constructorSignature: "<init>(boolean) : void"
    modelFingerprint: "01EFF8088DFE4930439F56639011A19F"
    problemWasSolvedByProver: false
    truncated: true
    inputParameters: []
    uuid: "e16e95e9-f79e-3491-bb37-d7eec4b81e5b"
    deleted: true
    disabled: false
    ignoredBySystem: true
    failureReason:
      reason: "PROVER_COULD_NOT_SOLVE_THE_PROBLEM"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues: []
- method:
    name: "parseFiat"
    signature: "parseFiat(java.lang.String,java.lang.String) : org.bitcoinj.base.utils.Fiat"
    sourceCodeSignature: "Fiat parseFiat(String currencyCode, String str)"
    instructionFingerprint: "83448F29BB081319837FE6C2EE869B83"
  paths:
  - pathId: "path1"
    testPathName: "parseFiatWhenStrIsEmptyThrowsNumberFormatException"
    constructorSignature: "<init>(boolean) : void"
    modelFingerprint: "B91D734ABA0F30C1F812BD4267197501"
    problemWasSolvedByProver: true
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "158F306D9B26D5466D8938D2940F98BC"
      index: 1
      valueUuid: "target"
    - type: "INPUT"
      name: "currencyCode"
      modelFingerprint: "C81BE410A0DEDCFD5F73783107214F8B"
      index: 2
      valueUuid: "parseFiat_string1"
    - type: "INPUT"
      name: "str"
      modelFingerprint: "8B29BF11053EA8ECE2269DD21D27063D"
      index: 3
      valueUuid: "parseFiat_string2"
    - type: "STATIC"
      name: "Preconditions"
      modelFingerprint: "1069224700F44090276BB375F2F3A455"
      index: 4
      valueUuid: "uuid183"
      methodExercised:
        target: "org.bitcoinj.base.internal.Preconditions"
        name: "checkState"
        parameters:
        - name: "expression"
          valueUuid: "uuid181"
        - name: "messageSupplier"
          valueUuid: "uuid182"
        signature: "checkState(boolean,Supplier): void"
        returnValueUuid: "parseValue_void1"
        access: 9
    - type: "RESULT"
      name: "result"
      modelFingerprint: "C2D938DDC374F917412BE9C7E61BA7B3"
      index: 5
      valueUuid: "parseValue_numberFormatException1"
    uuid: "d5248d56-1615-3dad-bffe-b2f4dd851116"
    deleted: false
    disabled: false
    ignoredBySystem: false
    prover: "DEFAULT"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.bitcoinj.base.utils.MonetaryFormat"
        parameters:
        - name: "useSymbol"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: true
            valueType: "boolean"
            uuid: "<init>_boolean1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      valueType: "org.bitcoinj.base.utils.MonetaryFormat"
      uuid: "target"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "currencyCode1"
      valueType: "java.lang.String"
      uuid: "parseFiat_string1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: ""
      valueType: "java.lang.String"
      uuid: "parseFiat_string2"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "REAL"
      valueType: "org.bitcoinj.base.internal.Preconditions"
      uuid: "uuid183"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      valueType: "void"
      uuid: "parseValue_void1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "uuid181"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "PRIVATE_INNER_CLASS_OR_LAMBDA"
      valueType: "java.util.function.Supplier"
      genericValueType: "java.lang.String"
      uuid: "uuid182"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "EXCEPTION"
      content: !<new>
        target: "java.lang.NumberFormatException"
        parameters:
        - name: "s"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "empty string"
            valueType: "java.lang.String"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: true
      valueType: "java.lang.NumberFormatException"
      uuid: "parseValue_numberFormatException1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
  - pathId: "path12"
    testPathName: "parseFiatWhenDecimalsIndexOfDecimalMarkNotEqualsMinus1ThrowsNumberFormatException"
    constructorSignature: "<init>(boolean) : void"
    modelFingerprint: "E26048F768867E82CC3E279BD0A388D3"
    problemWasSolvedByProver: true
    truncated: true
    inputParameters: []
    uuid: "f3b710d4-a13c-386a-a9fc-e7d790f8d1ab"
    deleted: true
    disabled: false
    ignoredBySystem: true
    prover: "DEFAULT"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues: []
  - pathId: "path13"
    testPathName: "parseFiatWhenCharacterNotIsDigitCThrowsNumberFormatException"
    constructorSignature: "<init>(boolean) : void"
    modelFingerprint: "D2A834F80C46323895DD40C0E5B1143B"
    problemWasSolvedByProver: true
    truncated: true
    inputParameters: []
    uuid: "acbb874f-0d46-3f6d-83cb-70b54ce5678e"
    deleted: true
    disabled: false
    ignoredBySystem: true
    prover: "DEFAULT"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues: []
  - pathId: "path2"
    testPathName: "parseFiatWhenDecimalMarkIndexNotEqualsMinus1AndDecimalsIndexOfDecimalMarkNotEqualsMinus1ThrowsNumberFormatException"
    constructorSignature: "<init>(boolean) : void"
    modelFingerprint: "32A58BD8FAD516BBAF933953A32A6AB1"
    problemWasSolvedByProver: true
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "158F306D9B26D5466D8938D2940F98BC"
      index: 1
      valueUuid: "target"
    - type: "INPUT"
      name: "currencyCode"
      modelFingerprint: "C81BE410A0DEDCFD5F73783107214F8B"
      index: 2
      valueUuid: "parseFiat_string1"
    - type: "INPUT"
      name: "str"
      modelFingerprint: "DA6A9B2DB434AE09C7FF76F4C05CB31A"
      index: 3
      valueUuid: "parseFiat_string2"
    - type: "STATIC"
      name: "Preconditions"
      modelFingerprint: "1069224700F44090276BB375F2F3A455"
      index: 4
      valueUuid: "uuid192"
      methodExercised:
        target: "org.bitcoinj.base.internal.Preconditions"
        name: "checkState"
        parameters:
        - name: "expression"
          valueUuid: "uuid190"
        - name: "messageSupplier"
          valueUuid: "uuid191"
        signature: "checkState(boolean,Supplier): void"
        returnValueUuid: "parseValue_void1"
        access: 9
    - type: "RESULT"
      name: "result"
      modelFingerprint: "628CBE8142CF35C4BDAC4BBCFCEFB818"
      index: 5
      valueUuid: "parseValue_numberFormatException1"
    uuid: "ec26d7be-5e1b-37f5-892f-423daded937d"
    deleted: false
    disabled: false
    ignoredBySystem: false
    prover: "DEFAULT"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.bitcoinj.base.utils.MonetaryFormat"
        parameters:
        - name: "useSymbol"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: true
            valueType: "boolean"
            uuid: "<init>_boolean1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      valueType: "org.bitcoinj.base.utils.MonetaryFormat"
      uuid: "target"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "currencyCode1"
      valueType: "java.lang.String"
      uuid: "parseFiat_string1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "\\u0000.."
      valueType: "java.lang.String"
      uuid: "parseFiat_string2"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "REAL"
      valueType: "org.bitcoinj.base.internal.Preconditions"
      uuid: "uuid192"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      valueType: "void"
      uuid: "parseValue_void1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "uuid190"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "PRIVATE_INNER_CLASS_OR_LAMBDA"
      valueType: "java.util.function.Supplier"
      genericValueType: "java.lang.String"
      uuid: "uuid191"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "EXCEPTION"
      content: !<new>
        target: "java.lang.NumberFormatException"
        parameters:
        - name: "s"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "more than one decimal mark"
            valueType: "java.lang.String"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: true
      valueType: "java.lang.NumberFormatException"
      uuid: "parseValue_numberFormatException1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
  - pathId: "path7"
    testPathName: "parseFiatWhenFirstNotEqualsPositiveSignAndDecimalMarkIndexNotEqualsMinus1AndDecimalsIndexOfDThrowsNumberFormatException"
    constructorSignature: "<init>(boolean) : void"
    modelFingerprint: "FF2DA0F0025B65585C540F5D2E4FD16D"
    problemWasSolvedByProver: true
    truncated: true
    inputParameters: []
    uuid: "412334a9-07d0-3355-b815-4e313d9b70ee"
    deleted: true
    disabled: false
    ignoredBySystem: true
    prover: "DEFAULT"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues: []
  - pathId: "path5"
    testPathName: "parseFiatWhenSatoshisToCharArrayIsNotEmptyAndCharacterNotIsDigitCThrowsNumberFormatException"
    constructorSignature: "<init>(boolean) : void"
    modelFingerprint: "AE0A46BA112663F55074779AACE55E13"
    problemWasSolvedByProver: false
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "158F306D9B26D5466D8938D2940F98BC"
      index: 1
      valueUuid: "target"
    - type: "INPUT"
      name: "currencyCode"
      modelFingerprint: "C81BE410A0DEDCFD5F73783107214F8B"
      index: 2
      valueUuid: "parseFiat_string1"
    - type: "INPUT"
      name: "str"
      modelFingerprint: "35E2BB964CBEEA82660255E4FCCD4AC5"
      index: 3
      valueUuid: "parseFiat_string2"
    - type: "STATIC"
      name: "Preconditions"
      modelFingerprint: "1069224700F44090276BB375F2F3A455"
      index: 4
      valueUuid: "uuid198"
      methodExercised:
        target: "org.bitcoinj.base.internal.Preconditions"
        name: "checkState"
        parameters:
        - name: "expression"
          valueUuid: "uuid196"
        - name: "messageSupplier"
          valueUuid: "uuid197"
        signature: "checkState(boolean,Supplier): void"
        returnValueUuid: "parseValue_void1"
        access: 9
    - type: "RESULT"
      name: "result"
      modelFingerprint: "5AA6781D7BD72D9EBDC12ED0A169F1B2"
      index: 5
      valueUuid: "parseValue_numberFormatException1"
    uuid: "757b17bb-79be-36e7-a389-402579ebfa2a"
    deleted: false
    disabled: true
    ignoredBySystem: false
    failureReason:
      reason: "UNKNOWN_REASON"
    prover: "DEFAULT"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: true
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.bitcoinj.base.utils.MonetaryFormat"
        parameters:
        - name: "useSymbol"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: true
            valueType: "boolean"
            uuid: "<init>_boolean1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      valueType: "org.bitcoinj.base.utils.MonetaryFormat"
      uuid: "target"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "currencyCode1"
      valueType: "java.lang.String"
      uuid: "parseFiat_string1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "\\u0000B"
      valueType: "java.lang.String"
      uuid: "parseFiat_string2"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "REAL"
      valueType: "org.bitcoinj.base.internal.Preconditions"
      uuid: "uuid198"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      valueType: "void"
      uuid: "parseValue_void1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "uuid196"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "PRIVATE_INNER_CLASS_OR_LAMBDA"
      valueType: "java.util.function.Supplier"
      genericValueType: "java.lang.String"
      uuid: "uuid197"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "EXCEPTION"
      content: !<new>
        target: "java.lang.NumberFormatException"
        parameters:
        - name: "s"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "illegal character: A"
            valueType: "java.lang.String"
            uuid: "parseValue_string5"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: true
      valueType: "java.lang.NumberFormatException"
      uuid: "parseValue_numberFormatException1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
  - pathId: "path10"
    testPathName: "parseFiatWhenDecimalMarkIndexEqualsMinus1AndSatoshisToCharArrayIsNotEmptyAndCharacterNotIsDiThrowsNumberFormatException"
    constructorSignature: "<init>(boolean) : void"
    modelFingerprint: "B753A6B034A3495A8AFAC42FE35F3EB4"
    problemWasSolvedByProver: true
    truncated: true
    inputParameters: []
    uuid: "1a7bd3c6-3be1-3823-8bf8-218f964e26a7"
    deleted: true
    disabled: false
    ignoredBySystem: true
    prover: "DEFAULT"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues: []
  - pathId: "path3"
    testPathName: "parseFiatWhenDecimalsIndexOfDecimalMarkEqualsMinus1AndSatoshisToCharArrayIsNotEmptyAndCharacThrowsNumberFormatException"
    constructorSignature: "<init>(boolean) : void"
    modelFingerprint: "5F752701182467D5A1C5F4ADC6FFD4AB"
    problemWasSolvedByProver: false
    truncated: true
    inputParameters: []
    uuid: "21c70349-c0c4-3761-b51a-a9be36944d91"
    deleted: true
    disabled: false
    ignoredBySystem: true
    failureReason:
      reason: "PROVER_COULD_NOT_SOLVE_THE_PROBLEM"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues: []
  - pathId: "path6"
    testPathName: "parseFiatWhenFirstNotEqualsNegativeSign"
    constructorSignature: "<init>(boolean) : void"
    modelFingerprint: "6FFCE380D4F27B1B1A035CA3EC211987"
    problemWasSolvedByProver: false
    truncated: true
    inputParameters: []
    uuid: "135130f6-bb98-36b1-937c-04a1ca8d6e90"
    deleted: true
    disabled: false
    ignoredBySystem: true
    failureReason:
      reason: "PROVER_COULD_NOT_SOLVE_THE_PROBLEM"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues: []
  - pathId: "path8"
    testPathName: "parseFiatWhenSatoshisToCharArrayIsNotEmptyAndCharacterNotIsDigitC2ThrowsNumberFormatException"
    constructorSignature: "<init>(boolean) : void"
    modelFingerprint: "61AD6FFCF448B790697ADFF925DA41F2"
    problemWasSolvedByProver: false
    truncated: true
    inputParameters: []
    uuid: "69a186e1-6453-3fdb-9acd-14bb01893267"
    deleted: true
    disabled: false
    ignoredBySystem: true
    failureReason:
      reason: "PROVER_COULD_NOT_SOLVE_THE_PROBLEM"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues: []
  - pathId: "path11"
    testPathName: "parseFiatWhenCharacterIsDigitCAndFirstNotEqualsNegativeSign"
    constructorSignature: "<init>(boolean) : void"
    modelFingerprint: "9FD5A7F75086C382919D9C5332248BA8"
    problemWasSolvedByProver: false
    truncated: true
    inputParameters: []
    uuid: "b9f53438-f4ce-37f3-a93a-965a7b5494ce"
    deleted: true
    disabled: false
    ignoredBySystem: true
    failureReason:
      reason: "PROVER_COULD_NOT_SOLVE_THE_PROBLEM"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues: []
  - pathId: "path4"
    testPathName: "parseFiatWhenFirstEqualsNegativeSign"
    constructorSignature: "<init>(boolean) : void"
    modelFingerprint: "F4B4AACAF08519B08BBB7D60535F4476"
    problemWasSolvedByProver: false
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "1812E57E39789A36E2C25DE1B2306BEA"
      index: 1
      valueUuid: "target"
    - type: "INPUT"
      name: "currencyCode"
      modelFingerprint: "C81BE410A0DEDCFD5F73783107214F8B"
      index: 2
      valueUuid: "parseFiat_string1"
    - type: "INPUT"
      name: "str"
      modelFingerprint: "8B29BF11053EA8ECE2269DD21D27063D"
      index: 3
      valueUuid: "parseFiat_string2"
    - type: "STATIC"
      name: "Preconditions"
      modelFingerprint: "1069224700F44090276BB375F2F3A455"
      index: 4
      valueUuid: "uuid218"
      methodExercised:
        target: "org.bitcoinj.base.internal.Preconditions"
        name: "checkState"
        parameters:
        - name: "expression"
          valueUuid: "uuid216"
        - name: "messageSupplier"
          valueUuid: "uuid217"
        signature: "checkState(boolean,Supplier): void"
        returnValueUuid: "parseValue_void1"
        access: 9
    - type: "STATIC"
      name: "Fiat"
      modelFingerprint: "8DA926F72BB2355C3054721CB5D48F62"
      index: 5
      valueUuid: "uuid219"
      methodExercised:
        target: "org.bitcoinj.base.utils.Fiat"
        name: "valueOf"
        parameters:
        - name: "currencyCode"
          valueUuid: "parseFiat_string1"
        - name: "value"
          valueUuid: "parseValue_long2"
        signature: "valueOf(String,long): Fiat"
        returnValueUuid: "parseFiat_fiat1"
        access: 9
    - type: "RESULT"
      name: "result"
      modelFingerprint: "D1BD64D689FD46C0D0A45873738164B8"
      index: 6
      valueUuid: "parseFiat_fiat1"
    uuid: "7006155f-dd51-396d-9384-65af1d2daa15"
    deleted: false
    disabled: true
    ignoredBySystem: false
    failureReason:
      reason: "PROVER_COULD_NOT_SOLVE_THE_PROBLEM"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: true
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.bitcoinj.base.utils.MonetaryFormat"
        parameters:
        - name: "useSymbol"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: false
            valueType: "boolean"
            uuid: "<init>_boolean1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      valueType: "org.bitcoinj.base.utils.MonetaryFormat"
      uuid: "target"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "currencyCode1"
      valueType: "java.lang.String"
      uuid: "parseFiat_string1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "str1"
      valueType: "java.lang.String"
      uuid: "parseFiat_string2"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "REAL"
      valueType: "org.bitcoinj.base.internal.Preconditions"
      uuid: "uuid218"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      valueType: "void"
      uuid: "parseValue_void1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "uuid216"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "PRIVATE_INNER_CLASS_OR_LAMBDA"
      valueType: "java.util.function.Supplier"
      genericValueType: "java.lang.String"
      uuid: "uuid217"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.bitcoinj.base.utils.Fiat"
      uuid: "uuid219"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.bitcoinj.base.utils.Fiat"
      uuid: "parseFiat_fiat1"
      fixed: false
      equalsMethodPresent: true
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "currencyCode1"
      valueType: "java.lang.String"
      uuid: "parseFiat_string1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: 0
      valueType: "long"
      uuid: "parseValue_long2"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.bitcoinj.base.utils.Fiat"
      uuid: "parseFiat_fiat1"
      fixed: false
      equalsMethodPresent: true
      explicitCastNeeded: false
  - pathId: "path9"
    testPathName: "parseFiatWhenCharacterIsDigitCAndFirstEqualsNegativeSign"
    constructorSignature: "<init>(boolean) : void"
    modelFingerprint: "A800082F3180D6B1C010B281FE27ADB7"
    problemWasSolvedByProver: false
    truncated: true
    inputParameters: []
    uuid: "3780692e-60b4-3db0-9012-e6e57455f65c"
    deleted: true
    disabled: false
    ignoredBySystem: true
    failureReason:
      reason: "PROVER_COULD_NOT_SOLVE_THE_PROBLEM"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues: []
- method:
    name: "code"
    signature: "code() : java.lang.String"
    sourceCodeSignature: "String code()"
    instructionFingerprint: "A820FCD8A967D54DDF1564B94F1414C7"
  paths:
  - pathId: "path1"
    testPathName: "code1WhenShiftIndexOfCodesIsNotNull"
    constructorSignature: "<init>(boolean) : void"
    modelFingerprint: "2DA3787A8F9BB7029250C3DAE5ECA2F2"
    problemWasSolvedByProver: true
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "158F306D9B26D5466D8938D2940F98BC"
      index: 1
      valueUuid: "target"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "39CEED83B7D8E12491DFC364693D2670"
      index: 2
      valueUuid: "uuid224"
    uuid: "2cd301d0-2498-3878-97bf-070e1fdb8e53"
    deleted: false
    disabled: false
    ignoredBySystem: false
    prover: "DEFAULT"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.bitcoinj.base.utils.MonetaryFormat"
        parameters:
        - name: "useSymbol"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: true
            valueType: "boolean"
            uuid: "<init>_boolean1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      valueType: "org.bitcoinj.base.utils.MonetaryFormat"
      uuid: "target"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "\\u20BF"
      valueType: "java.lang.String"
      uuid: "uuid224"
      fixed: false
      equalsMethodPresent: true
      explicitCastNeeded: false
- method:
    name: "equals"
    signature: "equals(java.lang.Object) : boolean"
    sourceCodeSignature: "boolean equals(final Object o)"
    instructionFingerprint: "BFC9C48B185DC50BACD36F8B0EDE136F"
  paths:
  - pathId: "path1"
    testPathName: "equalsWhenOEqualsThis"
    constructorSignature: "<init>(boolean) : void"
    modelFingerprint: "F11B89A5F8C0A4B1B591EB46C9AA99BD"
    problemWasSolvedByProver: true
    truncated: true
    inputParameters: []
    uuid: "d65113e0-6787-3a54-9186-95c0d0aa361d"
    deleted: false
    disabled: false
    ignoredBySystem: false
    prover: "DEFAULT"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues: []
  - pathId: "path4"
    testPathName: "equalsWhenOIsNull"
    constructorSignature: "<init>(boolean) : void"
    modelFingerprint: "053B1FBD424665CA827292E8B348BF22"
    problemWasSolvedByProver: true
    truncated: true
    inputParameters: []
    uuid: "a2108c4d-bcbc-39b5-8254-0588b654f131"
    deleted: true
    disabled: false
    ignoredBySystem: true
    prover: "DEFAULT"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues: []
  - pathId: "path2"
    testPathName: "equalsWhenOGetClassNotEqualsGetClass"
    constructorSignature: "<init>(boolean) : void"
    modelFingerprint: "B5FF79333933ABCBB7310BA50C17C89B"
    problemWasSolvedByProver: true
    truncated: true
    inputParameters: []
    uuid: "8a01d7c3-3f4e-3e6a-a2a9-a725cd52717a"
    deleted: false
    disabled: false
    ignoredBySystem: false
    prover: "DEFAULT"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues: []
  - pathId: "path3"
    testPathName: "equalsWhenObjectsNotEqualsThisNegativeSignOtherNegativeSign"
    constructorSignature: "<init>(boolean) : void"
    modelFingerprint: "F7AFC6B43B7A72E5DFAF1627FFC98B0D"
    problemWasSolvedByProver: true
    truncated: true
    inputParameters: []
    uuid: "f1f26e02-c2ac-30e2-9dff-c0976d2a2766"
    deleted: false
    disabled: false
    ignoredBySystem: false
    prover: "DEFAULT"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues: []
