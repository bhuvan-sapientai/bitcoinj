---
modelFingerprint: "4A8E4278959769CE2CF03F1B4BCC4230"
methods:
- method:
    name: "negativeSign"
    returnType: "org.bitcoinj.base.utils.MonetaryFormat"
    signature: "negativeSign(char) : org.bitcoinj.base.utils.MonetaryFormat"
    instructionFingerprint: "F889DDFC36BA14526CC6472A87F9A818"
    parametersTypes:
    - "char"
  paths:
  - pathId: "path1"
    pathIdForUser: "path1"
    testPathName: "negativeSignWhenCharacterNotIsDigitNegativeSignThrowsIllegalArgumentException"
    nameDefinedByUser: false
    constructorSignature: "<init>(boolean) : void"
    priorityDefinedByUser: false
    filledByUser: false
    priority: "LOW"
    modelFingerprint: "2E08ABFB0054DBF9E6802A4B61C6BFAD"
    problemWasSolvedByProver: true
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "158F306D9B26D5466D8938D2940F98BC"
      index: 1
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "OBJECT"
        content: !<new>
          target: "org.bitcoinj.base.utils.MonetaryFormat"
          parameters:
          - name: "useSymbol"
            value:
              sapientType: "BASIC"
              content: !<regular>
                value: true
              suggestedContent: !<regular>
                value: true
              valueType: "boolean"
              uuid: "<init>_boolean1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: false
        suggestedContent: !<new>
          target: "org.bitcoinj.base.utils.MonetaryFormat"
          parameters:
          - name: "useSymbol"
            value:
              sapientType: "BASIC"
              suggestedContent: !<regular>
                value: true
              valueType: "boolean"
              uuid: "<init>_boolean1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: false
        valueType: "org.bitcoinj.base.utils.MonetaryFormat"
        uuid: "target"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    - type: "INPUT"
      name: "negativeSign"
      modelFingerprint: "B89141D5B493C93B97AB05510D9E1304"
      index: 2
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "BASIC"
        content: !<regular>
          value: "A"
        suggestedContent: !<regular>
          value: "A"
        valueType: "char"
        uuid: "negativeSign_char1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    - type: "STATIC"
      name: "Preconditions"
      modelFingerprint: "D2E579C66034555D6E24363DE5916136"
      index: 3
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        valueType: "org.bitcoinj.base.internal.Preconditions"
        uuid: "org.bitcoinj.base.internal.Preconditions"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "org.bitcoinj.base.internal.Preconditions"
        name: "checkArgument"
        parameters:
        - name: "expression"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: false
            valueType: "boolean"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "messageSupplier"
          value:
            sapientType: "PRIVATE_INNER_CLASS_OR_LAMBDA"
            valueType: "java.util.function.Supplier"
            genericValueType: "java.lang.String"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "checkArgument(boolean,Supplier): void"
        returnValue:
          sapientType: "EXCEPTION"
          content: !<new>
            target: "java.lang.IllegalArgumentException"
            parameters: []
            privateConstructor: false
            createdByTargetCode: false
          suggestedContent: !<new>
            target: "java.lang.IllegalArgumentException"
            parameters: []
            privateConstructor: false
            createdByTargetCode: false
          valueType: "java.lang.IllegalArgumentException"
          fixed: true
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 9
      staticReadMethodForField: false
      filledByUser: false
    - type: "RESULT"
      name: "result"
      modelFingerprint: "3E9C76AB51311DE97AE9C2294CD5E1D6"
      index: 4
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "EXCEPTION"
        content: !<new>
          target: "java.lang.IllegalArgumentException"
          parameters: []
          privateConstructor: false
          createdByTargetCode: false
        suggestedContent: !<new>
          target: "java.lang.IllegalArgumentException"
          parameters: []
          privateConstructor: false
          createdByTargetCode: false
        valueType: "java.lang.IllegalArgumentException"
        fixed: true
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    uuid: "444f0862-e09d-380c-aa36-5078b542a394"
    deleted: false
    disabled: false
    ignoredBySystem: false
    prover: "DEFAULT"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
  - pathId: "path2"
    pathIdForUser: "path2"
    testPathName: "negativeSignWhenCharacterIsDigitNegativeSignThrowsIllegalArgumentException"
    nameDefinedByUser: false
    constructorSignature: "<init>(boolean) : void"
    priorityDefinedByUser: false
    filledByUser: false
    priority: "LOW"
    modelFingerprint: "3D1BCA8E6297C2A26EF39E224568E64B"
    problemWasSolvedByProver: false
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "1812E57E39789A36E2C25DE1B2306BEA"
      index: 1
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "OBJECT"
        content: !<new>
          target: "org.bitcoinj.base.utils.MonetaryFormat"
          parameters:
          - name: "useSymbol"
            value:
              sapientType: "BASIC"
              content: !<regular>
                value: false
              valueType: "boolean"
              uuid: "<init>_boolean1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: false
        suggestedContent: !<new>
          target: "org.bitcoinj.base.utils.MonetaryFormat"
          parameters:
          - name: "useSymbol"
            value:
              sapientType: "BASIC"
              valueType: "boolean"
              uuid: "<init>_boolean1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: false
        valueType: "org.bitcoinj.base.utils.MonetaryFormat"
        uuid: "target"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    - type: "INPUT"
      name: "negativeSign"
      modelFingerprint: "2025AFA085D3B814D46DEFD8C806B63A"
      index: 2
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "BASIC"
        content: !<regular>
          value: "A"
        valueType: "char"
        uuid: "negativeSign_char1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    - type: "STATIC"
      name: "Preconditions"
      modelFingerprint: "D2E579C66034555D6E24363DE5916136"
      index: 3
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        valueType: "org.bitcoinj.base.internal.Preconditions"
        uuid: "org.bitcoinj.base.internal.Preconditions"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "org.bitcoinj.base.internal.Preconditions"
        name: "checkArgument"
        parameters:
        - name: "expression"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: false
            valueType: "boolean"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "messageSupplier"
          value:
            sapientType: "PRIVATE_INNER_CLASS_OR_LAMBDA"
            valueType: "java.util.function.Supplier"
            genericValueType: "java.lang.String"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "checkArgument(boolean,Supplier): void"
        returnValue:
          sapientType: "EXCEPTION"
          content: !<new>
            target: "java.lang.IllegalArgumentException"
            parameters: []
            privateConstructor: false
            createdByTargetCode: false
          suggestedContent: !<new>
            target: "java.lang.IllegalArgumentException"
            parameters: []
            privateConstructor: false
            createdByTargetCode: false
          valueType: "java.lang.IllegalArgumentException"
          fixed: true
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 9
      staticReadMethodForField: false
      filledByUser: false
    - type: "RESULT"
      name: "result"
      modelFingerprint: "3E9C76AB51311DE97AE9C2294CD5E1D6"
      index: 4
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "EXCEPTION"
        content: !<new>
          target: "java.lang.IllegalArgumentException"
          parameters: []
          privateConstructor: false
          createdByTargetCode: false
        suggestedContent: !<new>
          target: "java.lang.IllegalArgumentException"
          parameters: []
          privateConstructor: false
          createdByTargetCode: false
        valueType: "java.lang.IllegalArgumentException"
        fixed: true
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    uuid: "82510699-208f-3216-b79d-d23ba54f97db"
    deleted: false
    disabled: false
    ignoredBySystem: false
    failureReason:
      reason: "PROVER_COULD_NOT_SOLVE_THE_PROBLEM"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
- method:
    name: "positiveSign"
    returnType: "org.bitcoinj.base.utils.MonetaryFormat"
    signature: "positiveSign(char) : org.bitcoinj.base.utils.MonetaryFormat"
    instructionFingerprint: "39B89AEA936F4EB82F731532485DA2B0"
    parametersTypes:
    - "char"
  paths:
  - pathId: "path1"
    pathIdForUser: "path1"
    testPathName: "positiveSignWhenCharacterNotIsDigitPositiveSignThrowsIllegalArgumentException"
    nameDefinedByUser: false
    constructorSignature: "<init>(boolean) : void"
    priorityDefinedByUser: false
    filledByUser: false
    priority: "LOW"
    modelFingerprint: "275656A7639D7A2B208D619E49696C62"
    problemWasSolvedByProver: true
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "158F306D9B26D5466D8938D2940F98BC"
      index: 1
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "OBJECT"
        content: !<new>
          target: "org.bitcoinj.base.utils.MonetaryFormat"
          parameters:
          - name: "useSymbol"
            value:
              sapientType: "BASIC"
              content: !<regular>
                value: true
              suggestedContent: !<regular>
                value: true
              valueType: "boolean"
              uuid: "<init>_boolean1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: false
        suggestedContent: !<new>
          target: "org.bitcoinj.base.utils.MonetaryFormat"
          parameters:
          - name: "useSymbol"
            value:
              sapientType: "BASIC"
              suggestedContent: !<regular>
                value: true
              valueType: "boolean"
              uuid: "<init>_boolean1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: false
        valueType: "org.bitcoinj.base.utils.MonetaryFormat"
        uuid: "target"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    - type: "INPUT"
      name: "positiveSign"
      modelFingerprint: "1D93425C0F22DA4C0AA9F5CA2D447DE8"
      index: 2
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "BASIC"
        content: !<regular>
          value: "A"
        suggestedContent: !<regular>
          value: "A"
        valueType: "char"
        uuid: "positiveSign_char1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    - type: "STATIC"
      name: "Preconditions"
      modelFingerprint: "D2E579C66034555D6E24363DE5916136"
      index: 3
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        valueType: "org.bitcoinj.base.internal.Preconditions"
        uuid: "org.bitcoinj.base.internal.Preconditions"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "org.bitcoinj.base.internal.Preconditions"
        name: "checkArgument"
        parameters:
        - name: "expression"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: false
            valueType: "boolean"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "messageSupplier"
          value:
            sapientType: "PRIVATE_INNER_CLASS_OR_LAMBDA"
            valueType: "java.util.function.Supplier"
            genericValueType: "java.lang.String"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "checkArgument(boolean,Supplier): void"
        returnValue:
          sapientType: "EXCEPTION"
          content: !<new>
            target: "java.lang.IllegalArgumentException"
            parameters: []
            privateConstructor: false
            createdByTargetCode: false
          suggestedContent: !<new>
            target: "java.lang.IllegalArgumentException"
            parameters: []
            privateConstructor: false
            createdByTargetCode: false
          valueType: "java.lang.IllegalArgumentException"
          fixed: true
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 9
      staticReadMethodForField: false
      filledByUser: false
    - type: "RESULT"
      name: "result"
      modelFingerprint: "3E9C76AB51311DE97AE9C2294CD5E1D6"
      index: 4
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "EXCEPTION"
        content: !<new>
          target: "java.lang.IllegalArgumentException"
          parameters: []
          privateConstructor: false
          createdByTargetCode: false
        suggestedContent: !<new>
          target: "java.lang.IllegalArgumentException"
          parameters: []
          privateConstructor: false
          createdByTargetCode: false
        valueType: "java.lang.IllegalArgumentException"
        fixed: true
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    uuid: "0c421713-8e02-371f-b0f0-c4c68e495b27"
    deleted: false
    disabled: false
    ignoredBySystem: false
    prover: "DEFAULT"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
  - pathId: "path2"
    pathIdForUser: "path2"
    testPathName: "positiveSignWhenCharacterIsDigitPositiveSignThrowsIllegalArgumentException"
    nameDefinedByUser: false
    constructorSignature: "<init>(boolean) : void"
    priorityDefinedByUser: false
    filledByUser: false
    priority: "LOW"
    modelFingerprint: "4A4C093B81315F9A208A7FA7A9068E23"
    problemWasSolvedByProver: false
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "1812E57E39789A36E2C25DE1B2306BEA"
      index: 1
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "OBJECT"
        content: !<new>
          target: "org.bitcoinj.base.utils.MonetaryFormat"
          parameters:
          - name: "useSymbol"
            value:
              sapientType: "BASIC"
              content: !<regular>
                value: false
              valueType: "boolean"
              uuid: "<init>_boolean1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: false
        suggestedContent: !<new>
          target: "org.bitcoinj.base.utils.MonetaryFormat"
          parameters:
          - name: "useSymbol"
            value:
              sapientType: "BASIC"
              valueType: "boolean"
              uuid: "<init>_boolean1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: false
        valueType: "org.bitcoinj.base.utils.MonetaryFormat"
        uuid: "target"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    - type: "INPUT"
      name: "positiveSign"
      modelFingerprint: "971123B0BF2E687C6F27AF09DA7E0D56"
      index: 2
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "BASIC"
        content: !<regular>
          value: "A"
        valueType: "char"
        uuid: "positiveSign_char1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    - type: "STATIC"
      name: "Preconditions"
      modelFingerprint: "D2E579C66034555D6E24363DE5916136"
      index: 3
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        valueType: "org.bitcoinj.base.internal.Preconditions"
        uuid: "org.bitcoinj.base.internal.Preconditions"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "org.bitcoinj.base.internal.Preconditions"
        name: "checkArgument"
        parameters:
        - name: "expression"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: false
            valueType: "boolean"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "messageSupplier"
          value:
            sapientType: "PRIVATE_INNER_CLASS_OR_LAMBDA"
            valueType: "java.util.function.Supplier"
            genericValueType: "java.lang.String"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "checkArgument(boolean,Supplier): void"
        returnValue:
          sapientType: "EXCEPTION"
          content: !<new>
            target: "java.lang.IllegalArgumentException"
            parameters: []
            privateConstructor: false
            createdByTargetCode: false
          suggestedContent: !<new>
            target: "java.lang.IllegalArgumentException"
            parameters: []
            privateConstructor: false
            createdByTargetCode: false
          valueType: "java.lang.IllegalArgumentException"
          fixed: true
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 9
      staticReadMethodForField: false
      filledByUser: false
    - type: "RESULT"
      name: "result"
      modelFingerprint: "3E9C76AB51311DE97AE9C2294CD5E1D6"
      index: 4
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "EXCEPTION"
        content: !<new>
          target: "java.lang.IllegalArgumentException"
          parameters: []
          privateConstructor: false
          createdByTargetCode: false
        suggestedContent: !<new>
          target: "java.lang.IllegalArgumentException"
          parameters: []
          privateConstructor: false
          createdByTargetCode: false
        valueType: "java.lang.IllegalArgumentException"
        fixed: true
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    uuid: "be5d81f5-c486-3ee2-bf04-9380b406bc8a"
    deleted: false
    disabled: false
    ignoredBySystem: false
    failureReason:
      reason: "PROVER_COULD_NOT_SOLVE_THE_PROBLEM"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
- method:
    name: "digits"
    returnType: "org.bitcoinj.base.utils.MonetaryFormat"
    signature: "digits(char) : org.bitcoinj.base.utils.MonetaryFormat"
    instructionFingerprint: "D699C4C32FC199E444B8885E63F55EA7"
    parametersTypes:
    - "char"
  paths:
  - pathId: "path1"
    pathIdForUser: "path1"
    testPathName: "digitsWhenZeroDigitEqualsThisZeroDigit"
    nameDefinedByUser: false
    constructorSignature: "<init>(boolean) : void"
    priorityDefinedByUser: false
    filledByUser: false
    priority: "LOW"
    modelFingerprint: "4B0C776655C68124006864A48A8E8849"
    problemWasSolvedByProver: true
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "158F306D9B26D5466D8938D2940F98BC"
      index: 1
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "OBJECT"
        content: !<new>
          target: "org.bitcoinj.base.utils.MonetaryFormat"
          parameters:
          - name: "useSymbol"
            value:
              sapientType: "BASIC"
              content: !<regular>
                value: true
              suggestedContent: !<regular>
                value: true
              valueType: "boolean"
              uuid: "<init>_boolean1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: false
        suggestedContent: !<new>
          target: "org.bitcoinj.base.utils.MonetaryFormat"
          parameters:
          - name: "useSymbol"
            value:
              sapientType: "BASIC"
              suggestedContent: !<regular>
                value: true
              valueType: "boolean"
              uuid: "<init>_boolean1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: false
        valueType: "org.bitcoinj.base.utils.MonetaryFormat"
        uuid: "target"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    - type: "INPUT"
      name: "zeroDigit"
      modelFingerprint: "74005C486F89EC58E7D435340A57EA49"
      index: 2
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "BASIC"
        content: !<regular>
          value: "0"
        suggestedContent: !<regular>
          value: "0"
        valueType: "char"
        uuid: "digits_char1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    - type: "RESULT"
      name: "result"
      modelFingerprint: "97CE8C313DC9A6CB2C8395BDD8911D76"
      index: 3
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "THIS"
        content: !<new>
          target: "org.bitcoinj.base.utils.MonetaryFormat"
          parameters:
          - name: "useSymbol"
            value:
              sapientType: "BASIC"
              suggestedContent: !<regular>
                value: true
              valueType: "boolean"
              uuid: "<init>_boolean1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: false
        valueType: "org.bitcoinj.base.utils.MonetaryFormat"
        uuid: "targetClassObject"
        fixed: true
        equalsMethodPresent: true
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    uuid: "5446d07c-8d1d-3205-ae25-e98db4cf900f"
    deleted: false
    disabled: false
    ignoredBySystem: false
    prover: "DEFAULT"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
  - pathId: "path2"
    pathIdForUser: "path2"
    testPathName: "digitsWhenZeroDigitNotEqualsThisZeroDigit"
    nameDefinedByUser: false
    constructorSignature: "<init>(boolean) : void"
    priorityDefinedByUser: false
    filledByUser: false
    priority: "LOW"
    modelFingerprint: "DE6B5CE11901925F9B2B7A50781ED461"
    problemWasSolvedByProver: true
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "158F306D9B26D5466D8938D2940F98BC"
      index: 1
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "OBJECT"
        content: !<new>
          target: "org.bitcoinj.base.utils.MonetaryFormat"
          parameters:
          - name: "useSymbol"
            value:
              sapientType: "BASIC"
              content: !<regular>
                value: true
              suggestedContent: !<regular>
                value: true
              valueType: "boolean"
              uuid: "<init>_boolean1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: false
        suggestedContent: !<new>
          target: "org.bitcoinj.base.utils.MonetaryFormat"
          parameters:
          - name: "useSymbol"
            value:
              sapientType: "BASIC"
              suggestedContent: !<regular>
                value: true
              valueType: "boolean"
              uuid: "<init>_boolean1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: false
        valueType: "org.bitcoinj.base.utils.MonetaryFormat"
        uuid: "target"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    - type: "INPUT"
      name: "zeroDigit"
      modelFingerprint: "923430C53F922677016BB3C41F425B07"
      index: 2
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "BASIC"
        content: !<regular>
          value: "A"
        suggestedContent: !<regular>
          value: "A"
        valueType: "char"
        uuid: "digits_char1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    - type: "RESULT"
      name: "result"
      modelFingerprint: "44EA0590DF00F69852896BBE422A7819"
      index: 3
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "OBJECT"
        content: !<new>
          target: "org.bitcoinj.base.utils.MonetaryFormat"
          parameters:
          - name: "negativeSign"
            value:
              sapientType: "BASIC"
              content: !<regular>
                value: "-"
              valueType: "char"
              uuid: "<init>_int41"
              fixed: true
              equalsMethodPresent: false
              explicitCastNeeded: false
          - name: "positiveSign"
            value:
              sapientType: "BASIC"
              content: !<regular>
                value: "\0"
              valueType: "char"
              uuid: "<init>_int42"
              fixed: true
              equalsMethodPresent: false
              explicitCastNeeded: false
          - name: "zeroDigit"
            value:
              sapientType: "BASIC"
              content: !<regular>
                value: "A"
              suggestedContent: !<regular>
                value: "A"
              valueType: "char"
              uuid: "digits_char1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          - name: "decimalMark"
            value:
              sapientType: "BASIC"
              content: !<regular>
                value: "."
              valueType: "char"
              uuid: "<init>_int44"
              fixed: true
              equalsMethodPresent: false
              explicitCastNeeded: false
          - name: "minDecimals"
            value:
              sapientType: "BASIC"
              content: !<regular>
                value: 2
              valueType: "int"
              uuid: "<init>_int45"
              fixed: true
              equalsMethodPresent: false
              explicitCastNeeded: false
          - name: "decimalGroups"
            value:
              sapientType: "NULL"
              valueType: "java.util.List"
              genericValueType: "java.lang.Integer"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          - name: "shift"
            value:
              sapientType: "BASIC"
              content: !<regular>
                value: 0
              valueType: "int"
              uuid: "<init>_int46"
              fixed: true
              equalsMethodPresent: false
              explicitCastNeeded: false
          - name: "roundingMode"
            value:
              sapientType: "ENUM"
              content: !<regular>
                value: "HALF_UP"
              valueType: "java.math.RoundingMode"
              uuid: "Enum-java.math.RoundingMode-HALF_UP"
              fixed: true
              equalsMethodPresent: false
              explicitCastNeeded: false
          - name: "codes"
            value:
              sapientType: "ARRAY"
              content: !<array>
                values:
                  0:
                    sapientType: "BASIC"
                    content: !<regular>
                      value: "\\u20BF"
                    valueType: "java.lang.String"
                    fixed: true
                    equalsMethodPresent: false
                    explicitCastNeeded: false
                  1:
                    sapientType: "NULL"
                    valueType: "java.lang.String"
                    fixed: false
                    equalsMethodPresent: false
                    explicitCastNeeded: false
                  2:
                    sapientType: "NULL"
                    valueType: "java.lang.String"
                    fixed: false
                    equalsMethodPresent: false
                    explicitCastNeeded: false
                  3:
                    sapientType: "BASIC"
                    content: !<regular>
                      value: "m\\u20BF"
                    valueType: "java.lang.String"
                    fixed: true
                    equalsMethodPresent: false
                    explicitCastNeeded: false
                  4:
                    sapientType: "NULL"
                    valueType: "java.lang.String"
                    fixed: false
                    equalsMethodPresent: false
                    explicitCastNeeded: false
                  5:
                    sapientType: "NULL"
                    valueType: "java.lang.String"
                    fixed: false
                    equalsMethodPresent: false
                    explicitCastNeeded: false
                  6:
                    sapientType: "BASIC"
                    content: !<regular>
                      value: "\\u00B5\\u20BF"
                    valueType: "java.lang.String"
                    fixed: true
                    equalsMethodPresent: false
                    explicitCastNeeded: false
                  7:
                    sapientType: "NULL"
                    valueType: "java.lang.String"
                    fixed: false
                    equalsMethodPresent: false
                    explicitCastNeeded: false
                  8:
                    sapientType: "BASIC"
                    content: !<regular>
                      value: "\\u0219"
                    valueType: "java.lang.String"
                    fixed: true
                    equalsMethodPresent: false
                    explicitCastNeeded: false
              suggestedContent: !<array>
                values:
                  0:
                    sapientType: "BASIC"
                    content: !<regular>
                      value: "\\u20BF"
                    valueType: "java.lang.String"
                    fixed: true
                    equalsMethodPresent: false
                    explicitCastNeeded: false
                  1:
                    sapientType: "NULL"
                    valueType: "java.lang.String"
                    fixed: false
                    equalsMethodPresent: false
                    explicitCastNeeded: false
                  2:
                    sapientType: "NULL"
                    valueType: "java.lang.String"
                    fixed: false
                    equalsMethodPresent: false
                    explicitCastNeeded: false
                  3:
                    sapientType: "BASIC"
                    content: !<regular>
                      value: "m\\u20BF"
                    valueType: "java.lang.String"
                    fixed: true
                    equalsMethodPresent: false
                    explicitCastNeeded: false
                  4:
                    sapientType: "NULL"
                    valueType: "java.lang.String"
                    fixed: false
                    equalsMethodPresent: false
                    explicitCastNeeded: false
                  5:
                    sapientType: "NULL"
                    valueType: "java.lang.String"
                    fixed: false
                    equalsMethodPresent: false
                    explicitCastNeeded: false
                  6:
                    sapientType: "BASIC"
                    content: !<regular>
                      value: "\\u00B5\\u20BF"
                    valueType: "java.lang.String"
                    fixed: true
                    equalsMethodPresent: false
                    explicitCastNeeded: false
                  7:
                    sapientType: "NULL"
                    valueType: "java.lang.String"
                    fixed: false
                    equalsMethodPresent: false
                    explicitCastNeeded: false
                  8:
                    sapientType: "BASIC"
                    content: !<regular>
                      value: "\\u0219"
                    valueType: "java.lang.String"
                    fixed: true
                    equalsMethodPresent: false
                    explicitCastNeeded: false
              valueType: "java.lang.String[]"
              uuid: "<init>_string[]6"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          - name: "codeSeparator"
            value:
              sapientType: "BASIC"
              content: !<regular>
                value: " "
              valueType: "char"
              uuid: "<init>_int47"
              fixed: true
              equalsMethodPresent: false
              explicitCastNeeded: false
          - name: "codePrefixed"
            value:
              sapientType: "BASIC"
              content: !<regular>
                value: true
              valueType: "boolean"
              uuid: "<init>_int48"
              fixed: true
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: true
          createdByTargetCode: true
        suggestedContent: !<new>
          target: "org.bitcoinj.base.utils.MonetaryFormat"
          parameters:
          - name: "negativeSign"
            value:
              sapientType: "BASIC"
              content: !<regular>
                value: "-"
              valueType: "char"
              uuid: "<init>_int41"
              fixed: true
              equalsMethodPresent: false
              explicitCastNeeded: false
          - name: "positiveSign"
            value:
              sapientType: "BASIC"
              content: !<regular>
                value: "\0"
              valueType: "char"
              uuid: "<init>_int42"
              fixed: true
              equalsMethodPresent: false
              explicitCastNeeded: false
          - name: "zeroDigit"
            value:
              sapientType: "BASIC"
              suggestedContent: !<regular>
                value: "A"
              valueType: "char"
              uuid: "digits_char1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          - name: "decimalMark"
            value:
              sapientType: "BASIC"
              content: !<regular>
                value: "."
              valueType: "char"
              uuid: "<init>_int44"
              fixed: true
              equalsMethodPresent: false
              explicitCastNeeded: false
          - name: "minDecimals"
            value:
              sapientType: "BASIC"
              content: !<regular>
                value: 2
              valueType: "int"
              uuid: "<init>_int45"
              fixed: true
              equalsMethodPresent: false
              explicitCastNeeded: false
          - name: "decimalGroups"
            value:
              sapientType: "NULL"
              valueType: "java.util.List"
              genericValueType: "java.lang.Integer"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          - name: "shift"
            value:
              sapientType: "BASIC"
              content: !<regular>
                value: 0
              valueType: "int"
              uuid: "<init>_int46"
              fixed: true
              equalsMethodPresent: false
              explicitCastNeeded: false
          - name: "roundingMode"
            value:
              sapientType: "ENUM"
              content: !<regular>
                value: "HALF_UP"
              valueType: "java.math.RoundingMode"
              uuid: "Enum-java.math.RoundingMode-HALF_UP"
              fixed: true
              equalsMethodPresent: false
              explicitCastNeeded: false
          - name: "codes"
            value:
              sapientType: "ARRAY"
              suggestedContent: !<array>
                values:
                  0:
                    sapientType: "BASIC"
                    content: !<regular>
                      value: "\\u20BF"
                    valueType: "java.lang.String"
                    fixed: true
                    equalsMethodPresent: false
                    explicitCastNeeded: false
                  1:
                    sapientType: "NULL"
                    valueType: "java.lang.String"
                    fixed: false
                    equalsMethodPresent: false
                    explicitCastNeeded: false
                  2:
                    sapientType: "NULL"
                    valueType: "java.lang.String"
                    fixed: false
                    equalsMethodPresent: false
                    explicitCastNeeded: false
                  3:
                    sapientType: "BASIC"
                    content: !<regular>
                      value: "m\\u20BF"
                    valueType: "java.lang.String"
                    fixed: true
                    equalsMethodPresent: false
                    explicitCastNeeded: false
                  4:
                    sapientType: "NULL"
                    valueType: "java.lang.String"
                    fixed: false
                    equalsMethodPresent: false
                    explicitCastNeeded: false
                  5:
                    sapientType: "NULL"
                    valueType: "java.lang.String"
                    fixed: false
                    equalsMethodPresent: false
                    explicitCastNeeded: false
                  6:
                    sapientType: "BASIC"
                    content: !<regular>
                      value: "\\u00B5\\u20BF"
                    valueType: "java.lang.String"
                    fixed: true
                    equalsMethodPresent: false
                    explicitCastNeeded: false
                  7:
                    sapientType: "NULL"
                    valueType: "java.lang.String"
                    fixed: false
                    equalsMethodPresent: false
                    explicitCastNeeded: false
                  8:
                    sapientType: "BASIC"
                    content: !<regular>
                      value: "\\u0219"
                    valueType: "java.lang.String"
                    fixed: true
                    equalsMethodPresent: false
                    explicitCastNeeded: false
              valueType: "java.lang.String[]"
              uuid: "<init>_string[]6"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          - name: "codeSeparator"
            value:
              sapientType: "BASIC"
              content: !<regular>
                value: " "
              valueType: "char"
              uuid: "<init>_int47"
              fixed: true
              equalsMethodPresent: false
              explicitCastNeeded: false
          - name: "codePrefixed"
            value:
              sapientType: "BASIC"
              content: !<regular>
                value: true
              valueType: "boolean"
              uuid: "<init>_int48"
              fixed: true
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: true
          createdByTargetCode: true
        valueType: "org.bitcoinj.base.utils.MonetaryFormat"
        uuid: "digits_monetaryFormat1"
        fixed: true
        equalsMethodPresent: true
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    uuid: "143eb855-4f63-30eb-9a6f-7142c5e1abb2"
    deleted: false
    disabled: false
    ignoredBySystem: false
    prover: "DEFAULT"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
- method:
    name: "decimalMark"
    returnType: "org.bitcoinj.base.utils.MonetaryFormat"
    signature: "decimalMark(char) : org.bitcoinj.base.utils.MonetaryFormat"
    instructionFingerprint: "99D64F5BDEBF983C7CB2021D92E2B0C0"
    parametersTypes:
    - "char"
  paths:
  - pathId: "path1"
    pathIdForUser: "path1"
    testPathName: "decimalMarkWhenCharacterNotIsDigitDecimalMarkThrowsIllegalArgumentException"
    nameDefinedByUser: false
    constructorSignature: "<init>(boolean) : void"
    priorityDefinedByUser: false
    filledByUser: false
    priority: "LOW"
    modelFingerprint: "06DB62A0E8339746E724D5F0E39320DA"
    problemWasSolvedByProver: true
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "158F306D9B26D5466D8938D2940F98BC"
      index: 1
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "OBJECT"
        content: !<new>
          target: "org.bitcoinj.base.utils.MonetaryFormat"
          parameters:
          - name: "useSymbol"
            value:
              sapientType: "BASIC"
              content: !<regular>
                value: true
              suggestedContent: !<regular>
                value: true
              valueType: "boolean"
              uuid: "<init>_boolean1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: false
        suggestedContent: !<new>
          target: "org.bitcoinj.base.utils.MonetaryFormat"
          parameters:
          - name: "useSymbol"
            value:
              sapientType: "BASIC"
              suggestedContent: !<regular>
                value: true
              valueType: "boolean"
              uuid: "<init>_boolean1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: false
        valueType: "org.bitcoinj.base.utils.MonetaryFormat"
        uuid: "target"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    - type: "INPUT"
      name: "decimalMark"
      modelFingerprint: "826360B1F9DA415E3B6602E90E86BA2E"
      index: 2
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "BASIC"
        content: !<regular>
          value: "A"
        suggestedContent: !<regular>
          value: "A"
        valueType: "char"
        uuid: "decimalMark_char1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    - type: "STATIC"
      name: "Preconditions"
      modelFingerprint: "D2E579C66034555D6E24363DE5916136"
      index: 3
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        valueType: "org.bitcoinj.base.internal.Preconditions"
        uuid: "org.bitcoinj.base.internal.Preconditions"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "org.bitcoinj.base.internal.Preconditions"
        name: "checkArgument"
        parameters:
        - name: "expression"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: false
            valueType: "boolean"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "messageSupplier"
          value:
            sapientType: "PRIVATE_INNER_CLASS_OR_LAMBDA"
            valueType: "java.util.function.Supplier"
            genericValueType: "java.lang.String"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "checkArgument(boolean,Supplier): void"
        returnValue:
          sapientType: "EXCEPTION"
          content: !<new>
            target: "java.lang.IllegalArgumentException"
            parameters: []
            privateConstructor: false
            createdByTargetCode: false
          suggestedContent: !<new>
            target: "java.lang.IllegalArgumentException"
            parameters: []
            privateConstructor: false
            createdByTargetCode: false
          valueType: "java.lang.IllegalArgumentException"
          fixed: true
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 9
      staticReadMethodForField: false
      filledByUser: false
    - type: "RESULT"
      name: "result"
      modelFingerprint: "3E9C76AB51311DE97AE9C2294CD5E1D6"
      index: 4
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "EXCEPTION"
        content: !<new>
          target: "java.lang.IllegalArgumentException"
          parameters: []
          privateConstructor: false
          createdByTargetCode: false
        suggestedContent: !<new>
          target: "java.lang.IllegalArgumentException"
          parameters: []
          privateConstructor: false
          createdByTargetCode: false
        valueType: "java.lang.IllegalArgumentException"
        fixed: true
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    uuid: "b23fa074-9e12-36d6-a178-dcbba9818bd8"
    deleted: false
    disabled: false
    ignoredBySystem: false
    prover: "DEFAULT"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
  - pathId: "path2"
    pathIdForUser: "path2"
    testPathName: "decimalMarkWhenCharacterIsDigitDecimalMarkThrowsIllegalArgumentException"
    nameDefinedByUser: false
    constructorSignature: "<init>(boolean) : void"
    priorityDefinedByUser: false
    filledByUser: false
    priority: "LOW"
    modelFingerprint: "0B218572EC060CDB0B8446A67E88DBAA"
    problemWasSolvedByProver: false
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "1812E57E39789A36E2C25DE1B2306BEA"
      index: 1
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "OBJECT"
        content: !<new>
          target: "org.bitcoinj.base.utils.MonetaryFormat"
          parameters:
          - name: "useSymbol"
            value:
              sapientType: "BASIC"
              content: !<regular>
                value: false
              valueType: "boolean"
              uuid: "<init>_boolean1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: false
        suggestedContent: !<new>
          target: "org.bitcoinj.base.utils.MonetaryFormat"
          parameters:
          - name: "useSymbol"
            value:
              sapientType: "BASIC"
              valueType: "boolean"
              uuid: "<init>_boolean1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: false
        valueType: "org.bitcoinj.base.utils.MonetaryFormat"
        uuid: "target"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    - type: "INPUT"
      name: "decimalMark"
      modelFingerprint: "3381E4D9728C066B030665CFD237CD8A"
      index: 2
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "BASIC"
        content: !<regular>
          value: "A"
        valueType: "char"
        uuid: "decimalMark_char1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    - type: "STATIC"
      name: "Preconditions"
      modelFingerprint: "D2E579C66034555D6E24363DE5916136"
      index: 3
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        valueType: "org.bitcoinj.base.internal.Preconditions"
        uuid: "org.bitcoinj.base.internal.Preconditions"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "org.bitcoinj.base.internal.Preconditions"
        name: "checkArgument"
        parameters:
        - name: "expression"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: false
            valueType: "boolean"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "messageSupplier"
          value:
            sapientType: "PRIVATE_INNER_CLASS_OR_LAMBDA"
            valueType: "java.util.function.Supplier"
            genericValueType: "java.lang.String"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "checkArgument(boolean,Supplier): void"
        returnValue:
          sapientType: "EXCEPTION"
          content: !<new>
            target: "java.lang.IllegalArgumentException"
            parameters: []
            privateConstructor: false
            createdByTargetCode: false
          suggestedContent: !<new>
            target: "java.lang.IllegalArgumentException"
            parameters: []
            privateConstructor: false
            createdByTargetCode: false
          valueType: "java.lang.IllegalArgumentException"
          fixed: true
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 9
      staticReadMethodForField: false
      filledByUser: false
    - type: "RESULT"
      name: "result"
      modelFingerprint: "3E9C76AB51311DE97AE9C2294CD5E1D6"
      index: 4
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "EXCEPTION"
        content: !<new>
          target: "java.lang.IllegalArgumentException"
          parameters: []
          privateConstructor: false
          createdByTargetCode: false
        suggestedContent: !<new>
          target: "java.lang.IllegalArgumentException"
          parameters: []
          privateConstructor: false
          createdByTargetCode: false
        valueType: "java.lang.IllegalArgumentException"
        fixed: true
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    uuid: "5ddaf9a0-df81-3b76-9ead-5bf50894084c"
    deleted: false
    disabled: false
    ignoredBySystem: false
    failureReason:
      reason: "PROVER_COULD_NOT_SOLVE_THE_PROBLEM"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
- method:
    name: "minDecimals"
    returnType: "org.bitcoinj.base.utils.MonetaryFormat"
    signature: "minDecimals(int) : org.bitcoinj.base.utils.MonetaryFormat"
    instructionFingerprint: "0AD61A80B0829A7D58A6EA5FFE99C06A"
    parametersTypes:
    - "int"
  paths:
  - pathId: "path1"
    pathIdForUser: "path1"
    testPathName: "minDecimalsWhenMinDecimalsEqualsThisMinDecimals"
    nameDefinedByUser: false
    constructorSignature: "<init>(boolean) : void"
    priorityDefinedByUser: false
    filledByUser: false
    priority: "LOW"
    modelFingerprint: "EC3B355D644A1AF66A9F25A6C362DE8E"
    problemWasSolvedByProver: true
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "158F306D9B26D5466D8938D2940F98BC"
      index: 1
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "OBJECT"
        content: !<new>
          target: "org.bitcoinj.base.utils.MonetaryFormat"
          parameters:
          - name: "useSymbol"
            value:
              sapientType: "BASIC"
              content: !<regular>
                value: true
              suggestedContent: !<regular>
                value: true
              valueType: "boolean"
              uuid: "<init>_boolean1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: false
        suggestedContent: !<new>
          target: "org.bitcoinj.base.utils.MonetaryFormat"
          parameters:
          - name: "useSymbol"
            value:
              sapientType: "BASIC"
              suggestedContent: !<regular>
                value: true
              valueType: "boolean"
              uuid: "<init>_boolean1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: false
        valueType: "org.bitcoinj.base.utils.MonetaryFormat"
        uuid: "target"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    - type: "INPUT"
      name: "minDecimals"
      modelFingerprint: "0CB5AC3578BEAEC35438E171A8896E86"
      index: 2
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "BASIC"
        content: !<regular>
          value: 2
        suggestedContent: !<regular>
          value: 2
        valueType: "int"
        uuid: "minDecimals_int1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    - type: "RESULT"
      name: "result"
      modelFingerprint: "97CE8C313DC9A6CB2C8395BDD8911D76"
      index: 3
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "THIS"
        content: !<new>
          target: "org.bitcoinj.base.utils.MonetaryFormat"
          parameters:
          - name: "useSymbol"
            value:
              sapientType: "BASIC"
              suggestedContent: !<regular>
                value: true
              valueType: "boolean"
              uuid: "<init>_boolean1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: false
        valueType: "org.bitcoinj.base.utils.MonetaryFormat"
        uuid: "targetClassObject"
        fixed: true
        equalsMethodPresent: true
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    uuid: "3562bf3c-d3ea-3df3-8346-01c0a0a75fbe"
    deleted: false
    disabled: false
    ignoredBySystem: false
    prover: "DEFAULT"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
  - pathId: "path2"
    pathIdForUser: "path2"
    testPathName: "minDecimalsWhenMinDecimalsNotEqualsThisMinDecimals"
    nameDefinedByUser: false
    constructorSignature: "<init>(boolean) : void"
    priorityDefinedByUser: false
    filledByUser: false
    priority: "LOW"
    modelFingerprint: "92D30C0FD8587ADABC1413BC8C1071B8"
    problemWasSolvedByProver: true
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "158F306D9B26D5466D8938D2940F98BC"
      index: 1
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "OBJECT"
        content: !<new>
          target: "org.bitcoinj.base.utils.MonetaryFormat"
          parameters:
          - name: "useSymbol"
            value:
              sapientType: "BASIC"
              content: !<regular>
                value: true
              suggestedContent: !<regular>
                value: true
              valueType: "boolean"
              uuid: "<init>_boolean1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: false
        suggestedContent: !<new>
          target: "org.bitcoinj.base.utils.MonetaryFormat"
          parameters:
          - name: "useSymbol"
            value:
              sapientType: "BASIC"
              suggestedContent: !<regular>
                value: true
              valueType: "boolean"
              uuid: "<init>_boolean1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: false
        valueType: "org.bitcoinj.base.utils.MonetaryFormat"
        uuid: "target"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    - type: "INPUT"
      name: "minDecimals"
      modelFingerprint: "3C61F6C15B8CFDEC683AC6D9A5D3199E"
      index: 2
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "BASIC"
        content: !<regular>
          value: 1
        suggestedContent: !<regular>
          value: 1
        valueType: "int"
        uuid: "minDecimals_int1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    - type: "RESULT"
      name: "result"
      modelFingerprint: "DD3EA90352E06D56F4C8274050F68AFF"
      index: 3
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "OBJECT"
        content: !<new>
          target: "org.bitcoinj.base.utils.MonetaryFormat"
          parameters:
          - name: "negativeSign"
            value:
              sapientType: "BASIC"
              content: !<regular>
                value: "-"
              valueType: "char"
              uuid: "<init>_int41"
              fixed: true
              equalsMethodPresent: false
              explicitCastNeeded: false
          - name: "positiveSign"
            value:
              sapientType: "BASIC"
              content: !<regular>
                value: "\0"
              valueType: "char"
              uuid: "<init>_int42"
              fixed: true
              equalsMethodPresent: false
              explicitCastNeeded: false
          - name: "zeroDigit"
            value:
              sapientType: "BASIC"
              content: !<regular>
                value: "0"
              valueType: "char"
              uuid: "<init>_int43"
              fixed: true
              equalsMethodPresent: false
              explicitCastNeeded: false
          - name: "decimalMark"
            value:
              sapientType: "BASIC"
              content: !<regular>
                value: "."
              valueType: "char"
              uuid: "<init>_int44"
              fixed: true
              equalsMethodPresent: false
              explicitCastNeeded: false
          - name: "minDecimals"
            value:
              sapientType: "BASIC"
              content: !<regular>
                value: 1
              suggestedContent: !<regular>
                value: 1
              valueType: "int"
              uuid: "minDecimals_int1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          - name: "decimalGroups"
            value:
              sapientType: "NULL"
              valueType: "java.util.List"
              genericValueType: "java.lang.Integer"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          - name: "shift"
            value:
              sapientType: "BASIC"
              content: !<regular>
                value: 0
              valueType: "int"
              uuid: "<init>_int46"
              fixed: true
              equalsMethodPresent: false
              explicitCastNeeded: false
          - name: "roundingMode"
            value:
              sapientType: "ENUM"
              content: !<regular>
                value: "HALF_UP"
              valueType: "java.math.RoundingMode"
              uuid: "Enum-java.math.RoundingMode-HALF_UP"
              fixed: true
              equalsMethodPresent: false
              explicitCastNeeded: false
          - name: "codes"
            value:
              sapientType: "ARRAY"
              content: !<array>
                values:
                  0:
                    sapientType: "BASIC"
                    content: !<regular>
                      value: "\\u20BF"
                    valueType: "java.lang.String"
                    fixed: true
                    equalsMethodPresent: false
                    explicitCastNeeded: false
                  1:
                    sapientType: "NULL"
                    valueType: "java.lang.String"
                    fixed: false
                    equalsMethodPresent: false
                    explicitCastNeeded: false
                  2:
                    sapientType: "NULL"
                    valueType: "java.lang.String"
                    fixed: false
                    equalsMethodPresent: false
                    explicitCastNeeded: false
                  3:
                    sapientType: "BASIC"
                    content: !<regular>
                      value: "m\\u20BF"
                    valueType: "java.lang.String"
                    fixed: true
                    equalsMethodPresent: false
                    explicitCastNeeded: false
                  4:
                    sapientType: "NULL"
                    valueType: "java.lang.String"
                    fixed: false
                    equalsMethodPresent: false
                    explicitCastNeeded: false
                  5:
                    sapientType: "NULL"
                    valueType: "java.lang.String"
                    fixed: false
                    equalsMethodPresent: false
                    explicitCastNeeded: false
                  6:
                    sapientType: "BASIC"
                    content: !<regular>
                      value: "\\u00B5\\u20BF"
                    valueType: "java.lang.String"
                    fixed: true
                    equalsMethodPresent: false
                    explicitCastNeeded: false
                  7:
                    sapientType: "NULL"
                    valueType: "java.lang.String"
                    fixed: false
                    equalsMethodPresent: false
                    explicitCastNeeded: false
                  8:
                    sapientType: "BASIC"
                    content: !<regular>
                      value: "\\u0219"
                    valueType: "java.lang.String"
                    fixed: true
                    equalsMethodPresent: false
                    explicitCastNeeded: false
              suggestedContent: !<array>
                values:
                  0:
                    sapientType: "BASIC"
                    content: !<regular>
                      value: "\\u20BF"
                    valueType: "java.lang.String"
                    fixed: true
                    equalsMethodPresent: false
                    explicitCastNeeded: false
                  1:
                    sapientType: "NULL"
                    valueType: "java.lang.String"
                    fixed: false
                    equalsMethodPresent: false
                    explicitCastNeeded: false
                  2:
                    sapientType: "NULL"
                    valueType: "java.lang.String"
                    fixed: false
                    equalsMethodPresent: false
                    explicitCastNeeded: false
                  3:
                    sapientType: "BASIC"
                    content: !<regular>
                      value: "m\\u20BF"
                    valueType: "java.lang.String"
                    fixed: true
                    equalsMethodPresent: false
                    explicitCastNeeded: false
                  4:
                    sapientType: "NULL"
                    valueType: "java.lang.String"
                    fixed: false
                    equalsMethodPresent: false
                    explicitCastNeeded: false
                  5:
                    sapientType: "NULL"
                    valueType: "java.lang.String"
                    fixed: false
                    equalsMethodPresent: false
                    explicitCastNeeded: false
                  6:
                    sapientType: "BASIC"
                    content: !<regular>
                      value: "\\u00B5\\u20BF"
                    valueType: "java.lang.String"
                    fixed: true
                    equalsMethodPresent: false
                    explicitCastNeeded: false
                  7:
                    sapientType: "NULL"
                    valueType: "java.lang.String"
                    fixed: false
                    equalsMethodPresent: false
                    explicitCastNeeded: false
                  8:
                    sapientType: "BASIC"
                    content: !<regular>
                      value: "\\u0219"
                    valueType: "java.lang.String"
                    fixed: true
                    equalsMethodPresent: false
                    explicitCastNeeded: false
              valueType: "java.lang.String[]"
              uuid: "<init>_string[]6"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          - name: "codeSeparator"
            value:
              sapientType: "BASIC"
              content: !<regular>
                value: " "
              valueType: "char"
              uuid: "<init>_int47"
              fixed: true
              equalsMethodPresent: false
              explicitCastNeeded: false
          - name: "codePrefixed"
            value:
              sapientType: "BASIC"
              content: !<regular>
                value: true
              valueType: "boolean"
              uuid: "<init>_int48"
              fixed: true
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: true
          createdByTargetCode: true
        suggestedContent: !<new>
          target: "org.bitcoinj.base.utils.MonetaryFormat"
          parameters:
          - name: "negativeSign"
            value:
              sapientType: "BASIC"
              content: !<regular>
                value: "-"
              valueType: "char"
              uuid: "<init>_int41"
              fixed: true
              equalsMethodPresent: false
              explicitCastNeeded: false
          - name: "positiveSign"
            value:
              sapientType: "BASIC"
              content: !<regular>
                value: "\0"
              valueType: "char"
              uuid: "<init>_int42"
              fixed: true
              equalsMethodPresent: false
              explicitCastNeeded: false
          - name: "zeroDigit"
            value:
              sapientType: "BASIC"
              content: !<regular>
                value: "0"
              valueType: "char"
              uuid: "<init>_int43"
              fixed: true
              equalsMethodPresent: false
              explicitCastNeeded: false
          - name: "decimalMark"
            value:
              sapientType: "BASIC"
              content: !<regular>
                value: "."
              valueType: "char"
              uuid: "<init>_int44"
              fixed: true
              equalsMethodPresent: false
              explicitCastNeeded: false
          - name: "minDecimals"
            value:
              sapientType: "BASIC"
              suggestedContent: !<regular>
                value: 1
              valueType: "int"
              uuid: "minDecimals_int1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          - name: "decimalGroups"
            value:
              sapientType: "NULL"
              valueType: "java.util.List"
              genericValueType: "java.lang.Integer"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          - name: "shift"
            value:
              sapientType: "BASIC"
              content: !<regular>
                value: 0
              valueType: "int"
              uuid: "<init>_int46"
              fixed: true
              equalsMethodPresent: false
              explicitCastNeeded: false
          - name: "roundingMode"
            value:
              sapientType: "ENUM"
              content: !<regular>
                value: "HALF_UP"
              valueType: "java.math.RoundingMode"
              uuid: "Enum-java.math.RoundingMode-HALF_UP"
              fixed: true
              equalsMethodPresent: false
              explicitCastNeeded: false
          - name: "codes"
            value:
              sapientType: "ARRAY"
              suggestedContent: !<array>
                values:
                  0:
                    sapientType: "BASIC"
                    content: !<regular>
                      value: "\\u20BF"
                    valueType: "java.lang.String"
                    fixed: true
                    equalsMethodPresent: false
                    explicitCastNeeded: false
                  1:
                    sapientType: "NULL"
                    valueType: "java.lang.String"
                    fixed: false
                    equalsMethodPresent: false
                    explicitCastNeeded: false
                  2:
                    sapientType: "NULL"
                    valueType: "java.lang.String"
                    fixed: false
                    equalsMethodPresent: false
                    explicitCastNeeded: false
                  3:
                    sapientType: "BASIC"
                    content: !<regular>
                      value: "m\\u20BF"
                    valueType: "java.lang.String"
                    fixed: true
                    equalsMethodPresent: false
                    explicitCastNeeded: false
                  4:
                    sapientType: "NULL"
                    valueType: "java.lang.String"
                    fixed: false
                    equalsMethodPresent: false
                    explicitCastNeeded: false
                  5:
                    sapientType: "NULL"
                    valueType: "java.lang.String"
                    fixed: false
                    equalsMethodPresent: false
                    explicitCastNeeded: false
                  6:
                    sapientType: "BASIC"
                    content: !<regular>
                      value: "\\u00B5\\u20BF"
                    valueType: "java.lang.String"
                    fixed: true
                    equalsMethodPresent: false
                    explicitCastNeeded: false
                  7:
                    sapientType: "NULL"
                    valueType: "java.lang.String"
                    fixed: false
                    equalsMethodPresent: false
                    explicitCastNeeded: false
                  8:
                    sapientType: "BASIC"
                    content: !<regular>
                      value: "\\u0219"
                    valueType: "java.lang.String"
                    fixed: true
                    equalsMethodPresent: false
                    explicitCastNeeded: false
              valueType: "java.lang.String[]"
              uuid: "<init>_string[]6"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          - name: "codeSeparator"
            value:
              sapientType: "BASIC"
              content: !<regular>
                value: " "
              valueType: "char"
              uuid: "<init>_int47"
              fixed: true
              equalsMethodPresent: false
              explicitCastNeeded: false
          - name: "codePrefixed"
            value:
              sapientType: "BASIC"
              content: !<regular>
                value: true
              valueType: "boolean"
              uuid: "<init>_int48"
              fixed: true
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: true
          createdByTargetCode: true
        valueType: "org.bitcoinj.base.utils.MonetaryFormat"
        uuid: "minDecimals_monetaryFormat1"
        fixed: true
        equalsMethodPresent: true
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    uuid: "7f9025a4-fea9-3149-b580-7bc482325f51"
    deleted: false
    disabled: false
    ignoredBySystem: false
    prover: "DEFAULT"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
- method:
    name: "optionalDecimals"
    returnType: "org.bitcoinj.base.utils.MonetaryFormat"
    signature: "optionalDecimals(int[]) : org.bitcoinj.base.utils.MonetaryFormat"
    instructionFingerprint: "8C36ED8C08FBBBAC33A000AFF56FED75"
    parametersTypes:
    - "int[]"
  paths:
  - pathId: "path1"
    pathIdForUser: "path1"
    testPathName: "optionalDecimalsWhenGroupsIsNotEmpty"
    nameDefinedByUser: false
    constructorSignature: "<init>(boolean) : void"
    priorityDefinedByUser: false
    filledByUser: false
    priority: "LOW"
    modelFingerprint: "9B7BBFC13EF0F3C208446DB77BCBC496"
    problemWasSolvedByProver: true
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "E8AAA76518010EB4B9E2B05B3FF8C364"
      index: 1
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "OBJECT"
        content: !<new>
          target: "org.bitcoinj.base.utils.MonetaryFormat"
          parameters:
          - name: "useSymbol"
            value:
              sapientType: "BASIC"
              content: !<regular>
                value: true
              suggestedContent: !<regular>
                value: true
              valueType: "boolean"
              uuid: "<init>_boolean1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: false
        suggestedContent: !<new>
          target: "org.bitcoinj.base.utils.MonetaryFormat"
          parameters:
          - name: "useSymbol"
            value:
              sapientType: "BASIC"
              content: !<regular>
                value: true
              suggestedContent: !<regular>
                value: true
              valueType: "boolean"
              uuid: "<init>_boolean1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: false
        valueType: "org.bitcoinj.base.utils.MonetaryFormat"
        uuid: "target"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    - type: "INPUT"
      name: "groups"
      modelFingerprint: "6E8865D6BE45955F1D0C87113B169723"
      index: 2
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "ARRAY"
        content: !<array>
          values:
            0:
              sapientType: "BASIC"
              content: !<regular>
                value: 1
              suggestedContent: !<regular>
                value: 1
              valueType: "int"
              uuid: "optionalDecimals_int4"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
        suggestedContent: !<array>
          values:
            0:
              sapientType: "BASIC"
              content: !<regular>
                value: 1
              suggestedContent: !<regular>
                value: 1
              valueType: "int"
              uuid: "optionalDecimals_int4"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
        valueType: "int[]"
        uuid: "optionalDecimals_int[]1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    - type: "RESULT"
      name: "result"
      modelFingerprint: "A555747FB1DF0089625ADAF8A7F97841"
      index: 3
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "OBJECT"
        content: !<new>
          target: "org.bitcoinj.base.utils.MonetaryFormat"
          parameters:
          - name: "negativeSign"
            value:
              sapientType: "BASIC"
              content: !<regular>
                value: "-"
              valueType: "char"
              uuid: "<init>_int41"
              fixed: true
              equalsMethodPresent: false
              explicitCastNeeded: false
          - name: "positiveSign"
            value:
              sapientType: "BASIC"
              content: !<regular>
                value: "\0"
              valueType: "char"
              uuid: "<init>_int42"
              fixed: true
              equalsMethodPresent: false
              explicitCastNeeded: false
          - name: "zeroDigit"
            value:
              sapientType: "BASIC"
              content: !<regular>
                value: "0"
              valueType: "char"
              uuid: "<init>_int43"
              fixed: true
              equalsMethodPresent: false
              explicitCastNeeded: false
          - name: "decimalMark"
            value:
              sapientType: "BASIC"
              content: !<regular>
                value: "."
              valueType: "char"
              uuid: "<init>_int44"
              fixed: true
              equalsMethodPresent: false
              explicitCastNeeded: false
          - name: "minDecimals"
            value:
              sapientType: "BASIC"
              content: !<regular>
                value: 2
              valueType: "int"
              uuid: "<init>_int45"
              fixed: true
              equalsMethodPresent: false
              explicitCastNeeded: false
          - name: "decimalGroups"
            value:
              sapientType: "COLLECTION"
              content: !<collection>
                collectionClass: "java.util.ArrayList"
                parameters: []
                values:
                - sapientType: "BASIC"
                  content: !<regular>
                    value: 1
                  valueType: "java.lang.Integer"
                  uuid: "optionalDecimals_arrayList1-item0"
                  fixed: true
                  collectionUuid: "optionalDecimals_arrayList1"
                  equalsMethodPresent: false
                  explicitCastNeeded: false
              suggestedContent: !<collection>
                collectionClass: "java.util.ArrayList"
                parameters: []
                values:
                - sapientType: "BASIC"
                  content: !<regular>
                    value: 1
                  valueType: "java.lang.Integer"
                  uuid: "optionalDecimals_arrayList1-item0"
                  fixed: true
                  collectionUuid: "optionalDecimals_arrayList1"
                  equalsMethodPresent: false
                  explicitCastNeeded: false
              valueType: "java.util.List"
              genericValueType: "java.lang.Integer"
              uuid: "optionalDecimals_arrayList1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          - name: "shift"
            value:
              sapientType: "BASIC"
              content: !<regular>
                value: 0
              valueType: "int"
              uuid: "<init>_int46"
              fixed: true
              equalsMethodPresent: false
              explicitCastNeeded: false
          - name: "roundingMode"
            value:
              sapientType: "ENUM"
              content: !<regular>
                value: "HALF_UP"
              valueType: "java.math.RoundingMode"
              uuid: "Enum-java.math.RoundingMode-HALF_UP"
              fixed: true
              equalsMethodPresent: false
              explicitCastNeeded: false
          - name: "codes"
            value:
              sapientType: "ARRAY"
              content: !<array>
                values:
                  0:
                    sapientType: "BASIC"
                    content: !<regular>
                      value: "\\u20BF"
                    valueType: "java.lang.String"
                    fixed: true
                    equalsMethodPresent: false
                    explicitCastNeeded: false
                  1:
                    sapientType: "NULL"
                    valueType: "java.lang.String"
                    fixed: false
                    equalsMethodPresent: false
                    explicitCastNeeded: false
                  2:
                    sapientType: "NULL"
                    valueType: "java.lang.String"
                    fixed: false
                    equalsMethodPresent: false
                    explicitCastNeeded: false
                  3:
                    sapientType: "BASIC"
                    content: !<regular>
                      value: "m\\u20BF"
                    valueType: "java.lang.String"
                    fixed: true
                    equalsMethodPresent: false
                    explicitCastNeeded: false
                  4:
                    sapientType: "NULL"
                    valueType: "java.lang.String"
                    fixed: false
                    equalsMethodPresent: false
                    explicitCastNeeded: false
                  5:
                    sapientType: "NULL"
                    valueType: "java.lang.String"
                    fixed: false
                    equalsMethodPresent: false
                    explicitCastNeeded: false
                  6:
                    sapientType: "BASIC"
                    content: !<regular>
                      value: "\\u00B5\\u20BF"
                    valueType: "java.lang.String"
                    fixed: true
                    equalsMethodPresent: false
                    explicitCastNeeded: false
                  7:
                    sapientType: "NULL"
                    valueType: "java.lang.String"
                    fixed: false
                    equalsMethodPresent: false
                    explicitCastNeeded: false
                  8:
                    sapientType: "BASIC"
                    content: !<regular>
                      value: "\\u0219"
                    valueType: "java.lang.String"
                    fixed: true
                    equalsMethodPresent: false
                    explicitCastNeeded: false
              suggestedContent: !<array>
                values:
                  0:
                    sapientType: "BASIC"
                    content: !<regular>
                      value: "\\u20BF"
                    valueType: "java.lang.String"
                    fixed: true
                    equalsMethodPresent: false
                    explicitCastNeeded: false
                  1:
                    sapientType: "NULL"
                    valueType: "java.lang.String"
                    fixed: false
                    equalsMethodPresent: false
                    explicitCastNeeded: false
                  2:
                    sapientType: "NULL"
                    valueType: "java.lang.String"
                    fixed: false
                    equalsMethodPresent: false
                    explicitCastNeeded: false
                  3:
                    sapientType: "BASIC"
                    content: !<regular>
                      value: "m\\u20BF"
                    valueType: "java.lang.String"
                    fixed: true
                    equalsMethodPresent: false
                    explicitCastNeeded: false
                  4:
                    sapientType: "NULL"
                    valueType: "java.lang.String"
                    fixed: false
                    equalsMethodPresent: false
                    explicitCastNeeded: false
                  5:
                    sapientType: "NULL"
                    valueType: "java.lang.String"
                    fixed: false
                    equalsMethodPresent: false
                    explicitCastNeeded: false
                  6:
                    sapientType: "BASIC"
                    content: !<regular>
                      value: "\\u00B5\\u20BF"
                    valueType: "java.lang.String"
                    fixed: true
                    equalsMethodPresent: false
                    explicitCastNeeded: false
                  7:
                    sapientType: "NULL"
                    valueType: "java.lang.String"
                    fixed: false
                    equalsMethodPresent: false
                    explicitCastNeeded: false
                  8:
                    sapientType: "BASIC"
                    content: !<regular>
                      value: "\\u0219"
                    valueType: "java.lang.String"
                    fixed: true
                    equalsMethodPresent: false
                    explicitCastNeeded: false
              valueType: "java.lang.String[]"
              uuid: "<init>_string[]6"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          - name: "codeSeparator"
            value:
              sapientType: "BASIC"
              content: !<regular>
                value: " "
              valueType: "char"
              uuid: "<init>_int47"
              fixed: true
              equalsMethodPresent: false
              explicitCastNeeded: false
          - name: "codePrefixed"
            value:
              sapientType: "BASIC"
              content: !<regular>
                value: true
              valueType: "boolean"
              uuid: "<init>_int48"
              fixed: true
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: true
          createdByTargetCode: true
        suggestedContent: !<new>
          target: "org.bitcoinj.base.utils.MonetaryFormat"
          parameters:
          - name: "negativeSign"
            value:
              sapientType: "BASIC"
              content: !<regular>
                value: "-"
              valueType: "char"
              uuid: "<init>_int41"
              fixed: true
              equalsMethodPresent: false
              explicitCastNeeded: false
          - name: "positiveSign"
            value:
              sapientType: "BASIC"
              content: !<regular>
                value: "\0"
              valueType: "char"
              uuid: "<init>_int42"
              fixed: true
              equalsMethodPresent: false
              explicitCastNeeded: false
          - name: "zeroDigit"
            value:
              sapientType: "BASIC"
              content: !<regular>
                value: "0"
              valueType: "char"
              uuid: "<init>_int43"
              fixed: true
              equalsMethodPresent: false
              explicitCastNeeded: false
          - name: "decimalMark"
            value:
              sapientType: "BASIC"
              content: !<regular>
                value: "."
              valueType: "char"
              uuid: "<init>_int44"
              fixed: true
              equalsMethodPresent: false
              explicitCastNeeded: false
          - name: "minDecimals"
            value:
              sapientType: "BASIC"
              content: !<regular>
                value: 2
              valueType: "int"
              uuid: "<init>_int45"
              fixed: true
              equalsMethodPresent: false
              explicitCastNeeded: false
          - name: "decimalGroups"
            value:
              sapientType: "COLLECTION"
              suggestedContent: !<collection>
                collectionClass: "java.util.ArrayList"
                parameters: []
                values:
                - sapientType: "BASIC"
                  content: !<regular>
                    value: 1
                  valueType: "java.lang.Integer"
                  uuid: "optionalDecimals_arrayList1-item0"
                  fixed: true
                  collectionUuid: "optionalDecimals_arrayList1"
                  equalsMethodPresent: false
                  explicitCastNeeded: false
              valueType: "java.util.List"
              genericValueType: "java.lang.Integer"
              uuid: "optionalDecimals_arrayList1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          - name: "shift"
            value:
              sapientType: "BASIC"
              content: !<regular>
                value: 0
              valueType: "int"
              uuid: "<init>_int46"
              fixed: true
              equalsMethodPresent: false
              explicitCastNeeded: false
          - name: "roundingMode"
            value:
              sapientType: "ENUM"
              content: !<regular>
                value: "HALF_UP"
              valueType: "java.math.RoundingMode"
              uuid: "Enum-java.math.RoundingMode-HALF_UP"
              fixed: true
              equalsMethodPresent: false
              explicitCastNeeded: false
          - name: "codes"
            value:
              sapientType: "ARRAY"
              suggestedContent: !<array>
                values:
                  0:
                    sapientType: "BASIC"
                    content: !<regular>
                      value: "\\u20BF"
                    valueType: "java.lang.String"
                    fixed: true
                    equalsMethodPresent: false
                    explicitCastNeeded: false
                  1:
                    sapientType: "NULL"
                    valueType: "java.lang.String"
                    fixed: false
                    equalsMethodPresent: false
                    explicitCastNeeded: false
                  2:
                    sapientType: "NULL"
                    valueType: "java.lang.String"
                    fixed: false
                    equalsMethodPresent: false
                    explicitCastNeeded: false
                  3:
                    sapientType: "BASIC"
                    content: !<regular>
                      value: "m\\u20BF"
                    valueType: "java.lang.String"
                    fixed: true
                    equalsMethodPresent: false
                    explicitCastNeeded: false
                  4:
                    sapientType: "NULL"
                    valueType: "java.lang.String"
                    fixed: false
                    equalsMethodPresent: false
                    explicitCastNeeded: false
                  5:
                    sapientType: "NULL"
                    valueType: "java.lang.String"
                    fixed: false
                    equalsMethodPresent: false
                    explicitCastNeeded: false
                  6:
                    sapientType: "BASIC"
                    content: !<regular>
                      value: "\\u00B5\\u20BF"
                    valueType: "java.lang.String"
                    fixed: true
                    equalsMethodPresent: false
                    explicitCastNeeded: false
                  7:
                    sapientType: "NULL"
                    valueType: "java.lang.String"
                    fixed: false
                    equalsMethodPresent: false
                    explicitCastNeeded: false
                  8:
                    sapientType: "BASIC"
                    content: !<regular>
                      value: "\\u0219"
                    valueType: "java.lang.String"
                    fixed: true
                    equalsMethodPresent: false
                    explicitCastNeeded: false
              valueType: "java.lang.String[]"
              uuid: "<init>_string[]6"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          - name: "codeSeparator"
            value:
              sapientType: "BASIC"
              content: !<regular>
                value: " "
              valueType: "char"
              uuid: "<init>_int47"
              fixed: true
              equalsMethodPresent: false
              explicitCastNeeded: false
          - name: "codePrefixed"
            value:
              sapientType: "BASIC"
              content: !<regular>
                value: true
              valueType: "boolean"
              uuid: "<init>_int48"
              fixed: true
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: true
          createdByTargetCode: true
        valueType: "org.bitcoinj.base.utils.MonetaryFormat"
        uuid: "optionalDecimals_monetaryFormat1"
        fixed: true
        equalsMethodPresent: true
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    uuid: "92462d72-7597-386a-a33f-a83ee93c5b71"
    deleted: false
    disabled: false
    ignoredBySystem: false
    prover: "DEFAULT"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
  - pathId: "path2"
    pathIdForUser: "path2"
    testPathName: "optionalDecimalsWhenGroupsIsEmpty"
    nameDefinedByUser: false
    constructorSignature: "<init>(boolean) : void"
    priorityDefinedByUser: false
    filledByUser: false
    priority: "LOW"
    modelFingerprint: "9EB4496E847F9E522353873DA3B6266B"
    problemWasSolvedByProver: true
    truncated: true
    inputParameters: []
    uuid: "b9775fe9-572a-3340-9eae-df3431a7effe"
    deleted: true
    disabled: false
    ignoredBySystem: true
    prover: "DEFAULT"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
- method:
    name: "repeatOptionalDecimals"
    returnType: "org.bitcoinj.base.utils.MonetaryFormat"
    signature: "repeatOptionalDecimals(int,int) : org.bitcoinj.base.utils.MonetaryFormat"
    instructionFingerprint: "96E006F6ACDBCD55F7DFB3BAB6FA3B6C"
    parametersTypes:
    - "int"
    - "int"
  paths:
  - pathId: "path1"
    pathIdForUser: "path1"
    testPathName: "repeatOptionalDecimalsWhenRepetitionsGreaterThanOrEqualsTo0ThrowsIllegalArgumentException"
    nameDefinedByUser: false
    constructorSignature: "<init>(boolean) : void"
    priorityDefinedByUser: false
    filledByUser: false
    priority: "LOW"
    modelFingerprint: "F734179821DD880ACB2BEC4119617FBB"
    problemWasSolvedByProver: true
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "158F306D9B26D5466D8938D2940F98BC"
      index: 1
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "OBJECT"
        content: !<new>
          target: "org.bitcoinj.base.utils.MonetaryFormat"
          parameters:
          - name: "useSymbol"
            value:
              sapientType: "BASIC"
              content: !<regular>
                value: true
              suggestedContent: !<regular>
                value: true
              valueType: "boolean"
              uuid: "<init>_boolean1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: false
        suggestedContent: !<new>
          target: "org.bitcoinj.base.utils.MonetaryFormat"
          parameters:
          - name: "useSymbol"
            value:
              sapientType: "BASIC"
              suggestedContent: !<regular>
                value: true
              valueType: "boolean"
              uuid: "<init>_boolean1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: false
        valueType: "org.bitcoinj.base.utils.MonetaryFormat"
        uuid: "target"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    - type: "INPUT"
      name: "decimals"
      modelFingerprint: "AACBFE1757A9933690C57B7E527249E2"
      index: 2
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "BASIC"
        content: !<regular>
          value: 0
        valueType: "int"
        uuid: "repeatOptionalDecimals_int1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    - type: "INPUT"
      name: "repetitions"
      modelFingerprint: "C78D6E35C5E62B361D83172C9AD4394D"
      index: 3
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "BASIC"
        content: !<regular>
          value: 1
        suggestedContent: !<regular>
          value: 1
        valueType: "int"
        uuid: "repeatOptionalDecimals_int2"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    - type: "STATIC"
      name: "Preconditions"
      modelFingerprint: "D2E579C66034555D6E24363DE5916136"
      index: 4
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        valueType: "org.bitcoinj.base.internal.Preconditions"
        uuid: "org.bitcoinj.base.internal.Preconditions"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "org.bitcoinj.base.internal.Preconditions"
        name: "checkArgument"
        parameters:
        - name: "expression"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: false
            valueType: "boolean"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "messageSupplier"
          value:
            sapientType: "PRIVATE_INNER_CLASS_OR_LAMBDA"
            valueType: "java.util.function.Supplier"
            genericValueType: "java.lang.String"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "checkArgument(boolean,Supplier): void"
        returnValue:
          sapientType: "EXCEPTION"
          content: !<new>
            target: "java.lang.IllegalArgumentException"
            parameters: []
            privateConstructor: false
            createdByTargetCode: false
          suggestedContent: !<new>
            target: "java.lang.IllegalArgumentException"
            parameters: []
            privateConstructor: false
            createdByTargetCode: false
          valueType: "java.lang.IllegalArgumentException"
          fixed: true
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 9
      staticReadMethodForField: false
      filledByUser: false
    - type: "RESULT"
      name: "result"
      modelFingerprint: "3E9C76AB51311DE97AE9C2294CD5E1D6"
      index: 5
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "EXCEPTION"
        content: !<new>
          target: "java.lang.IllegalArgumentException"
          parameters: []
          privateConstructor: false
          createdByTargetCode: false
        suggestedContent: !<new>
          target: "java.lang.IllegalArgumentException"
          parameters: []
          privateConstructor: false
          createdByTargetCode: false
        valueType: "java.lang.IllegalArgumentException"
        fixed: true
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    uuid: "e2bf9808-8943-3038-8589-f4022e068bc3"
    deleted: false
    disabled: false
    ignoredBySystem: false
    prover: "DEFAULT"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
  - pathId: "path2"
    pathIdForUser: "path2"
    testPathName: "repeatOptionalDecimalsWhenRepetitionsLessThan0ThrowsIllegalArgumentException"
    nameDefinedByUser: false
    constructorSignature: "<init>(boolean) : void"
    priorityDefinedByUser: false
    filledByUser: false
    priority: "LOW"
    modelFingerprint: "56E1F829F8C935A556C4AB7990FF672A"
    problemWasSolvedByProver: true
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "158F306D9B26D5466D8938D2940F98BC"
      index: 1
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "OBJECT"
        content: !<new>
          target: "org.bitcoinj.base.utils.MonetaryFormat"
          parameters:
          - name: "useSymbol"
            value:
              sapientType: "BASIC"
              content: !<regular>
                value: true
              suggestedContent: !<regular>
                value: true
              valueType: "boolean"
              uuid: "<init>_boolean1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: false
        suggestedContent: !<new>
          target: "org.bitcoinj.base.utils.MonetaryFormat"
          parameters:
          - name: "useSymbol"
            value:
              sapientType: "BASIC"
              suggestedContent: !<regular>
                value: true
              valueType: "boolean"
              uuid: "<init>_boolean1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: false
        valueType: "org.bitcoinj.base.utils.MonetaryFormat"
        uuid: "target"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    - type: "INPUT"
      name: "decimals"
      modelFingerprint: "AACBFE1757A9933690C57B7E527249E2"
      index: 2
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "BASIC"
        content: !<regular>
          value: 0
        valueType: "int"
        uuid: "repeatOptionalDecimals_int1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    - type: "INPUT"
      name: "repetitions"
      modelFingerprint: "433620C92BD864E02FA41F181FC1AACE"
      index: 3
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "BASIC"
        content: !<regular>
          value: -1
        suggestedContent: !<regular>
          value: -1
        valueType: "int"
        uuid: "repeatOptionalDecimals_int2"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    - type: "STATIC"
      name: "Preconditions"
      modelFingerprint: "D2E579C66034555D6E24363DE5916136"
      index: 4
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        valueType: "org.bitcoinj.base.internal.Preconditions"
        uuid: "org.bitcoinj.base.internal.Preconditions"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "org.bitcoinj.base.internal.Preconditions"
        name: "checkArgument"
        parameters:
        - name: "expression"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: false
            valueType: "boolean"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "messageSupplier"
          value:
            sapientType: "PRIVATE_INNER_CLASS_OR_LAMBDA"
            valueType: "java.util.function.Supplier"
            genericValueType: "java.lang.String"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "checkArgument(boolean,Supplier): void"
        returnValue:
          sapientType: "EXCEPTION"
          content: !<new>
            target: "java.lang.IllegalArgumentException"
            parameters: []
            privateConstructor: false
            createdByTargetCode: false
          suggestedContent: !<new>
            target: "java.lang.IllegalArgumentException"
            parameters: []
            privateConstructor: false
            createdByTargetCode: false
          valueType: "java.lang.IllegalArgumentException"
          fixed: true
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 9
      staticReadMethodForField: false
      filledByUser: false
    - type: "RESULT"
      name: "result"
      modelFingerprint: "3E9C76AB51311DE97AE9C2294CD5E1D6"
      index: 5
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "EXCEPTION"
        content: !<new>
          target: "java.lang.IllegalArgumentException"
          parameters: []
          privateConstructor: false
          createdByTargetCode: false
        suggestedContent: !<new>
          target: "java.lang.IllegalArgumentException"
          parameters: []
          privateConstructor: false
          createdByTargetCode: false
        valueType: "java.lang.IllegalArgumentException"
        fixed: true
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    uuid: "d9eedd8b-a3a2-3070-952f-7ab6850262cf"
    deleted: false
    disabled: false
    ignoredBySystem: false
    prover: "DEFAULT"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
- method:
    name: "shift"
    returnType: "org.bitcoinj.base.utils.MonetaryFormat"
    signature: "shift(int) : org.bitcoinj.base.utils.MonetaryFormat"
    instructionFingerprint: "873B2E3BD7502DDB57053F2556C43943"
    parametersTypes:
    - "int"
  paths:
  - pathId: "path1"
    pathIdForUser: "path1"
    testPathName: "shiftWhenShiftEqualsThisShift"
    nameDefinedByUser: false
    constructorSignature: "<init>(boolean) : void"
    priorityDefinedByUser: false
    filledByUser: false
    priority: "LOW"
    modelFingerprint: "FA366FC851F217C0C2509DAFC16B9431"
    problemWasSolvedByProver: true
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "158F306D9B26D5466D8938D2940F98BC"
      index: 1
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "OBJECT"
        content: !<new>
          target: "org.bitcoinj.base.utils.MonetaryFormat"
          parameters:
          - name: "useSymbol"
            value:
              sapientType: "BASIC"
              content: !<regular>
                value: true
              suggestedContent: !<regular>
                value: true
              valueType: "boolean"
              uuid: "<init>_boolean1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: false
        suggestedContent: !<new>
          target: "org.bitcoinj.base.utils.MonetaryFormat"
          parameters:
          - name: "useSymbol"
            value:
              sapientType: "BASIC"
              suggestedContent: !<regular>
                value: true
              valueType: "boolean"
              uuid: "<init>_boolean1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: false
        valueType: "org.bitcoinj.base.utils.MonetaryFormat"
        uuid: "target"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    - type: "INPUT"
      name: "shift"
      modelFingerprint: "B28A840A3E46D61DE68F2BA069B2DFFE"
      index: 2
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "BASIC"
        content: !<regular>
          value: 0
        suggestedContent: !<regular>
          value: 0
        valueType: "int"
        uuid: "shift_int1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    - type: "RESULT"
      name: "result"
      modelFingerprint: "97CE8C313DC9A6CB2C8395BDD8911D76"
      index: 3
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "THIS"
        content: !<new>
          target: "org.bitcoinj.base.utils.MonetaryFormat"
          parameters:
          - name: "useSymbol"
            value:
              sapientType: "BASIC"
              suggestedContent: !<regular>
                value: true
              valueType: "boolean"
              uuid: "<init>_boolean1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: false
        valueType: "org.bitcoinj.base.utils.MonetaryFormat"
        uuid: "targetClassObject"
        fixed: true
        equalsMethodPresent: true
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    uuid: "43e4e20a-2db3-3ef4-9353-7c215f6376cb"
    deleted: false
    disabled: false
    ignoredBySystem: false
    prover: "DEFAULT"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
  - pathId: "path2"
    pathIdForUser: "path2"
    testPathName: "shiftWhenShiftNotEqualsThisShift"
    nameDefinedByUser: false
    constructorSignature: "<init>(boolean) : void"
    priorityDefinedByUser: false
    filledByUser: false
    priority: "LOW"
    modelFingerprint: "B4E488D843D44A8A5C1CEB599EBB41CF"
    problemWasSolvedByProver: true
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "158F306D9B26D5466D8938D2940F98BC"
      index: 1
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "OBJECT"
        content: !<new>
          target: "org.bitcoinj.base.utils.MonetaryFormat"
          parameters:
          - name: "useSymbol"
            value:
              sapientType: "BASIC"
              content: !<regular>
                value: true
              suggestedContent: !<regular>
                value: true
              valueType: "boolean"
              uuid: "<init>_boolean1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: false
        suggestedContent: !<new>
          target: "org.bitcoinj.base.utils.MonetaryFormat"
          parameters:
          - name: "useSymbol"
            value:
              sapientType: "BASIC"
              suggestedContent: !<regular>
                value: true
              valueType: "boolean"
              uuid: "<init>_boolean1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: false
        valueType: "org.bitcoinj.base.utils.MonetaryFormat"
        uuid: "target"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    - type: "INPUT"
      name: "shift"
      modelFingerprint: "7244E6FF83BAE71D68C395C4995A4DF2"
      index: 2
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "BASIC"
        content: !<regular>
          value: 1
        suggestedContent: !<regular>
          value: 1
        valueType: "int"
        uuid: "shift_int1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    - type: "RESULT"
      name: "result"
      modelFingerprint: "D9451ACB50B796A1C155916445692EDF"
      index: 3
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "OBJECT"
        content: !<new>
          target: "org.bitcoinj.base.utils.MonetaryFormat"
          parameters:
          - name: "negativeSign"
            value:
              sapientType: "BASIC"
              content: !<regular>
                value: "-"
              valueType: "char"
              uuid: "<init>_int41"
              fixed: true
              equalsMethodPresent: false
              explicitCastNeeded: false
          - name: "positiveSign"
            value:
              sapientType: "BASIC"
              content: !<regular>
                value: "\0"
              valueType: "char"
              uuid: "<init>_int42"
              fixed: true
              equalsMethodPresent: false
              explicitCastNeeded: false
          - name: "zeroDigit"
            value:
              sapientType: "BASIC"
              content: !<regular>
                value: "0"
              valueType: "char"
              uuid: "<init>_int43"
              fixed: true
              equalsMethodPresent: false
              explicitCastNeeded: false
          - name: "decimalMark"
            value:
              sapientType: "BASIC"
              content: !<regular>
                value: "."
              valueType: "char"
              uuid: "<init>_int44"
              fixed: true
              equalsMethodPresent: false
              explicitCastNeeded: false
          - name: "minDecimals"
            value:
              sapientType: "BASIC"
              content: !<regular>
                value: 2
              valueType: "int"
              uuid: "<init>_int45"
              fixed: true
              equalsMethodPresent: false
              explicitCastNeeded: false
          - name: "decimalGroups"
            value:
              sapientType: "NULL"
              valueType: "java.util.List"
              genericValueType: "java.lang.Integer"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          - name: "shift"
            value:
              sapientType: "BASIC"
              content: !<regular>
                value: 1
              suggestedContent: !<regular>
                value: 1
              valueType: "int"
              uuid: "shift_int1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          - name: "roundingMode"
            value:
              sapientType: "ENUM"
              content: !<regular>
                value: "HALF_UP"
              valueType: "java.math.RoundingMode"
              uuid: "Enum-java.math.RoundingMode-HALF_UP"
              fixed: true
              equalsMethodPresent: false
              explicitCastNeeded: false
          - name: "codes"
            value:
              sapientType: "ARRAY"
              content: !<array>
                values:
                  0:
                    sapientType: "BASIC"
                    content: !<regular>
                      value: "\\u20BF"
                    valueType: "java.lang.String"
                    fixed: true
                    equalsMethodPresent: false
                    explicitCastNeeded: false
                  1:
                    sapientType: "NULL"
                    valueType: "java.lang.String"
                    fixed: false
                    equalsMethodPresent: false
                    explicitCastNeeded: false
                  2:
                    sapientType: "NULL"
                    valueType: "java.lang.String"
                    fixed: false
                    equalsMethodPresent: false
                    explicitCastNeeded: false
                  3:
                    sapientType: "BASIC"
                    content: !<regular>
                      value: "m\\u20BF"
                    valueType: "java.lang.String"
                    fixed: true
                    equalsMethodPresent: false
                    explicitCastNeeded: false
                  4:
                    sapientType: "NULL"
                    valueType: "java.lang.String"
                    fixed: false
                    equalsMethodPresent: false
                    explicitCastNeeded: false
                  5:
                    sapientType: "NULL"
                    valueType: "java.lang.String"
                    fixed: false
                    equalsMethodPresent: false
                    explicitCastNeeded: false
                  6:
                    sapientType: "BASIC"
                    content: !<regular>
                      value: "\\u00B5\\u20BF"
                    valueType: "java.lang.String"
                    fixed: true
                    equalsMethodPresent: false
                    explicitCastNeeded: false
                  7:
                    sapientType: "NULL"
                    valueType: "java.lang.String"
                    fixed: false
                    equalsMethodPresent: false
                    explicitCastNeeded: false
                  8:
                    sapientType: "BASIC"
                    content: !<regular>
                      value: "\\u0219"
                    valueType: "java.lang.String"
                    fixed: true
                    equalsMethodPresent: false
                    explicitCastNeeded: false
              suggestedContent: !<array>
                values:
                  0:
                    sapientType: "BASIC"
                    content: !<regular>
                      value: "\\u20BF"
                    valueType: "java.lang.String"
                    fixed: true
                    equalsMethodPresent: false
                    explicitCastNeeded: false
                  1:
                    sapientType: "NULL"
                    valueType: "java.lang.String"
                    fixed: false
                    equalsMethodPresent: false
                    explicitCastNeeded: false
                  2:
                    sapientType: "NULL"
                    valueType: "java.lang.String"
                    fixed: false
                    equalsMethodPresent: false
                    explicitCastNeeded: false
                  3:
                    sapientType: "BASIC"
                    content: !<regular>
                      value: "m\\u20BF"
                    valueType: "java.lang.String"
                    fixed: true
                    equalsMethodPresent: false
                    explicitCastNeeded: false
                  4:
                    sapientType: "NULL"
                    valueType: "java.lang.String"
                    fixed: false
                    equalsMethodPresent: false
                    explicitCastNeeded: false
                  5:
                    sapientType: "NULL"
                    valueType: "java.lang.String"
                    fixed: false
                    equalsMethodPresent: false
                    explicitCastNeeded: false
                  6:
                    sapientType: "BASIC"
                    content: !<regular>
                      value: "\\u00B5\\u20BF"
                    valueType: "java.lang.String"
                    fixed: true
                    equalsMethodPresent: false
                    explicitCastNeeded: false
                  7:
                    sapientType: "NULL"
                    valueType: "java.lang.String"
                    fixed: false
                    equalsMethodPresent: false
                    explicitCastNeeded: false
                  8:
                    sapientType: "BASIC"
                    content: !<regular>
                      value: "\\u0219"
                    valueType: "java.lang.String"
                    fixed: true
                    equalsMethodPresent: false
                    explicitCastNeeded: false
              valueType: "java.lang.String[]"
              uuid: "<init>_string[]6"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          - name: "codeSeparator"
            value:
              sapientType: "BASIC"
              content: !<regular>
                value: " "
              valueType: "char"
              uuid: "<init>_int47"
              fixed: true
              equalsMethodPresent: false
              explicitCastNeeded: false
          - name: "codePrefixed"
            value:
              sapientType: "BASIC"
              content: !<regular>
                value: true
              valueType: "boolean"
              uuid: "<init>_int48"
              fixed: true
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: true
          createdByTargetCode: true
        suggestedContent: !<new>
          target: "org.bitcoinj.base.utils.MonetaryFormat"
          parameters:
          - name: "negativeSign"
            value:
              sapientType: "BASIC"
              content: !<regular>
                value: "-"
              valueType: "char"
              uuid: "<init>_int41"
              fixed: true
              equalsMethodPresent: false
              explicitCastNeeded: false
          - name: "positiveSign"
            value:
              sapientType: "BASIC"
              content: !<regular>
                value: "\0"
              valueType: "char"
              uuid: "<init>_int42"
              fixed: true
              equalsMethodPresent: false
              explicitCastNeeded: false
          - name: "zeroDigit"
            value:
              sapientType: "BASIC"
              content: !<regular>
                value: "0"
              valueType: "char"
              uuid: "<init>_int43"
              fixed: true
              equalsMethodPresent: false
              explicitCastNeeded: false
          - name: "decimalMark"
            value:
              sapientType: "BASIC"
              content: !<regular>
                value: "."
              valueType: "char"
              uuid: "<init>_int44"
              fixed: true
              equalsMethodPresent: false
              explicitCastNeeded: false
          - name: "minDecimals"
            value:
              sapientType: "BASIC"
              content: !<regular>
                value: 2
              valueType: "int"
              uuid: "<init>_int45"
              fixed: true
              equalsMethodPresent: false
              explicitCastNeeded: false
          - name: "decimalGroups"
            value:
              sapientType: "NULL"
              valueType: "java.util.List"
              genericValueType: "java.lang.Integer"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          - name: "shift"
            value:
              sapientType: "BASIC"
              suggestedContent: !<regular>
                value: 1
              valueType: "int"
              uuid: "shift_int1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          - name: "roundingMode"
            value:
              sapientType: "ENUM"
              content: !<regular>
                value: "HALF_UP"
              valueType: "java.math.RoundingMode"
              uuid: "Enum-java.math.RoundingMode-HALF_UP"
              fixed: true
              equalsMethodPresent: false
              explicitCastNeeded: false
          - name: "codes"
            value:
              sapientType: "ARRAY"
              suggestedContent: !<array>
                values:
                  0:
                    sapientType: "BASIC"
                    content: !<regular>
                      value: "\\u20BF"
                    valueType: "java.lang.String"
                    fixed: true
                    equalsMethodPresent: false
                    explicitCastNeeded: false
                  1:
                    sapientType: "NULL"
                    valueType: "java.lang.String"
                    fixed: false
                    equalsMethodPresent: false
                    explicitCastNeeded: false
                  2:
                    sapientType: "NULL"
                    valueType: "java.lang.String"
                    fixed: false
                    equalsMethodPresent: false
                    explicitCastNeeded: false
                  3:
                    sapientType: "BASIC"
                    content: !<regular>
                      value: "m\\u20BF"
                    valueType: "java.lang.String"
                    fixed: true
                    equalsMethodPresent: false
                    explicitCastNeeded: false
                  4:
                    sapientType: "NULL"
                    valueType: "java.lang.String"
                    fixed: false
                    equalsMethodPresent: false
                    explicitCastNeeded: false
                  5:
                    sapientType: "NULL"
                    valueType: "java.lang.String"
                    fixed: false
                    equalsMethodPresent: false
                    explicitCastNeeded: false
                  6:
                    sapientType: "BASIC"
                    content: !<regular>
                      value: "\\u00B5\\u20BF"
                    valueType: "java.lang.String"
                    fixed: true
                    equalsMethodPresent: false
                    explicitCastNeeded: false
                  7:
                    sapientType: "NULL"
                    valueType: "java.lang.String"
                    fixed: false
                    equalsMethodPresent: false
                    explicitCastNeeded: false
                  8:
                    sapientType: "BASIC"
                    content: !<regular>
                      value: "\\u0219"
                    valueType: "java.lang.String"
                    fixed: true
                    equalsMethodPresent: false
                    explicitCastNeeded: false
              valueType: "java.lang.String[]"
              uuid: "<init>_string[]6"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          - name: "codeSeparator"
            value:
              sapientType: "BASIC"
              content: !<regular>
                value: " "
              valueType: "char"
              uuid: "<init>_int47"
              fixed: true
              equalsMethodPresent: false
              explicitCastNeeded: false
          - name: "codePrefixed"
            value:
              sapientType: "BASIC"
              content: !<regular>
                value: true
              valueType: "boolean"
              uuid: "<init>_int48"
              fixed: true
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: true
          createdByTargetCode: true
        valueType: "org.bitcoinj.base.utils.MonetaryFormat"
        uuid: "shift_monetaryFormat1"
        fixed: true
        equalsMethodPresent: true
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    uuid: "8cfadf6f-8b56-3df8-a95e-3333caf39724"
    deleted: false
    disabled: false
    ignoredBySystem: false
    prover: "DEFAULT"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
- method:
    name: "roundingMode"
    returnType: "org.bitcoinj.base.utils.MonetaryFormat"
    signature: "roundingMode(java.math.RoundingMode) : org.bitcoinj.base.utils.MonetaryFormat"
    instructionFingerprint: "E6B6ECC2AEA231A21DAB4B6F35F08B56"
    parametersTypes:
    - "java.math.RoundingMode"
  paths:
  - pathId: "path1"
    pathIdForUser: "path1"
    testPathName: "roundingModeWhenRoundingModeEqualsThisRoundingMode"
    nameDefinedByUser: false
    constructorSignature: "<init>(boolean) : void"
    priorityDefinedByUser: false
    filledByUser: false
    priority: "LOW"
    modelFingerprint: "A42AB7833394D875350CF3A931151338"
    problemWasSolvedByProver: true
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "158F306D9B26D5466D8938D2940F98BC"
      index: 1
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "OBJECT"
        content: !<new>
          target: "org.bitcoinj.base.utils.MonetaryFormat"
          parameters:
          - name: "useSymbol"
            value:
              sapientType: "BASIC"
              content: !<regular>
                value: true
              suggestedContent: !<regular>
                value: true
              valueType: "boolean"
              uuid: "<init>_boolean1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: false
        suggestedContent: !<new>
          target: "org.bitcoinj.base.utils.MonetaryFormat"
          parameters:
          - name: "useSymbol"
            value:
              sapientType: "BASIC"
              suggestedContent: !<regular>
                value: true
              valueType: "boolean"
              uuid: "<init>_boolean1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: false
        valueType: "org.bitcoinj.base.utils.MonetaryFormat"
        uuid: "target"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    - type: "INPUT"
      name: "roundingMode"
      modelFingerprint: "8B0B542C36A8F538E23868004F0E5AE5"
      index: 2
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "ENUM"
        content: !<regular>
          value: "HALF_UP"
        suggestedContent: !<regular>
          value: "HALF_UP"
        valueType: "java.math.RoundingMode"
        uuid: "roundingMode_roundingMode1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    - type: "RESULT"
      name: "result"
      modelFingerprint: "97CE8C313DC9A6CB2C8395BDD8911D76"
      index: 3
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "THIS"
        content: !<new>
          target: "org.bitcoinj.base.utils.MonetaryFormat"
          parameters:
          - name: "useSymbol"
            value:
              sapientType: "BASIC"
              suggestedContent: !<regular>
                value: true
              valueType: "boolean"
              uuid: "<init>_boolean1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: false
        valueType: "org.bitcoinj.base.utils.MonetaryFormat"
        uuid: "targetClassObject"
        fixed: true
        equalsMethodPresent: true
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    uuid: "b4c9b158-e2dc-3e26-a9d7-a64c0451b549"
    deleted: false
    disabled: false
    ignoredBySystem: false
    prover: "DEFAULT"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
  - pathId: "path2"
    pathIdForUser: "path2"
    testPathName: "roundingModeWhenRoundingModeNotEqualsThisRoundingMode"
    nameDefinedByUser: false
    constructorSignature: "<init>(boolean) : void"
    priorityDefinedByUser: false
    filledByUser: false
    priority: "LOW"
    modelFingerprint: "CF97624B4D6F4F0A6EAF6DA6E49DF497"
    problemWasSolvedByProver: true
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "158F306D9B26D5466D8938D2940F98BC"
      index: 1
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "OBJECT"
        content: !<new>
          target: "org.bitcoinj.base.utils.MonetaryFormat"
          parameters:
          - name: "useSymbol"
            value:
              sapientType: "BASIC"
              content: !<regular>
                value: true
              suggestedContent: !<regular>
                value: true
              valueType: "boolean"
              uuid: "<init>_boolean1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: false
        suggestedContent: !<new>
          target: "org.bitcoinj.base.utils.MonetaryFormat"
          parameters:
          - name: "useSymbol"
            value:
              sapientType: "BASIC"
              suggestedContent: !<regular>
                value: true
              valueType: "boolean"
              uuid: "<init>_boolean1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: false
        valueType: "org.bitcoinj.base.utils.MonetaryFormat"
        uuid: "target"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    - type: "INPUT"
      name: "roundingMode"
      modelFingerprint: "E99D2A0DD23D594EE9F8963EA36EAECE"
      index: 2
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "ENUM"
        content: !<regular>
          value: "UNNECESSARY"
        suggestedContent: !<regular>
          value: "UNNECESSARY"
        valueType: "java.math.RoundingMode"
        uuid: "roundingMode_roundingMode1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    - type: "RESULT"
      name: "result"
      modelFingerprint: "8F9E8384E00A613FBD4C9F3906233AEE"
      index: 3
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "OBJECT"
        content: !<new>
          target: "org.bitcoinj.base.utils.MonetaryFormat"
          parameters:
          - name: "negativeSign"
            value:
              sapientType: "BASIC"
              content: !<regular>
                value: "-"
              valueType: "char"
              uuid: "<init>_int41"
              fixed: true
              equalsMethodPresent: false
              explicitCastNeeded: false
          - name: "positiveSign"
            value:
              sapientType: "BASIC"
              content: !<regular>
                value: "\0"
              valueType: "char"
              uuid: "<init>_int42"
              fixed: true
              equalsMethodPresent: false
              explicitCastNeeded: false
          - name: "zeroDigit"
            value:
              sapientType: "BASIC"
              content: !<regular>
                value: "0"
              valueType: "char"
              uuid: "<init>_int43"
              fixed: true
              equalsMethodPresent: false
              explicitCastNeeded: false
          - name: "decimalMark"
            value:
              sapientType: "BASIC"
              content: !<regular>
                value: "."
              valueType: "char"
              uuid: "<init>_int44"
              fixed: true
              equalsMethodPresent: false
              explicitCastNeeded: false
          - name: "minDecimals"
            value:
              sapientType: "BASIC"
              content: !<regular>
                value: 2
              valueType: "int"
              uuid: "<init>_int45"
              fixed: true
              equalsMethodPresent: false
              explicitCastNeeded: false
          - name: "decimalGroups"
            value:
              sapientType: "NULL"
              valueType: "java.util.List"
              genericValueType: "java.lang.Integer"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          - name: "shift"
            value:
              sapientType: "BASIC"
              content: !<regular>
                value: 0
              valueType: "int"
              uuid: "<init>_int46"
              fixed: true
              equalsMethodPresent: false
              explicitCastNeeded: false
          - name: "roundingMode"
            value:
              sapientType: "ENUM"
              content: !<regular>
                value: "UNNECESSARY"
              suggestedContent: !<regular>
                value: "UNNECESSARY"
              valueType: "java.math.RoundingMode"
              uuid: "roundingMode_roundingMode1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          - name: "codes"
            value:
              sapientType: "ARRAY"
              content: !<array>
                values:
                  0:
                    sapientType: "BASIC"
                    content: !<regular>
                      value: "\\u20BF"
                    valueType: "java.lang.String"
                    fixed: true
                    equalsMethodPresent: false
                    explicitCastNeeded: false
                  1:
                    sapientType: "NULL"
                    valueType: "java.lang.String"
                    fixed: false
                    equalsMethodPresent: false
                    explicitCastNeeded: false
                  2:
                    sapientType: "NULL"
                    valueType: "java.lang.String"
                    fixed: false
                    equalsMethodPresent: false
                    explicitCastNeeded: false
                  3:
                    sapientType: "BASIC"
                    content: !<regular>
                      value: "m\\u20BF"
                    valueType: "java.lang.String"
                    fixed: true
                    equalsMethodPresent: false
                    explicitCastNeeded: false
                  4:
                    sapientType: "NULL"
                    valueType: "java.lang.String"
                    fixed: false
                    equalsMethodPresent: false
                    explicitCastNeeded: false
                  5:
                    sapientType: "NULL"
                    valueType: "java.lang.String"
                    fixed: false
                    equalsMethodPresent: false
                    explicitCastNeeded: false
                  6:
                    sapientType: "BASIC"
                    content: !<regular>
                      value: "\\u00B5\\u20BF"
                    valueType: "java.lang.String"
                    fixed: true
                    equalsMethodPresent: false
                    explicitCastNeeded: false
                  7:
                    sapientType: "NULL"
                    valueType: "java.lang.String"
                    fixed: false
                    equalsMethodPresent: false
                    explicitCastNeeded: false
                  8:
                    sapientType: "BASIC"
                    content: !<regular>
                      value: "\\u0219"
                    valueType: "java.lang.String"
                    fixed: true
                    equalsMethodPresent: false
                    explicitCastNeeded: false
              suggestedContent: !<array>
                values:
                  0:
                    sapientType: "BASIC"
                    content: !<regular>
                      value: "\\u20BF"
                    valueType: "java.lang.String"
                    fixed: true
                    equalsMethodPresent: false
                    explicitCastNeeded: false
                  1:
                    sapientType: "NULL"
                    valueType: "java.lang.String"
                    fixed: false
                    equalsMethodPresent: false
                    explicitCastNeeded: false
                  2:
                    sapientType: "NULL"
                    valueType: "java.lang.String"
                    fixed: false
                    equalsMethodPresent: false
                    explicitCastNeeded: false
                  3:
                    sapientType: "BASIC"
                    content: !<regular>
                      value: "m\\u20BF"
                    valueType: "java.lang.String"
                    fixed: true
                    equalsMethodPresent: false
                    explicitCastNeeded: false
                  4:
                    sapientType: "NULL"
                    valueType: "java.lang.String"
                    fixed: false
                    equalsMethodPresent: false
                    explicitCastNeeded: false
                  5:
                    sapientType: "NULL"
                    valueType: "java.lang.String"
                    fixed: false
                    equalsMethodPresent: false
                    explicitCastNeeded: false
                  6:
                    sapientType: "BASIC"
                    content: !<regular>
                      value: "\\u00B5\\u20BF"
                    valueType: "java.lang.String"
                    fixed: true
                    equalsMethodPresent: false
                    explicitCastNeeded: false
                  7:
                    sapientType: "NULL"
                    valueType: "java.lang.String"
                    fixed: false
                    equalsMethodPresent: false
                    explicitCastNeeded: false
                  8:
                    sapientType: "BASIC"
                    content: !<regular>
                      value: "\\u0219"
                    valueType: "java.lang.String"
                    fixed: true
                    equalsMethodPresent: false
                    explicitCastNeeded: false
              valueType: "java.lang.String[]"
              uuid: "<init>_string[]6"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          - name: "codeSeparator"
            value:
              sapientType: "BASIC"
              content: !<regular>
                value: " "
              valueType: "char"
              uuid: "<init>_int47"
              fixed: true
              equalsMethodPresent: false
              explicitCastNeeded: false
          - name: "codePrefixed"
            value:
              sapientType: "BASIC"
              content: !<regular>
                value: true
              valueType: "boolean"
              uuid: "<init>_int48"
              fixed: true
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: true
          createdByTargetCode: true
        suggestedContent: !<new>
          target: "org.bitcoinj.base.utils.MonetaryFormat"
          parameters:
          - name: "negativeSign"
            value:
              sapientType: "BASIC"
              content: !<regular>
                value: "-"
              valueType: "char"
              uuid: "<init>_int41"
              fixed: true
              equalsMethodPresent: false
              explicitCastNeeded: false
          - name: "positiveSign"
            value:
              sapientType: "BASIC"
              content: !<regular>
                value: "\0"
              valueType: "char"
              uuid: "<init>_int42"
              fixed: true
              equalsMethodPresent: false
              explicitCastNeeded: false
          - name: "zeroDigit"
            value:
              sapientType: "BASIC"
              content: !<regular>
                value: "0"
              valueType: "char"
              uuid: "<init>_int43"
              fixed: true
              equalsMethodPresent: false
              explicitCastNeeded: false
          - name: "decimalMark"
            value:
              sapientType: "BASIC"
              content: !<regular>
                value: "."
              valueType: "char"
              uuid: "<init>_int44"
              fixed: true
              equalsMethodPresent: false
              explicitCastNeeded: false
          - name: "minDecimals"
            value:
              sapientType: "BASIC"
              content: !<regular>
                value: 2
              valueType: "int"
              uuid: "<init>_int45"
              fixed: true
              equalsMethodPresent: false
              explicitCastNeeded: false
          - name: "decimalGroups"
            value:
              sapientType: "NULL"
              valueType: "java.util.List"
              genericValueType: "java.lang.Integer"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          - name: "shift"
            value:
              sapientType: "BASIC"
              content: !<regular>
                value: 0
              valueType: "int"
              uuid: "<init>_int46"
              fixed: true
              equalsMethodPresent: false
              explicitCastNeeded: false
          - name: "roundingMode"
            value:
              sapientType: "ENUM"
              suggestedContent: !<regular>
                value: "UNNECESSARY"
              valueType: "java.math.RoundingMode"
              uuid: "roundingMode_roundingMode1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          - name: "codes"
            value:
              sapientType: "ARRAY"
              suggestedContent: !<array>
                values:
                  0:
                    sapientType: "BASIC"
                    content: !<regular>
                      value: "\\u20BF"
                    valueType: "java.lang.String"
                    fixed: true
                    equalsMethodPresent: false
                    explicitCastNeeded: false
                  1:
                    sapientType: "NULL"
                    valueType: "java.lang.String"
                    fixed: false
                    equalsMethodPresent: false
                    explicitCastNeeded: false
                  2:
                    sapientType: "NULL"
                    valueType: "java.lang.String"
                    fixed: false
                    equalsMethodPresent: false
                    explicitCastNeeded: false
                  3:
                    sapientType: "BASIC"
                    content: !<regular>
                      value: "m\\u20BF"
                    valueType: "java.lang.String"
                    fixed: true
                    equalsMethodPresent: false
                    explicitCastNeeded: false
                  4:
                    sapientType: "NULL"
                    valueType: "java.lang.String"
                    fixed: false
                    equalsMethodPresent: false
                    explicitCastNeeded: false
                  5:
                    sapientType: "NULL"
                    valueType: "java.lang.String"
                    fixed: false
                    equalsMethodPresent: false
                    explicitCastNeeded: false
                  6:
                    sapientType: "BASIC"
                    content: !<regular>
                      value: "\\u00B5\\u20BF"
                    valueType: "java.lang.String"
                    fixed: true
                    equalsMethodPresent: false
                    explicitCastNeeded: false
                  7:
                    sapientType: "NULL"
                    valueType: "java.lang.String"
                    fixed: false
                    equalsMethodPresent: false
                    explicitCastNeeded: false
                  8:
                    sapientType: "BASIC"
                    content: !<regular>
                      value: "\\u0219"
                    valueType: "java.lang.String"
                    fixed: true
                    equalsMethodPresent: false
                    explicitCastNeeded: false
              valueType: "java.lang.String[]"
              uuid: "<init>_string[]6"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          - name: "codeSeparator"
            value:
              sapientType: "BASIC"
              content: !<regular>
                value: " "
              valueType: "char"
              uuid: "<init>_int47"
              fixed: true
              equalsMethodPresent: false
              explicitCastNeeded: false
          - name: "codePrefixed"
            value:
              sapientType: "BASIC"
              content: !<regular>
                value: true
              valueType: "boolean"
              uuid: "<init>_int48"
              fixed: true
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: true
          createdByTargetCode: true
        valueType: "org.bitcoinj.base.utils.MonetaryFormat"
        uuid: "roundingMode_monetaryFormat1"
        fixed: true
        equalsMethodPresent: true
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    uuid: "eae234ba-a3a1-30fc-96ae-dbc2f074d429"
    deleted: false
    disabled: false
    ignoredBySystem: false
    prover: "DEFAULT"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
- method:
    name: "noCode"
    returnType: "org.bitcoinj.base.utils.MonetaryFormat"
    signature: "noCode() : org.bitcoinj.base.utils.MonetaryFormat"
    instructionFingerprint: "EEBF6D726B012DC9C3E1D104402F7B62"
    parametersTypes: []
  paths:
  - pathId: "path1"
    pathIdForUser: "path1"
    testPathName: "noCodeWhenCodesIsNotNull"
    nameDefinedByUser: false
    constructorSignature: "<init>(boolean) : void"
    priorityDefinedByUser: false
    filledByUser: false
    priority: "LOW"
    modelFingerprint: "6BF9961F12F0A4067AE38A2A6516EF54"
    problemWasSolvedByProver: true
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "158F306D9B26D5466D8938D2940F98BC"
      index: 1
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "OBJECT"
        content: !<new>
          target: "org.bitcoinj.base.utils.MonetaryFormat"
          parameters:
          - name: "useSymbol"
            value:
              sapientType: "BASIC"
              content: !<regular>
                value: true
              suggestedContent: !<regular>
                value: true
              valueType: "boolean"
              uuid: "<init>_boolean1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: false
        suggestedContent: !<new>
          target: "org.bitcoinj.base.utils.MonetaryFormat"
          parameters:
          - name: "useSymbol"
            value:
              sapientType: "BASIC"
              suggestedContent: !<regular>
                value: true
              valueType: "boolean"
              uuid: "<init>_boolean1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: false
        valueType: "org.bitcoinj.base.utils.MonetaryFormat"
        uuid: "target"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    - type: "RESULT"
      name: "result"
      modelFingerprint: "EFD18201D7DD2BFC0EDADCE132BE1A48"
      index: 2
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "OBJECT"
        content: !<new>
          target: "org.bitcoinj.base.utils.MonetaryFormat"
          parameters:
          - name: "negativeSign"
            value:
              sapientType: "BASIC"
              content: !<regular>
                value: "-"
              valueType: "char"
              uuid: "<init>_int41"
              fixed: true
              equalsMethodPresent: false
              explicitCastNeeded: false
          - name: "positiveSign"
            value:
              sapientType: "BASIC"
              content: !<regular>
                value: "\0"
              valueType: "char"
              uuid: "<init>_int42"
              fixed: true
              equalsMethodPresent: false
              explicitCastNeeded: false
          - name: "zeroDigit"
            value:
              sapientType: "BASIC"
              content: !<regular>
                value: "0"
              valueType: "char"
              uuid: "<init>_int43"
              fixed: true
              equalsMethodPresent: false
              explicitCastNeeded: false
          - name: "decimalMark"
            value:
              sapientType: "BASIC"
              content: !<regular>
                value: "."
              valueType: "char"
              uuid: "<init>_int44"
              fixed: true
              equalsMethodPresent: false
              explicitCastNeeded: false
          - name: "minDecimals"
            value:
              sapientType: "BASIC"
              content: !<regular>
                value: 2
              valueType: "int"
              uuid: "<init>_int45"
              fixed: true
              equalsMethodPresent: false
              explicitCastNeeded: false
          - name: "decimalGroups"
            value:
              sapientType: "NULL"
              valueType: "java.util.List"
              genericValueType: "java.lang.Integer"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          - name: "shift"
            value:
              sapientType: "BASIC"
              content: !<regular>
                value: 0
              valueType: "int"
              uuid: "<init>_int46"
              fixed: true
              equalsMethodPresent: false
              explicitCastNeeded: false
          - name: "roundingMode"
            value:
              sapientType: "ENUM"
              content: !<regular>
                value: "HALF_UP"
              valueType: "java.math.RoundingMode"
              uuid: "Enum-java.math.RoundingMode-HALF_UP"
              fixed: true
              equalsMethodPresent: false
              explicitCastNeeded: false
          - name: "codes"
            value:
              sapientType: "NULL"
              valueType: "java.lang.String[]"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          - name: "codeSeparator"
            value:
              sapientType: "BASIC"
              content: !<regular>
                value: " "
              valueType: "char"
              uuid: "<init>_int47"
              fixed: true
              equalsMethodPresent: false
              explicitCastNeeded: false
          - name: "codePrefixed"
            value:
              sapientType: "BASIC"
              content: !<regular>
                value: true
              valueType: "boolean"
              uuid: "<init>_int48"
              fixed: true
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: true
          createdByTargetCode: true
        suggestedContent: !<new>
          target: "org.bitcoinj.base.utils.MonetaryFormat"
          parameters:
          - name: "negativeSign"
            value:
              sapientType: "BASIC"
              content: !<regular>
                value: "-"
              valueType: "char"
              uuid: "<init>_int41"
              fixed: true
              equalsMethodPresent: false
              explicitCastNeeded: false
          - name: "positiveSign"
            value:
              sapientType: "BASIC"
              content: !<regular>
                value: "\0"
              valueType: "char"
              uuid: "<init>_int42"
              fixed: true
              equalsMethodPresent: false
              explicitCastNeeded: false
          - name: "zeroDigit"
            value:
              sapientType: "BASIC"
              content: !<regular>
                value: "0"
              valueType: "char"
              uuid: "<init>_int43"
              fixed: true
              equalsMethodPresent: false
              explicitCastNeeded: false
          - name: "decimalMark"
            value:
              sapientType: "BASIC"
              content: !<regular>
                value: "."
              valueType: "char"
              uuid: "<init>_int44"
              fixed: true
              equalsMethodPresent: false
              explicitCastNeeded: false
          - name: "minDecimals"
            value:
              sapientType: "BASIC"
              content: !<regular>
                value: 2
              valueType: "int"
              uuid: "<init>_int45"
              fixed: true
              equalsMethodPresent: false
              explicitCastNeeded: false
          - name: "decimalGroups"
            value:
              sapientType: "NULL"
              valueType: "java.util.List"
              genericValueType: "java.lang.Integer"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          - name: "shift"
            value:
              sapientType: "BASIC"
              content: !<regular>
                value: 0
              valueType: "int"
              uuid: "<init>_int46"
              fixed: true
              equalsMethodPresent: false
              explicitCastNeeded: false
          - name: "roundingMode"
            value:
              sapientType: "ENUM"
              content: !<regular>
                value: "HALF_UP"
              valueType: "java.math.RoundingMode"
              uuid: "Enum-java.math.RoundingMode-HALF_UP"
              fixed: true
              equalsMethodPresent: false
              explicitCastNeeded: false
          - name: "codes"
            value:
              sapientType: "NULL"
              valueType: "java.lang.String[]"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          - name: "codeSeparator"
            value:
              sapientType: "BASIC"
              content: !<regular>
                value: " "
              valueType: "char"
              uuid: "<init>_int47"
              fixed: true
              equalsMethodPresent: false
              explicitCastNeeded: false
          - name: "codePrefixed"
            value:
              sapientType: "BASIC"
              content: !<regular>
                value: true
              valueType: "boolean"
              uuid: "<init>_int48"
              fixed: true
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: true
          createdByTargetCode: true
        valueType: "org.bitcoinj.base.utils.MonetaryFormat"
        uuid: "noCode_monetaryFormat1"
        fixed: true
        equalsMethodPresent: true
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    uuid: "a5ca7d3b-e8e7-30fa-a852-68423de0564b"
    deleted: false
    disabled: false
    ignoredBySystem: false
    prover: "DEFAULT"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
- method:
    name: "code"
    returnType: "org.bitcoinj.base.utils.MonetaryFormat"
    signature: "code(int,java.lang.String) : org.bitcoinj.base.utils.MonetaryFormat"
    instructionFingerprint: "F363FC83FD9373FAC29832546ABC8618"
    parametersTypes:
    - "int"
    - "java.lang.String"
  paths:
  - pathId: "path1"
    pathIdForUser: "path1"
    testPathName: "codeWhenCodeShiftGreaterThanOrEqualsTo0ThrowsIllegalArgumentException"
    nameDefinedByUser: false
    constructorSignature: "<init>(boolean) : void"
    priorityDefinedByUser: false
    filledByUser: false
    priority: "LOW"
    modelFingerprint: "BE9DCD4B34E72C7BF14F3C7759E786DE"
    problemWasSolvedByProver: true
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "158F306D9B26D5466D8938D2940F98BC"
      index: 1
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "OBJECT"
        content: !<new>
          target: "org.bitcoinj.base.utils.MonetaryFormat"
          parameters:
          - name: "useSymbol"
            value:
              sapientType: "BASIC"
              content: !<regular>
                value: true
              suggestedContent: !<regular>
                value: true
              valueType: "boolean"
              uuid: "<init>_boolean1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: false
        suggestedContent: !<new>
          target: "org.bitcoinj.base.utils.MonetaryFormat"
          parameters:
          - name: "useSymbol"
            value:
              sapientType: "BASIC"
              suggestedContent: !<regular>
                value: true
              valueType: "boolean"
              uuid: "<init>_boolean1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: false
        valueType: "org.bitcoinj.base.utils.MonetaryFormat"
        uuid: "target"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    - type: "INPUT"
      name: "codeShift"
      modelFingerprint: "456BC6B913119811F0BC731590270952"
      index: 2
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "BASIC"
        content: !<regular>
          value: 1
        suggestedContent: !<regular>
          value: 1
        valueType: "int"
        uuid: "code_int1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    - type: "INPUT"
      name: "code"
      modelFingerprint: "07E07A7F8BE284CF76644F8F26D09F21"
      index: 3
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "BASIC"
        content: !<regular>
          value: "code1"
        valueType: "java.lang.String"
        uuid: "code_string1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    - type: "STATIC"
      name: "Preconditions"
      modelFingerprint: "D2E579C66034555D6E24363DE5916136"
      index: 4
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        valueType: "org.bitcoinj.base.internal.Preconditions"
        uuid: "org.bitcoinj.base.internal.Preconditions"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "org.bitcoinj.base.internal.Preconditions"
        name: "checkArgument"
        parameters:
        - name: "expression"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: false
            valueType: "boolean"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "messageSupplier"
          value:
            sapientType: "PRIVATE_INNER_CLASS_OR_LAMBDA"
            valueType: "java.util.function.Supplier"
            genericValueType: "java.lang.String"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "checkArgument(boolean,Supplier): void"
        returnValue:
          sapientType: "EXCEPTION"
          content: !<new>
            target: "java.lang.IllegalArgumentException"
            parameters: []
            privateConstructor: false
            createdByTargetCode: false
          suggestedContent: !<new>
            target: "java.lang.IllegalArgumentException"
            parameters: []
            privateConstructor: false
            createdByTargetCode: false
          valueType: "java.lang.IllegalArgumentException"
          fixed: true
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 9
      staticReadMethodForField: false
      filledByUser: false
    - type: "RESULT"
      name: "result"
      modelFingerprint: "3E9C76AB51311DE97AE9C2294CD5E1D6"
      index: 5
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "EXCEPTION"
        content: !<new>
          target: "java.lang.IllegalArgumentException"
          parameters: []
          privateConstructor: false
          createdByTargetCode: false
        suggestedContent: !<new>
          target: "java.lang.IllegalArgumentException"
          parameters: []
          privateConstructor: false
          createdByTargetCode: false
        valueType: "java.lang.IllegalArgumentException"
        fixed: true
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    uuid: "3779f917-7f05-3e1d-a075-74d55ca3fac9"
    deleted: false
    disabled: false
    ignoredBySystem: false
    prover: "DEFAULT"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
  - pathId: "path2"
    pathIdForUser: "path2"
    testPathName: "codeWhenCodeShiftLessThan0ThrowsIllegalArgumentException"
    nameDefinedByUser: false
    constructorSignature: "<init>(boolean) : void"
    priorityDefinedByUser: false
    filledByUser: false
    priority: "LOW"
    modelFingerprint: "D2B739992EADFCDCC2275731B1538942"
    problemWasSolvedByProver: true
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "158F306D9B26D5466D8938D2940F98BC"
      index: 1
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "OBJECT"
        content: !<new>
          target: "org.bitcoinj.base.utils.MonetaryFormat"
          parameters:
          - name: "useSymbol"
            value:
              sapientType: "BASIC"
              content: !<regular>
                value: true
              suggestedContent: !<regular>
                value: true
              valueType: "boolean"
              uuid: "<init>_boolean1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: false
        suggestedContent: !<new>
          target: "org.bitcoinj.base.utils.MonetaryFormat"
          parameters:
          - name: "useSymbol"
            value:
              sapientType: "BASIC"
              suggestedContent: !<regular>
                value: true
              valueType: "boolean"
              uuid: "<init>_boolean1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: false
        valueType: "org.bitcoinj.base.utils.MonetaryFormat"
        uuid: "target"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    - type: "INPUT"
      name: "codeShift"
      modelFingerprint: "48F96FD6C0F933FEF8FDDF529C3A4F27"
      index: 2
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "BASIC"
        content: !<regular>
          value: -1
        suggestedContent: !<regular>
          value: -1
        valueType: "int"
        uuid: "code_int1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    - type: "INPUT"
      name: "code"
      modelFingerprint: "07E07A7F8BE284CF76644F8F26D09F21"
      index: 3
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "BASIC"
        content: !<regular>
          value: "code1"
        valueType: "java.lang.String"
        uuid: "code_string1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    - type: "STATIC"
      name: "Preconditions"
      modelFingerprint: "D2E579C66034555D6E24363DE5916136"
      index: 4
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        valueType: "org.bitcoinj.base.internal.Preconditions"
        uuid: "org.bitcoinj.base.internal.Preconditions"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "org.bitcoinj.base.internal.Preconditions"
        name: "checkArgument"
        parameters:
        - name: "expression"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: false
            valueType: "boolean"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "messageSupplier"
          value:
            sapientType: "PRIVATE_INNER_CLASS_OR_LAMBDA"
            valueType: "java.util.function.Supplier"
            genericValueType: "java.lang.String"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "checkArgument(boolean,Supplier): void"
        returnValue:
          sapientType: "EXCEPTION"
          content: !<new>
            target: "java.lang.IllegalArgumentException"
            parameters: []
            privateConstructor: false
            createdByTargetCode: false
          suggestedContent: !<new>
            target: "java.lang.IllegalArgumentException"
            parameters: []
            privateConstructor: false
            createdByTargetCode: false
          valueType: "java.lang.IllegalArgumentException"
          fixed: true
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 9
      staticReadMethodForField: false
      filledByUser: false
    - type: "RESULT"
      name: "result"
      modelFingerprint: "3E9C76AB51311DE97AE9C2294CD5E1D6"
      index: 5
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "EXCEPTION"
        content: !<new>
          target: "java.lang.IllegalArgumentException"
          parameters: []
          privateConstructor: false
          createdByTargetCode: false
        suggestedContent: !<new>
          target: "java.lang.IllegalArgumentException"
          parameters: []
          privateConstructor: false
          createdByTargetCode: false
        valueType: "java.lang.IllegalArgumentException"
        fixed: true
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    uuid: "01e29c09-a7e9-394e-9b1c-cf8d9c596442"
    deleted: false
    disabled: false
    ignoredBySystem: false
    prover: "DEFAULT"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
- method:
    name: "codeSeparator"
    returnType: "org.bitcoinj.base.utils.MonetaryFormat"
    signature: "codeSeparator(char) : org.bitcoinj.base.utils.MonetaryFormat"
    instructionFingerprint: "C1D70BDACDD02E76259DCF96F83AD32C"
    parametersTypes:
    - "char"
  paths:
  - pathId: "path1"
    pathIdForUser: "path1"
    testPathName: "codeSeparatorWhenCharacterNotIsDigitCodeSeparatorThrowsIllegalArgumentException"
    nameDefinedByUser: false
    constructorSignature: "<init>(boolean) : void"
    priorityDefinedByUser: false
    filledByUser: false
    priority: "LOW"
    modelFingerprint: "7DF0090C7ACEC5319F55A2084D3ADB6A"
    problemWasSolvedByProver: true
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "158F306D9B26D5466D8938D2940F98BC"
      index: 1
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "OBJECT"
        content: !<new>
          target: "org.bitcoinj.base.utils.MonetaryFormat"
          parameters:
          - name: "useSymbol"
            value:
              sapientType: "BASIC"
              content: !<regular>
                value: true
              suggestedContent: !<regular>
                value: true
              valueType: "boolean"
              uuid: "<init>_boolean1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: false
        suggestedContent: !<new>
          target: "org.bitcoinj.base.utils.MonetaryFormat"
          parameters:
          - name: "useSymbol"
            value:
              sapientType: "BASIC"
              suggestedContent: !<regular>
                value: true
              valueType: "boolean"
              uuid: "<init>_boolean1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: false
        valueType: "org.bitcoinj.base.utils.MonetaryFormat"
        uuid: "target"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    - type: "INPUT"
      name: "codeSeparator"
      modelFingerprint: "381B8ED6A295CDE612BAC9E0604D2516"
      index: 2
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "BASIC"
        content: !<regular>
          value: "A"
        suggestedContent: !<regular>
          value: "A"
        valueType: "char"
        uuid: "codeSeparator_char1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    - type: "STATIC"
      name: "Preconditions"
      modelFingerprint: "D2E579C66034555D6E24363DE5916136"
      index: 3
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        valueType: "org.bitcoinj.base.internal.Preconditions"
        uuid: "org.bitcoinj.base.internal.Preconditions"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "org.bitcoinj.base.internal.Preconditions"
        name: "checkArgument"
        parameters:
        - name: "expression"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: false
            valueType: "boolean"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "messageSupplier"
          value:
            sapientType: "PRIVATE_INNER_CLASS_OR_LAMBDA"
            valueType: "java.util.function.Supplier"
            genericValueType: "java.lang.String"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "checkArgument(boolean,Supplier): void"
        returnValue:
          sapientType: "EXCEPTION"
          content: !<new>
            target: "java.lang.IllegalArgumentException"
            parameters: []
            privateConstructor: false
            createdByTargetCode: false
          suggestedContent: !<new>
            target: "java.lang.IllegalArgumentException"
            parameters: []
            privateConstructor: false
            createdByTargetCode: false
          valueType: "java.lang.IllegalArgumentException"
          fixed: true
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 9
      staticReadMethodForField: false
      filledByUser: false
    - type: "RESULT"
      name: "result"
      modelFingerprint: "3E9C76AB51311DE97AE9C2294CD5E1D6"
      index: 4
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "EXCEPTION"
        content: !<new>
          target: "java.lang.IllegalArgumentException"
          parameters: []
          privateConstructor: false
          createdByTargetCode: false
        suggestedContent: !<new>
          target: "java.lang.IllegalArgumentException"
          parameters: []
          privateConstructor: false
          createdByTargetCode: false
        valueType: "java.lang.IllegalArgumentException"
        fixed: true
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    uuid: "aa19d1ad-818c-3f30-abaf-5c707cfb852a"
    deleted: false
    disabled: false
    ignoredBySystem: false
    prover: "DEFAULT"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
  - pathId: "path2"
    pathIdForUser: "path2"
    testPathName: "codeSeparatorWhenCharacterIsDigitCodeSeparatorThrowsIllegalArgumentException"
    nameDefinedByUser: false
    constructorSignature: "<init>(boolean) : void"
    priorityDefinedByUser: false
    filledByUser: false
    priority: "LOW"
    modelFingerprint: "B742FF5C290887309DB7D8D0B52EA1C5"
    problemWasSolvedByProver: false
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "1812E57E39789A36E2C25DE1B2306BEA"
      index: 1
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "OBJECT"
        content: !<new>
          target: "org.bitcoinj.base.utils.MonetaryFormat"
          parameters:
          - name: "useSymbol"
            value:
              sapientType: "BASIC"
              content: !<regular>
                value: false
              valueType: "boolean"
              uuid: "<init>_boolean1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: false
        suggestedContent: !<new>
          target: "org.bitcoinj.base.utils.MonetaryFormat"
          parameters:
          - name: "useSymbol"
            value:
              sapientType: "BASIC"
              valueType: "boolean"
              uuid: "<init>_boolean1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: false
        valueType: "org.bitcoinj.base.utils.MonetaryFormat"
        uuid: "target"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    - type: "INPUT"
      name: "codeSeparator"
      modelFingerprint: "B6E45096313DE4F1E0A46780A36CB7AA"
      index: 2
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "BASIC"
        content: !<regular>
          value: "A"
        valueType: "char"
        uuid: "codeSeparator_char1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    - type: "STATIC"
      name: "Preconditions"
      modelFingerprint: "D2E579C66034555D6E24363DE5916136"
      index: 3
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        valueType: "org.bitcoinj.base.internal.Preconditions"
        uuid: "org.bitcoinj.base.internal.Preconditions"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "org.bitcoinj.base.internal.Preconditions"
        name: "checkArgument"
        parameters:
        - name: "expression"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: false
            valueType: "boolean"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "messageSupplier"
          value:
            sapientType: "PRIVATE_INNER_CLASS_OR_LAMBDA"
            valueType: "java.util.function.Supplier"
            genericValueType: "java.lang.String"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "checkArgument(boolean,Supplier): void"
        returnValue:
          sapientType: "EXCEPTION"
          content: !<new>
            target: "java.lang.IllegalArgumentException"
            parameters: []
            privateConstructor: false
            createdByTargetCode: false
          suggestedContent: !<new>
            target: "java.lang.IllegalArgumentException"
            parameters: []
            privateConstructor: false
            createdByTargetCode: false
          valueType: "java.lang.IllegalArgumentException"
          fixed: true
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 9
      staticReadMethodForField: false
      filledByUser: false
    - type: "RESULT"
      name: "result"
      modelFingerprint: "3E9C76AB51311DE97AE9C2294CD5E1D6"
      index: 4
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "EXCEPTION"
        content: !<new>
          target: "java.lang.IllegalArgumentException"
          parameters: []
          privateConstructor: false
          createdByTargetCode: false
        suggestedContent: !<new>
          target: "java.lang.IllegalArgumentException"
          parameters: []
          privateConstructor: false
          createdByTargetCode: false
        valueType: "java.lang.IllegalArgumentException"
        fixed: true
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    uuid: "1ff9fc3c-a15e-31d2-af83-29727ff221bf"
    deleted: false
    disabled: false
    ignoredBySystem: false
    failureReason:
      reason: "PROVER_COULD_NOT_SOLVE_THE_PROBLEM"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
- method:
    name: "prefixCode"
    returnType: "org.bitcoinj.base.utils.MonetaryFormat"
    signature: "prefixCode() : org.bitcoinj.base.utils.MonetaryFormat"
    instructionFingerprint: "230398B1F729D33CA5777E68EB7841D7"
    parametersTypes: []
  paths:
  - pathId: "path1"
    pathIdForUser: "path1"
    testPathName: "prefixCodeWhenCodePrefixed"
    nameDefinedByUser: false
    constructorSignature: "<init>(boolean) : void"
    priorityDefinedByUser: false
    filledByUser: false
    priority: "LOW"
    modelFingerprint: "37CE1CEF1EF3C16D0C4978B849181C29"
    problemWasSolvedByProver: true
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "158F306D9B26D5466D8938D2940F98BC"
      index: 1
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "OBJECT"
        content: !<new>
          target: "org.bitcoinj.base.utils.MonetaryFormat"
          parameters:
          - name: "useSymbol"
            value:
              sapientType: "BASIC"
              content: !<regular>
                value: true
              suggestedContent: !<regular>
                value: true
              valueType: "boolean"
              uuid: "<init>_boolean1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: false
        suggestedContent: !<new>
          target: "org.bitcoinj.base.utils.MonetaryFormat"
          parameters:
          - name: "useSymbol"
            value:
              sapientType: "BASIC"
              suggestedContent: !<regular>
                value: true
              valueType: "boolean"
              uuid: "<init>_boolean1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: false
        valueType: "org.bitcoinj.base.utils.MonetaryFormat"
        uuid: "target"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    - type: "RESULT"
      name: "result"
      modelFingerprint: "97CE8C313DC9A6CB2C8395BDD8911D76"
      index: 2
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "THIS"
        content: !<new>
          target: "org.bitcoinj.base.utils.MonetaryFormat"
          parameters:
          - name: "useSymbol"
            value:
              sapientType: "BASIC"
              suggestedContent: !<regular>
                value: true
              valueType: "boolean"
              uuid: "<init>_boolean1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: false
        valueType: "org.bitcoinj.base.utils.MonetaryFormat"
        uuid: "targetClassObject"
        fixed: true
        equalsMethodPresent: true
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    uuid: "62fd373b-1dcb-3586-b942-5efbf95c23e7"
    deleted: false
    disabled: false
    ignoredBySystem: false
    prover: "DEFAULT"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
- method:
    name: "postfixCode"
    returnType: "org.bitcoinj.base.utils.MonetaryFormat"
    signature: "postfixCode() : org.bitcoinj.base.utils.MonetaryFormat"
    instructionFingerprint: "FFB07871D5CBE1F4E96F759F0A78E33F"
    parametersTypes: []
  paths:
  - pathId: "path1"
    pathIdForUser: "path1"
    testPathName: "postfixCodeWhenCodePrefixed"
    nameDefinedByUser: false
    constructorSignature: "<init>(boolean) : void"
    priorityDefinedByUser: false
    filledByUser: false
    priority: "LOW"
    modelFingerprint: "CD7D8E6524B47D3023D64677CE3D396E"
    problemWasSolvedByProver: true
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "158F306D9B26D5466D8938D2940F98BC"
      index: 1
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "OBJECT"
        content: !<new>
          target: "org.bitcoinj.base.utils.MonetaryFormat"
          parameters:
          - name: "useSymbol"
            value:
              sapientType: "BASIC"
              content: !<regular>
                value: true
              suggestedContent: !<regular>
                value: true
              valueType: "boolean"
              uuid: "<init>_boolean1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: false
        suggestedContent: !<new>
          target: "org.bitcoinj.base.utils.MonetaryFormat"
          parameters:
          - name: "useSymbol"
            value:
              sapientType: "BASIC"
              suggestedContent: !<regular>
                value: true
              valueType: "boolean"
              uuid: "<init>_boolean1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: false
        valueType: "org.bitcoinj.base.utils.MonetaryFormat"
        uuid: "target"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    - type: "RESULT"
      name: "result"
      modelFingerprint: "0CFB1FBF2D8A681BF722052955D61697"
      index: 2
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "OBJECT"
        content: !<new>
          target: "org.bitcoinj.base.utils.MonetaryFormat"
          parameters:
          - name: "negativeSign"
            value:
              sapientType: "BASIC"
              content: !<regular>
                value: "-"
              valueType: "char"
              uuid: "<init>_int41"
              fixed: true
              equalsMethodPresent: false
              explicitCastNeeded: false
          - name: "positiveSign"
            value:
              sapientType: "BASIC"
              content: !<regular>
                value: "\0"
              valueType: "char"
              uuid: "<init>_int42"
              fixed: true
              equalsMethodPresent: false
              explicitCastNeeded: false
          - name: "zeroDigit"
            value:
              sapientType: "BASIC"
              content: !<regular>
                value: "0"
              valueType: "char"
              uuid: "<init>_int43"
              fixed: true
              equalsMethodPresent: false
              explicitCastNeeded: false
          - name: "decimalMark"
            value:
              sapientType: "BASIC"
              content: !<regular>
                value: "."
              valueType: "char"
              uuid: "<init>_int44"
              fixed: true
              equalsMethodPresent: false
              explicitCastNeeded: false
          - name: "minDecimals"
            value:
              sapientType: "BASIC"
              content: !<regular>
                value: 2
              valueType: "int"
              uuid: "<init>_int45"
              fixed: true
              equalsMethodPresent: false
              explicitCastNeeded: false
          - name: "decimalGroups"
            value:
              sapientType: "NULL"
              valueType: "java.util.List"
              genericValueType: "java.lang.Integer"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          - name: "shift"
            value:
              sapientType: "BASIC"
              content: !<regular>
                value: 0
              valueType: "int"
              uuid: "<init>_int46"
              fixed: true
              equalsMethodPresent: false
              explicitCastNeeded: false
          - name: "roundingMode"
            value:
              sapientType: "ENUM"
              content: !<regular>
                value: "HALF_UP"
              valueType: "java.math.RoundingMode"
              uuid: "Enum-java.math.RoundingMode-HALF_UP"
              fixed: true
              equalsMethodPresent: false
              explicitCastNeeded: false
          - name: "codes"
            value:
              sapientType: "ARRAY"
              content: !<array>
                values:
                  0:
                    sapientType: "BASIC"
                    content: !<regular>
                      value: "\\u20BF"
                    valueType: "java.lang.String"
                    fixed: true
                    equalsMethodPresent: false
                    explicitCastNeeded: false
                  1:
                    sapientType: "NULL"
                    valueType: "java.lang.String"
                    fixed: false
                    equalsMethodPresent: false
                    explicitCastNeeded: false
                  2:
                    sapientType: "NULL"
                    valueType: "java.lang.String"
                    fixed: false
                    equalsMethodPresent: false
                    explicitCastNeeded: false
                  3:
                    sapientType: "BASIC"
                    content: !<regular>
                      value: "m\\u20BF"
                    valueType: "java.lang.String"
                    fixed: true
                    equalsMethodPresent: false
                    explicitCastNeeded: false
                  4:
                    sapientType: "NULL"
                    valueType: "java.lang.String"
                    fixed: false
                    equalsMethodPresent: false
                    explicitCastNeeded: false
                  5:
                    sapientType: "NULL"
                    valueType: "java.lang.String"
                    fixed: false
                    equalsMethodPresent: false
                    explicitCastNeeded: false
                  6:
                    sapientType: "BASIC"
                    content: !<regular>
                      value: "\\u00B5\\u20BF"
                    valueType: "java.lang.String"
                    fixed: true
                    equalsMethodPresent: false
                    explicitCastNeeded: false
                  7:
                    sapientType: "NULL"
                    valueType: "java.lang.String"
                    fixed: false
                    equalsMethodPresent: false
                    explicitCastNeeded: false
                  8:
                    sapientType: "BASIC"
                    content: !<regular>
                      value: "\\u0219"
                    valueType: "java.lang.String"
                    fixed: true
                    equalsMethodPresent: false
                    explicitCastNeeded: false
              suggestedContent: !<array>
                values:
                  0:
                    sapientType: "BASIC"
                    content: !<regular>
                      value: "\\u20BF"
                    valueType: "java.lang.String"
                    fixed: true
                    equalsMethodPresent: false
                    explicitCastNeeded: false
                  1:
                    sapientType: "NULL"
                    valueType: "java.lang.String"
                    fixed: false
                    equalsMethodPresent: false
                    explicitCastNeeded: false
                  2:
                    sapientType: "NULL"
                    valueType: "java.lang.String"
                    fixed: false
                    equalsMethodPresent: false
                    explicitCastNeeded: false
                  3:
                    sapientType: "BASIC"
                    content: !<regular>
                      value: "m\\u20BF"
                    valueType: "java.lang.String"
                    fixed: true
                    equalsMethodPresent: false
                    explicitCastNeeded: false
                  4:
                    sapientType: "NULL"
                    valueType: "java.lang.String"
                    fixed: false
                    equalsMethodPresent: false
                    explicitCastNeeded: false
                  5:
                    sapientType: "NULL"
                    valueType: "java.lang.String"
                    fixed: false
                    equalsMethodPresent: false
                    explicitCastNeeded: false
                  6:
                    sapientType: "BASIC"
                    content: !<regular>
                      value: "\\u00B5\\u20BF"
                    valueType: "java.lang.String"
                    fixed: true
                    equalsMethodPresent: false
                    explicitCastNeeded: false
                  7:
                    sapientType: "NULL"
                    valueType: "java.lang.String"
                    fixed: false
                    equalsMethodPresent: false
                    explicitCastNeeded: false
                  8:
                    sapientType: "BASIC"
                    content: !<regular>
                      value: "\\u0219"
                    valueType: "java.lang.String"
                    fixed: true
                    equalsMethodPresent: false
                    explicitCastNeeded: false
              valueType: "java.lang.String[]"
              uuid: "<init>_string[]6"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          - name: "codeSeparator"
            value:
              sapientType: "BASIC"
              content: !<regular>
                value: " "
              valueType: "char"
              uuid: "<init>_int47"
              fixed: true
              equalsMethodPresent: false
              explicitCastNeeded: false
          - name: "codePrefixed"
            value:
              sapientType: "BASIC"
              content: !<regular>
                value: false
              valueType: "boolean"
              fixed: true
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: true
          createdByTargetCode: true
        suggestedContent: !<new>
          target: "org.bitcoinj.base.utils.MonetaryFormat"
          parameters:
          - name: "negativeSign"
            value:
              sapientType: "BASIC"
              content: !<regular>
                value: "-"
              valueType: "char"
              uuid: "<init>_int41"
              fixed: true
              equalsMethodPresent: false
              explicitCastNeeded: false
          - name: "positiveSign"
            value:
              sapientType: "BASIC"
              content: !<regular>
                value: "\0"
              valueType: "char"
              uuid: "<init>_int42"
              fixed: true
              equalsMethodPresent: false
              explicitCastNeeded: false
          - name: "zeroDigit"
            value:
              sapientType: "BASIC"
              content: !<regular>
                value: "0"
              valueType: "char"
              uuid: "<init>_int43"
              fixed: true
              equalsMethodPresent: false
              explicitCastNeeded: false
          - name: "decimalMark"
            value:
              sapientType: "BASIC"
              content: !<regular>
                value: "."
              valueType: "char"
              uuid: "<init>_int44"
              fixed: true
              equalsMethodPresent: false
              explicitCastNeeded: false
          - name: "minDecimals"
            value:
              sapientType: "BASIC"
              content: !<regular>
                value: 2
              valueType: "int"
              uuid: "<init>_int45"
              fixed: true
              equalsMethodPresent: false
              explicitCastNeeded: false
          - name: "decimalGroups"
            value:
              sapientType: "NULL"
              valueType: "java.util.List"
              genericValueType: "java.lang.Integer"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          - name: "shift"
            value:
              sapientType: "BASIC"
              content: !<regular>
                value: 0
              valueType: "int"
              uuid: "<init>_int46"
              fixed: true
              equalsMethodPresent: false
              explicitCastNeeded: false
          - name: "roundingMode"
            value:
              sapientType: "ENUM"
              content: !<regular>
                value: "HALF_UP"
              valueType: "java.math.RoundingMode"
              uuid: "Enum-java.math.RoundingMode-HALF_UP"
              fixed: true
              equalsMethodPresent: false
              explicitCastNeeded: false
          - name: "codes"
            value:
              sapientType: "ARRAY"
              suggestedContent: !<array>
                values:
                  0:
                    sapientType: "BASIC"
                    content: !<regular>
                      value: "\\u20BF"
                    valueType: "java.lang.String"
                    fixed: true
                    equalsMethodPresent: false
                    explicitCastNeeded: false
                  1:
                    sapientType: "NULL"
                    valueType: "java.lang.String"
                    fixed: false
                    equalsMethodPresent: false
                    explicitCastNeeded: false
                  2:
                    sapientType: "NULL"
                    valueType: "java.lang.String"
                    fixed: false
                    equalsMethodPresent: false
                    explicitCastNeeded: false
                  3:
                    sapientType: "BASIC"
                    content: !<regular>
                      value: "m\\u20BF"
                    valueType: "java.lang.String"
                    fixed: true
                    equalsMethodPresent: false
                    explicitCastNeeded: false
                  4:
                    sapientType: "NULL"
                    valueType: "java.lang.String"
                    fixed: false
                    equalsMethodPresent: false
                    explicitCastNeeded: false
                  5:
                    sapientType: "NULL"
                    valueType: "java.lang.String"
                    fixed: false
                    equalsMethodPresent: false
                    explicitCastNeeded: false
                  6:
                    sapientType: "BASIC"
                    content: !<regular>
                      value: "\\u00B5\\u20BF"
                    valueType: "java.lang.String"
                    fixed: true
                    equalsMethodPresent: false
                    explicitCastNeeded: false
                  7:
                    sapientType: "NULL"
                    valueType: "java.lang.String"
                    fixed: false
                    equalsMethodPresent: false
                    explicitCastNeeded: false
                  8:
                    sapientType: "BASIC"
                    content: !<regular>
                      value: "\\u0219"
                    valueType: "java.lang.String"
                    fixed: true
                    equalsMethodPresent: false
                    explicitCastNeeded: false
              valueType: "java.lang.String[]"
              uuid: "<init>_string[]6"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          - name: "codeSeparator"
            value:
              sapientType: "BASIC"
              content: !<regular>
                value: " "
              valueType: "char"
              uuid: "<init>_int47"
              fixed: true
              equalsMethodPresent: false
              explicitCastNeeded: false
          - name: "codePrefixed"
            value:
              sapientType: "BASIC"
              content: !<regular>
                value: false
              valueType: "boolean"
              fixed: true
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: true
          createdByTargetCode: true
        valueType: "org.bitcoinj.base.utils.MonetaryFormat"
        uuid: "postfixCode_monetaryFormat1"
        fixed: true
        equalsMethodPresent: true
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    uuid: "ab14d391-049a-3b77-8af4-b2ad9dac2553"
    deleted: false
    disabled: false
    ignoredBySystem: false
    prover: "DEFAULT"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
- method:
    name: "withLocale"
    returnType: "org.bitcoinj.base.utils.MonetaryFormat"
    signature: "withLocale(java.util.Locale) : org.bitcoinj.base.utils.MonetaryFormat"
    instructionFingerprint: "D42F8CE231D38E23CE6B7CC24B0D354C"
    parametersTypes:
    - "java.util.Locale"
  paths:
  - pathId: "path1"
    pathIdForUser: "path1"
    testPathName: "withLocaleTest"
    nameDefinedByUser: false
    constructorSignature: "<init>(boolean) : void"
    priorityDefinedByUser: false
    filledByUser: false
    priority: "LOW"
    modelFingerprint: "3EFE70AD0CAE4E9A040F8805A9B4F516"
    problemWasSolvedByProver: true
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "E8AAA76518010EB4B9E2B05B3FF8C364"
      index: 1
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "OBJECT"
        content: !<new>
          target: "org.bitcoinj.base.utils.MonetaryFormat"
          parameters:
          - name: "useSymbol"
            value:
              sapientType: "BASIC"
              content: !<regular>
                value: true
              suggestedContent: !<regular>
                value: true
              valueType: "boolean"
              uuid: "<init>_boolean1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: false
        suggestedContent: !<new>
          target: "org.bitcoinj.base.utils.MonetaryFormat"
          parameters:
          - name: "useSymbol"
            value:
              sapientType: "BASIC"
              content: !<regular>
                value: true
              suggestedContent: !<regular>
                value: true
              valueType: "boolean"
              uuid: "<init>_boolean1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: false
        valueType: "org.bitcoinj.base.utils.MonetaryFormat"
        uuid: "target"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    - type: "INPUT"
      name: "locale"
      modelFingerprint: "0018EEBC0C566103AB3B82EC69EE175C"
      index: 2
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "OBJECT"
        content: !<new>
          target: "java.util.Locale"
          parameters:
          - name: "language"
            value:
              sapientType: "BASIC"
              content: !<regular>
                value: "language1"
              suggestedContent: !<regular>
                value: "language1"
              valueType: "java.lang.String"
              uuid: "withLocale_locale1-language"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: false
        suggestedContent: !<new>
          target: "java.util.Locale"
          parameters:
          - name: "language"
            value:
              sapientType: "BASIC"
              content: !<regular>
                value: "language1"
              suggestedContent: !<regular>
                value: "language1"
              valueType: "java.lang.String"
              uuid: "withLocale_locale1-language"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: false
        valueType: "java.util.Locale"
        uuid: "withLocale_locale1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    - type: "RESULT"
      name: "result"
      modelFingerprint: "4EC377CFAB1A3D28E76AB4B6AC7F3B86"
      index: 3
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "OBJECT"
        content: !<new>
          target: "org.bitcoinj.base.utils.MonetaryFormat"
          parameters:
          - name: "negativeSign"
            value:
              sapientType: "BASIC"
              content: !<regular>
                value: "-"
              valueType: "char"
              uuid: "withLocale_char1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          - name: "positiveSign"
            value:
              sapientType: "BASIC"
              content: !<regular>
                value: "\0"
              valueType: "char"
              uuid: "<init>_int42"
              fixed: true
              equalsMethodPresent: false
              explicitCastNeeded: false
          - name: "zeroDigit"
            value:
              sapientType: "BASIC"
              content: !<regular>
                value: "0"
              valueType: "char"
              uuid: "withLocale_char2"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          - name: "decimalMark"
            value:
              sapientType: "BASIC"
              content: !<regular>
                value: "."
              valueType: "char"
              uuid: "withLocale_char3"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          - name: "minDecimals"
            value:
              sapientType: "BASIC"
              content: !<regular>
                value: 2
              valueType: "int"
              uuid: "<init>_int45"
              fixed: true
              equalsMethodPresent: false
              explicitCastNeeded: false
          - name: "decimalGroups"
            value:
              sapientType: "NULL"
              valueType: "java.util.List"
              genericValueType: "java.lang.Integer"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          - name: "shift"
            value:
              sapientType: "BASIC"
              content: !<regular>
                value: 0
              valueType: "int"
              uuid: "<init>_int46"
              fixed: true
              equalsMethodPresent: false
              explicitCastNeeded: false
          - name: "roundingMode"
            value:
              sapientType: "ENUM"
              content: !<regular>
                value: "HALF_UP"
              valueType: "java.math.RoundingMode"
              uuid: "Enum-java.math.RoundingMode-HALF_UP"
              fixed: true
              equalsMethodPresent: false
              explicitCastNeeded: false
          - name: "codes"
            value:
              sapientType: "ARRAY"
              content: !<array>
                values:
                  0:
                    sapientType: "BASIC"
                    content: !<regular>
                      value: "\\u20BF"
                    valueType: "java.lang.String"
                    fixed: true
                    equalsMethodPresent: false
                    explicitCastNeeded: false
                  1:
                    sapientType: "NULL"
                    valueType: "java.lang.String"
                    fixed: false
                    equalsMethodPresent: false
                    explicitCastNeeded: false
                  2:
                    sapientType: "NULL"
                    valueType: "java.lang.String"
                    fixed: false
                    equalsMethodPresent: false
                    explicitCastNeeded: false
                  3:
                    sapientType: "BASIC"
                    content: !<regular>
                      value: "m\\u20BF"
                    valueType: "java.lang.String"
                    fixed: true
                    equalsMethodPresent: false
                    explicitCastNeeded: false
                  4:
                    sapientType: "NULL"
                    valueType: "java.lang.String"
                    fixed: false
                    equalsMethodPresent: false
                    explicitCastNeeded: false
                  5:
                    sapientType: "NULL"
                    valueType: "java.lang.String"
                    fixed: false
                    equalsMethodPresent: false
                    explicitCastNeeded: false
                  6:
                    sapientType: "BASIC"
                    content: !<regular>
                      value: "\\u00B5\\u20BF"
                    valueType: "java.lang.String"
                    fixed: true
                    equalsMethodPresent: false
                    explicitCastNeeded: false
                  7:
                    sapientType: "NULL"
                    valueType: "java.lang.String"
                    fixed: false
                    equalsMethodPresent: false
                    explicitCastNeeded: false
                  8:
                    sapientType: "BASIC"
                    content: !<regular>
                      value: "\\u0219"
                    valueType: "java.lang.String"
                    fixed: true
                    equalsMethodPresent: false
                    explicitCastNeeded: false
              suggestedContent: !<array>
                values:
                  0:
                    sapientType: "BASIC"
                    content: !<regular>
                      value: "\\u20BF"
                    valueType: "java.lang.String"
                    fixed: true
                    equalsMethodPresent: false
                    explicitCastNeeded: false
                  1:
                    sapientType: "NULL"
                    valueType: "java.lang.String"
                    fixed: false
                    equalsMethodPresent: false
                    explicitCastNeeded: false
                  2:
                    sapientType: "NULL"
                    valueType: "java.lang.String"
                    fixed: false
                    equalsMethodPresent: false
                    explicitCastNeeded: false
                  3:
                    sapientType: "BASIC"
                    content: !<regular>
                      value: "m\\u20BF"
                    valueType: "java.lang.String"
                    fixed: true
                    equalsMethodPresent: false
                    explicitCastNeeded: false
                  4:
                    sapientType: "NULL"
                    valueType: "java.lang.String"
                    fixed: false
                    equalsMethodPresent: false
                    explicitCastNeeded: false
                  5:
                    sapientType: "NULL"
                    valueType: "java.lang.String"
                    fixed: false
                    equalsMethodPresent: false
                    explicitCastNeeded: false
                  6:
                    sapientType: "BASIC"
                    content: !<regular>
                      value: "\\u00B5\\u20BF"
                    valueType: "java.lang.String"
                    fixed: true
                    equalsMethodPresent: false
                    explicitCastNeeded: false
                  7:
                    sapientType: "NULL"
                    valueType: "java.lang.String"
                    fixed: false
                    equalsMethodPresent: false
                    explicitCastNeeded: false
                  8:
                    sapientType: "BASIC"
                    content: !<regular>
                      value: "\\u0219"
                    valueType: "java.lang.String"
                    fixed: true
                    equalsMethodPresent: false
                    explicitCastNeeded: false
              valueType: "java.lang.String[]"
              uuid: "<init>_string[]6"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          - name: "codeSeparator"
            value:
              sapientType: "BASIC"
              content: !<regular>
                value: " "
              valueType: "char"
              uuid: "<init>_int47"
              fixed: true
              equalsMethodPresent: false
              explicitCastNeeded: false
          - name: "codePrefixed"
            value:
              sapientType: "BASIC"
              content: !<regular>
                value: true
              valueType: "boolean"
              uuid: "<init>_int48"
              fixed: true
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: true
          createdByTargetCode: true
        suggestedContent: !<new>
          target: "org.bitcoinj.base.utils.MonetaryFormat"
          parameters:
          - name: "negativeSign"
            value:
              sapientType: "BASIC"
              content: !<regular>
                value: "-"
              valueType: "char"
              uuid: "withLocale_char1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          - name: "positiveSign"
            value:
              sapientType: "BASIC"
              content: !<regular>
                value: "\0"
              valueType: "char"
              uuid: "<init>_int42"
              fixed: true
              equalsMethodPresent: false
              explicitCastNeeded: false
          - name: "zeroDigit"
            value:
              sapientType: "BASIC"
              content: !<regular>
                value: "0"
              valueType: "char"
              uuid: "withLocale_char2"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          - name: "decimalMark"
            value:
              sapientType: "BASIC"
              content: !<regular>
                value: "."
              valueType: "char"
              uuid: "withLocale_char3"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          - name: "minDecimals"
            value:
              sapientType: "BASIC"
              content: !<regular>
                value: 2
              valueType: "int"
              uuid: "<init>_int45"
              fixed: true
              equalsMethodPresent: false
              explicitCastNeeded: false
          - name: "decimalGroups"
            value:
              sapientType: "NULL"
              valueType: "java.util.List"
              genericValueType: "java.lang.Integer"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          - name: "shift"
            value:
              sapientType: "BASIC"
              content: !<regular>
                value: 0
              valueType: "int"
              uuid: "<init>_int46"
              fixed: true
              equalsMethodPresent: false
              explicitCastNeeded: false
          - name: "roundingMode"
            value:
              sapientType: "ENUM"
              content: !<regular>
                value: "HALF_UP"
              valueType: "java.math.RoundingMode"
              uuid: "Enum-java.math.RoundingMode-HALF_UP"
              fixed: true
              equalsMethodPresent: false
              explicitCastNeeded: false
          - name: "codes"
            value:
              sapientType: "ARRAY"
              suggestedContent: !<array>
                values:
                  0:
                    sapientType: "BASIC"
                    content: !<regular>
                      value: "\\u20BF"
                    valueType: "java.lang.String"
                    fixed: true
                    equalsMethodPresent: false
                    explicitCastNeeded: false
                  1:
                    sapientType: "NULL"
                    valueType: "java.lang.String"
                    fixed: false
                    equalsMethodPresent: false
                    explicitCastNeeded: false
                  2:
                    sapientType: "NULL"
                    valueType: "java.lang.String"
                    fixed: false
                    equalsMethodPresent: false
                    explicitCastNeeded: false
                  3:
                    sapientType: "BASIC"
                    content: !<regular>
                      value: "m\\u20BF"
                    valueType: "java.lang.String"
                    fixed: true
                    equalsMethodPresent: false
                    explicitCastNeeded: false
                  4:
                    sapientType: "NULL"
                    valueType: "java.lang.String"
                    fixed: false
                    equalsMethodPresent: false
                    explicitCastNeeded: false
                  5:
                    sapientType: "NULL"
                    valueType: "java.lang.String"
                    fixed: false
                    equalsMethodPresent: false
                    explicitCastNeeded: false
                  6:
                    sapientType: "BASIC"
                    content: !<regular>
                      value: "\\u00B5\\u20BF"
                    valueType: "java.lang.String"
                    fixed: true
                    equalsMethodPresent: false
                    explicitCastNeeded: false
                  7:
                    sapientType: "NULL"
                    valueType: "java.lang.String"
                    fixed: false
                    equalsMethodPresent: false
                    explicitCastNeeded: false
                  8:
                    sapientType: "BASIC"
                    content: !<regular>
                      value: "\\u0219"
                    valueType: "java.lang.String"
                    fixed: true
                    equalsMethodPresent: false
                    explicitCastNeeded: false
              valueType: "java.lang.String[]"
              uuid: "<init>_string[]6"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          - name: "codeSeparator"
            value:
              sapientType: "BASIC"
              content: !<regular>
                value: " "
              valueType: "char"
              uuid: "<init>_int47"
              fixed: true
              equalsMethodPresent: false
              explicitCastNeeded: false
          - name: "codePrefixed"
            value:
              sapientType: "BASIC"
              content: !<regular>
                value: true
              valueType: "boolean"
              uuid: "<init>_int48"
              fixed: true
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: true
          createdByTargetCode: true
        valueType: "org.bitcoinj.base.utils.MonetaryFormat"
        uuid: "withLocale_monetaryFormat1"
        fixed: true
        equalsMethodPresent: true
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    uuid: "cc2f3863-72a1-35d9-a9af-cf9de1e08603"
    deleted: false
    disabled: false
    ignoredBySystem: false
    prover: "DEFAULT"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
- method:
    name: "format"
    returnType: "java.lang.CharSequence"
    signature: "format(org.bitcoinj.base.Monetary) : java.lang.CharSequence"
    instructionFingerprint: "65F9EE4E50C7C8E04B0FB170F8B1C065"
    parametersTypes:
    - "org.bitcoinj.base.Monetary"
  paths:
  - pathId: "path1"
    pathIdForUser: "path1"
    testPathName: "formatWhenMaxVisibleDecimalsLessThanOrEqualsToSmallestUnitExponentThrowsIllegalStateException"
    nameDefinedByUser: false
    constructorSignature: "<init>(boolean) : void"
    priorityDefinedByUser: false
    filledByUser: false
    priority: "LOW"
    modelFingerprint: "ECE9BCB1CE9208D7DE8F4D892CA23311"
    problemWasSolvedByProver: true
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "158F306D9B26D5466D8938D2940F98BC"
      index: 1
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "OBJECT"
        content: !<new>
          target: "org.bitcoinj.base.utils.MonetaryFormat"
          parameters:
          - name: "useSymbol"
            value:
              sapientType: "BASIC"
              content: !<regular>
                value: true
              suggestedContent: !<regular>
                value: true
              valueType: "boolean"
              uuid: "<init>_boolean1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: false
        suggestedContent: !<new>
          target: "org.bitcoinj.base.utils.MonetaryFormat"
          parameters:
          - name: "useSymbol"
            value:
              sapientType: "BASIC"
              suggestedContent: !<regular>
                value: true
              valueType: "boolean"
              uuid: "<init>_boolean1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: false
        valueType: "org.bitcoinj.base.utils.MonetaryFormat"
        uuid: "target"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    - type: "INPUT"
      name: "monetary"
      modelFingerprint: "D190B03F76A15C43B85FD1624A00BA6F"
      index: 2
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        suggestedContent: !<unknown_object>
          target: "org.bitcoinj.base.Monetary"
          onlyPojoFunctions: false
          builderPattern: false
        valueType: "org.bitcoinj.base.Monetary"
        uuid: "format_monetary1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    - type: "LOCAL_VARIABLE"
      name: "monetary"
      modelFingerprint: "AA521EDAA08D60ED67691EF9DA8187D4"
      index: 3
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        suggestedContent: !<unknown_object>
          target: "org.bitcoinj.base.Monetary"
          onlyPojoFunctions: false
          builderPattern: false
        valueType: "org.bitcoinj.base.Monetary"
        uuid: "format_monetary1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "monetary"
        name: "smallestUnitExponent"
        parameters: []
        signature: "smallestUnitExponent(): int"
        returnValue:
          sapientType: "BASIC"
          content: !<regular>
            value: 2
          suggestedContent: !<regular>
            value: 2
          valueType: "int"
          uuid: "format_int1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 1025
      staticReadMethodForField: false
      filledByUser: false
    - type: "STATIC"
      name: "Preconditions"
      modelFingerprint: "54C4D53CCD04B53C1A47AA185AEE8B06"
      index: 4
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        valueType: "org.bitcoinj.base.internal.Preconditions"
        uuid: "org.bitcoinj.base.internal.Preconditions"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "org.bitcoinj.base.internal.Preconditions"
        name: "checkState"
        parameters:
        - name: "expression"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: false
            valueType: "boolean"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "messageSupplier"
          value:
            sapientType: "PRIVATE_INNER_CLASS_OR_LAMBDA"
            valueType: "java.util.function.Supplier"
            genericValueType: "java.lang.String"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "checkState(boolean,Supplier): void"
        returnValue:
          sapientType: "EXCEPTION"
          content: !<new>
            target: "java.lang.IllegalStateException"
            parameters: []
            privateConstructor: false
            createdByTargetCode: false
          suggestedContent: !<new>
            target: "java.lang.IllegalStateException"
            parameters: []
            privateConstructor: false
            createdByTargetCode: false
          valueType: "java.lang.IllegalStateException"
          fixed: true
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 9
      staticReadMethodForField: false
      filledByUser: false
    - type: "RESULT"
      name: "result"
      modelFingerprint: "C9C68C9339F812BC8DEC7C1D6145A135"
      index: 5
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "EXCEPTION"
        content: !<new>
          target: "java.lang.IllegalStateException"
          parameters: []
          privateConstructor: false
          createdByTargetCode: false
        suggestedContent: !<new>
          target: "java.lang.IllegalStateException"
          parameters: []
          privateConstructor: false
          createdByTargetCode: false
        valueType: "java.lang.IllegalStateException"
        fixed: true
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    uuid: "93ef893b-c9d5-3a85-9f7e-7bb1fd8e643f"
    deleted: false
    disabled: false
    ignoredBySystem: false
    prover: "DEFAULT"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
  - pathId: "path2"
    pathIdForUser: "path2"
    testPathName: "formatWhenMaxVisibleDecimalsGreaterThanSmallestUnitExponentThrowsIllegalStateException"
    nameDefinedByUser: false
    constructorSignature: "<init>(boolean) : void"
    priorityDefinedByUser: false
    filledByUser: false
    priority: "LOW"
    modelFingerprint: "9E6F9FCDC0075137D7573AEEDAD3D1B4"
    problemWasSolvedByProver: true
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "158F306D9B26D5466D8938D2940F98BC"
      index: 1
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "OBJECT"
        content: !<new>
          target: "org.bitcoinj.base.utils.MonetaryFormat"
          parameters:
          - name: "useSymbol"
            value:
              sapientType: "BASIC"
              content: !<regular>
                value: true
              suggestedContent: !<regular>
                value: true
              valueType: "boolean"
              uuid: "<init>_boolean1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: false
        suggestedContent: !<new>
          target: "org.bitcoinj.base.utils.MonetaryFormat"
          parameters:
          - name: "useSymbol"
            value:
              sapientType: "BASIC"
              suggestedContent: !<regular>
                value: true
              valueType: "boolean"
              uuid: "<init>_boolean1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: false
        valueType: "org.bitcoinj.base.utils.MonetaryFormat"
        uuid: "target"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    - type: "INPUT"
      name: "monetary"
      modelFingerprint: "D190B03F76A15C43B85FD1624A00BA6F"
      index: 2
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        suggestedContent: !<unknown_object>
          target: "org.bitcoinj.base.Monetary"
          onlyPojoFunctions: false
          builderPattern: false
        valueType: "org.bitcoinj.base.Monetary"
        uuid: "format_monetary1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    - type: "LOCAL_VARIABLE"
      name: "monetary"
      modelFingerprint: "F38D71A82CA4FFE7C1DDB4AEF02290B6"
      index: 3
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        suggestedContent: !<unknown_object>
          target: "org.bitcoinj.base.Monetary"
          onlyPojoFunctions: false
          builderPattern: false
        valueType: "org.bitcoinj.base.Monetary"
        uuid: "format_monetary1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "monetary"
        name: "smallestUnitExponent"
        parameters: []
        signature: "smallestUnitExponent(): int"
        returnValue:
          sapientType: "BASIC"
          content: !<regular>
            value: 1
          suggestedContent: !<regular>
            value: 1
          valueType: "int"
          uuid: "format_int1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 1025
      staticReadMethodForField: false
      filledByUser: false
    - type: "STATIC"
      name: "Preconditions"
      modelFingerprint: "54C4D53CCD04B53C1A47AA185AEE8B06"
      index: 4
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        valueType: "org.bitcoinj.base.internal.Preconditions"
        uuid: "org.bitcoinj.base.internal.Preconditions"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "org.bitcoinj.base.internal.Preconditions"
        name: "checkState"
        parameters:
        - name: "expression"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: false
            valueType: "boolean"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "messageSupplier"
          value:
            sapientType: "PRIVATE_INNER_CLASS_OR_LAMBDA"
            valueType: "java.util.function.Supplier"
            genericValueType: "java.lang.String"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "checkState(boolean,Supplier): void"
        returnValue:
          sapientType: "EXCEPTION"
          content: !<new>
            target: "java.lang.IllegalStateException"
            parameters: []
            privateConstructor: false
            createdByTargetCode: false
          suggestedContent: !<new>
            target: "java.lang.IllegalStateException"
            parameters: []
            privateConstructor: false
            createdByTargetCode: false
          valueType: "java.lang.IllegalStateException"
          fixed: true
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 9
      staticReadMethodForField: false
      filledByUser: false
    - type: "RESULT"
      name: "result"
      modelFingerprint: "C9C68C9339F812BC8DEC7C1D6145A135"
      index: 5
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "EXCEPTION"
        content: !<new>
          target: "java.lang.IllegalStateException"
          parameters: []
          privateConstructor: false
          createdByTargetCode: false
        suggestedContent: !<new>
          target: "java.lang.IllegalStateException"
          parameters: []
          privateConstructor: false
          createdByTargetCode: false
        valueType: "java.lang.IllegalStateException"
        fixed: true
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    uuid: "6a648dd6-5ded-38b1-8ffe-c69abe6c9e98"
    deleted: false
    disabled: false
    ignoredBySystem: false
    prover: "DEFAULT"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
- method:
    name: "parse"
    returnType: "org.bitcoinj.base.Coin"
    signature: "parse(java.lang.String) : org.bitcoinj.base.Coin"
    throwsExceptions:
    - "java.lang.NumberFormatException"
    instructionFingerprint: "A465C4B18543B51052850F1C038CDB54"
    parametersTypes:
    - "java.lang.String"
  paths:
  - pathId: "path1"
    pathIdForUser: "path1"
    testPathName: "parseWhenDECIMALS_PADDINGLengthGreaterThanOrEqualsToSmallestUnitExponentThrowsIllegalStateException"
    nameDefinedByUser: false
    constructorSignature: "<init>(boolean) : void"
    priorityDefinedByUser: false
    filledByUser: false
    priority: "LOW"
    modelFingerprint: "F348A0894FCE70BDF1CFD0522E8FB0FD"
    problemWasSolvedByProver: true
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "158F306D9B26D5466D8938D2940F98BC"
      index: 1
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "OBJECT"
        content: !<new>
          target: "org.bitcoinj.base.utils.MonetaryFormat"
          parameters:
          - name: "useSymbol"
            value:
              sapientType: "BASIC"
              content: !<regular>
                value: true
              suggestedContent: !<regular>
                value: true
              valueType: "boolean"
              uuid: "<init>_boolean1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: false
        suggestedContent: !<new>
          target: "org.bitcoinj.base.utils.MonetaryFormat"
          parameters:
          - name: "useSymbol"
            value:
              sapientType: "BASIC"
              suggestedContent: !<regular>
                value: true
              valueType: "boolean"
              uuid: "<init>_boolean1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: false
        valueType: "org.bitcoinj.base.utils.MonetaryFormat"
        uuid: "target"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    - type: "INPUT"
      name: "str"
      modelFingerprint: "8B29BF11053EA8ECE2269DD21D27063D"
      index: 2
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "BASIC"
        content: !<regular>
          value: "str1"
        valueType: "java.lang.String"
        uuid: "parse_string1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    - type: "STATIC"
      name: "Preconditions"
      modelFingerprint: "54C4D53CCD04B53C1A47AA185AEE8B06"
      index: 3
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        valueType: "org.bitcoinj.base.internal.Preconditions"
        uuid: "org.bitcoinj.base.internal.Preconditions"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "org.bitcoinj.base.internal.Preconditions"
        name: "checkState"
        parameters:
        - name: "expression"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: false
            valueType: "boolean"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "messageSupplier"
          value:
            sapientType: "PRIVATE_INNER_CLASS_OR_LAMBDA"
            valueType: "java.util.function.Supplier"
            genericValueType: "java.lang.String"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "checkState(boolean,Supplier): void"
        returnValue:
          sapientType: "EXCEPTION"
          content: !<new>
            target: "java.lang.IllegalStateException"
            parameters: []
            privateConstructor: false
            createdByTargetCode: false
          suggestedContent: !<new>
            target: "java.lang.IllegalStateException"
            parameters: []
            privateConstructor: false
            createdByTargetCode: false
          valueType: "java.lang.IllegalStateException"
          fixed: true
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 9
      staticReadMethodForField: false
      filledByUser: false
    - type: "RESULT"
      name: "result"
      modelFingerprint: "C9C68C9339F812BC8DEC7C1D6145A135"
      index: 4
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "EXCEPTION"
        content: !<new>
          target: "java.lang.IllegalStateException"
          parameters: []
          privateConstructor: false
          createdByTargetCode: false
        suggestedContent: !<new>
          target: "java.lang.IllegalStateException"
          parameters: []
          privateConstructor: false
          createdByTargetCode: false
        valueType: "java.lang.IllegalStateException"
        fixed: true
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    uuid: "07a9f07d-6825-3bb7-807f-438d0659ea5f"
    deleted: false
    disabled: false
    ignoredBySystem: false
    prover: "DEFAULT"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
- method:
    name: "parseFiat"
    returnType: "org.bitcoinj.base.utils.Fiat"
    signature: "parseFiat(java.lang.String,java.lang.String) : org.bitcoinj.base.utils.Fiat"
    throwsExceptions:
    - "java.lang.NumberFormatException"
    instructionFingerprint: "DAA9C649A2376140F982F5203FFF16E7"
    parametersTypes:
    - "java.lang.String"
    - "java.lang.String"
  paths:
  - pathId: "path1"
    pathIdForUser: "path1"
    testPathName: "parseFiatWhenDECIMALS_PADDINGLengthGreaterThanOrEqualsToSmallestUnitExponentThrowsIllegalStateException"
    nameDefinedByUser: false
    constructorSignature: "<init>(boolean) : void"
    priorityDefinedByUser: false
    filledByUser: false
    priority: "LOW"
    modelFingerprint: "4928473A00726B490186653184500FB9"
    problemWasSolvedByProver: true
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "158F306D9B26D5466D8938D2940F98BC"
      index: 1
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "OBJECT"
        content: !<new>
          target: "org.bitcoinj.base.utils.MonetaryFormat"
          parameters:
          - name: "useSymbol"
            value:
              sapientType: "BASIC"
              content: !<regular>
                value: true
              suggestedContent: !<regular>
                value: true
              valueType: "boolean"
              uuid: "<init>_boolean1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: false
        suggestedContent: !<new>
          target: "org.bitcoinj.base.utils.MonetaryFormat"
          parameters:
          - name: "useSymbol"
            value:
              sapientType: "BASIC"
              suggestedContent: !<regular>
                value: true
              valueType: "boolean"
              uuid: "<init>_boolean1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: false
        valueType: "org.bitcoinj.base.utils.MonetaryFormat"
        uuid: "target"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    - type: "INPUT"
      name: "currencyCode"
      modelFingerprint: "C81BE410A0DEDCFD5F73783107214F8B"
      index: 2
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "BASIC"
        content: !<regular>
          value: "currencyCode1"
        valueType: "java.lang.String"
        uuid: "parseFiat_string1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    - type: "INPUT"
      name: "str"
      modelFingerprint: "8B29BF11053EA8ECE2269DD21D27063D"
      index: 3
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "BASIC"
        content: !<regular>
          value: "str1"
        valueType: "java.lang.String"
        uuid: "parseFiat_string2"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    - type: "STATIC"
      name: "Preconditions"
      modelFingerprint: "54C4D53CCD04B53C1A47AA185AEE8B06"
      index: 4
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        valueType: "org.bitcoinj.base.internal.Preconditions"
        uuid: "org.bitcoinj.base.internal.Preconditions"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "org.bitcoinj.base.internal.Preconditions"
        name: "checkState"
        parameters:
        - name: "expression"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: false
            valueType: "boolean"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "messageSupplier"
          value:
            sapientType: "PRIVATE_INNER_CLASS_OR_LAMBDA"
            valueType: "java.util.function.Supplier"
            genericValueType: "java.lang.String"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "checkState(boolean,Supplier): void"
        returnValue:
          sapientType: "EXCEPTION"
          content: !<new>
            target: "java.lang.IllegalStateException"
            parameters: []
            privateConstructor: false
            createdByTargetCode: false
          suggestedContent: !<new>
            target: "java.lang.IllegalStateException"
            parameters: []
            privateConstructor: false
            createdByTargetCode: false
          valueType: "java.lang.IllegalStateException"
          fixed: true
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 9
      staticReadMethodForField: false
      filledByUser: false
    - type: "RESULT"
      name: "result"
      modelFingerprint: "C9C68C9339F812BC8DEC7C1D6145A135"
      index: 5
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "EXCEPTION"
        content: !<new>
          target: "java.lang.IllegalStateException"
          parameters: []
          privateConstructor: false
          createdByTargetCode: false
        suggestedContent: !<new>
          target: "java.lang.IllegalStateException"
          parameters: []
          privateConstructor: false
          createdByTargetCode: false
        valueType: "java.lang.IllegalStateException"
        fixed: true
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    uuid: "b9eee9ff-59f0-3ba3-85c4-6a295192363a"
    deleted: false
    disabled: false
    ignoredBySystem: false
    prover: "DEFAULT"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
- method:
    name: "code"
    returnType: "java.lang.String"
    signature: "code() : java.lang.String"
    instructionFingerprint: "A820FCD8A967D54DDF1564B94F1414C7"
    parametersTypes: []
  paths:
  - pathId: "path1"
    pathIdForUser: "path1"
    testPathName: "code1WhenShiftIndexOfCodesIsNotNull"
    nameDefinedByUser: false
    constructorSignature: "<init>(boolean) : void"
    priorityDefinedByUser: false
    filledByUser: false
    priority: "LOW"
    modelFingerprint: "2DA3787A8F9BB7029250C3DAE5ECA2F2"
    problemWasSolvedByProver: true
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "158F306D9B26D5466D8938D2940F98BC"
      index: 1
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "OBJECT"
        content: !<new>
          target: "org.bitcoinj.base.utils.MonetaryFormat"
          parameters:
          - name: "useSymbol"
            value:
              sapientType: "BASIC"
              content: !<regular>
                value: true
              suggestedContent: !<regular>
                value: true
              valueType: "boolean"
              uuid: "<init>_boolean1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: false
        suggestedContent: !<new>
          target: "org.bitcoinj.base.utils.MonetaryFormat"
          parameters:
          - name: "useSymbol"
            value:
              sapientType: "BASIC"
              suggestedContent: !<regular>
                value: true
              valueType: "boolean"
              uuid: "<init>_boolean1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: false
        valueType: "org.bitcoinj.base.utils.MonetaryFormat"
        uuid: "target"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    - type: "RESULT"
      name: "result"
      modelFingerprint: "39CEED83B7D8E12491DFC364693D2670"
      index: 2
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "BASIC"
        content: !<regular>
          value: "\\u20BF"
        valueType: "java.lang.String"
        fixed: false
        equalsMethodPresent: true
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    uuid: "2cd301d0-2498-3878-97bf-070e1fdb8e53"
    deleted: false
    disabled: false
    ignoredBySystem: false
    prover: "DEFAULT"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
- method:
    name: "equals"
    returnType: "boolean"
    signature: "equals(java.lang.Object) : boolean"
    instructionFingerprint: "704C4F062E500FE7AD1208BBB6648E65"
    parametersTypes:
    - "java.lang.Object"
  paths:
  - pathId: "path1"
    pathIdForUser: "path1"
    testPathName: "equalsWhenOEqualsThis"
    nameDefinedByUser: false
    constructorSignature: "<init>(boolean) : void"
    priorityDefinedByUser: false
    filledByUser: false
    priority: "LOW"
    modelFingerprint: "FD4C0B23B7EA2CEE58CEE4B0AD106F43"
    problemWasSolvedByProver: true
    truncated: true
    inputParameters: []
    uuid: "d65113e0-6787-3a54-9186-95c0d0aa361d"
    deleted: false
    disabled: false
    ignoredBySystem: false
    prover: "DEFAULT"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
  - pathId: "path4"
    pathIdForUser: "path2"
    testPathName: "equalsWhenOIsNull"
    nameDefinedByUser: false
    constructorSignature: "<init>(boolean) : void"
    priorityDefinedByUser: false
    filledByUser: false
    priority: "LOW"
    modelFingerprint: "053B1FBD424665CA827292E8B348BF22"
    problemWasSolvedByProver: true
    truncated: true
    inputParameters: []
    uuid: "a2108c4d-bcbc-39b5-8254-0588b654f131"
    deleted: true
    disabled: false
    ignoredBySystem: true
    prover: "DEFAULT"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
  - pathId: "path2"
    pathIdForUser: "path3"
    testPathName: "equalsWhenOGetClassNotEqualsGetClass"
    nameDefinedByUser: false
    constructorSignature: "<init>(boolean) : void"
    priorityDefinedByUser: false
    filledByUser: false
    priority: "LOW"
    modelFingerprint: "B5FF79333933ABCBB7310BA50C17C89B"
    problemWasSolvedByProver: true
    truncated: true
    inputParameters: []
    uuid: "8a01d7c3-3f4e-3e6a-a2a9-a725cd52717a"
    deleted: false
    disabled: false
    ignoredBySystem: false
    prover: "DEFAULT"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
  - pathId: "path3"
    pathIdForUser: "path4"
    testPathName: "equalsWhenObjectsNotEqualsThisNegativeSignOtherNegativeSign"
    nameDefinedByUser: false
    constructorSignature: "<init>(boolean) : void"
    priorityDefinedByUser: false
    filledByUser: false
    priority: "LOW"
    modelFingerprint: "F7AFC6B43B7A72E5DFAF1627FFC98B0D"
    problemWasSolvedByProver: true
    truncated: true
    inputParameters: []
    uuid: "f1f26e02-c2ac-30e2-9dff-c0976d2a2766"
    deleted: false
    disabled: false
    ignoredBySystem: false
    prover: "DEFAULT"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
