---
modelFingerprint: "E80BA26EF8DDF8B256489ED3803D6AA6"
methods:
- method:
    name: "read"
    signature: "read(java.nio.ByteBuffer) : org.bitcoinj.core.PartialMerkleTree"
    sourceCodeSignature: "PartialMerkleTree read(ByteBuffer payload)"
    instructionFingerprint: "7F2C87FDD6164306F0F7E521E10EBC66"
  paths:
  - pathId: "path1"
    testPathName: "readWhenILessThanNHashes"
    modelFingerprint: "433B1C91A9417006364BAA4CB7231101"
    problemWasSolvedByProver: false
    truncated: false
    inputParameters:
    - type: "INPUT"
      name: "payload"
      modelFingerprint: "D30B43598E2900E2880BDD9712DAE751"
      index: 1
      valueUuid: "read_byteBuffer1"
    - type: "STATIC"
      name: "ByteUtils"
      modelFingerprint: "E3F6AE3AA92A103F2CB450E8F139AE5E"
      index: 2
      valueUuid: "uuid1"
      methodExercised:
        target: "org.bitcoinj.base.internal.ByteUtils"
        name: "readUint32"
        parameters:
        - name: "buf"
          valueUuid: "read_byteBuffer1"
        throwsExceptions:
        - "java.nio.BufferUnderflowException"
        signature: "readUint32(ByteBuffer): long throws java.nio.BufferUnderflowException"
        returnValueUuid: "read_long1"
        access: 9
    - type: "STATIC"
      name: "VarInt"
      modelFingerprint: "5E92D544C5565BF042F406F470017DD5"
      index: 3
      valueUuid: "uuid2"
      methodExercised:
        target: "org.bitcoinj.base.VarInt"
        name: "read"
        parameters:
        - name: "value"
          valueUuid: "read_byteBuffer1"
        throwsExceptions:
        - "java.nio.BufferUnderflowException"
        signature: "read(ByteBuffer): VarInt throws java.nio.BufferUnderflowException"
        returnValueUuid: "read_varInt1"
        access: 9
    - type: "LOCAL_VARIABLE"
      name: "nHashesVarInt"
      modelFingerprint: "B43C3ADB283FA5163913ABBABB5EC75C"
      index: 4
      valueUuid: "read_varInt1"
      methodExercised:
        target: "nHashesVarInt"
        name: "fitsInt"
        parameters: []
        signature: "fitsInt(): boolean"
        returnValueUuid: "read_boolean1"
        access: 1
    - type: "STATIC"
      name: "Preconditions"
      modelFingerprint: "3D0E364D028507E0FB885F547F95618C"
      index: 5
      valueUuid: "uuid4"
      methodExercised:
        target: "org.bitcoinj.base.internal.Preconditions"
        name: "check"
        parameters:
        - name: "expression"
          valueUuid: "read_boolean1"
        - name: "exceptionSupplier"
          valueUuid: "uuid3"
        throwsExceptions:
        - "java.lang.Throwable"
        signature: "check(boolean,Supplier): void throws java.lang.Throwable"
        returnValueUuid: "read_void1"
        access: 9
    - type: "LOCAL_VARIABLE"
      name: "nHashesVarInt"
      modelFingerprint: "E18E8389FB67DC1989D76FFF7E8C92E6"
      index: 6
      valueUuid: "read_varInt1"
      methodExercised:
        target: "nHashesVarInt"
        name: "intValue"
        parameters: []
        throwsExceptions:
        - "java.lang.ArithmeticException"
        signature: "intValue(): int throws java.lang.ArithmeticException"
        returnValueUuid: "read_int2"
        access: 1
    - type: "STATIC"
      name: "Sha256Hash"
      modelFingerprint: "76F0EAC04B681A4E46775234C19CBF42"
      index: 7
      valueUuid: "uuid5"
      methodExercised:
        target: "org.bitcoinj.base.Sha256Hash"
        name: "read"
        parameters:
        - name: "buf"
          valueUuid: "read_byteBuffer1"
        throwsExceptions:
        - "java.nio.BufferUnderflowException"
        signature: "read(ByteBuffer): Sha256Hash throws java.nio.BufferUnderflowException"
        returnValueUuid: "read_sha256Hash1"
        access: 9
    - type: "STATIC"
      name: "Buffers"
      modelFingerprint: "A4936A7F0FF953D4777CB889AB70B2D8"
      index: 8
      valueUuid: "uuid6"
      methodExercised:
        target: "org.bitcoinj.base.internal.Buffers"
        name: "readLengthPrefixedBytes"
        parameters:
        - name: "buf"
          valueUuid: "read_byteBuffer1"
        throwsExceptions:
        - "java.nio.BufferUnderflowException"
        signature: "readLengthPrefixedBytes(ByteBuffer): byte[] throws java.nio.BufferUnderflowException"
        returnValueUuid: "read_byte[]1"
        access: 9
    - type: "RESULT"
      name: "result"
      modelFingerprint: "2592F06810D984E5CF309AE712D29AFE"
      index: 9
      valueUuid: "read_partialMerkleTree1"
    uuid: "4aa4bedf-c7b1-3c8b-9764-9ede7c68f03b"
    deleted: false
    disabled: false
    ignoredBySystem: false
    failureReason:
      reason: "ERROR_RECALCULATING_SUGGESTED_VALUES"
    prover: "DEFAULT"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues:
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.nio.ByteBuffer"
        method: "allocateDirect"
        methodParameters:
        - name: "capacity"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 64
            valueType: "int"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
      valueType: "java.nio.ByteBuffer"
      uuid: "read_byteBuffer1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.bitcoinj.base.internal.ByteUtils"
      uuid: "uuid1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: 1
      valueType: "long"
      uuid: "read_long1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.nio.ByteBuffer"
        method: "allocateDirect"
        methodParameters:
        - name: "capacity"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 64
            valueType: "int"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
      valueType: "java.nio.ByteBuffer"
      uuid: "read_byteBuffer1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.bitcoinj.base.VarInt"
      uuid: "uuid2"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.bitcoinj.base.VarInt"
      uuid: "read_varInt1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.nio.ByteBuffer"
        method: "allocateDirect"
        methodParameters:
        - name: "capacity"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 64
            valueType: "int"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
      valueType: "java.nio.ByteBuffer"
      uuid: "read_byteBuffer1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.bitcoinj.base.VarInt"
      uuid: "read_varInt1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "read_boolean1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.bitcoinj.base.internal.Preconditions"
      uuid: "uuid4"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      valueType: "void"
      uuid: "read_void1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "read_boolean1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "PRIVATE_INNER_CLASS_OR_LAMBDA"
      valueType: "java.util.function.Supplier"
      uuid: "uuid3"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.bitcoinj.base.VarInt"
      uuid: "read_varInt1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: 1
      valueType: "int"
      uuid: "read_int2"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.bitcoinj.base.Sha256Hash"
      uuid: "uuid5"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.bitcoinj.base.Sha256Hash"
      uuid: "read_sha256Hash1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.nio.ByteBuffer"
        method: "allocateDirect"
        methodParameters:
        - name: "capacity"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 64
            valueType: "int"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
      valueType: "java.nio.ByteBuffer"
      uuid: "read_byteBuffer1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.bitcoinj.base.internal.Buffers"
      uuid: "uuid6"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "byte[]"
      uuid: "read_byte[]1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.nio.ByteBuffer"
        method: "allocateDirect"
        methodParameters:
        - name: "capacity"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 64
            valueType: "int"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
      valueType: "java.nio.ByteBuffer"
      uuid: "read_byteBuffer1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.bitcoinj.core.PartialMerkleTree"
        parameters:
        - name: "origTxCount"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 1
            valueType: "int"
            originalValueType: "long"
            uuid: "read_int1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "hashes"
          value:
            sapientType: "COLLECTION"
            content: !<collection>
              collectionClass: "java.util.ArrayList"
              parameters:
              - name: "initialCapacity"
                value:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: 1
                  valueType: "int"
                  uuid: "read_int3"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
              values:
              - sapientType: "MOCK"
                valueType: "org.bitcoinj.base.Sha256Hash"
                uuid: "read_sha256Hash1"
                fixed: false
                equalsMethodPresent: false
                explicitCastNeeded: false
            valueType: "java.util.List"
            genericValueType: "org.bitcoinj.base.Sha256Hash"
            uuid: "read_arrayList1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "bits"
          value:
            sapientType: "ARRAY"
            content: !<array>
              values: {}
            valueType: "byte[]"
            uuid: "read_byte[]1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: true
      valueType: "org.bitcoinj.core.PartialMerkleTree"
      uuid: "read_partialMerkleTree1"
      fixed: true
      equalsMethodPresent: true
      explicitCastNeeded: false
  - pathId: "path2"
    testPathName: "readWhenINotLessThanNHashes"
    modelFingerprint: "B1861580E3FF9A9DD83340A1BE30FA75"
    problemWasSolvedByProver: true
    truncated: true
    inputParameters: []
    uuid: "0d109fa9-62d4-3387-945b-f90b354c3b23"
    deleted: true
    disabled: false
    ignoredBySystem: true
    prover: "DEFAULT"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues: []
- method:
    name: "buildFromLeaves"
    signature: "buildFromLeaves(byte[],java.util.List<org.bitcoinj.base.Sha256Hash>)\
      \ : org.bitcoinj.core.PartialMerkleTree"
    sourceCodeSignature: "PartialMerkleTree buildFromLeaves(byte[] includeBits, List<Sha256Hash>\
      \ allLeafHashes)"
    instructionFingerprint: "85329884A1E40221F1D362CB96C9A333"
  paths:
  - pathId: "path6"
    testPathName: "buildFromLeavesWhenBitListNotGetI"
    modelFingerprint: "66246CECAB3E0804898891C9EA36759B"
    problemWasSolvedByProver: false
    truncated: false
    inputParameters:
    - type: "INPUT"
      name: "includeBits"
      modelFingerprint: "1A05F64BD7AF9FF65FF8ED3CC5C1C791"
      index: 1
      valueUuid: "buildFromLeaves_byte[]1"
    - type: "INPUT"
      name: "allLeafHashes"
      modelFingerprint: "2B0FB878E9C916848E473F67B3014662"
      index: 2
      valueUuid: "buildFromLeaves_list1"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "CD0E4F9DC95BFA9CB34B06E42E0FB99C"
      index: 3
      valueUuid: "buildFromLeaves_partialMerkleTree1"
    uuid: "561174ec-e4d3-3952-bafc-b3a0e4e3d1f1"
    deleted: false
    disabled: true
    ignoredBySystem: false
    failureReason:
      reason: "BITWISE_NOT_SUPPORTED"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: true
    allValues:
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "byte[]"
      uuid: "buildFromLeaves_byte[]1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.List"
      genericValueType: "org.bitcoinj.base.Sha256Hash"
      uuid: "buildFromLeaves_list1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.bitcoinj.core.PartialMerkleTree"
        parameters:
        - name: "origTxCount"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 0
            valueType: "int"
            uuid: "buildFromLeaves_int9"
            fixed: false
            collectionUuid: "buildFromLeaves_list1"
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "hashes"
          value:
            sapientType: "COLLECTION"
            content: !<collection>
              collectionClass: "java.util.ArrayList"
              parameters: []
              values:
              - sapientType: "MOCK"
                valueType: "org.bitcoinj.base.Sha256Hash"
                uuid: "calcHash_sha256Hash1"
                fixed: false
                collectionUuid: "buildFromLeaves_list1"
                equalsMethodPresent: false
                explicitCastNeeded: false
            valueType: "java.util.List"
            genericValueType: "org.bitcoinj.base.Sha256Hash"
            uuid: "buildFromLeaves_arrayList2"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "bits"
          value:
            sapientType: "ARRAY"
            content: !<array>
              values:
                0:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: 0
                  valueType: "byte"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
            valueType: "byte[]"
            uuid: "buildFromLeaves_byte[]2"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: true
      valueType: "org.bitcoinj.core.PartialMerkleTree"
      uuid: "buildFromLeaves_partialMerkleTree1"
      fixed: true
      equalsMethodPresent: true
      explicitCastNeeded: false
  - pathId: "path1"
    testPathName: "buildFromLeavesWhenBitListGetI"
    modelFingerprint: "FD86BE9CAD43B5511A6D6915C3D6F749"
    problemWasSolvedByProver: false
    truncated: false
    inputParameters:
    - type: "INPUT"
      name: "includeBits"
      modelFingerprint: "0DD2EE0DB9595867A8E98697E92C212E"
      index: 1
      valueUuid: "buildFromLeaves_byte[]1"
    - type: "INPUT"
      name: "allLeafHashes"
      modelFingerprint: "66627F706C08BD1AA9AC6BE058DDACBD"
      index: 2
      valueUuid: "buildFromLeaves_list1"
    - type: "STATIC"
      name: "ByteUtils"
      modelFingerprint: "06941BBB1DB22124DB75E92B290B1417"
      index: 3
      valueUuid: "uuid12"
      methodExercised:
        target: "org.bitcoinj.base.internal.ByteUtils"
        name: "checkBitLE"
        parameters:
        - name: "data"
          valueUuid: "buildFromLeaves_byte[]1"
        - name: "index"
          valueUuid: "traverseAndBuild_int3"
        signature: "checkBitLE(byte[],int): boolean"
        returnValueUuid: "traverseAndBuild_boolean1"
        access: 9
    - type: "STATIC"
      name: "ByteUtils"
      modelFingerprint: "A3C575285BFDAF5B36B427372B6425CA"
      index: 4
      valueUuid: "uuid13"
      methodExercised:
        target: "org.bitcoinj.base.internal.ByteUtils"
        name: "setBitLE"
        parameters:
        - name: "data"
          valueUuid: "buildFromLeaves_byte[]2"
        - name: "index"
          valueUuid: "buildFromLeaves_int7"
        signature: "setBitLE(byte[],int): void"
        returnValueUuid: "buildFromLeaves_void1"
        access: 9
    - type: "RESULT"
      name: "result"
      modelFingerprint: "8398340BB3CEE763904A0C66004E5199"
      index: 5
      valueUuid: "buildFromLeaves_partialMerkleTree1"
    uuid: "a97a8812-5dd8-38c4-b2de-feda59df7534"
    deleted: false
    disabled: true
    ignoredBySystem: false
    failureReason:
      reason: "BITWISE_NOT_SUPPORTED"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: true
    allValues:
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "byte[]"
      uuid: "buildFromLeaves_byte[]1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.ArrayList"
        parameters: []
        values:
        - sapientType: "MOCK"
          valueType: "org.bitcoinj.base.Sha256Hash"
          uuid: "buildFromLeaves_list1Item0"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
      valueType: "java.util.List"
      genericValueType: "org.bitcoinj.base.Sha256Hash"
      uuid: "buildFromLeaves_list1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.bitcoinj.base.internal.ByteUtils"
      uuid: "uuid12"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "traverseAndBuild_boolean1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "byte[]"
      uuid: "buildFromLeaves_byte[]1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: 0
      valueType: "int"
      uuid: "traverseAndBuild_int3"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "REAL"
      valueType: "org.bitcoinj.base.internal.ByteUtils"
      uuid: "uuid13"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      valueType: "void"
      uuid: "buildFromLeaves_void1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "ARRAY"
      content: !<array>
        values:
          0:
            sapientType: "BASIC"
            content: !<regular>
              value: 0
            valueType: "byte"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
      valueType: "byte[]"
      uuid: "buildFromLeaves_byte[]2"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: 0
      valueType: "int"
      uuid: "buildFromLeaves_int7"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.bitcoinj.core.PartialMerkleTree"
        parameters:
        - name: "origTxCount"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 1
            valueType: "int"
            uuid: "buildFromLeaves_int11"
            fixed: false
            collectionUuid: "buildFromLeaves_list1"
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "hashes"
          value:
            sapientType: "COLLECTION"
            content: !<collection>
              collectionClass: "java.util.ArrayList"
              parameters: []
              values: []
            valueType: "java.util.List"
            genericValueType: "org.bitcoinj.base.Sha256Hash"
            uuid: "buildFromLeaves_arrayList2"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "bits"
          value:
            sapientType: "ARRAY"
            content: !<array>
              values:
                0:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: 1
                  valueType: "byte"
                  uuid: "buildFromLeaves_byte[]2-item0"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
            valueType: "byte[]"
            uuid: "buildFromLeaves_byte[]2"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: true
      valueType: "org.bitcoinj.core.PartialMerkleTree"
      uuid: "buildFromLeaves_partialMerkleTree1"
      fixed: true
      equalsMethodPresent: true
      explicitCastNeeded: false
  - pathId: "path2"
    testPathName: "buildFromLeavesWhenILessThanBitListSizeAndBitListGetI"
    modelFingerprint: "E7CC6614BD9402F08AB82214E132E757"
    problemWasSolvedByProver: false
    truncated: true
    inputParameters: []
    uuid: "6e292594-34aa-34ee-95aa-f8b1c35c29b5"
    deleted: true
    disabled: false
    ignoredBySystem: true
    failureReason:
      reason: "BITWISE_NOT_SUPPORTED"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues: []
  - pathId: "path5"
    testPathName: "buildFromLeavesWhenILessThanBitListSizeAndBitListNotGetI"
    modelFingerprint: "4659370D013B3CA69519C95F7EE46635"
    problemWasSolvedByProver: false
    truncated: true
    inputParameters: []
    uuid: "48b33629-b16b-367c-894a-e024c0be4316"
    deleted: true
    disabled: false
    ignoredBySystem: true
    failureReason:
      reason: "BITWISE_NOT_SUPPORTED"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues: []
  - pathId: "path3"
    testPathName: "buildFromLeavesWhenPPlus1LessThanGetTreeWidthHashesSizeHAndILessThanBitListSizeAndBitListNotGetI"
    modelFingerprint: "F050728B2E0D352B0EC6A006FDF868E2"
    problemWasSolvedByProver: false
    truncated: false
    inputParameters:
    - type: "INPUT"
      name: "includeBits"
      modelFingerprint: "0DD2EE0DB9595867A8E98697E92C212E"
      index: 1
      valueUuid: "buildFromLeaves_byte[]1"
    - type: "INPUT"
      name: "allLeafHashes"
      modelFingerprint: "66627F706C08BD1AA9AC6BE058DDACBD"
      index: 2
      valueUuid: "buildFromLeaves_list1"
    - type: "STATIC"
      name: "ByteUtils"
      modelFingerprint: "1138DA34F0AD7023A27BCA24A0816211"
      index: 3
      valueUuid: "uuid20"
      methodExercised:
        target: "org.bitcoinj.base.internal.ByteUtils"
        name: "checkBitLE"
        parameters:
        - name: "data"
          valueUuid: "buildFromLeaves_byte[]1"
        - name: "index"
          valueUuid: "traverseAndBuild_int3"
        signature: "checkBitLE(byte[],int): boolean"
        returnValueUuid: "traverseAndBuild_boolean1"
        access: 9
    - type: "LOCAL_VARIABLE"
      name: "left"
      modelFingerprint: "02232E6D25914A8F2136CA76A6906D1B"
      index: 4
      valueUuid: "calcHash_sha256Hash1"
      methodExercised:
        target: "left"
        name: "getBytes"
        parameters: []
        signature: "getBytes(): byte[]"
        returnValueUuid: "calcHash_byte[]1"
        access: 1
    - type: "LOCAL_VARIABLE"
      name: "right"
      modelFingerprint: "02232E6D25914A8F2136CA76A6906D1B"
      index: 5
      valueUuid: "calcHash_sha256Hash2"
      methodExercised:
        target: "right"
        name: "getBytes"
        parameters: []
        signature: "getBytes(): byte[]"
        returnValueUuid: "calcHash_byte[]2"
        access: 1
    - type: "STATIC"
      name: "ByteUtils"
      modelFingerprint: "DA04F1711DB88BA3FAA8D1F3BF82DAB0"
      index: 6
      valueUuid: "uuid21"
      methodExercised:
        target: "org.bitcoinj.base.internal.ByteUtils"
        name: "reverseBytes"
        parameters:
        - name: "i"
          valueUuid: "calcHash_byte[]1"
        signature: "reverseBytes(byte[]): byte[]"
        returnValueUuid: "combineLeftRight_byte[]1"
        access: 9
    - type: "STATIC"
      name: "ByteUtils"
      modelFingerprint: "DA04F1711DB88BA3FAA8D1F3BF82DAB0"
      index: 7
      valueUuid: "uuid22"
      methodExercised:
        target: "org.bitcoinj.base.internal.ByteUtils"
        name: "reverseBytes"
        parameters:
        - name: "i"
          valueUuid: "calcHash_byte[]2"
        signature: "reverseBytes(byte[]): byte[]"
        returnValueUuid: "combineLeftRight_byte[]2"
        access: 9
    - type: "STATIC"
      name: "Sha256Hash"
      modelFingerprint: "27005788116DB12651590A8AA3F712DD"
      index: 8
      valueUuid: "uuid23"
      methodExercised:
        target: "org.bitcoinj.base.Sha256Hash"
        name: "hashTwice"
        parameters:
        - name: "input1"
          valueUuid: "combineLeftRight_byte[]1"
        - name: "input2"
          valueUuid: "combineLeftRight_byte[]2"
        signature: "hashTwice(byte[],byte[]): byte[]"
        returnValueUuid: "combineLeftRight_byte[]3"
        access: 9
    - type: "STATIC"
      name: "Sha256Hash"
      modelFingerprint: "8D2FA757492D463385BFAAFC6E6406CE"
      index: 9
      valueUuid: "uuid24"
      methodExercised:
        target: "org.bitcoinj.base.Sha256Hash"
        name: "wrapReversed"
        parameters:
        - name: "rawHashBytes"
          valueUuid: "combineLeftRight_byte[]3"
        signature: "wrapReversed(byte[]): Sha256Hash"
        returnValueUuid: "combineLeftRight_sha256Hash1"
        access: 9
    - type: "RESULT"
      name: "result"
      modelFingerprint: "62E9701239F7885837CCBAAE4D204D2C"
      index: 10
      valueUuid: "buildFromLeaves_partialMerkleTree1"
    uuid: "e08b6546-fdb0-38fa-8eff-a86502e46a7d"
    deleted: false
    disabled: true
    ignoredBySystem: false
    failureReason:
      reason: "BITWISE_NOT_SUPPORTED"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: true
    allValues:
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "byte[]"
      uuid: "buildFromLeaves_byte[]1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.ArrayList"
        parameters: []
        values:
        - sapientType: "MOCK"
          valueType: "org.bitcoinj.base.Sha256Hash"
          uuid: "buildFromLeaves_list1Item0"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
      valueType: "java.util.List"
      genericValueType: "org.bitcoinj.base.Sha256Hash"
      uuid: "buildFromLeaves_list1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.bitcoinj.base.internal.ByteUtils"
      uuid: "uuid20"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "traverseAndBuild_boolean1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "byte[]"
      uuid: "buildFromLeaves_byte[]1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: 0
      valueType: "int"
      uuid: "traverseAndBuild_int3"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.bitcoinj.base.Sha256Hash"
      uuid: "calcHash_sha256Hash1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "byte[]"
      uuid: "calcHash_byte[]1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.bitcoinj.base.Sha256Hash"
      uuid: "calcHash_sha256Hash2"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "byte[]"
      uuid: "calcHash_byte[]2"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "REAL"
      valueType: "org.bitcoinj.base.internal.ByteUtils"
      uuid: "uuid21"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "byte[]"
      uuid: "combineLeftRight_byte[]1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "byte[]"
      uuid: "calcHash_byte[]1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "REAL"
      valueType: "org.bitcoinj.base.internal.ByteUtils"
      uuid: "uuid22"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "byte[]"
      uuid: "combineLeftRight_byte[]2"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "byte[]"
      uuid: "calcHash_byte[]2"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "REAL"
      valueType: "org.bitcoinj.base.Sha256Hash"
      uuid: "uuid23"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "ARRAY"
      content: !<array>
        values:
          0:
            sapientType: "BASIC"
            content: !<regular>
              value: 93
            valueType: "byte"
            uuid: "combineLeftRight_byte[]3-item0"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          1:
            sapientType: "BASIC"
            content: !<regular>
              value: -10
            valueType: "byte"
            uuid: "combineLeftRight_byte[]3-item1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          2:
            sapientType: "BASIC"
            content: !<regular>
              value: -32
            valueType: "byte"
            uuid: "combineLeftRight_byte[]3-item2"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          3:
            sapientType: "BASIC"
            content: !<regular>
              value: -30
            valueType: "byte"
            uuid: "combineLeftRight_byte[]3-item3"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          4:
            sapientType: "BASIC"
            content: !<regular>
              value: 118
            valueType: "byte"
            uuid: "combineLeftRight_byte[]3-item4"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          5:
            sapientType: "BASIC"
            content: !<regular>
              value: 19
            valueType: "byte"
            uuid: "combineLeftRight_byte[]3-item5"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          6:
            sapientType: "BASIC"
            content: !<regular>
              value: 89
            valueType: "byte"
            uuid: "combineLeftRight_byte[]3-item6"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          7:
            sapientType: "BASIC"
            content: !<regular>
              value: -45
            valueType: "byte"
            uuid: "combineLeftRight_byte[]3-item7"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          8:
            sapientType: "BASIC"
            content: !<regular>
              value: 10
            valueType: "byte"
            uuid: "combineLeftRight_byte[]3-item8"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          9:
            sapientType: "BASIC"
            content: !<regular>
              value: -126
            valueType: "byte"
            uuid: "combineLeftRight_byte[]3-item9"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          10:
            sapientType: "BASIC"
            content: !<regular>
              value: 117
            valueType: "byte"
            uuid: "combineLeftRight_byte[]3-item10"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          11:
            sapientType: "BASIC"
            content: !<regular>
              value: 5
            valueType: "byte"
            uuid: "combineLeftRight_byte[]3-item11"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          12:
            sapientType: "BASIC"
            content: !<regular>
              value: -114
            valueType: "byte"
            uuid: "combineLeftRight_byte[]3-item12"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          13:
            sapientType: "BASIC"
            content: !<regular>
              value: 41
            valueType: "byte"
            uuid: "combineLeftRight_byte[]3-item13"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          14:
            sapientType: "BASIC"
            content: !<regular>
              value: -97
            valueType: "byte"
            uuid: "combineLeftRight_byte[]3-item14"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          15:
            sapientType: "BASIC"
            content: !<regular>
              value: -52
            valueType: "byte"
            uuid: "combineLeftRight_byte[]3-item15"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          16:
            sapientType: "BASIC"
            content: !<regular>
              value: 3
            valueType: "byte"
            uuid: "combineLeftRight_byte[]3-item16"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          17:
            sapientType: "BASIC"
            content: !<regular>
              value: -127
            valueType: "byte"
            uuid: "combineLeftRight_byte[]3-item17"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          18:
            sapientType: "BASIC"
            content: !<regular>
              value: 83
            valueType: "byte"
            uuid: "combineLeftRight_byte[]3-item18"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          19:
            sapientType: "BASIC"
            content: !<regular>
              value: 69
            valueType: "byte"
            uuid: "combineLeftRight_byte[]3-item19"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          20:
            sapientType: "BASIC"
            content: !<regular>
              value: 69
            valueType: "byte"
            uuid: "combineLeftRight_byte[]3-item20"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          21:
            sapientType: "BASIC"
            content: !<regular>
              value: -11
            valueType: "byte"
            uuid: "combineLeftRight_byte[]3-item21"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          22:
            sapientType: "BASIC"
            content: !<regular>
              value: 92
            valueType: "byte"
            uuid: "combineLeftRight_byte[]3-item22"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          23:
            sapientType: "BASIC"
            content: !<regular>
              value: -12
            valueType: "byte"
            uuid: "combineLeftRight_byte[]3-item23"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          24:
            sapientType: "BASIC"
            content: !<regular>
              value: 62
            valueType: "byte"
            uuid: "combineLeftRight_byte[]3-item24"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          25:
            sapientType: "BASIC"
            content: !<regular>
              value: 65
            valueType: "byte"
            uuid: "combineLeftRight_byte[]3-item25"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          26:
            sapientType: "BASIC"
            content: !<regular>
              value: -104
            valueType: "byte"
            uuid: "combineLeftRight_byte[]3-item26"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          27:
            sapientType: "BASIC"
            content: !<regular>
              value: 63
            valueType: "byte"
            uuid: "combineLeftRight_byte[]3-item27"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          28:
            sapientType: "BASIC"
            content: !<regular>
              value: 93
            valueType: "byte"
            uuid: "combineLeftRight_byte[]3-item28"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          29:
            sapientType: "BASIC"
            content: !<regular>
              value: 76
            valueType: "byte"
            uuid: "combineLeftRight_byte[]3-item29"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          30:
            sapientType: "BASIC"
            content: !<regular>
              value: -108
            valueType: "byte"
            uuid: "combineLeftRight_byte[]3-item30"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          31:
            sapientType: "BASIC"
            content: !<regular>
              value: 86
            valueType: "byte"
            uuid: "combineLeftRight_byte[]3-item31"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
      valueType: "byte[]"
      uuid: "combineLeftRight_byte[]3"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "byte[]"
      uuid: "combineLeftRight_byte[]1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "byte[]"
      uuid: "combineLeftRight_byte[]2"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.bitcoinj.base.Sha256Hash"
      uuid: "uuid24"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.bitcoinj.base.Sha256Hash"
      uuid: "combineLeftRight_sha256Hash1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "ARRAY"
      content: !<array>
        values:
          0:
            sapientType: "BASIC"
            content: !<regular>
              value: 93
            valueType: "byte"
            uuid: "combineLeftRight_byte[]3-item0"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          1:
            sapientType: "BASIC"
            content: !<regular>
              value: -10
            valueType: "byte"
            uuid: "combineLeftRight_byte[]3-item1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          2:
            sapientType: "BASIC"
            content: !<regular>
              value: -32
            valueType: "byte"
            uuid: "combineLeftRight_byte[]3-item2"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          3:
            sapientType: "BASIC"
            content: !<regular>
              value: -30
            valueType: "byte"
            uuid: "combineLeftRight_byte[]3-item3"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          4:
            sapientType: "BASIC"
            content: !<regular>
              value: 118
            valueType: "byte"
            uuid: "combineLeftRight_byte[]3-item4"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          5:
            sapientType: "BASIC"
            content: !<regular>
              value: 19
            valueType: "byte"
            uuid: "combineLeftRight_byte[]3-item5"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          6:
            sapientType: "BASIC"
            content: !<regular>
              value: 89
            valueType: "byte"
            uuid: "combineLeftRight_byte[]3-item6"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          7:
            sapientType: "BASIC"
            content: !<regular>
              value: -45
            valueType: "byte"
            uuid: "combineLeftRight_byte[]3-item7"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          8:
            sapientType: "BASIC"
            content: !<regular>
              value: 10
            valueType: "byte"
            uuid: "combineLeftRight_byte[]3-item8"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          9:
            sapientType: "BASIC"
            content: !<regular>
              value: -126
            valueType: "byte"
            uuid: "combineLeftRight_byte[]3-item9"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          10:
            sapientType: "BASIC"
            content: !<regular>
              value: 117
            valueType: "byte"
            uuid: "combineLeftRight_byte[]3-item10"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          11:
            sapientType: "BASIC"
            content: !<regular>
              value: 5
            valueType: "byte"
            uuid: "combineLeftRight_byte[]3-item11"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          12:
            sapientType: "BASIC"
            content: !<regular>
              value: -114
            valueType: "byte"
            uuid: "combineLeftRight_byte[]3-item12"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          13:
            sapientType: "BASIC"
            content: !<regular>
              value: 41
            valueType: "byte"
            uuid: "combineLeftRight_byte[]3-item13"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          14:
            sapientType: "BASIC"
            content: !<regular>
              value: -97
            valueType: "byte"
            uuid: "combineLeftRight_byte[]3-item14"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          15:
            sapientType: "BASIC"
            content: !<regular>
              value: -52
            valueType: "byte"
            uuid: "combineLeftRight_byte[]3-item15"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          16:
            sapientType: "BASIC"
            content: !<regular>
              value: 3
            valueType: "byte"
            uuid: "combineLeftRight_byte[]3-item16"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          17:
            sapientType: "BASIC"
            content: !<regular>
              value: -127
            valueType: "byte"
            uuid: "combineLeftRight_byte[]3-item17"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          18:
            sapientType: "BASIC"
            content: !<regular>
              value: 83
            valueType: "byte"
            uuid: "combineLeftRight_byte[]3-item18"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          19:
            sapientType: "BASIC"
            content: !<regular>
              value: 69
            valueType: "byte"
            uuid: "combineLeftRight_byte[]3-item19"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          20:
            sapientType: "BASIC"
            content: !<regular>
              value: 69
            valueType: "byte"
            uuid: "combineLeftRight_byte[]3-item20"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          21:
            sapientType: "BASIC"
            content: !<regular>
              value: -11
            valueType: "byte"
            uuid: "combineLeftRight_byte[]3-item21"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          22:
            sapientType: "BASIC"
            content: !<regular>
              value: 92
            valueType: "byte"
            uuid: "combineLeftRight_byte[]3-item22"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          23:
            sapientType: "BASIC"
            content: !<regular>
              value: -12
            valueType: "byte"
            uuid: "combineLeftRight_byte[]3-item23"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          24:
            sapientType: "BASIC"
            content: !<regular>
              value: 62
            valueType: "byte"
            uuid: "combineLeftRight_byte[]3-item24"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          25:
            sapientType: "BASIC"
            content: !<regular>
              value: 65
            valueType: "byte"
            uuid: "combineLeftRight_byte[]3-item25"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          26:
            sapientType: "BASIC"
            content: !<regular>
              value: -104
            valueType: "byte"
            uuid: "combineLeftRight_byte[]3-item26"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          27:
            sapientType: "BASIC"
            content: !<regular>
              value: 63
            valueType: "byte"
            uuid: "combineLeftRight_byte[]3-item27"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          28:
            sapientType: "BASIC"
            content: !<regular>
              value: 93
            valueType: "byte"
            uuid: "combineLeftRight_byte[]3-item28"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          29:
            sapientType: "BASIC"
            content: !<regular>
              value: 76
            valueType: "byte"
            uuid: "combineLeftRight_byte[]3-item29"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          30:
            sapientType: "BASIC"
            content: !<regular>
              value: -108
            valueType: "byte"
            uuid: "combineLeftRight_byte[]3-item30"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          31:
            sapientType: "BASIC"
            content: !<regular>
              value: 86
            valueType: "byte"
            uuid: "combineLeftRight_byte[]3-item31"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
      valueType: "byte[]"
      uuid: "combineLeftRight_byte[]3"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.bitcoinj.core.PartialMerkleTree"
        parameters:
        - name: "origTxCount"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 1
            valueType: "int"
            uuid: "buildFromLeaves_int11"
            fixed: false
            collectionUuid: "buildFromLeaves_list1"
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "hashes"
          value:
            sapientType: "COLLECTION"
            content: !<collection>
              collectionClass: "java.util.ArrayList"
              parameters: []
              values:
              - sapientType: "MOCK"
                valueType: "org.bitcoinj.base.Sha256Hash"
                uuid: "combineLeftRight_sha256Hash1"
                fixed: false
                equalsMethodPresent: false
                explicitCastNeeded: false
            valueType: "java.util.List"
            genericValueType: "org.bitcoinj.base.Sha256Hash"
            uuid: "buildFromLeaves_arrayList2"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "bits"
          value:
            sapientType: "ARRAY"
            content: !<array>
              values:
                0:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: 0
                  valueType: "byte"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
            valueType: "byte[]"
            uuid: "buildFromLeaves_byte[]2"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: true
      valueType: "org.bitcoinj.core.PartialMerkleTree"
      uuid: "buildFromLeaves_partialMerkleTree1"
      fixed: true
      equalsMethodPresent: true
      explicitCastNeeded: false
  - pathId: "path4"
    testPathName: "buildFromLeavesWhenPPlus1NotLessThanGetTreeWidthHashesSizeHAndILessThanBitListSizeAndBitListNotGetI"
    modelFingerprint: "5B23C490EAED159D8E9A4D07F69E2A59"
    problemWasSolvedByProver: false
    truncated: false
    inputParameters:
    - type: "INPUT"
      name: "includeBits"
      modelFingerprint: "0DD2EE0DB9595867A8E98697E92C212E"
      index: 1
      valueUuid: "buildFromLeaves_byte[]1"
    - type: "INPUT"
      name: "allLeafHashes"
      modelFingerprint: "66627F706C08BD1AA9AC6BE058DDACBD"
      index: 2
      valueUuid: "buildFromLeaves_list1"
    - type: "STATIC"
      name: "ByteUtils"
      modelFingerprint: "1138DA34F0AD7023A27BCA24A0816211"
      index: 3
      valueUuid: "uuid25"
      methodExercised:
        target: "org.bitcoinj.base.internal.ByteUtils"
        name: "checkBitLE"
        parameters:
        - name: "data"
          valueUuid: "buildFromLeaves_byte[]1"
        - name: "index"
          valueUuid: "traverseAndBuild_int3"
        signature: "checkBitLE(byte[],int): boolean"
        returnValueUuid: "traverseAndBuild_boolean1"
        access: 9
    - type: "LOCAL_VARIABLE"
      name: "left"
      modelFingerprint: "02232E6D25914A8F2136CA76A6906D1B"
      index: 4
      valueUuid: "calcHash_sha256Hash1"
      methodExercised:
        target: "left"
        name: "getBytes"
        parameters: []
        signature: "getBytes(): byte[]"
        returnValueUuid: "calcHash_byte[]1"
        access: 1
    - type: "LOCAL_VARIABLE"
      name: "right"
      modelFingerprint: "02232E6D25914A8F2136CA76A6906D1B"
      index: 5
      valueUuid: "calcHash_sha256Hash1"
      methodExercised:
        target: "right"
        name: "getBytes"
        parameters: []
        signature: "getBytes(): byte[]"
        returnValueUuid: "calcHash_byte[]1"
        access: 1
    - type: "STATIC"
      name: "ByteUtils"
      modelFingerprint: "DA04F1711DB88BA3FAA8D1F3BF82DAB0"
      index: 6
      valueUuid: "uuid26"
      methodExercised:
        target: "org.bitcoinj.base.internal.ByteUtils"
        name: "reverseBytes"
        parameters:
        - name: "i"
          valueUuid: "calcHash_byte[]1"
        signature: "reverseBytes(byte[]): byte[]"
        returnValueUuid: "combineLeftRight_byte[]1"
        access: 9
    - type: "STATIC"
      name: "ByteUtils"
      modelFingerprint: "DA04F1711DB88BA3FAA8D1F3BF82DAB0"
      index: 7
      valueUuid: "uuid27"
      methodExercised:
        target: "org.bitcoinj.base.internal.ByteUtils"
        name: "reverseBytes"
        parameters:
        - name: "i"
          valueUuid: "calcHash_byte[]1"
        signature: "reverseBytes(byte[]): byte[]"
        returnValueUuid: "combineLeftRight_byte[]2"
        access: 9
    - type: "STATIC"
      name: "Sha256Hash"
      modelFingerprint: "27005788116DB12651590A8AA3F712DD"
      index: 8
      valueUuid: "uuid28"
      methodExercised:
        target: "org.bitcoinj.base.Sha256Hash"
        name: "hashTwice"
        parameters:
        - name: "input1"
          valueUuid: "combineLeftRight_byte[]1"
        - name: "input2"
          valueUuid: "combineLeftRight_byte[]2"
        signature: "hashTwice(byte[],byte[]): byte[]"
        returnValueUuid: "combineLeftRight_byte[]3"
        access: 9
    - type: "STATIC"
      name: "Sha256Hash"
      modelFingerprint: "8D2FA757492D463385BFAAFC6E6406CE"
      index: 9
      valueUuid: "uuid29"
      methodExercised:
        target: "org.bitcoinj.base.Sha256Hash"
        name: "wrapReversed"
        parameters:
        - name: "rawHashBytes"
          valueUuid: "combineLeftRight_byte[]3"
        signature: "wrapReversed(byte[]): Sha256Hash"
        returnValueUuid: "combineLeftRight_sha256Hash1"
        access: 9
    - type: "RESULT"
      name: "result"
      modelFingerprint: "62E9701239F7885837CCBAAE4D204D2C"
      index: 10
      valueUuid: "buildFromLeaves_partialMerkleTree1"
    uuid: "b1a03d93-32c0-37a3-8670-be1824d3db5a"
    deleted: false
    disabled: true
    ignoredBySystem: false
    failureReason:
      reason: "BITWISE_NOT_SUPPORTED"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: true
    allValues:
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "byte[]"
      uuid: "buildFromLeaves_byte[]1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.ArrayList"
        parameters: []
        values:
        - sapientType: "MOCK"
          valueType: "org.bitcoinj.base.Sha256Hash"
          uuid: "buildFromLeaves_list1Item0"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
      valueType: "java.util.List"
      genericValueType: "org.bitcoinj.base.Sha256Hash"
      uuid: "buildFromLeaves_list1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.bitcoinj.base.internal.ByteUtils"
      uuid: "uuid25"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "traverseAndBuild_boolean1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "byte[]"
      uuid: "buildFromLeaves_byte[]1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: 0
      valueType: "int"
      uuid: "traverseAndBuild_int3"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.bitcoinj.base.Sha256Hash"
      uuid: "calcHash_sha256Hash1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "byte[]"
      uuid: "calcHash_byte[]1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.bitcoinj.base.Sha256Hash"
      uuid: "calcHash_sha256Hash1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "byte[]"
      uuid: "calcHash_byte[]1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "REAL"
      valueType: "org.bitcoinj.base.internal.ByteUtils"
      uuid: "uuid26"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "byte[]"
      uuid: "combineLeftRight_byte[]1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "byte[]"
      uuid: "calcHash_byte[]1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "REAL"
      valueType: "org.bitcoinj.base.internal.ByteUtils"
      uuid: "uuid27"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "byte[]"
      uuid: "combineLeftRight_byte[]2"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "byte[]"
      uuid: "calcHash_byte[]1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "REAL"
      valueType: "org.bitcoinj.base.Sha256Hash"
      uuid: "uuid28"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "ARRAY"
      content: !<array>
        values:
          0:
            sapientType: "BASIC"
            content: !<regular>
              value: 93
            valueType: "byte"
            uuid: "combineLeftRight_byte[]3-item0"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          1:
            sapientType: "BASIC"
            content: !<regular>
              value: -10
            valueType: "byte"
            uuid: "combineLeftRight_byte[]3-item1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          2:
            sapientType: "BASIC"
            content: !<regular>
              value: -32
            valueType: "byte"
            uuid: "combineLeftRight_byte[]3-item2"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          3:
            sapientType: "BASIC"
            content: !<regular>
              value: -30
            valueType: "byte"
            uuid: "combineLeftRight_byte[]3-item3"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          4:
            sapientType: "BASIC"
            content: !<regular>
              value: 118
            valueType: "byte"
            uuid: "combineLeftRight_byte[]3-item4"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          5:
            sapientType: "BASIC"
            content: !<regular>
              value: 19
            valueType: "byte"
            uuid: "combineLeftRight_byte[]3-item5"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          6:
            sapientType: "BASIC"
            content: !<regular>
              value: 89
            valueType: "byte"
            uuid: "combineLeftRight_byte[]3-item6"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          7:
            sapientType: "BASIC"
            content: !<regular>
              value: -45
            valueType: "byte"
            uuid: "combineLeftRight_byte[]3-item7"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          8:
            sapientType: "BASIC"
            content: !<regular>
              value: 10
            valueType: "byte"
            uuid: "combineLeftRight_byte[]3-item8"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          9:
            sapientType: "BASIC"
            content: !<regular>
              value: -126
            valueType: "byte"
            uuid: "combineLeftRight_byte[]3-item9"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          10:
            sapientType: "BASIC"
            content: !<regular>
              value: 117
            valueType: "byte"
            uuid: "combineLeftRight_byte[]3-item10"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          11:
            sapientType: "BASIC"
            content: !<regular>
              value: 5
            valueType: "byte"
            uuid: "combineLeftRight_byte[]3-item11"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          12:
            sapientType: "BASIC"
            content: !<regular>
              value: -114
            valueType: "byte"
            uuid: "combineLeftRight_byte[]3-item12"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          13:
            sapientType: "BASIC"
            content: !<regular>
              value: 41
            valueType: "byte"
            uuid: "combineLeftRight_byte[]3-item13"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          14:
            sapientType: "BASIC"
            content: !<regular>
              value: -97
            valueType: "byte"
            uuid: "combineLeftRight_byte[]3-item14"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          15:
            sapientType: "BASIC"
            content: !<regular>
              value: -52
            valueType: "byte"
            uuid: "combineLeftRight_byte[]3-item15"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          16:
            sapientType: "BASIC"
            content: !<regular>
              value: 3
            valueType: "byte"
            uuid: "combineLeftRight_byte[]3-item16"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          17:
            sapientType: "BASIC"
            content: !<regular>
              value: -127
            valueType: "byte"
            uuid: "combineLeftRight_byte[]3-item17"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          18:
            sapientType: "BASIC"
            content: !<regular>
              value: 83
            valueType: "byte"
            uuid: "combineLeftRight_byte[]3-item18"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          19:
            sapientType: "BASIC"
            content: !<regular>
              value: 69
            valueType: "byte"
            uuid: "combineLeftRight_byte[]3-item19"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          20:
            sapientType: "BASIC"
            content: !<regular>
              value: 69
            valueType: "byte"
            uuid: "combineLeftRight_byte[]3-item20"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          21:
            sapientType: "BASIC"
            content: !<regular>
              value: -11
            valueType: "byte"
            uuid: "combineLeftRight_byte[]3-item21"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          22:
            sapientType: "BASIC"
            content: !<regular>
              value: 92
            valueType: "byte"
            uuid: "combineLeftRight_byte[]3-item22"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          23:
            sapientType: "BASIC"
            content: !<regular>
              value: -12
            valueType: "byte"
            uuid: "combineLeftRight_byte[]3-item23"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          24:
            sapientType: "BASIC"
            content: !<regular>
              value: 62
            valueType: "byte"
            uuid: "combineLeftRight_byte[]3-item24"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          25:
            sapientType: "BASIC"
            content: !<regular>
              value: 65
            valueType: "byte"
            uuid: "combineLeftRight_byte[]3-item25"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          26:
            sapientType: "BASIC"
            content: !<regular>
              value: -104
            valueType: "byte"
            uuid: "combineLeftRight_byte[]3-item26"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          27:
            sapientType: "BASIC"
            content: !<regular>
              value: 63
            valueType: "byte"
            uuid: "combineLeftRight_byte[]3-item27"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          28:
            sapientType: "BASIC"
            content: !<regular>
              value: 93
            valueType: "byte"
            uuid: "combineLeftRight_byte[]3-item28"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          29:
            sapientType: "BASIC"
            content: !<regular>
              value: 76
            valueType: "byte"
            uuid: "combineLeftRight_byte[]3-item29"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          30:
            sapientType: "BASIC"
            content: !<regular>
              value: -108
            valueType: "byte"
            uuid: "combineLeftRight_byte[]3-item30"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          31:
            sapientType: "BASIC"
            content: !<regular>
              value: 86
            valueType: "byte"
            uuid: "combineLeftRight_byte[]3-item31"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
      valueType: "byte[]"
      uuid: "combineLeftRight_byte[]3"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "byte[]"
      uuid: "combineLeftRight_byte[]1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "byte[]"
      uuid: "combineLeftRight_byte[]2"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.bitcoinj.base.Sha256Hash"
      uuid: "uuid29"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.bitcoinj.base.Sha256Hash"
      uuid: "combineLeftRight_sha256Hash1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "ARRAY"
      content: !<array>
        values:
          0:
            sapientType: "BASIC"
            content: !<regular>
              value: 93
            valueType: "byte"
            uuid: "combineLeftRight_byte[]3-item0"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          1:
            sapientType: "BASIC"
            content: !<regular>
              value: -10
            valueType: "byte"
            uuid: "combineLeftRight_byte[]3-item1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          2:
            sapientType: "BASIC"
            content: !<regular>
              value: -32
            valueType: "byte"
            uuid: "combineLeftRight_byte[]3-item2"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          3:
            sapientType: "BASIC"
            content: !<regular>
              value: -30
            valueType: "byte"
            uuid: "combineLeftRight_byte[]3-item3"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          4:
            sapientType: "BASIC"
            content: !<regular>
              value: 118
            valueType: "byte"
            uuid: "combineLeftRight_byte[]3-item4"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          5:
            sapientType: "BASIC"
            content: !<regular>
              value: 19
            valueType: "byte"
            uuid: "combineLeftRight_byte[]3-item5"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          6:
            sapientType: "BASIC"
            content: !<regular>
              value: 89
            valueType: "byte"
            uuid: "combineLeftRight_byte[]3-item6"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          7:
            sapientType: "BASIC"
            content: !<regular>
              value: -45
            valueType: "byte"
            uuid: "combineLeftRight_byte[]3-item7"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          8:
            sapientType: "BASIC"
            content: !<regular>
              value: 10
            valueType: "byte"
            uuid: "combineLeftRight_byte[]3-item8"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          9:
            sapientType: "BASIC"
            content: !<regular>
              value: -126
            valueType: "byte"
            uuid: "combineLeftRight_byte[]3-item9"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          10:
            sapientType: "BASIC"
            content: !<regular>
              value: 117
            valueType: "byte"
            uuid: "combineLeftRight_byte[]3-item10"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          11:
            sapientType: "BASIC"
            content: !<regular>
              value: 5
            valueType: "byte"
            uuid: "combineLeftRight_byte[]3-item11"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          12:
            sapientType: "BASIC"
            content: !<regular>
              value: -114
            valueType: "byte"
            uuid: "combineLeftRight_byte[]3-item12"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          13:
            sapientType: "BASIC"
            content: !<regular>
              value: 41
            valueType: "byte"
            uuid: "combineLeftRight_byte[]3-item13"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          14:
            sapientType: "BASIC"
            content: !<regular>
              value: -97
            valueType: "byte"
            uuid: "combineLeftRight_byte[]3-item14"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          15:
            sapientType: "BASIC"
            content: !<regular>
              value: -52
            valueType: "byte"
            uuid: "combineLeftRight_byte[]3-item15"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          16:
            sapientType: "BASIC"
            content: !<regular>
              value: 3
            valueType: "byte"
            uuid: "combineLeftRight_byte[]3-item16"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          17:
            sapientType: "BASIC"
            content: !<regular>
              value: -127
            valueType: "byte"
            uuid: "combineLeftRight_byte[]3-item17"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          18:
            sapientType: "BASIC"
            content: !<regular>
              value: 83
            valueType: "byte"
            uuid: "combineLeftRight_byte[]3-item18"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          19:
            sapientType: "BASIC"
            content: !<regular>
              value: 69
            valueType: "byte"
            uuid: "combineLeftRight_byte[]3-item19"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          20:
            sapientType: "BASIC"
            content: !<regular>
              value: 69
            valueType: "byte"
            uuid: "combineLeftRight_byte[]3-item20"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          21:
            sapientType: "BASIC"
            content: !<regular>
              value: -11
            valueType: "byte"
            uuid: "combineLeftRight_byte[]3-item21"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          22:
            sapientType: "BASIC"
            content: !<regular>
              value: 92
            valueType: "byte"
            uuid: "combineLeftRight_byte[]3-item22"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          23:
            sapientType: "BASIC"
            content: !<regular>
              value: -12
            valueType: "byte"
            uuid: "combineLeftRight_byte[]3-item23"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          24:
            sapientType: "BASIC"
            content: !<regular>
              value: 62
            valueType: "byte"
            uuid: "combineLeftRight_byte[]3-item24"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          25:
            sapientType: "BASIC"
            content: !<regular>
              value: 65
            valueType: "byte"
            uuid: "combineLeftRight_byte[]3-item25"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          26:
            sapientType: "BASIC"
            content: !<regular>
              value: -104
            valueType: "byte"
            uuid: "combineLeftRight_byte[]3-item26"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          27:
            sapientType: "BASIC"
            content: !<regular>
              value: 63
            valueType: "byte"
            uuid: "combineLeftRight_byte[]3-item27"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          28:
            sapientType: "BASIC"
            content: !<regular>
              value: 93
            valueType: "byte"
            uuid: "combineLeftRight_byte[]3-item28"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          29:
            sapientType: "BASIC"
            content: !<regular>
              value: 76
            valueType: "byte"
            uuid: "combineLeftRight_byte[]3-item29"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          30:
            sapientType: "BASIC"
            content: !<regular>
              value: -108
            valueType: "byte"
            uuid: "combineLeftRight_byte[]3-item30"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          31:
            sapientType: "BASIC"
            content: !<regular>
              value: 86
            valueType: "byte"
            uuid: "combineLeftRight_byte[]3-item31"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
      valueType: "byte[]"
      uuid: "combineLeftRight_byte[]3"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.bitcoinj.core.PartialMerkleTree"
        parameters:
        - name: "origTxCount"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 1
            valueType: "int"
            uuid: "buildFromLeaves_int11"
            fixed: false
            collectionUuid: "buildFromLeaves_list1"
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "hashes"
          value:
            sapientType: "COLLECTION"
            content: !<collection>
              collectionClass: "java.util.ArrayList"
              parameters: []
              values:
              - sapientType: "MOCK"
                valueType: "org.bitcoinj.base.Sha256Hash"
                uuid: "combineLeftRight_sha256Hash1"
                fixed: false
                equalsMethodPresent: false
                explicitCastNeeded: false
            valueType: "java.util.List"
            genericValueType: "org.bitcoinj.base.Sha256Hash"
            uuid: "buildFromLeaves_arrayList2"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "bits"
          value:
            sapientType: "ARRAY"
            content: !<array>
              values:
                0:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: 0
                  valueType: "byte"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
            valueType: "byte[]"
            uuid: "buildFromLeaves_byte[]2"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: true
      valueType: "org.bitcoinj.core.PartialMerkleTree"
      uuid: "buildFromLeaves_partialMerkleTree1"
      fixed: true
      equalsMethodPresent: true
      explicitCastNeeded: false
- method:
    name: "write"
    signature: "write(java.nio.ByteBuffer) : java.nio.ByteBuffer"
    sourceCodeSignature: "ByteBuffer write(ByteBuffer buf)"
    instructionFingerprint: "21B9E90CDC2FA7E9EE95124E215EB26D"
  paths:
  - pathId: "path1"
    testPathName: "writeWhenHashesIsNotEmpty"
    constructorSignature: "<init>(int,java.util.List<org.bitcoinj.base.Sha256Hash>,byte[])\
      \ : void"
    modelFingerprint: "D332D68DB0B12177E01A64AD4AEA5B8A"
    problemWasSolvedByProver: false
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "81F1115DD0D4F5E61EEE363CF63E00AC"
      index: 1
      valueUuid: "target"
    - type: "INPUT"
      name: "buf"
      modelFingerprint: "60346842111A66733A87B4D34959173E"
      index: 2
      valueUuid: "write_byteBuffer1"
    - type: "STATIC"
      name: "ByteUtils"
      modelFingerprint: "2C12D8496FAC8547A2FF2F746316886F"
      index: 3
      valueUuid: "uuid30"
      methodExercised:
        target: "org.bitcoinj.base.internal.ByteUtils"
        name: "writeInt32LE"
        parameters:
        - name: "val"
          valueUuid: "<init>_int1"
        - name: "buf"
          valueUuid: "write_byteBuffer1"
        throwsExceptions:
        - "java.nio.BufferOverflowException"
        signature: "writeInt32LE(int,ByteBuffer): ByteBuffer throws java.nio.BufferOverflowException"
        returnValueUuid: "write_byteBuffer2"
        access: 9
    - type: "STATIC"
      name: "VarInt"
      modelFingerprint: "54C3A14A93FEB21BA9565DD4804E4A11"
      index: 4
      valueUuid: "uuid31"
      methodExercised:
        target: "org.bitcoinj.base.VarInt"
        name: "of"
        parameters:
        - name: "value"
          valueUuid: "write_long1"
        signature: "of(long): VarInt"
        returnValueUuid: "write_varInt1"
        access: 9
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "5D2ABAD2B93ADAA6ABEB1C89B9BC9A87"
      index: 5
      valueUuid: "write_varInt1"
      methodExercised:
        target: "org.bitcoinj.base.VarInt"
        name: "write"
        parameters:
        - name: "buf"
          valueUuid: "write_byteBuffer1"
        throwsExceptions:
        - "java.nio.BufferOverflowException"
        signature: "write(ByteBuffer): ByteBuffer throws java.nio.BufferOverflowException"
        returnValueUuid: "write_byteBuffer3"
        access: 1
    - type: "LOCAL_VARIABLE"
      name: "hash"
      modelFingerprint: "7F52F3420A206CF8DBB6C01F4D407404"
      index: 6
      valueUuid: "write_object1"
      methodExercised:
        target: "hash"
        name: "write"
        parameters:
        - name: "buf"
          valueUuid: "write_byteBuffer1"
        throwsExceptions:
        - "java.nio.BufferOverflowException"
        signature: "write(ByteBuffer): ByteBuffer throws java.nio.BufferOverflowException"
        returnValueUuid: "write_byteBuffer4"
        access: 1
    - type: "STATIC"
      name: "Buffers"
      modelFingerprint: "A8798D9B6D81E821B5D6BC2577698A8E"
      index: 7
      valueUuid: "uuid32"
      methodExercised:
        target: "org.bitcoinj.base.internal.Buffers"
        name: "writeLengthPrefixedBytes"
        parameters:
        - name: "buf"
          valueUuid: "write_byteBuffer1"
        - name: "bytes"
          valueUuid: "<init>_byte[]1"
        throwsExceptions:
        - "java.nio.BufferOverflowException"
        signature: "writeLengthPrefixedBytes(ByteBuffer,byte[]): ByteBuffer throws\
          \ java.nio.BufferOverflowException"
        returnValueUuid: "write_byteBuffer5"
        access: 9
    - type: "RESULT"
      name: "result"
      modelFingerprint: "E1250B73C3C941C1F21182E2F4AD5077"
      index: 8
      valueUuid: "write_byteBuffer1"
    uuid: "6af4be85-76ec-3b30-8035-df3d22289847"
    deleted: false
    disabled: false
    ignoredBySystem: false
    failureReason:
      reason: "ERROR_RECALCULATING_SUGGESTED_VALUES"
    prover: "DEFAULT"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.bitcoinj.core.PartialMerkleTree"
        parameters:
        - name: "origTxCount"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 0
            valueType: "int"
            uuid: "<init>_int1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "hashes"
          value:
            sapientType: "COLLECTION"
            content: !<collection>
              collectionClass: "java.util.ArrayList"
              parameters: []
              values:
              - sapientType: "MOCK"
                valueType: "org.bitcoinj.base.Sha256Hash"
                uuid: "write_object1"
                fixed: false
                collectionUuid: "<init>_list1"
                equalsMethodPresent: false
                explicitCastNeeded: false
            valueType: "java.util.List"
            genericValueType: "org.bitcoinj.base.Sha256Hash"
            uuid: "<init>_list1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "bits"
          value:
            sapientType: "ARRAY"
            content: !<array>
              values: {}
            valueType: "byte[]"
            uuid: "<init>_byte[]1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      valueType: "org.bitcoinj.core.PartialMerkleTree"
      uuid: "target"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.nio.ByteBuffer"
        method: "allocateDirect"
        methodParameters:
        - name: "capacity"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 64
            valueType: "int"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
      valueType: "java.nio.ByteBuffer"
      uuid: "write_byteBuffer1"
      fixed: false
      equalsMethodPresent: true
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.bitcoinj.base.internal.ByteUtils"
      uuid: "uuid30"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.nio.ByteBuffer"
        method: "allocateDirect"
        methodParameters:
        - name: "capacity"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 64
            valueType: "int"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
      valueType: "java.nio.ByteBuffer"
      uuid: "write_byteBuffer2"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: 0
      valueType: "int"
      uuid: "<init>_int1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.nio.ByteBuffer"
        method: "allocateDirect"
        methodParameters:
        - name: "capacity"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 64
            valueType: "int"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
      valueType: "java.nio.ByteBuffer"
      uuid: "write_byteBuffer1"
      fixed: false
      equalsMethodPresent: true
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.bitcoinj.base.VarInt"
      uuid: "uuid31"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.bitcoinj.base.VarInt"
      uuid: "write_varInt1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: 1
      valueType: "long"
      originalValueType: "int"
      uuid: "write_long1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.bitcoinj.base.VarInt"
      uuid: "write_varInt1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.nio.ByteBuffer"
        method: "allocateDirect"
        methodParameters:
        - name: "capacity"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 64
            valueType: "int"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
      valueType: "java.nio.ByteBuffer"
      uuid: "write_byteBuffer3"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.nio.ByteBuffer"
        method: "allocateDirect"
        methodParameters:
        - name: "capacity"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 64
            valueType: "int"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
      valueType: "java.nio.ByteBuffer"
      uuid: "write_byteBuffer1"
      fixed: false
      equalsMethodPresent: true
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.bitcoinj.base.Sha256Hash"
      uuid: "write_object1"
      fixed: false
      collectionUuid: "<init>_list1"
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.nio.ByteBuffer"
        method: "allocateDirect"
        methodParameters:
        - name: "capacity"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 64
            valueType: "int"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
      valueType: "java.nio.ByteBuffer"
      uuid: "write_byteBuffer4"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.nio.ByteBuffer"
        method: "allocateDirect"
        methodParameters:
        - name: "capacity"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 64
            valueType: "int"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
      valueType: "java.nio.ByteBuffer"
      uuid: "write_byteBuffer1"
      fixed: false
      equalsMethodPresent: true
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.bitcoinj.base.internal.Buffers"
      uuid: "uuid32"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.nio.ByteBuffer"
        method: "allocateDirect"
        methodParameters:
        - name: "capacity"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 64
            valueType: "int"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
      valueType: "java.nio.ByteBuffer"
      uuid: "write_byteBuffer5"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.nio.ByteBuffer"
        method: "allocateDirect"
        methodParameters:
        - name: "capacity"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 64
            valueType: "int"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
      valueType: "java.nio.ByteBuffer"
      uuid: "write_byteBuffer1"
      fixed: false
      equalsMethodPresent: true
      explicitCastNeeded: false
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "byte[]"
      uuid: "<init>_byte[]1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.nio.ByteBuffer"
        method: "allocateDirect"
        methodParameters:
        - name: "capacity"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 64
            valueType: "int"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
      valueType: "java.nio.ByteBuffer"
      uuid: "write_byteBuffer1"
      fixed: false
      equalsMethodPresent: true
      explicitCastNeeded: false
  - pathId: "path2"
    testPathName: "writeWhenHashesIsEmpty"
    constructorSignature: "<init>(int,java.util.List<org.bitcoinj.base.Sha256Hash>,byte[])\
      \ : void"
    modelFingerprint: "2615AF61DB9D0B1B4B303B69992FC7C7"
    problemWasSolvedByProver: true
    truncated: true
    inputParameters: []
    uuid: "03adc8d2-6e9d-3d7e-9fe6-88cebe0cf44a"
    deleted: true
    disabled: false
    ignoredBySystem: true
    prover: "DEFAULT"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues: []
- method:
    name: "serialize"
    signature: "serialize() : byte[]"
    sourceCodeSignature: "byte[] serialize()"
    instructionFingerprint: "C958C2D6D01F873722C3F79107AF953D"
  paths:
  - pathId: "path1"
    testPathName: "serializeTest"
    constructorSignature: "<init>(int,java.util.List<org.bitcoinj.base.Sha256Hash>,byte[])\
      \ : void"
    modelFingerprint: "E973B161D8A89E0982293E51CA1CA8F9"
    problemWasSolvedByProver: false
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "EA5B0F497725C18E5A26BBE682A362C4"
      index: 1
      valueUuid: "target"
    - type: "STATIC"
      name: "VarInt"
      modelFingerprint: "BF62D1C960725D735411CB7A6B118FA4"
      index: 2
      valueUuid: "uuid2"
      methodExercised:
        target: "org.bitcoinj.base.VarInt"
        name: "sizeOf"
        parameters:
        - name: "value"
          valueUuid: "uuid1"
        signature: "sizeOf(long): int"
        returnValueUuid: "messageSize_int3"
        access: 9
    - type: "STATIC"
      name: "VarInt"
      modelFingerprint: "CF1E4259846B302B0909F0FED1C3AB5C"
      index: 3
      valueUuid: "uuid4"
      methodExercised:
        target: "org.bitcoinj.base.VarInt"
        name: "sizeOf"
        parameters:
        - name: "value"
          valueUuid: "uuid3"
        signature: "sizeOf(long): int"
        returnValueUuid: "messageSize_int11"
        access: 9
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "7EC3ED9F011761A774BE8C9F5C35DF5C"
      index: 4
      methodExercised:
        target: "target"
        name: "write"
        parameters:
        - name: "buf"
          valueUuid: "serialize_byteBuffer1"
        throwsExceptions:
        - "java.nio.BufferOverflowException"
        signature: "write(ByteBuffer): ByteBuffer throws java.nio.BufferOverflowException"
        returnValueUuid: "serialize_byteBuffer2"
        access: 1
    - type: "RESULT"
      name: "result"
      modelFingerprint: "740324D8AEEA83F5639543B37CAABC19"
      index: 5
      valueUuid: "serialize_byte[]1"
    uuid: "9d328af1-2293-3544-bbbc-a0683c1f9fbe"
    deleted: false
    disabled: true
    ignoredBySystem: false
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: java.nio.ByteBuffer.array() : byte[]"
    prover: "LLM"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: true
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.bitcoinj.core.PartialMerkleTree"
        parameters:
        - name: "origTxCount"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 10
            valueType: "int"
            uuid: "<init>_int1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "hashes"
          value:
            sapientType: "COLLECTION"
            content: !<collection>
              collectionClass: "java.util.ArrayList"
              parameters: []
              values:
              - sapientType: "OBJECT"
                content: !<static_method_return>
                  target: "org.bitcoinj.base.Sha256Hash"
                  method: "read"
                  methodParameters:
                  - name: "buf"
                    value:
                      sapientType: "OBJECT"
                      content: !<static_method_return>
                        target: "java.nio.ByteBuffer"
                        method: "allocateDirect"
                        methodParameters:
                        - name: "capacity"
                          value:
                            sapientType: "BASIC"
                            content: !<regular>
                              value: 64
                            valueType: "int"
                            fixed: true
                            equalsMethodPresent: false
                            explicitCastNeeded: false
                      valueType: "java.nio.ByteBuffer"
                      uuid: "<init>_list1-0-buf"
                      fixed: false
                      equalsMethodPresent: false
                      explicitCastNeeded: false
                valueType: "org.bitcoinj.base.Sha256Hash"
                uuid: "<init>_list1-0"
                fixed: false
                collectionUuid: "<init>_list1"
                equalsMethodPresent: false
                explicitCastNeeded: false
              - sapientType: "OBJECT"
                content: !<static_method_return>
                  target: "org.bitcoinj.base.Sha256Hash"
                  method: "read"
                  methodParameters:
                  - name: "buf"
                    value:
                      sapientType: "OBJECT"
                      content: !<static_method_return>
                        target: "java.nio.ByteBuffer"
                        method: "allocateDirect"
                        methodParameters:
                        - name: "capacity"
                          value:
                            sapientType: "BASIC"
                            content: !<regular>
                              value: 64
                            valueType: "int"
                            fixed: true
                            equalsMethodPresent: false
                            explicitCastNeeded: false
                      valueType: "java.nio.ByteBuffer"
                      uuid: "<init>_list1-1-buf"
                      fixed: false
                      equalsMethodPresent: false
                      explicitCastNeeded: false
                valueType: "org.bitcoinj.base.Sha256Hash"
                uuid: "<init>_list1-1"
                fixed: false
                collectionUuid: "<init>_list1"
                equalsMethodPresent: false
                explicitCastNeeded: false
              - sapientType: "OBJECT"
                content: !<static_method_return>
                  target: "org.bitcoinj.base.Sha256Hash"
                  method: "read"
                  methodParameters:
                  - name: "buf"
                    value:
                      sapientType: "OBJECT"
                      content: !<static_method_return>
                        target: "java.nio.ByteBuffer"
                        method: "allocateDirect"
                        methodParameters:
                        - name: "capacity"
                          value:
                            sapientType: "BASIC"
                            content: !<regular>
                              value: 64
                            valueType: "int"
                            fixed: true
                            equalsMethodPresent: false
                            explicitCastNeeded: false
                      valueType: "java.nio.ByteBuffer"
                      uuid: "<init>_list1-2-buf"
                      fixed: false
                      equalsMethodPresent: false
                      explicitCastNeeded: false
                valueType: "org.bitcoinj.base.Sha256Hash"
                uuid: "<init>_list1-2"
                fixed: false
                collectionUuid: "<init>_list1"
                equalsMethodPresent: false
                explicitCastNeeded: false
            valueType: "java.util.List"
            genericValueType: "org.bitcoinj.base.Sha256Hash"
            uuid: "<init>_list1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "bits"
          value:
            sapientType: "ARRAY"
            content: !<array>
              values:
                0:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: 1
                  valueType: "byte"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                1:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: 0
                  valueType: "byte"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                2:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: 1
                  valueType: "byte"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
            valueType: "byte[]"
            uuid: "<init>_byte[]1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      valueType: "org.bitcoinj.core.PartialMerkleTree"
      uuid: "target"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "REAL"
      valueType: "org.bitcoinj.base.VarInt"
      uuid: "uuid2"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: 1
      valueType: "int"
      uuid: "messageSize_int3"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: 0
      valueType: "long"
      originalValueType: "int"
      uuid: "uuid1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "REAL"
      valueType: "org.bitcoinj.base.VarInt"
      uuid: "uuid4"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: 1
      valueType: "int"
      uuid: "messageSize_int11"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: 3
      valueType: "long"
      originalValueType: "int"
      uuid: "uuid3"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.nio.ByteBuffer"
        method: "allocateDirect"
        methodParameters:
        - name: "capacity"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 64
            valueType: "int"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
      valueType: "java.nio.ByteBuffer"
      uuid: "serialize_byteBuffer2"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.nio.ByteBuffer"
        method: "allocate"
        methodParameters:
        - value:
            sapientType: "BASIC"
            content: !<regular>
              value: 9
            valueType: "int"
            uuid: "messageSize_int15"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
      valueType: "java.nio.ByteBuffer"
      uuid: "serialize_byteBuffer1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "byte[]"
      uuid: "serialize_byte[]1"
      fixed: false
      equalsMethodPresent: true
      explicitCastNeeded: false
- method:
    name: "messageSize"
    signature: "messageSize() : int"
    sourceCodeSignature: "int messageSize()"
    instructionFingerprint: "C46D0451DAFA4ACB7A66FBD0B4243E32"
  paths:
  - pathId: "path1"
    testPathName: "messageSizeTest"
    constructorSignature: "<init>(int,java.util.List<org.bitcoinj.base.Sha256Hash>,byte[])\
      \ : void"
    modelFingerprint: "61C834B90BEA093F73F2A602DF8EDEF0"
    problemWasSolvedByProver: true
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "FA06257386CF4D5271BDA61D140E0397"
      index: 1
      valueUuid: "target"
    - type: "STATIC"
      name: "VarInt"
      modelFingerprint: "4E5004D74314CB7D2EEEAAFD66952691"
      index: 2
      valueUuid: "uuid38"
      methodExercised:
        target: "org.bitcoinj.base.VarInt"
        name: "sizeOf"
        parameters:
        - name: "value"
          valueUuid: "messageSize_long1"
        signature: "sizeOf(long): int"
        returnValueUuid: "messageSize_int3"
        access: 9
    - type: "STATIC"
      name: "VarInt"
      modelFingerprint: "4E5004D74314CB7D2EEEAAFD66952691"
      index: 3
      valueUuid: "uuid39"
      methodExercised:
        target: "org.bitcoinj.base.VarInt"
        name: "sizeOf"
        parameters:
        - name: "value"
          valueUuid: "messageSize_long2"
        signature: "sizeOf(long): int"
        returnValueUuid: "messageSize_int9"
        access: 9
    - type: "RESULT"
      name: "result"
      modelFingerprint: "72167BEB38CEB0FC32B4EA3430129FFC"
      index: 4
      valueUuid: "messageSize_int12"
    uuid: "c2057553-a090-359a-8f38-97b151dff7fd"
    deleted: false
    disabled: false
    ignoredBySystem: false
    prover: "DEFAULT"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.bitcoinj.core.PartialMerkleTree"
        parameters:
        - name: "origTxCount"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 0
            valueType: "int"
            uuid: "<init>_int1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "hashes"
          value:
            sapientType: "COLLECTION"
            content: !<collection>
              parameters: []
              values: []
            valueType: "java.util.List"
            genericValueType: "org.bitcoinj.base.Sha256Hash"
            uuid: "<init>_list1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "bits"
          value:
            sapientType: "ARRAY"
            content: !<array>
              values: {}
            valueType: "byte[]"
            uuid: "<init>_byte[]1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      valueType: "org.bitcoinj.core.PartialMerkleTree"
      uuid: "target"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "REAL"
      valueType: "org.bitcoinj.base.VarInt"
      uuid: "uuid38"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: 1
      valueType: "int"
      uuid: "messageSize_int3"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: 0
      valueType: "long"
      originalValueType: "int"
      uuid: "messageSize_long1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "REAL"
      valueType: "org.bitcoinj.base.VarInt"
      uuid: "uuid39"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: 1
      valueType: "int"
      uuid: "messageSize_int9"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: 0
      valueType: "long"
      originalValueType: "int"
      uuid: "messageSize_long2"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: 6
      valueType: "int"
      uuid: "messageSize_int12"
      fixed: false
      equalsMethodPresent: true
      explicitCastNeeded: false
- method:
    name: "getMessageSize"
    signature: "getMessageSize() : int"
    sourceCodeSignature: "int getMessageSize()"
    instructionFingerprint: "B1B472F4BCC5E3913747E9E363253B22"
  paths:
  - pathId: "path1"
    testPathName: "getMessageSizeTest"
    constructorSignature: "<init>(int,java.util.List<org.bitcoinj.base.Sha256Hash>,byte[])\
      \ : void"
    modelFingerprint: "2F740053D138F2EE5D197D0977E67BCA"
    problemWasSolvedByProver: true
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "FA06257386CF4D5271BDA61D140E0397"
      index: 1
      valueUuid: "target"
    - type: "STATIC"
      name: "VarInt"
      modelFingerprint: "4E5004D74314CB7D2EEEAAFD66952691"
      index: 2
      valueUuid: "uuid40"
      methodExercised:
        target: "org.bitcoinj.base.VarInt"
        name: "sizeOf"
        parameters:
        - name: "value"
          valueUuid: "messageSize_long1"
        signature: "sizeOf(long): int"
        returnValueUuid: "messageSize_int3"
        access: 9
    - type: "STATIC"
      name: "VarInt"
      modelFingerprint: "4E5004D74314CB7D2EEEAAFD66952691"
      index: 3
      valueUuid: "uuid41"
      methodExercised:
        target: "org.bitcoinj.base.VarInt"
        name: "sizeOf"
        parameters:
        - name: "value"
          valueUuid: "messageSize_long2"
        signature: "sizeOf(long): int"
        returnValueUuid: "messageSize_int9"
        access: 9
    - type: "RESULT"
      name: "result"
      modelFingerprint: "72167BEB38CEB0FC32B4EA3430129FFC"
      index: 4
      valueUuid: "messageSize_int12"
    uuid: "435d64f5-8fca-31bf-b014-13944bac4d4c"
    deleted: false
    disabled: false
    ignoredBySystem: false
    prover: "DEFAULT"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.bitcoinj.core.PartialMerkleTree"
        parameters:
        - name: "origTxCount"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 0
            valueType: "int"
            uuid: "<init>_int1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "hashes"
          value:
            sapientType: "COLLECTION"
            content: !<collection>
              parameters: []
              values: []
            valueType: "java.util.List"
            genericValueType: "org.bitcoinj.base.Sha256Hash"
            uuid: "<init>_list1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "bits"
          value:
            sapientType: "ARRAY"
            content: !<array>
              values: {}
            valueType: "byte[]"
            uuid: "<init>_byte[]1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      valueType: "org.bitcoinj.core.PartialMerkleTree"
      uuid: "target"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "REAL"
      valueType: "org.bitcoinj.base.VarInt"
      uuid: "uuid40"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: 1
      valueType: "int"
      uuid: "messageSize_int3"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: 0
      valueType: "long"
      originalValueType: "int"
      uuid: "messageSize_long1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "REAL"
      valueType: "org.bitcoinj.base.VarInt"
      uuid: "uuid41"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: 1
      valueType: "int"
      uuid: "messageSize_int9"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: 0
      valueType: "long"
      originalValueType: "int"
      uuid: "messageSize_long2"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: 6
      valueType: "int"
      uuid: "messageSize_int12"
      fixed: false
      equalsMethodPresent: true
      explicitCastNeeded: false
- method:
    name: "getTxnHashAndMerkleRoot"
    signature: "getTxnHashAndMerkleRoot(java.util.List<org.bitcoinj.base.Sha256Hash>)\
      \ : org.bitcoinj.base.Sha256Hash"
    sourceCodeSignature: "Sha256Hash getTxnHashAndMerkleRoot(List<Sha256Hash> matchedHashesOut)"
    instructionFingerprint: "B15F792C53DF5D2ACBB30284708F50B5"
  paths:
  - pathId: "path1"
    testPathName: "getTxnHashAndMerkleRootWhenTransactionCountEquals0ThrowsVerificationException"
    constructorSignature: "<init>(int,java.util.List<org.bitcoinj.base.Sha256Hash>,byte[])\
      \ : void"
    modelFingerprint: "F60C32B3A61A8143904A7B469DF7B42F"
    problemWasSolvedByProver: true
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "89BC516B51E58F16C961EA060015B19C"
      index: 1
      valueUuid: "target"
    - type: "INPUT"
      name: "matchedHashesOut"
      modelFingerprint: "D347C0779E4A413D6BA0548BAA4B312A"
      index: 2
      valueUuid: "getTxnHashAndMerkleRoot_list1"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "939EE64E71ED49979CD67F45EE73F819"
      index: 3
      valueUuid: "getTxnHashAndMerkleRoot_verificationException1"
    - type: "STATE_VERIFICATION_PARAMETER"
      name: "matchedHashesOut"
      modelFingerprint: "913CFD499BC30A98557C57BFD17BC91C"
      index: 4
      valueUuid: "getTxnHashAndMerkleRoot_list2"
      originalValueUuid: "getTxnHashAndMerkleRoot_list1"
    uuid: "6ec8093e-deb3-33db-8067-8038a95dda60"
    deleted: false
    disabled: false
    ignoredBySystem: false
    prover: "DEFAULT"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.bitcoinj.core.PartialMerkleTree"
        parameters:
        - name: "origTxCount"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 0
            valueType: "int"
            uuid: "<init>_int1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "hashes"
          value:
            sapientType: "COLLECTION"
            content: !<collection>
              parameters: []
              values: []
            valueType: "java.util.List"
            genericValueType: "org.bitcoinj.base.Sha256Hash"
            uuid: "<init>_list1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "bits"
          value:
            sapientType: "ARRAY"
            content: !<array>
              values: {}
            valueType: "byte[]"
            uuid: "<init>_byte[]1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      valueType: "org.bitcoinj.core.PartialMerkleTree"
      uuid: "target"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.List"
      genericValueType: "org.bitcoinj.base.Sha256Hash"
      uuid: "getTxnHashAndMerkleRoot_list1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "EXCEPTION"
      content: !<new>
        target: "org.bitcoinj.core.VerificationException"
        parameters:
        - name: "msg"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "Got a CPartialMerkleTree with 0 transactions"
            valueType: "java.lang.String"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: true
      valueType: "org.bitcoinj.core.VerificationException"
      uuid: "getTxnHashAndMerkleRoot_verificationException1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.List"
      genericValueType: "org.bitcoinj.base.Sha256Hash"
      uuid: "getTxnHashAndMerkleRoot_list2"
      fixed: false
      equalsMethodPresent: true
      explicitCastNeeded: false
  - pathId: "path2"
    testPathName: "getTxnHashAndMerkleRootWhenTransactionCountGreaterThanBlockMAX_BLOCK_SIZEDividedBy60ThrowsVerificationException"
    constructorSignature: "<init>(int,java.util.List<org.bitcoinj.base.Sha256Hash>,byte[])\
      \ : void"
    modelFingerprint: "53AF9B94F31733D30F342E1B03BDF233"
    problemWasSolvedByProver: true
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "3B1C29793F6F9CAB899C9F18A66308DC"
      index: 1
      valueUuid: "target"
    - type: "INPUT"
      name: "matchedHashesOut"
      modelFingerprint: "D347C0779E4A413D6BA0548BAA4B312A"
      index: 2
      valueUuid: "getTxnHashAndMerkleRoot_list1"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "756769A52F5F39979B695F087364045A"
      index: 3
      valueUuid: "getTxnHashAndMerkleRoot_verificationException1"
    - type: "STATE_VERIFICATION_PARAMETER"
      name: "matchedHashesOut"
      modelFingerprint: "913CFD499BC30A98557C57BFD17BC91C"
      index: 4
      valueUuid: "getTxnHashAndMerkleRoot_list2"
      originalValueUuid: "getTxnHashAndMerkleRoot_list1"
    uuid: "83329bcc-fba0-3edb-bbb3-97bc053a08b5"
    deleted: false
    disabled: false
    ignoredBySystem: false
    prover: "DEFAULT"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.bitcoinj.core.PartialMerkleTree"
        parameters:
        - name: "origTxCount"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 16667
            valueType: "int"
            uuid: "<init>_int1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "hashes"
          value:
            sapientType: "COLLECTION"
            content: !<collection>
              parameters: []
              values: []
            valueType: "java.util.List"
            genericValueType: "org.bitcoinj.base.Sha256Hash"
            uuid: "<init>_list1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "bits"
          value:
            sapientType: "ARRAY"
            content: !<array>
              values: {}
            valueType: "byte[]"
            uuid: "<init>_byte[]1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      valueType: "org.bitcoinj.core.PartialMerkleTree"
      uuid: "target"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.List"
      genericValueType: "org.bitcoinj.base.Sha256Hash"
      uuid: "getTxnHashAndMerkleRoot_list1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "EXCEPTION"
      content: !<new>
        target: "org.bitcoinj.core.VerificationException"
        parameters:
        - name: "msg"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "Got a CPartialMerkleTree with more transactions than is possible"
            valueType: "java.lang.String"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: true
      valueType: "org.bitcoinj.core.VerificationException"
      uuid: "getTxnHashAndMerkleRoot_verificationException1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.List"
      genericValueType: "org.bitcoinj.base.Sha256Hash"
      uuid: "getTxnHashAndMerkleRoot_list2"
      fixed: false
      equalsMethodPresent: true
      explicitCastNeeded: false
  - pathId: "path3"
    testPathName: "getTxnHashAndMerkleRootWhenHashesSizeGreaterThanTransactionCountThrowsVerificationException"
    constructorSignature: "<init>(int,java.util.List<org.bitcoinj.base.Sha256Hash>,byte[])\
      \ : void"
    modelFingerprint: "8BA39F6854C4BA2BAF92D088ADBB3478"
    problemWasSolvedByProver: true
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "7687DC7983AB275520D6B29682228813"
      index: 1
      valueUuid: "target"
    - type: "INPUT"
      name: "matchedHashesOut"
      modelFingerprint: "D347C0779E4A413D6BA0548BAA4B312A"
      index: 2
      valueUuid: "getTxnHashAndMerkleRoot_list1"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "D66B6744F752E355A038DBBF731D33BC"
      index: 3
      valueUuid: "getTxnHashAndMerkleRoot_verificationException1"
    - type: "STATE_VERIFICATION_PARAMETER"
      name: "matchedHashesOut"
      modelFingerprint: "913CFD499BC30A98557C57BFD17BC91C"
      index: 4
      valueUuid: "getTxnHashAndMerkleRoot_list2"
      originalValueUuid: "getTxnHashAndMerkleRoot_list1"
    uuid: "fbf598f7-b2d7-3dcb-8969-b883e69c9e21"
    deleted: false
    disabled: false
    ignoredBySystem: false
    prover: "DEFAULT"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.bitcoinj.core.PartialMerkleTree"
        parameters:
        - name: "origTxCount"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: -1
            valueType: "int"
            uuid: "<init>_int1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "hashes"
          value:
            sapientType: "COLLECTION"
            content: !<collection>
              parameters: []
              values: []
            valueType: "java.util.List"
            genericValueType: "org.bitcoinj.base.Sha256Hash"
            uuid: "<init>_list1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "bits"
          value:
            sapientType: "ARRAY"
            content: !<array>
              values: {}
            valueType: "byte[]"
            uuid: "<init>_byte[]1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      valueType: "org.bitcoinj.core.PartialMerkleTree"
      uuid: "target"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.List"
      genericValueType: "org.bitcoinj.base.Sha256Hash"
      uuid: "getTxnHashAndMerkleRoot_list1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "EXCEPTION"
      content: !<new>
        target: "org.bitcoinj.core.VerificationException"
        parameters:
        - name: "msg"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "Got a CPartialMerkleTree with more hashes than transactions"
            valueType: "java.lang.String"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: true
      valueType: "org.bitcoinj.core.VerificationException"
      uuid: "getTxnHashAndMerkleRoot_verificationException1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.List"
      genericValueType: "org.bitcoinj.base.Sha256Hash"
      uuid: "getTxnHashAndMerkleRoot_list2"
      fixed: false
      equalsMethodPresent: true
      explicitCastNeeded: false
  - pathId: "path4"
    testPathName: "getTxnHashAndMerkleRootWhenMatchedChildBitsLengthMultipliedBy8LessThanHashesSizeThrowsVerificationException"
    constructorSignature: "<init>(int,java.util.List<org.bitcoinj.base.Sha256Hash>,byte[])\
      \ : void"
    modelFingerprint: "7884396090E9D36C2050298A68272649"
    problemWasSolvedByProver: true
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "4CB394428EAFB38BCF29FD88558E42AA"
      index: 1
      valueUuid: "target"
    - type: "INPUT"
      name: "matchedHashesOut"
      modelFingerprint: "D347C0779E4A413D6BA0548BAA4B312A"
      index: 2
      valueUuid: "getTxnHashAndMerkleRoot_list1"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "987AFE4711FFE35FC87D6F61B89EC1BF"
      index: 3
      valueUuid: "getTxnHashAndMerkleRoot_verificationException1"
    - type: "STATE_VERIFICATION_PARAMETER"
      name: "matchedHashesOut"
      modelFingerprint: "913CFD499BC30A98557C57BFD17BC91C"
      index: 4
      valueUuid: "getTxnHashAndMerkleRoot_list2"
      originalValueUuid: "getTxnHashAndMerkleRoot_list1"
    uuid: "3a4e2338-f7b9-3e90-a74f-57ab949ee896"
    deleted: false
    disabled: false
    ignoredBySystem: false
    prover: "DEFAULT"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.bitcoinj.core.PartialMerkleTree"
        parameters:
        - name: "origTxCount"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 1
            valueType: "int"
            uuid: "<init>_int1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "hashes"
          value:
            sapientType: "COLLECTION"
            content: !<collection>
              collectionClass: "java.util.ArrayList"
              parameters: []
              values:
              - sapientType: "MOCK"
                valueType: "org.bitcoinj.base.Sha256Hash"
                uuid: "<init>_list1Item0"
                fixed: false
                equalsMethodPresent: false
                explicitCastNeeded: false
            valueType: "java.util.List"
            genericValueType: "org.bitcoinj.base.Sha256Hash"
            uuid: "<init>_list1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "bits"
          value:
            sapientType: "ARRAY"
            content: !<array>
              values: {}
            valueType: "byte[]"
            uuid: "<init>_byte[]1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      valueType: "org.bitcoinj.core.PartialMerkleTree"
      uuid: "target"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.List"
      genericValueType: "org.bitcoinj.base.Sha256Hash"
      uuid: "getTxnHashAndMerkleRoot_list1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "EXCEPTION"
      content: !<new>
        target: "org.bitcoinj.core.VerificationException"
        parameters:
        - name: "msg"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "Got a CPartialMerkleTree with fewer matched bits than hashes"
            valueType: "java.lang.String"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: true
      valueType: "org.bitcoinj.core.VerificationException"
      uuid: "getTxnHashAndMerkleRoot_verificationException1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.List"
      genericValueType: "org.bitcoinj.base.Sha256Hash"
      uuid: "getTxnHashAndMerkleRoot_list2"
      fixed: false
      equalsMethodPresent: true
      explicitCastNeeded: false
  - pathId: "path5"
    testPathName: "getTxnHashAndMerkleRootWhenUsedBitsUsedGreaterThanOrEqualsToMatchedChildBitsLengthMultipliedThrowsVerificationException"
    constructorSignature: "<init>(int,java.util.List<org.bitcoinj.base.Sha256Hash>,byte[])\
      \ : void"
    modelFingerprint: "D7B50F75BE1E4CA007CC2C052CEDAF4B"
    problemWasSolvedByProver: false
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "BC3888B6A6AE379F4E9A8639A11B5A98"
      index: 1
      valueUuid: "target"
    - type: "INPUT"
      name: "matchedHashesOut"
      modelFingerprint: "D347C0779E4A413D6BA0548BAA4B312A"
      index: 2
      valueUuid: "getTxnHashAndMerkleRoot_list1"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "5E9F48817810659910A2270C8DA93E36"
      index: 3
      valueUuid: "recursiveExtractHashes_verificationException1"
    - type: "STATE_VERIFICATION_PARAMETER"
      name: "matchedHashesOut"
      modelFingerprint: "913CFD499BC30A98557C57BFD17BC91C"
      index: 4
      valueUuid: "getTxnHashAndMerkleRoot_list2"
      originalValueUuid: "getTxnHashAndMerkleRoot_list1"
    uuid: "ac5b8ced-47be-39cc-9583-6a22e65ed652"
    deleted: false
    disabled: false
    ignoredBySystem: false
    failureReason:
      reason: "BITWISE_NOT_SUPPORTED"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.bitcoinj.core.PartialMerkleTree"
        parameters:
        - name: "origTxCount"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 1
            valueType: "int"
            uuid: "<init>_int1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "hashes"
          value:
            sapientType: "COLLECTION"
            content: !<collection>
              parameters: []
              values: []
            valueType: "java.util.List"
            genericValueType: "org.bitcoinj.base.Sha256Hash"
            uuid: "<init>_list1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "bits"
          value:
            sapientType: "ARRAY"
            content: !<array>
              values: {}
            valueType: "byte[]"
            uuid: "<init>_byte[]1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      valueType: "org.bitcoinj.core.PartialMerkleTree"
      uuid: "target"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.List"
      genericValueType: "org.bitcoinj.base.Sha256Hash"
      uuid: "getTxnHashAndMerkleRoot_list1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "EXCEPTION"
      content: !<new>
        target: "org.bitcoinj.core.VerificationException"
        parameters:
        - name: "msg"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "PartialMerkleTree overflowed its bits array"
            valueType: "java.lang.String"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: true
      valueType: "org.bitcoinj.core.VerificationException"
      uuid: "recursiveExtractHashes_verificationException1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.List"
      genericValueType: "org.bitcoinj.base.Sha256Hash"
      uuid: "getTxnHashAndMerkleRoot_list2"
      fixed: false
      equalsMethodPresent: true
      explicitCastNeeded: false
  - pathId: "path12"
    testPathName: "getTxnHashAndMerkleRootWhenUsedHashesUsedGreaterThanOrEqualsToHashesSizeThrowsVerificationException"
    constructorSignature: "<init>(int,java.util.List<org.bitcoinj.base.Sha256Hash>,byte[])\
      \ : void"
    modelFingerprint: "477CAB1EF2A9DDE5C622A0483D1E0EEB"
    problemWasSolvedByProver: false
    truncated: true
    inputParameters: []
    uuid: "c5929706-cb22-39e1-aa9c-15fda9acbd5a"
    deleted: true
    disabled: false
    ignoredBySystem: true
    failureReason:
      reason: "BITWISE_NOT_SUPPORTED"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues: []
  - pathId: "path6"
    testPathName: "getTxnHashAndMerkleRootWhenNotParentOfMatchAndUsedHashesUsedGreaterThanOrEqualsToHashesSizeThrowsVerificationException"
    constructorSignature: "<init>(int,java.util.List<org.bitcoinj.base.Sha256Hash>,byte[])\
      \ : void"
    modelFingerprint: "2076FCF571083AF644F3322D27BE64BF"
    problemWasSolvedByProver: false
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "BC3888B6A6AE379F4E9A8639A11B5A98"
      index: 1
      valueUuid: "target"
    - type: "INPUT"
      name: "matchedHashesOut"
      modelFingerprint: "D347C0779E4A413D6BA0548BAA4B312A"
      index: 2
      valueUuid: "getTxnHashAndMerkleRoot_list1"
    - type: "STATIC"
      name: "ByteUtils"
      modelFingerprint: "C9EBDD6EA732949A91FB61FCC7F06358"
      index: 3
      valueUuid: "uuid43"
      methodExercised:
        target: "org.bitcoinj.base.internal.ByteUtils"
        name: "checkBitLE"
        parameters:
        - name: "data"
          valueUuid: "<init>_byte[]1"
        - name: "index"
          valueUuid: "recursiveExtractHashes_int5"
        signature: "checkBitLE(byte[],int): boolean"
        returnValueUuid: "recursiveExtractHashes_boolean1"
        access: 9
    - type: "RESULT"
      name: "result"
      modelFingerprint: "5CD7351E6BF42F0295D0FD012693CC71"
      index: 4
      valueUuid: "recursiveExtractHashes_verificationException1"
    - type: "STATE_VERIFICATION_PARAMETER"
      name: "matchedHashesOut"
      modelFingerprint: "913CFD499BC30A98557C57BFD17BC91C"
      index: 5
      valueUuid: "getTxnHashAndMerkleRoot_list2"
      originalValueUuid: "getTxnHashAndMerkleRoot_list1"
    uuid: "b64c1032-8292-36aa-adb1-83f8f1b9793c"
    deleted: false
    disabled: false
    ignoredBySystem: false
    failureReason:
      reason: "BITWISE_NOT_SUPPORTED"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.bitcoinj.core.PartialMerkleTree"
        parameters:
        - name: "origTxCount"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 1
            valueType: "int"
            uuid: "<init>_int1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "hashes"
          value:
            sapientType: "COLLECTION"
            content: !<collection>
              parameters: []
              values: []
            valueType: "java.util.List"
            genericValueType: "org.bitcoinj.base.Sha256Hash"
            uuid: "<init>_list1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "bits"
          value:
            sapientType: "ARRAY"
            content: !<array>
              values: {}
            valueType: "byte[]"
            uuid: "<init>_byte[]1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      valueType: "org.bitcoinj.core.PartialMerkleTree"
      uuid: "target"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.List"
      genericValueType: "org.bitcoinj.base.Sha256Hash"
      uuid: "getTxnHashAndMerkleRoot_list1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.bitcoinj.base.internal.ByteUtils"
      uuid: "uuid43"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "recursiveExtractHashes_boolean1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "byte[]"
      uuid: "<init>_byte[]1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: 0
      valueType: "int"
      uuid: "recursiveExtractHashes_int5"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "EXCEPTION"
      content: !<new>
        target: "org.bitcoinj.core.VerificationException"
        parameters:
        - name: "msg"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "PartialMerkleTree overflowed its hash array"
            valueType: "java.lang.String"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: true
      valueType: "org.bitcoinj.core.VerificationException"
      uuid: "recursiveExtractHashes_verificationException1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.List"
      genericValueType: "org.bitcoinj.base.Sha256Hash"
      uuid: "getTxnHashAndMerkleRoot_list2"
      fixed: false
      equalsMethodPresent: true
      explicitCastNeeded: false
  - pathId: "path9"
    testPathName: "getTxnHashAndMerkleRootWhenArraysEqualsRightLeftThrowsVerificationException"
    constructorSignature: "<init>(int,java.util.List<org.bitcoinj.base.Sha256Hash>,byte[])\
      \ : void"
    modelFingerprint: "E43EF6A64DF24F1F0232DA4A3BB78AF9"
    problemWasSolvedByProver: false
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "BC3888B6A6AE379F4E9A8639A11B5A98"
      index: 1
      valueUuid: "target"
    - type: "INPUT"
      name: "matchedHashesOut"
      modelFingerprint: "D347C0779E4A413D6BA0548BAA4B312A"
      index: 2
      valueUuid: "getTxnHashAndMerkleRoot_list1"
    - type: "STATIC"
      name: "ByteUtils"
      modelFingerprint: "C6AB84C142FBF20E73D088DD61E36656"
      index: 3
      valueUuid: "uuid44"
      methodExercised:
        target: "org.bitcoinj.base.internal.ByteUtils"
        name: "checkBitLE"
        parameters:
        - name: "data"
          valueUuid: "<init>_byte[]1"
        - name: "index"
          valueUuid: "recursiveExtractHashes_int5"
        signature: "checkBitLE(byte[],int): boolean"
        returnValueUuid: "recursiveExtractHashes_boolean1"
        access: 9
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "02232E6D25914A8F2136CA76A6906D1B"
      index: 4
      valueUuid: "recursiveExtractHashes_sha256Hash1"
      methodExercised:
        target: "org.bitcoinj.base.Sha256Hash"
        name: "getBytes"
        parameters: []
        signature: "getBytes(): byte[]"
        returnValueUuid: "recursiveExtractHashes_byte[]1"
        access: 1
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "02232E6D25914A8F2136CA76A6906D1B"
      index: 5
      valueUuid: "recursiveExtractHashes_sha256Hash2"
      methodExercised:
        target: "org.bitcoinj.base.Sha256Hash"
        name: "getBytes"
        parameters: []
        signature: "getBytes(): byte[]"
        returnValueUuid: "recursiveExtractHashes_byte[]2"
        access: 1
    - type: "RESULT"
      name: "result"
      modelFingerprint: "2BB4C28FAF661545D5ABA805634D0123"
      index: 6
      valueUuid: "recursiveExtractHashes_verificationException1"
    - type: "STATE_VERIFICATION_PARAMETER"
      name: "matchedHashesOut"
      modelFingerprint: "913CFD499BC30A98557C57BFD17BC91C"
      index: 7
      valueUuid: "getTxnHashAndMerkleRoot_list2"
      originalValueUuid: "getTxnHashAndMerkleRoot_list1"
    uuid: "7461e740-da2f-387c-bc2b-05da5aa5cfd3"
    deleted: false
    disabled: false
    ignoredBySystem: false
    failureReason:
      reason: "BITWISE_NOT_SUPPORTED"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.bitcoinj.core.PartialMerkleTree"
        parameters:
        - name: "origTxCount"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 1
            valueType: "int"
            uuid: "<init>_int1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "hashes"
          value:
            sapientType: "COLLECTION"
            content: !<collection>
              parameters: []
              values: []
            valueType: "java.util.List"
            genericValueType: "org.bitcoinj.base.Sha256Hash"
            uuid: "<init>_list1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "bits"
          value:
            sapientType: "ARRAY"
            content: !<array>
              values: {}
            valueType: "byte[]"
            uuid: "<init>_byte[]1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      valueType: "org.bitcoinj.core.PartialMerkleTree"
      uuid: "target"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.List"
      genericValueType: "org.bitcoinj.base.Sha256Hash"
      uuid: "getTxnHashAndMerkleRoot_list1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.bitcoinj.base.internal.ByteUtils"
      uuid: "uuid44"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "recursiveExtractHashes_boolean1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "byte[]"
      uuid: "<init>_byte[]1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: 0
      valueType: "int"
      uuid: "recursiveExtractHashes_int5"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.bitcoinj.base.Sha256Hash"
      uuid: "recursiveExtractHashes_sha256Hash1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "byte[]"
      uuid: "recursiveExtractHashes_byte[]1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.bitcoinj.base.Sha256Hash"
      uuid: "recursiveExtractHashes_sha256Hash2"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "byte[]"
      uuid: "recursiveExtractHashes_byte[]2"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "EXCEPTION"
      content: !<new>
        target: "org.bitcoinj.core.VerificationException"
        parameters:
        - name: "msg"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "Invalid merkle tree with duplicated left/right branches"
            valueType: "java.lang.String"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: true
      valueType: "org.bitcoinj.core.VerificationException"
      uuid: "recursiveExtractHashes_verificationException1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.List"
      genericValueType: "org.bitcoinj.base.Sha256Hash"
      uuid: "getTxnHashAndMerkleRoot_list2"
      fixed: false
      equalsMethodPresent: true
      explicitCastNeeded: false
  - pathId: "path11"
    testPathName: "getTxnHashAndMerkleRootWhenUsedBitsUsedPlus7DividedBy8NotEqualsMatchedChildBitsLengthThrowsVerificationException"
    constructorSignature: "<init>(int,java.util.List<org.bitcoinj.base.Sha256Hash>,byte[])\
      \ : void"
    modelFingerprint: "6E6032853DEF8B06BC2F9C5322EBF21A"
    problemWasSolvedByProver: false
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "BC3888B6A6AE379F4E9A8639A11B5A98"
      index: 1
      valueUuid: "target"
    - type: "INPUT"
      name: "matchedHashesOut"
      modelFingerprint: "D347C0779E4A413D6BA0548BAA4B312A"
      index: 2
      valueUuid: "getTxnHashAndMerkleRoot_list1"
    - type: "STATIC"
      name: "ByteUtils"
      modelFingerprint: "C6AB84C142FBF20E73D088DD61E36656"
      index: 3
      valueUuid: "uuid45"
      methodExercised:
        target: "org.bitcoinj.base.internal.ByteUtils"
        name: "checkBitLE"
        parameters:
        - name: "data"
          valueUuid: "<init>_byte[]1"
        - name: "index"
          valueUuid: "recursiveExtractHashes_int5"
        signature: "checkBitLE(byte[],int): boolean"
        returnValueUuid: "recursiveExtractHashes_boolean1"
        access: 9
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "02232E6D25914A8F2136CA76A6906D1B"
      index: 4
      valueUuid: "recursiveExtractHashes_sha256Hash1"
      methodExercised:
        target: "org.bitcoinj.base.Sha256Hash"
        name: "getBytes"
        parameters: []
        signature: "getBytes(): byte[]"
        returnValueUuid: "recursiveExtractHashes_byte[]1"
        access: 1
    - type: "STATIC"
      name: "ByteUtils"
      modelFingerprint: "DA04F1711DB88BA3FAA8D1F3BF82DAB0"
      index: 5
      valueUuid: "uuid46"
      methodExercised:
        target: "org.bitcoinj.base.internal.ByteUtils"
        name: "reverseBytes"
        parameters:
        - name: "i"
          valueUuid: "recursiveExtractHashes_byte[]1"
        signature: "reverseBytes(byte[]): byte[]"
        returnValueUuid: "combineLeftRight_byte[]1"
        access: 9
    - type: "STATIC"
      name: "ByteUtils"
      modelFingerprint: "DA04F1711DB88BA3FAA8D1F3BF82DAB0"
      index: 6
      valueUuid: "uuid47"
      methodExercised:
        target: "org.bitcoinj.base.internal.ByteUtils"
        name: "reverseBytes"
        parameters:
        - name: "i"
          valueUuid: "recursiveExtractHashes_byte[]1"
        signature: "reverseBytes(byte[]): byte[]"
        returnValueUuid: "combineLeftRight_byte[]2"
        access: 9
    - type: "STATIC"
      name: "Sha256Hash"
      modelFingerprint: "27005788116DB12651590A8AA3F712DD"
      index: 7
      valueUuid: "uuid48"
      methodExercised:
        target: "org.bitcoinj.base.Sha256Hash"
        name: "hashTwice"
        parameters:
        - name: "input1"
          valueUuid: "combineLeftRight_byte[]1"
        - name: "input2"
          valueUuid: "combineLeftRight_byte[]2"
        signature: "hashTwice(byte[],byte[]): byte[]"
        returnValueUuid: "combineLeftRight_byte[]3"
        access: 9
    - type: "STATIC"
      name: "Sha256Hash"
      modelFingerprint: "8D2FA757492D463385BFAAFC6E6406CE"
      index: 8
      valueUuid: "uuid49"
      methodExercised:
        target: "org.bitcoinj.base.Sha256Hash"
        name: "wrapReversed"
        parameters:
        - name: "rawHashBytes"
          valueUuid: "combineLeftRight_byte[]3"
        signature: "wrapReversed(byte[]): Sha256Hash"
        returnValueUuid: "combineLeftRight_sha256Hash1"
        access: 9
    - type: "RESULT"
      name: "result"
      modelFingerprint: "BC5ABC2C5359F33CC2E1BD5FFA814BCD"
      index: 9
      valueUuid: "getTxnHashAndMerkleRoot_verificationException1"
    - type: "STATE_VERIFICATION_PARAMETER"
      name: "matchedHashesOut"
      modelFingerprint: "913CFD499BC30A98557C57BFD17BC91C"
      index: 10
      valueUuid: "getTxnHashAndMerkleRoot_list2"
      originalValueUuid: "getTxnHashAndMerkleRoot_list1"
    uuid: "25d53595-cf1a-3e4e-8e7a-8d03b986c5c9"
    deleted: false
    disabled: false
    ignoredBySystem: false
    failureReason:
      reason: "BITWISE_NOT_SUPPORTED"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.bitcoinj.core.PartialMerkleTree"
        parameters:
        - name: "origTxCount"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 1
            valueType: "int"
            uuid: "<init>_int1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "hashes"
          value:
            sapientType: "COLLECTION"
            content: !<collection>
              parameters: []
              values: []
            valueType: "java.util.List"
            genericValueType: "org.bitcoinj.base.Sha256Hash"
            uuid: "<init>_list1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "bits"
          value:
            sapientType: "ARRAY"
            content: !<array>
              values: {}
            valueType: "byte[]"
            uuid: "<init>_byte[]1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      valueType: "org.bitcoinj.core.PartialMerkleTree"
      uuid: "target"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.List"
      genericValueType: "org.bitcoinj.base.Sha256Hash"
      uuid: "getTxnHashAndMerkleRoot_list1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.bitcoinj.base.internal.ByteUtils"
      uuid: "uuid45"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "recursiveExtractHashes_boolean1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "byte[]"
      uuid: "<init>_byte[]1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: 0
      valueType: "int"
      uuid: "recursiveExtractHashes_int5"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.bitcoinj.base.Sha256Hash"
      uuid: "recursiveExtractHashes_sha256Hash1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "byte[]"
      uuid: "recursiveExtractHashes_byte[]1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "REAL"
      valueType: "org.bitcoinj.base.internal.ByteUtils"
      uuid: "uuid46"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "byte[]"
      uuid: "combineLeftRight_byte[]1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "byte[]"
      uuid: "recursiveExtractHashes_byte[]1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "REAL"
      valueType: "org.bitcoinj.base.internal.ByteUtils"
      uuid: "uuid47"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "byte[]"
      uuid: "combineLeftRight_byte[]2"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "byte[]"
      uuid: "recursiveExtractHashes_byte[]1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "REAL"
      valueType: "org.bitcoinj.base.Sha256Hash"
      uuid: "uuid48"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "ARRAY"
      content: !<array>
        values:
          0:
            sapientType: "BASIC"
            content: !<regular>
              value: 93
            valueType: "byte"
            uuid: "combineLeftRight_byte[]3-item0"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          1:
            sapientType: "BASIC"
            content: !<regular>
              value: -10
            valueType: "byte"
            uuid: "combineLeftRight_byte[]3-item1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          2:
            sapientType: "BASIC"
            content: !<regular>
              value: -32
            valueType: "byte"
            uuid: "combineLeftRight_byte[]3-item2"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          3:
            sapientType: "BASIC"
            content: !<regular>
              value: -30
            valueType: "byte"
            uuid: "combineLeftRight_byte[]3-item3"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          4:
            sapientType: "BASIC"
            content: !<regular>
              value: 118
            valueType: "byte"
            uuid: "combineLeftRight_byte[]3-item4"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          5:
            sapientType: "BASIC"
            content: !<regular>
              value: 19
            valueType: "byte"
            uuid: "combineLeftRight_byte[]3-item5"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          6:
            sapientType: "BASIC"
            content: !<regular>
              value: 89
            valueType: "byte"
            uuid: "combineLeftRight_byte[]3-item6"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          7:
            sapientType: "BASIC"
            content: !<regular>
              value: -45
            valueType: "byte"
            uuid: "combineLeftRight_byte[]3-item7"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          8:
            sapientType: "BASIC"
            content: !<regular>
              value: 10
            valueType: "byte"
            uuid: "combineLeftRight_byte[]3-item8"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          9:
            sapientType: "BASIC"
            content: !<regular>
              value: -126
            valueType: "byte"
            uuid: "combineLeftRight_byte[]3-item9"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          10:
            sapientType: "BASIC"
            content: !<regular>
              value: 117
            valueType: "byte"
            uuid: "combineLeftRight_byte[]3-item10"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          11:
            sapientType: "BASIC"
            content: !<regular>
              value: 5
            valueType: "byte"
            uuid: "combineLeftRight_byte[]3-item11"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          12:
            sapientType: "BASIC"
            content: !<regular>
              value: -114
            valueType: "byte"
            uuid: "combineLeftRight_byte[]3-item12"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          13:
            sapientType: "BASIC"
            content: !<regular>
              value: 41
            valueType: "byte"
            uuid: "combineLeftRight_byte[]3-item13"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          14:
            sapientType: "BASIC"
            content: !<regular>
              value: -97
            valueType: "byte"
            uuid: "combineLeftRight_byte[]3-item14"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          15:
            sapientType: "BASIC"
            content: !<regular>
              value: -52
            valueType: "byte"
            uuid: "combineLeftRight_byte[]3-item15"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          16:
            sapientType: "BASIC"
            content: !<regular>
              value: 3
            valueType: "byte"
            uuid: "combineLeftRight_byte[]3-item16"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          17:
            sapientType: "BASIC"
            content: !<regular>
              value: -127
            valueType: "byte"
            uuid: "combineLeftRight_byte[]3-item17"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          18:
            sapientType: "BASIC"
            content: !<regular>
              value: 83
            valueType: "byte"
            uuid: "combineLeftRight_byte[]3-item18"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          19:
            sapientType: "BASIC"
            content: !<regular>
              value: 69
            valueType: "byte"
            uuid: "combineLeftRight_byte[]3-item19"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          20:
            sapientType: "BASIC"
            content: !<regular>
              value: 69
            valueType: "byte"
            uuid: "combineLeftRight_byte[]3-item20"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          21:
            sapientType: "BASIC"
            content: !<regular>
              value: -11
            valueType: "byte"
            uuid: "combineLeftRight_byte[]3-item21"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          22:
            sapientType: "BASIC"
            content: !<regular>
              value: 92
            valueType: "byte"
            uuid: "combineLeftRight_byte[]3-item22"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          23:
            sapientType: "BASIC"
            content: !<regular>
              value: -12
            valueType: "byte"
            uuid: "combineLeftRight_byte[]3-item23"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          24:
            sapientType: "BASIC"
            content: !<regular>
              value: 62
            valueType: "byte"
            uuid: "combineLeftRight_byte[]3-item24"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          25:
            sapientType: "BASIC"
            content: !<regular>
              value: 65
            valueType: "byte"
            uuid: "combineLeftRight_byte[]3-item25"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          26:
            sapientType: "BASIC"
            content: !<regular>
              value: -104
            valueType: "byte"
            uuid: "combineLeftRight_byte[]3-item26"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          27:
            sapientType: "BASIC"
            content: !<regular>
              value: 63
            valueType: "byte"
            uuid: "combineLeftRight_byte[]3-item27"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          28:
            sapientType: "BASIC"
            content: !<regular>
              value: 93
            valueType: "byte"
            uuid: "combineLeftRight_byte[]3-item28"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          29:
            sapientType: "BASIC"
            content: !<regular>
              value: 76
            valueType: "byte"
            uuid: "combineLeftRight_byte[]3-item29"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          30:
            sapientType: "BASIC"
            content: !<regular>
              value: -108
            valueType: "byte"
            uuid: "combineLeftRight_byte[]3-item30"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          31:
            sapientType: "BASIC"
            content: !<regular>
              value: 86
            valueType: "byte"
            uuid: "combineLeftRight_byte[]3-item31"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
      valueType: "byte[]"
      uuid: "combineLeftRight_byte[]3"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "byte[]"
      uuid: "combineLeftRight_byte[]1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "byte[]"
      uuid: "combineLeftRight_byte[]2"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.bitcoinj.base.Sha256Hash"
      uuid: "uuid49"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.bitcoinj.base.Sha256Hash"
      uuid: "combineLeftRight_sha256Hash1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "ARRAY"
      content: !<array>
        values:
          0:
            sapientType: "BASIC"
            content: !<regular>
              value: 93
            valueType: "byte"
            uuid: "combineLeftRight_byte[]3-item0"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          1:
            sapientType: "BASIC"
            content: !<regular>
              value: -10
            valueType: "byte"
            uuid: "combineLeftRight_byte[]3-item1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          2:
            sapientType: "BASIC"
            content: !<regular>
              value: -32
            valueType: "byte"
            uuid: "combineLeftRight_byte[]3-item2"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          3:
            sapientType: "BASIC"
            content: !<regular>
              value: -30
            valueType: "byte"
            uuid: "combineLeftRight_byte[]3-item3"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          4:
            sapientType: "BASIC"
            content: !<regular>
              value: 118
            valueType: "byte"
            uuid: "combineLeftRight_byte[]3-item4"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          5:
            sapientType: "BASIC"
            content: !<regular>
              value: 19
            valueType: "byte"
            uuid: "combineLeftRight_byte[]3-item5"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          6:
            sapientType: "BASIC"
            content: !<regular>
              value: 89
            valueType: "byte"
            uuid: "combineLeftRight_byte[]3-item6"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          7:
            sapientType: "BASIC"
            content: !<regular>
              value: -45
            valueType: "byte"
            uuid: "combineLeftRight_byte[]3-item7"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          8:
            sapientType: "BASIC"
            content: !<regular>
              value: 10
            valueType: "byte"
            uuid: "combineLeftRight_byte[]3-item8"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          9:
            sapientType: "BASIC"
            content: !<regular>
              value: -126
            valueType: "byte"
            uuid: "combineLeftRight_byte[]3-item9"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          10:
            sapientType: "BASIC"
            content: !<regular>
              value: 117
            valueType: "byte"
            uuid: "combineLeftRight_byte[]3-item10"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          11:
            sapientType: "BASIC"
            content: !<regular>
              value: 5
            valueType: "byte"
            uuid: "combineLeftRight_byte[]3-item11"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          12:
            sapientType: "BASIC"
            content: !<regular>
              value: -114
            valueType: "byte"
            uuid: "combineLeftRight_byte[]3-item12"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          13:
            sapientType: "BASIC"
            content: !<regular>
              value: 41
            valueType: "byte"
            uuid: "combineLeftRight_byte[]3-item13"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          14:
            sapientType: "BASIC"
            content: !<regular>
              value: -97
            valueType: "byte"
            uuid: "combineLeftRight_byte[]3-item14"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          15:
            sapientType: "BASIC"
            content: !<regular>
              value: -52
            valueType: "byte"
            uuid: "combineLeftRight_byte[]3-item15"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          16:
            sapientType: "BASIC"
            content: !<regular>
              value: 3
            valueType: "byte"
            uuid: "combineLeftRight_byte[]3-item16"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          17:
            sapientType: "BASIC"
            content: !<regular>
              value: -127
            valueType: "byte"
            uuid: "combineLeftRight_byte[]3-item17"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          18:
            sapientType: "BASIC"
            content: !<regular>
              value: 83
            valueType: "byte"
            uuid: "combineLeftRight_byte[]3-item18"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          19:
            sapientType: "BASIC"
            content: !<regular>
              value: 69
            valueType: "byte"
            uuid: "combineLeftRight_byte[]3-item19"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          20:
            sapientType: "BASIC"
            content: !<regular>
              value: 69
            valueType: "byte"
            uuid: "combineLeftRight_byte[]3-item20"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          21:
            sapientType: "BASIC"
            content: !<regular>
              value: -11
            valueType: "byte"
            uuid: "combineLeftRight_byte[]3-item21"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          22:
            sapientType: "BASIC"
            content: !<regular>
              value: 92
            valueType: "byte"
            uuid: "combineLeftRight_byte[]3-item22"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          23:
            sapientType: "BASIC"
            content: !<regular>
              value: -12
            valueType: "byte"
            uuid: "combineLeftRight_byte[]3-item23"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          24:
            sapientType: "BASIC"
            content: !<regular>
              value: 62
            valueType: "byte"
            uuid: "combineLeftRight_byte[]3-item24"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          25:
            sapientType: "BASIC"
            content: !<regular>
              value: 65
            valueType: "byte"
            uuid: "combineLeftRight_byte[]3-item25"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          26:
            sapientType: "BASIC"
            content: !<regular>
              value: -104
            valueType: "byte"
            uuid: "combineLeftRight_byte[]3-item26"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          27:
            sapientType: "BASIC"
            content: !<regular>
              value: 63
            valueType: "byte"
            uuid: "combineLeftRight_byte[]3-item27"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          28:
            sapientType: "BASIC"
            content: !<regular>
              value: 93
            valueType: "byte"
            uuid: "combineLeftRight_byte[]3-item28"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          29:
            sapientType: "BASIC"
            content: !<regular>
              value: 76
            valueType: "byte"
            uuid: "combineLeftRight_byte[]3-item29"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          30:
            sapientType: "BASIC"
            content: !<regular>
              value: -108
            valueType: "byte"
            uuid: "combineLeftRight_byte[]3-item30"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          31:
            sapientType: "BASIC"
            content: !<regular>
              value: 86
            valueType: "byte"
            uuid: "combineLeftRight_byte[]3-item31"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
      valueType: "byte[]"
      uuid: "combineLeftRight_byte[]3"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "EXCEPTION"
      content: !<new>
        target: "org.bitcoinj.core.VerificationException"
        parameters:
        - name: "msg"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "Got a CPartialMerkleTree that didn't need all the data it provided"
            valueType: "java.lang.String"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: true
      valueType: "org.bitcoinj.core.VerificationException"
      uuid: "getTxnHashAndMerkleRoot_verificationException1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.List"
      genericValueType: "org.bitcoinj.base.Sha256Hash"
      uuid: "getTxnHashAndMerkleRoot_list2"
      fixed: false
      equalsMethodPresent: true
      explicitCastNeeded: false
  - pathId: "path10"
    testPathName: "getTxnHashAndMerkleRootWhenArraysNotEqualsRightLeftAndUsedBitsUsedPlus7DividedBy8NotEqualsMaThrowsVerificationException"
    constructorSignature: "<init>(int,java.util.List<org.bitcoinj.base.Sha256Hash>,byte[])\
      \ : void"
    modelFingerprint: "F2D3955D190E08DED2DFA7294143A2FE"
    problemWasSolvedByProver: false
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "8334CE25911D896576653612E6909DE6"
      index: 1
      valueUuid: "target"
    - type: "INPUT"
      name: "matchedHashesOut"
      modelFingerprint: "D347C0779E4A413D6BA0548BAA4B312A"
      index: 2
      valueUuid: "getTxnHashAndMerkleRoot_list1"
    - type: "STATIC"
      name: "ByteUtils"
      modelFingerprint: "F45977DB5BC5FD01344C12F85C4699A2"
      index: 3
      valueUuid: "uuid50"
      methodExercised:
        target: "org.bitcoinj.base.internal.ByteUtils"
        name: "checkBitLE"
        parameters:
        - name: "data"
          valueUuid: "<init>_byte[]1"
        - name: "index"
          valueUuid: "recursiveExtractHashes_int5"
        signature: "checkBitLE(byte[],int): boolean"
        returnValueUuid: "recursiveExtractHashes_boolean1"
        access: 9
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "02232E6D25914A8F2136CA76A6906D1B"
      index: 4
      valueUuid: "recursiveExtractHashes_sha256Hash1"
      methodExercised:
        target: "org.bitcoinj.base.Sha256Hash"
        name: "getBytes"
        parameters: []
        signature: "getBytes(): byte[]"
        returnValueUuid: "recursiveExtractHashes_byte[]1"
        access: 1
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "02232E6D25914A8F2136CA76A6906D1B"
      index: 5
      valueUuid: "recursiveExtractHashes_sha256Hash2"
      methodExercised:
        target: "org.bitcoinj.base.Sha256Hash"
        name: "getBytes"
        parameters: []
        signature: "getBytes(): byte[]"
        returnValueUuid: "recursiveExtractHashes_byte[]2"
        access: 1
    - type: "STATIC"
      name: "ByteUtils"
      modelFingerprint: "715259F838B1D08319319A59C639C0E6"
      index: 6
      valueUuid: "uuid51"
      methodExercised:
        target: "org.bitcoinj.base.internal.ByteUtils"
        name: "reverseBytes"
        parameters:
        - name: "i"
          valueUuid: "recursiveExtractHashes_byte[]1"
        signature: "reverseBytes(byte[]): byte[]"
        returnValueUuid: "combineLeftRight_byte[]1"
        access: 9
    - type: "STATIC"
      name: "ByteUtils"
      modelFingerprint: "715259F838B1D08319319A59C639C0E6"
      index: 7
      valueUuid: "uuid52"
      methodExercised:
        target: "org.bitcoinj.base.internal.ByteUtils"
        name: "reverseBytes"
        parameters:
        - name: "i"
          valueUuid: "recursiveExtractHashes_byte[]2"
        signature: "reverseBytes(byte[]): byte[]"
        returnValueUuid: "combineLeftRight_byte[]2"
        access: 9
    - type: "STATIC"
      name: "Sha256Hash"
      modelFingerprint: "7AE243ECFCBBB2D4F1748957860A09D4"
      index: 8
      valueUuid: "uuid53"
      methodExercised:
        target: "org.bitcoinj.base.Sha256Hash"
        name: "hashTwice"
        parameters:
        - name: "input1"
          valueUuid: "combineLeftRight_byte[]1"
        - name: "input2"
          valueUuid: "combineLeftRight_byte[]2"
        signature: "hashTwice(byte[],byte[]): byte[]"
        returnValueUuid: "combineLeftRight_byte[]3"
        access: 9
    - type: "STATIC"
      name: "Sha256Hash"
      modelFingerprint: "58E3CC582E77AD6EFE245CDED2C5258B"
      index: 9
      valueUuid: "uuid54"
      methodExercised:
        target: "org.bitcoinj.base.Sha256Hash"
        name: "wrapReversed"
        parameters:
        - name: "rawHashBytes"
          valueUuid: "combineLeftRight_byte[]3"
        signature: "wrapReversed(byte[]): Sha256Hash"
        returnValueUuid: "combineLeftRight_sha256Hash1"
        access: 9
    - type: "RESULT"
      name: "result"
      modelFingerprint: "BC5ABC2C5359F33CC2E1BD5FFA814BCD"
      index: 10
      valueUuid: "getTxnHashAndMerkleRoot_verificationException1"
    - type: "STATE_VERIFICATION_PARAMETER"
      name: "matchedHashesOut"
      modelFingerprint: "913CFD499BC30A98557C57BFD17BC91C"
      index: 11
      valueUuid: "getTxnHashAndMerkleRoot_list2"
      originalValueUuid: "getTxnHashAndMerkleRoot_list1"
    uuid: "a767dcc7-a112-3379-a778-9c05ed79cb24"
    deleted: false
    disabled: false
    ignoredBySystem: false
    failureReason:
      reason: "BITWISE_NOT_SUPPORTED"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.bitcoinj.core.PartialMerkleTree"
        parameters:
        - name: "origTxCount"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 0
            valueType: "int"
            uuid: "<init>_int1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "hashes"
          value:
            sapientType: "COLLECTION"
            content: !<collection>
              parameters: []
              values: []
            valueType: "java.util.List"
            genericValueType: "org.bitcoinj.base.Sha256Hash"
            uuid: "<init>_list1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "bits"
          value:
            sapientType: "ARRAY"
            content: !<array>
              values: {}
            valueType: "byte[]"
            uuid: "<init>_byte[]1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      valueType: "org.bitcoinj.core.PartialMerkleTree"
      uuid: "target"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.List"
      genericValueType: "org.bitcoinj.base.Sha256Hash"
      uuid: "getTxnHashAndMerkleRoot_list1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.bitcoinj.base.internal.ByteUtils"
      uuid: "uuid50"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "recursiveExtractHashes_boolean1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "byte[]"
      uuid: "<init>_byte[]1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: 0
      valueType: "int"
      uuid: "recursiveExtractHashes_int5"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.bitcoinj.base.Sha256Hash"
      uuid: "recursiveExtractHashes_sha256Hash1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "byte[]"
      uuid: "recursiveExtractHashes_byte[]1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.bitcoinj.base.Sha256Hash"
      uuid: "recursiveExtractHashes_sha256Hash2"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "byte[]"
      uuid: "recursiveExtractHashes_byte[]2"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.bitcoinj.base.internal.ByteUtils"
      uuid: "uuid51"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "byte[]"
      uuid: "combineLeftRight_byte[]1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "byte[]"
      uuid: "recursiveExtractHashes_byte[]1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.bitcoinj.base.internal.ByteUtils"
      uuid: "uuid52"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "byte[]"
      uuid: "combineLeftRight_byte[]2"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "byte[]"
      uuid: "recursiveExtractHashes_byte[]2"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.bitcoinj.base.Sha256Hash"
      uuid: "uuid53"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "byte[]"
      uuid: "combineLeftRight_byte[]3"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "byte[]"
      uuid: "combineLeftRight_byte[]1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "byte[]"
      uuid: "combineLeftRight_byte[]2"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.bitcoinj.base.Sha256Hash"
      uuid: "uuid54"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.bitcoinj.base.Sha256Hash"
      uuid: "combineLeftRight_sha256Hash1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "byte[]"
      uuid: "combineLeftRight_byte[]3"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "EXCEPTION"
      content: !<new>
        target: "org.bitcoinj.core.VerificationException"
        parameters:
        - name: "msg"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "Got a CPartialMerkleTree that didn't need all the data it provided"
            valueType: "java.lang.String"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: true
      valueType: "org.bitcoinj.core.VerificationException"
      uuid: "getTxnHashAndMerkleRoot_verificationException1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.List"
      genericValueType: "org.bitcoinj.base.Sha256Hash"
      uuid: "getTxnHashAndMerkleRoot_list2"
      fixed: false
      equalsMethodPresent: true
      explicitCastNeeded: false
  - pathId: "path15"
    testPathName: "getTxnHashAndMerkleRootWhenParentOfMatchAndUsedBitsUsedPlus7DividedBy8NotEqualsMatchedChildBThrowsVerificationException"
    constructorSignature: "<init>(int,java.util.List<org.bitcoinj.base.Sha256Hash>,byte[])\
      \ : void"
    modelFingerprint: "A5700ABA88F705D114F38E22D12DFF40"
    problemWasSolvedByProver: false
    truncated: true
    inputParameters: []
    uuid: "e9a46547-d29e-3808-a95d-5894fce5ba7f"
    deleted: true
    disabled: false
    ignoredBySystem: true
    failureReason:
      reason: "BITWISE_NOT_SUPPORTED"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues: []
  - pathId: "path16"
    testPathName: "getTxnHashAndMerkleRootWhenNotParentOfMatchAndUsedBitsUsedPlus7DividedBy8NotEqualsMatchedChiThrowsVerificationException"
    constructorSignature: "<init>(int,java.util.List<org.bitcoinj.base.Sha256Hash>,byte[])\
      \ : void"
    modelFingerprint: "C565D46404BB235A45AE0D36BEBEB72A"
    problemWasSolvedByProver: false
    truncated: true
    inputParameters: []
    uuid: "c68cc3ec-4787-3a4a-b7ab-e4639c2e382d"
    deleted: true
    disabled: false
    ignoredBySystem: true
    failureReason:
      reason: "BITWISE_NOT_SUPPORTED"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues: []
  - pathId: "path7"
    testPathName: "getTxnHashAndMerkleRootWhenUsedHashesUsedNotEqualsHashesSizeThrowsVerificationException"
    constructorSignature: "<init>(int,java.util.List<org.bitcoinj.base.Sha256Hash>,byte[])\
      \ : void"
    modelFingerprint: "B1A1599290CDA72071E96D627AEB1A7F"
    problemWasSolvedByProver: false
    truncated: true
    inputParameters: []
    uuid: "8170fb83-1ea5-3b98-93d0-454f4c006fe3"
    deleted: true
    disabled: false
    ignoredBySystem: true
    failureReason:
      reason: "BITWISE_NOT_SUPPORTED"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues: []
  - pathId: "path8"
    testPathName: "getTxnHashAndMerkleRootWhenUsedHashesUsedEqualsHashesSize"
    constructorSignature: "<init>(int,java.util.List<org.bitcoinj.base.Sha256Hash>,byte[])\
      \ : void"
    modelFingerprint: "6A5DB182203398DB8868CCA702E7D6F9"
    problemWasSolvedByProver: false
    truncated: true
    inputParameters: []
    uuid: "4365daf6-fcac-3bb8-a232-a17ebb2daa78"
    deleted: true
    disabled: false
    ignoredBySystem: true
    failureReason:
      reason: "BITWISE_NOT_SUPPORTED"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues: []
  - pathId: "path13"
    testPathName: "getTxnHashAndMerkleRootWhenUsedBitsUsedPlus7DividedBy8EqualsMatchedChildBitsLengthAndUsedHasThrowsVerificationException"
    constructorSignature: "<init>(int,java.util.List<org.bitcoinj.base.Sha256Hash>,byte[])\
      \ : void"
    modelFingerprint: "4522FBCCE0705CC3A7769456C8E5F31D"
    problemWasSolvedByProver: false
    truncated: true
    inputParameters: []
    uuid: "8f96e2e8-02e4-3e6f-9508-6e38e2da512b"
    deleted: true
    disabled: false
    ignoredBySystem: true
    failureReason:
      reason: "BITWISE_NOT_SUPPORTED"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues: []
  - pathId: "path14"
    testPathName: "getTxnHashAndMerkleRootWhenUsedBitsUsedPlus7DividedBy8EqualsMatchedChildBitsLengthAndUsedHashesUsedEqualsHashesSize"
    constructorSignature: "<init>(int,java.util.List<org.bitcoinj.base.Sha256Hash>,byte[])\
      \ : void"
    modelFingerprint: "B4AFFF4B0EB76E0C8CA6BF99A14D92C0"
    problemWasSolvedByProver: false
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "E8CE9CF1FB49EBF7308E1D711D8F34D7"
      index: 1
      valueUuid: "target"
    - type: "INPUT"
      name: "matchedHashesOut"
      modelFingerprint: "D347C0779E4A413D6BA0548BAA4B312A"
      index: 2
      valueUuid: "getTxnHashAndMerkleRoot_list1"
    - type: "STATIC"
      name: "ByteUtils"
      modelFingerprint: "6BA42EFF8A8603B5218919FD3C189799"
      index: 3
      valueUuid: "uuid60"
      methodExercised:
        target: "org.bitcoinj.base.internal.ByteUtils"
        name: "checkBitLE"
        parameters:
        - name: "data"
          valueUuid: "<init>_byte[]1"
        - name: "index"
          valueUuid: "recursiveExtractHashes_int5"
        signature: "checkBitLE(byte[],int): boolean"
        returnValueUuid: "recursiveExtractHashes_boolean1"
        access: 9
    - type: "RESULT"
      name: "result"
      modelFingerprint: "D5F995FF16038F8C8CEB6ED663606C67"
      index: 4
      valueUuid: "recursiveExtractHashes_sha256Hash1"
    - type: "STATE_VERIFICATION_PARAMETER"
      name: "matchedHashesOut"
      modelFingerprint: "E4B5D84ED97AB0B40E8ED2D46B81F5CC"
      index: 5
      valueUuid: "getTxnHashAndMerkleRoot_list2"
      originalValueUuid: "getTxnHashAndMerkleRoot_list1"
    uuid: "23427d43-9a70-3ccf-b5d0-d6ec7915e143"
    deleted: false
    disabled: false
    ignoredBySystem: false
    failureReason:
      reason: "BITWISE_NOT_SUPPORTED"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.bitcoinj.core.PartialMerkleTree"
        parameters:
        - name: "origTxCount"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 1
            valueType: "int"
            uuid: "<init>_int1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "hashes"
          value:
            sapientType: "COLLECTION"
            content: !<collection>
              collectionClass: "java.util.ArrayList"
              parameters: []
              values:
              - sapientType: "MOCK"
                valueType: "org.bitcoinj.base.Sha256Hash"
                uuid: "recursiveExtractHashes_sha256Hash1"
                fixed: false
                collectionUuid: "<init>_list1"
                equalsMethodPresent: true
                explicitCastNeeded: false
            valueType: "java.util.List"
            genericValueType: "org.bitcoinj.base.Sha256Hash"
            uuid: "<init>_list1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "bits"
          value:
            sapientType: "ARRAY"
            content: !<array>
              values:
                0:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: 0
                  valueType: "byte"
                  uuid: "<init>_byte[]1Item0"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
            valueType: "byte[]"
            uuid: "<init>_byte[]1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      valueType: "org.bitcoinj.core.PartialMerkleTree"
      uuid: "target"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.List"
      genericValueType: "org.bitcoinj.base.Sha256Hash"
      uuid: "getTxnHashAndMerkleRoot_list1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.bitcoinj.base.internal.ByteUtils"
      uuid: "uuid60"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "recursiveExtractHashes_boolean1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "ARRAY"
      content: !<array>
        values:
          0:
            sapientType: "BASIC"
            content: !<regular>
              value: 0
            valueType: "byte"
            uuid: "<init>_byte[]1Item0"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
      valueType: "byte[]"
      uuid: "<init>_byte[]1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: 0
      valueType: "int"
      uuid: "recursiveExtractHashes_int5"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.bitcoinj.base.Sha256Hash"
      uuid: "recursiveExtractHashes_sha256Hash1"
      fixed: false
      collectionUuid: "<init>_list1"
      equalsMethodPresent: true
      explicitCastNeeded: false
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.ArrayList"
        parameters: []
        values:
        - sapientType: "MOCK"
          valueType: "org.bitcoinj.base.Sha256Hash"
          uuid: "recursiveExtractHashes_sha256Hash1"
          fixed: false
          collectionUuid: "<init>_list1"
          equalsMethodPresent: true
          explicitCastNeeded: false
      valueType: "java.util.List"
      genericValueType: "org.bitcoinj.base.Sha256Hash"
      uuid: "getTxnHashAndMerkleRoot_list2"
      fixed: false
      equalsMethodPresent: true
      explicitCastNeeded: false
- method:
    name: "getTransactionCount"
    signature: "getTransactionCount() : int"
    sourceCodeSignature: "int getTransactionCount()"
    instructionFingerprint: "3D0D94B249FE167D5C8A694C31798FFE"
  paths:
  - pathId: "path1"
    testPathName: "getTransactionCountTest"
    constructorSignature: "<init>(int,java.util.List<org.bitcoinj.base.Sha256Hash>,byte[])\
      \ : void"
    modelFingerprint: "A81168A7F758CFB8B41B510C08686749"
    problemWasSolvedByProver: true
    truncated: true
    inputParameters: []
    uuid: "f1206cfa-ac32-350f-91f6-880147fc431c"
    deleted: false
    disabled: false
    ignoredBySystem: false
    prover: "DEFAULT"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues: []
- method:
    name: "equals"
    signature: "equals(java.lang.Object) : boolean"
    sourceCodeSignature: "boolean equals(Object o)"
    instructionFingerprint: "C27208AD6FFF1E5944F76D98C8E6DF0D"
  paths:
  - pathId: "path1"
    testPathName: "equalsWhenThisEqualsO"
    constructorSignature: "<init>(int,java.util.List<org.bitcoinj.base.Sha256Hash>,byte[])\
      \ : void"
    modelFingerprint: "A42B55DDD209F2CD74E39153E269B913"
    problemWasSolvedByProver: true
    truncated: true
    inputParameters: []
    uuid: "5b7cf5ba-f3cc-35d0-9b4a-3392d3a68eed"
    deleted: false
    disabled: false
    ignoredBySystem: false
    prover: "DEFAULT"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues: []
  - pathId: "path7"
    testPathName: "equalsWhenOIsNull"
    constructorSignature: "<init>(int,java.util.List<org.bitcoinj.base.Sha256Hash>,byte[])\
      \ : void"
    modelFingerprint: "F3B1B5A898DBCDA2F843652F031C5B86"
    problemWasSolvedByProver: true
    truncated: true
    inputParameters: []
    uuid: "a2108c4d-bcbc-39b5-8254-0588b654f131"
    deleted: true
    disabled: false
    ignoredBySystem: true
    prover: "DEFAULT"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues: []
  - pathId: "path2"
    testPathName: "equalsWhenGetClassNotEqualsOGetClass"
    constructorSignature: "<init>(int,java.util.List<org.bitcoinj.base.Sha256Hash>,byte[])\
      \ : void"
    modelFingerprint: "DD405C0B19B11FAA49CF40A222009E68"
    problemWasSolvedByProver: true
    truncated: true
    inputParameters: []
    uuid: "6e6a0f87-c9aa-3e31-af0a-46c9467f5ce0"
    deleted: false
    disabled: false
    ignoredBySystem: false
    prover: "DEFAULT"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues: []
  - pathId: "path6"
    testPathName: "equalsWhenTransactionCountNotEqualsOtherTransactionCount"
    constructorSignature: "<init>(int,java.util.List<org.bitcoinj.base.Sha256Hash>,byte[])\
      \ : void"
    modelFingerprint: "845DB92F0BE877B69E325535B53076D5"
    problemWasSolvedByProver: true
    truncated: true
    inputParameters: []
    uuid: "f0545cc7-6b4f-328e-bc2f-6830880bcc9d"
    deleted: true
    disabled: false
    ignoredBySystem: true
    prover: "DEFAULT"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues: []
  - pathId: "path5"
    testPathName: "equalsWhenHashesNotEqualsOtherHashes"
    constructorSignature: "<init>(int,java.util.List<org.bitcoinj.base.Sha256Hash>,byte[])\
      \ : void"
    modelFingerprint: "F039406ACBA0D4B62C547FAAB16D9183"
    problemWasSolvedByProver: true
    truncated: true
    inputParameters: []
    uuid: "9888ee24-1b79-3dd5-9d6a-08b25d968027"
    deleted: true
    disabled: false
    ignoredBySystem: true
    prover: "DEFAULT"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues: []
  - pathId: "path3"
    testPathName: "equalsWhenArraysEqualsMatchedChildBitsOtherMatchedChildBits"
    constructorSignature: "<init>(int,java.util.List<org.bitcoinj.base.Sha256Hash>,byte[])\
      \ : void"
    modelFingerprint: "3F6D9C932CECAB845FA0BC1A47DEE4FE"
    problemWasSolvedByProver: false
    truncated: true
    inputParameters: []
    uuid: "50b7edef-aaf6-32fa-ac32-50c8906a3dc9"
    deleted: false
    disabled: false
    ignoredBySystem: false
    failureReason:
      reason: "PROVER_COULD_NOT_SOLVE_THE_PROBLEM"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues: []
  - pathId: "path4"
    testPathName: "equalsWhenArraysNotEqualsMatchedChildBitsOtherMatchedChildBits"
    constructorSignature: "<init>(int,java.util.List<org.bitcoinj.base.Sha256Hash>,byte[])\
      \ : void"
    modelFingerprint: "A52B4DA97E6A98E972129E345AEB299B"
    problemWasSolvedByProver: true
    truncated: true
    inputParameters: []
    uuid: "d3f207dc-8310-3b95-b935-4793e5e38681"
    deleted: false
    disabled: false
    ignoredBySystem: false
    prover: "DEFAULT"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues: []
- method:
    name: "toString"
    signature: "toString() : java.lang.String"
    sourceCodeSignature: "String toString()"
    instructionFingerprint: "1665527D7711F8269A2050F62E3200EC"
  paths:
  - pathId: "path1"
    testPathName: "toStringTest"
    constructorSignature: "<init>(int,java.util.List<org.bitcoinj.base.Sha256Hash>,byte[])\
      \ : void"
    modelFingerprint: "E952D8254C8A8781E99F505473793092"
    problemWasSolvedByProver: true
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "045BD781CC9044018C741480C1977B99"
      index: 1
      valueUuid: "target"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "764ECB37756E183B2549CF0C5E84D042"
      index: 2
      valueUuid: "toString_string2"
    uuid: "363d3698-f34c-39ad-914f-376a19498023"
    deleted: false
    disabled: false
    ignoredBySystem: false
    prover: "DEFAULT"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.bitcoinj.core.PartialMerkleTree"
        parameters:
        - name: "origTxCount"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 8
            valueType: "int"
            uuid: "<init>_int1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "hashes"
          value:
            sapientType: "COLLECTION"
            content: !<collection>
              parameters: []
              values: []
            valueType: "java.util.List"
            genericValueType: "org.bitcoinj.base.Sha256Hash"
            uuid: "<init>_list1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "bits"
          value:
            sapientType: "ARRAY"
            content: !<array>
              values: {}
            valueType: "byte[]"
            uuid: "<init>_byte[]1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      valueType: "org.bitcoinj.core.PartialMerkleTree"
      uuid: "target"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "PartialMerkleTree{transactionCount=8, matchedChildBits=[], hashes=[]}"
      valueType: "java.lang.String"
      uuid: "toString_string2"
      fixed: false
      equalsMethodPresent: true
      explicitCastNeeded: false
