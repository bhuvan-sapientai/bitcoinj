---
modelFingerprint: "E0485D8FD3D999AC7210227EA0762E29"
methods:
- method:
    name: "findKeyFromPubKeyHash"
    signature: "findKeyFromPubKeyHash(byte[],org.bitcoinj.base.ScriptType) : org.bitcoinj.crypto.ECKey"
    sourceCodeSignature: "ECKey findKeyFromPubKeyHash(byte[] pubKeyHash, @Nullable\
      \ ScriptType scriptType)"
    instructionFingerprint: "7B61F04A87A80EDBC3A5F5D0FAA2CF95"
  paths:
  - pathId: "path1"
    testPathName: "findKeyFromPubKeyHashWhenKeyIsNull"
    constructorSignature: "<init>(org.bitcoinj.wallet.KeyBag,org.bitcoinj.crypto.AesKey)\
      \ : void"
    modelFingerprint: "4CA9EFC1B8C3526A3ABEA9C3DE094A8C"
    problemWasSolvedByProver: true
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "5F30E18AAC3E8FB97DA8DD2327D941A1"
      index: 1
      valueUuid: "target"
    - type: "INPUT"
      name: "pubKeyHash"
      modelFingerprint: "E93ACF48A2476635AC21AD157B987CAF"
      index: 2
      valueUuid: "findKeyFromPubKeyHash_byte[]1"
    - type: "INPUT"
      name: "scriptType"
      modelFingerprint: "87123FDA125AA825FE20A1F8775A8754"
      index: 3
      valueUuid: "findKeyFromPubKeyHash_scriptType1"
    - type: "FIELD"
      name: "target"
      modelFingerprint: "B73B66D32EEEA5BFDBCE7E301F31C942"
      index: 4
      valueUuid: "<init>_keyBag1"
      methodExercised:
        target: "this.target"
        name: "findKeyFromPubKeyHash"
        parameters:
        - name: "arg0"
          valueUuid: "findKeyFromPubKeyHash_byte[]1"
        - name: "arg1"
          valueUuid: "findKeyFromPubKeyHash_scriptType1"
        signature: "findKeyFromPubKeyHash(byte[],ScriptType): ECKey"
        returnValueUuid: "findKeyFromPubKeyHash_eCKey1"
        access: 1025
    - type: "RESULT"
      name: "result"
      modelFingerprint: "06245C8FA6438FEEF64CA217AF2B3EE1"
      index: 5
      valueUuid: "maybeDecrypt_eCKey1"
    uuid: "3e0844fc-0454-36bc-ad62-c03333a4359b"
    deleted: false
    disabled: false
    ignoredBySystem: false
    prover: "DEFAULT"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.bitcoinj.wallet.DecryptingKeyBag"
        parameters:
        - name: "target"
          value:
            sapientType: "MOCK"
            valueType: "org.bitcoinj.wallet.KeyBag"
            uuid: "<init>_keyBag1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "aesKey"
          value:
            sapientType: "MOCK"
            valueType: "org.bitcoinj.crypto.AesKey"
            uuid: "<init>_aesKey1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      valueType: "org.bitcoinj.wallet.DecryptingKeyBag"
      uuid: "target"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "byte[]"
      uuid: "findKeyFromPubKeyHash_byte[]1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "ENUM"
      content: !<regular>
        value: "P2PKH"
      valueType: "org.bitcoinj.base.ScriptType"
      uuid: "findKeyFromPubKeyHash_scriptType1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.bitcoinj.wallet.KeyBag"
      uuid: "<init>_keyBag1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "NULL"
      valueType: "org.bitcoinj.crypto.ECKey"
      uuid: "findKeyFromPubKeyHash_eCKey1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "byte[]"
      uuid: "findKeyFromPubKeyHash_byte[]1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "ENUM"
      content: !<regular>
        value: "P2PKH"
      valueType: "org.bitcoinj.base.ScriptType"
      uuid: "findKeyFromPubKeyHash_scriptType1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "NULL"
      valueType: "org.bitcoinj.crypto.ECKey"
      uuid: "maybeDecrypt_eCKey1"
      fixed: true
      equalsMethodPresent: true
      explicitCastNeeded: false
  - pathId: "path4"
    testPathName: "findKeyFromPubKeyHashWhenKeyNotIsEncrypted"
    constructorSignature: "<init>(org.bitcoinj.wallet.KeyBag,org.bitcoinj.crypto.AesKey)\
      \ : void"
    modelFingerprint: "96EBAAEEA24525F305C783F11380DF0B"
    problemWasSolvedByProver: true
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "5F30E18AAC3E8FB97DA8DD2327D941A1"
      index: 1
      valueUuid: "target"
    - type: "INPUT"
      name: "pubKeyHash"
      modelFingerprint: "E93ACF48A2476635AC21AD157B987CAF"
      index: 2
      valueUuid: "findKeyFromPubKeyHash_byte[]1"
    - type: "INPUT"
      name: "scriptType"
      modelFingerprint: "87123FDA125AA825FE20A1F8775A8754"
      index: 3
      valueUuid: "findKeyFromPubKeyHash_scriptType1"
    - type: "FIELD"
      name: "target"
      modelFingerprint: "7B3D87CC11D8AC47B3E936620E7DEA0E"
      index: 4
      valueUuid: "<init>_keyBag1"
      methodExercised:
        target: "this.target"
        name: "findKeyFromPubKeyHash"
        parameters:
        - name: "arg0"
          valueUuid: "findKeyFromPubKeyHash_byte[]1"
        - name: "arg1"
          valueUuid: "findKeyFromPubKeyHash_scriptType1"
        signature: "findKeyFromPubKeyHash(byte[],ScriptType): ECKey"
        returnValueUuid: "findKeyFromPubKeyHash_eCKey1"
        access: 1025
    - type: "LOCAL_VARIABLE"
      name: "key"
      modelFingerprint: "0E530C99AB70EE9D491C5AA5A9DDADEE"
      index: 5
      valueUuid: "findKeyFromPubKeyHash_eCKey1"
      methodExercised:
        target: "key"
        name: "isEncrypted"
        parameters: []
        signature: "isEncrypted(): boolean"
        returnValueUuid: "maybeDecrypt_boolean1"
        access: 1
    - type: "RESULT"
      name: "result"
      modelFingerprint: "89A88F6F7D53B9E2280D6AF040EB14BF"
      index: 6
      valueUuid: "findKeyFromPubKeyHash_eCKey1"
    uuid: "78bbd9b7-7717-3f50-9697-12e79ca26734"
    deleted: false
    disabled: false
    ignoredBySystem: false
    prover: "DEFAULT"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.bitcoinj.wallet.DecryptingKeyBag"
        parameters:
        - name: "target"
          value:
            sapientType: "MOCK"
            valueType: "org.bitcoinj.wallet.KeyBag"
            uuid: "<init>_keyBag1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "aesKey"
          value:
            sapientType: "MOCK"
            valueType: "org.bitcoinj.crypto.AesKey"
            uuid: "<init>_aesKey1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      valueType: "org.bitcoinj.wallet.DecryptingKeyBag"
      uuid: "target"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "byte[]"
      uuid: "findKeyFromPubKeyHash_byte[]1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "ENUM"
      content: !<regular>
        value: "P2PKH"
      valueType: "org.bitcoinj.base.ScriptType"
      uuid: "findKeyFromPubKeyHash_scriptType1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.bitcoinj.wallet.KeyBag"
      uuid: "<init>_keyBag1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.bitcoinj.crypto.ECKey"
      uuid: "findKeyFromPubKeyHash_eCKey1"
      fixed: false
      equalsMethodPresent: true
      explicitCastNeeded: false
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "byte[]"
      uuid: "findKeyFromPubKeyHash_byte[]1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "ENUM"
      content: !<regular>
        value: "P2PKH"
      valueType: "org.bitcoinj.base.ScriptType"
      uuid: "findKeyFromPubKeyHash_scriptType1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.bitcoinj.crypto.ECKey"
      uuid: "findKeyFromPubKeyHash_eCKey1"
      fixed: false
      equalsMethodPresent: true
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "maybeDecrypt_boolean1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.bitcoinj.crypto.ECKey"
      uuid: "findKeyFromPubKeyHash_eCKey1"
      fixed: false
      equalsMethodPresent: true
      explicitCastNeeded: false
  - pathId: "path2"
    testPathName: "findKeyFromPubKeyHashWhenAesKeyIsNullThrowsECKeyKeyIsEncryptedException"
    constructorSignature: "<init>(org.bitcoinj.wallet.KeyBag,org.bitcoinj.crypto.AesKey)\
      \ : void"
    modelFingerprint: "093CD7BD2E7D28721B30619C75EE96C9"
    problemWasSolvedByProver: true
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "D9CB3381764E6D2B8286119D40647259"
      index: 1
      valueUuid: "target"
    - type: "INPUT"
      name: "pubKeyHash"
      modelFingerprint: "E93ACF48A2476635AC21AD157B987CAF"
      index: 2
      valueUuid: "findKeyFromPubKeyHash_byte[]1"
    - type: "INPUT"
      name: "scriptType"
      modelFingerprint: "87123FDA125AA825FE20A1F8775A8754"
      index: 3
      valueUuid: "findKeyFromPubKeyHash_scriptType1"
    - type: "FIELD"
      name: "target"
      modelFingerprint: "A2C7A9830EA684F8CA6ACD9F67F7197B"
      index: 4
      valueUuid: "<init>_keyBag1"
      methodExercised:
        target: "this.target"
        name: "findKeyFromPubKeyHash"
        parameters:
        - name: "arg0"
          valueUuid: "findKeyFromPubKeyHash_byte[]1"
        - name: "arg1"
          valueUuid: "findKeyFromPubKeyHash_scriptType1"
        signature: "findKeyFromPubKeyHash(byte[],ScriptType): ECKey"
        returnValueUuid: "findKeyFromPubKeyHash_eCKey1"
        access: 1025
    - type: "LOCAL_VARIABLE"
      name: "key"
      modelFingerprint: "610E8DB7B91193C0CE2593494B7F9AB5"
      index: 5
      valueUuid: "findKeyFromPubKeyHash_eCKey1"
      methodExercised:
        target: "key"
        name: "isEncrypted"
        parameters: []
        signature: "isEncrypted(): boolean"
        returnValueUuid: "maybeDecrypt_boolean1"
        access: 1
    - type: "RESULT"
      name: "result"
      modelFingerprint: "E693FEC55CE33EA5DEA8526262D3A904"
      index: 6
      valueUuid: "maybeDecrypt_eCKey.KeyIsEncryptedException1"
    uuid: "abbaf156-aef6-3779-a475-04cbad1d73cf"
    deleted: false
    disabled: false
    ignoredBySystem: false
    prover: "DEFAULT"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.bitcoinj.wallet.DecryptingKeyBag"
        parameters:
        - name: "target"
          value:
            sapientType: "MOCK"
            valueType: "org.bitcoinj.wallet.KeyBag"
            uuid: "<init>_keyBag1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "aesKey"
          value:
            sapientType: "NULL"
            valueType: "org.bitcoinj.crypto.AesKey"
            uuid: "<init>_aesKey1"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      valueType: "org.bitcoinj.wallet.DecryptingKeyBag"
      uuid: "target"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "byte[]"
      uuid: "findKeyFromPubKeyHash_byte[]1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "ENUM"
      content: !<regular>
        value: "P2PKH"
      valueType: "org.bitcoinj.base.ScriptType"
      uuid: "findKeyFromPubKeyHash_scriptType1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.bitcoinj.wallet.KeyBag"
      uuid: "<init>_keyBag1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.bitcoinj.crypto.ECKey"
      uuid: "findKeyFromPubKeyHash_eCKey1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "byte[]"
      uuid: "findKeyFromPubKeyHash_byte[]1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "ENUM"
      content: !<regular>
        value: "P2PKH"
      valueType: "org.bitcoinj.base.ScriptType"
      uuid: "findKeyFromPubKeyHash_scriptType1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.bitcoinj.crypto.ECKey"
      uuid: "findKeyFromPubKeyHash_eCKey1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "maybeDecrypt_boolean1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "EXCEPTION"
      content: !<new>
        target: "org.bitcoinj.crypto.ECKey$KeyIsEncryptedException"
        parameters: []
        privateConstructor: false
        createdByTargetCode: true
      valueType: "org.bitcoinj.crypto.ECKey$KeyIsEncryptedException"
      uuid: "maybeDecrypt_eCKey.KeyIsEncryptedException1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
  - pathId: "path3"
    testPathName: "findKeyFromPubKeyHashWhenAesKeyIsNotNull"
    constructorSignature: "<init>(org.bitcoinj.wallet.KeyBag,org.bitcoinj.crypto.AesKey)\
      \ : void"
    modelFingerprint: "7960D4AE50FE92D9455AB9BDC5274B32"
    problemWasSolvedByProver: true
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "5F30E18AAC3E8FB97DA8DD2327D941A1"
      index: 1
      valueUuid: "target"
    - type: "INPUT"
      name: "pubKeyHash"
      modelFingerprint: "E93ACF48A2476635AC21AD157B987CAF"
      index: 2
      valueUuid: "findKeyFromPubKeyHash_byte[]1"
    - type: "INPUT"
      name: "scriptType"
      modelFingerprint: "87123FDA125AA825FE20A1F8775A8754"
      index: 3
      valueUuid: "findKeyFromPubKeyHash_scriptType1"
    - type: "FIELD"
      name: "target"
      modelFingerprint: "A2C7A9830EA684F8CA6ACD9F67F7197B"
      index: 4
      valueUuid: "<init>_keyBag1"
      methodExercised:
        target: "this.target"
        name: "findKeyFromPubKeyHash"
        parameters:
        - name: "arg0"
          valueUuid: "findKeyFromPubKeyHash_byte[]1"
        - name: "arg1"
          valueUuid: "findKeyFromPubKeyHash_scriptType1"
        signature: "findKeyFromPubKeyHash(byte[],ScriptType): ECKey"
        returnValueUuid: "findKeyFromPubKeyHash_eCKey1"
        access: 1025
    - type: "LOCAL_VARIABLE"
      name: "key"
      modelFingerprint: "610E8DB7B91193C0CE2593494B7F9AB5"
      index: 5
      valueUuid: "findKeyFromPubKeyHash_eCKey1"
      methodExercised:
        target: "key"
        name: "isEncrypted"
        parameters: []
        signature: "isEncrypted(): boolean"
        returnValueUuid: "maybeDecrypt_boolean1"
        access: 1
    - type: "LOCAL_VARIABLE"
      name: "key"
      modelFingerprint: "8D257042B616AE6F878B51543940A34F"
      index: 6
      valueUuid: "findKeyFromPubKeyHash_eCKey1"
      methodExercised:
        target: "key"
        name: "decrypt"
        parameters:
        - name: "aesKey"
          valueUuid: "<init>_aesKey1"
        throwsExceptions:
        - "org.bitcoinj.crypto.KeyCrypterException"
        signature: "decrypt(AesKey): ECKey throws org.bitcoinj.crypto.KeyCrypterException"
        returnValueUuid: "maybeDecrypt_eCKey1"
        access: 1
    - type: "RESULT"
      name: "result"
      modelFingerprint: "C726D6CBC072210C06F6D234FCFBB032"
      index: 7
      valueUuid: "maybeDecrypt_eCKey1"
    uuid: "82511563-8c7c-3127-9d47-29a79df21ef4"
    deleted: false
    disabled: false
    ignoredBySystem: false
    prover: "DEFAULT"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.bitcoinj.wallet.DecryptingKeyBag"
        parameters:
        - name: "target"
          value:
            sapientType: "MOCK"
            valueType: "org.bitcoinj.wallet.KeyBag"
            uuid: "<init>_keyBag1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "aesKey"
          value:
            sapientType: "MOCK"
            valueType: "org.bitcoinj.crypto.AesKey"
            uuid: "<init>_aesKey1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      valueType: "org.bitcoinj.wallet.DecryptingKeyBag"
      uuid: "target"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "byte[]"
      uuid: "findKeyFromPubKeyHash_byte[]1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "ENUM"
      content: !<regular>
        value: "P2PKH"
      valueType: "org.bitcoinj.base.ScriptType"
      uuid: "findKeyFromPubKeyHash_scriptType1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.bitcoinj.wallet.KeyBag"
      uuid: "<init>_keyBag1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.bitcoinj.crypto.ECKey"
      uuid: "findKeyFromPubKeyHash_eCKey1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "byte[]"
      uuid: "findKeyFromPubKeyHash_byte[]1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "ENUM"
      content: !<regular>
        value: "P2PKH"
      valueType: "org.bitcoinj.base.ScriptType"
      uuid: "findKeyFromPubKeyHash_scriptType1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.bitcoinj.crypto.ECKey"
      uuid: "findKeyFromPubKeyHash_eCKey1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "maybeDecrypt_boolean1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.bitcoinj.crypto.ECKey"
      uuid: "findKeyFromPubKeyHash_eCKey1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.bitcoinj.crypto.ECKey"
      uuid: "maybeDecrypt_eCKey1"
      fixed: false
      equalsMethodPresent: true
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.bitcoinj.crypto.AesKey"
      uuid: "<init>_aesKey1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.bitcoinj.crypto.ECKey"
      uuid: "maybeDecrypt_eCKey1"
      fixed: false
      equalsMethodPresent: true
      explicitCastNeeded: false
- method:
    name: "findKeyFromPubKey"
    signature: "findKeyFromPubKey(byte[]) : org.bitcoinj.crypto.ECKey"
    sourceCodeSignature: "ECKey findKeyFromPubKey(byte[] pubKey)"
    instructionFingerprint: "27FEE609E8D365B4718BDA61E1821C57"
  paths:
  - pathId: "path1"
    testPathName: "findKeyFromPubKeyWhenKeyIsNull"
    constructorSignature: "<init>(org.bitcoinj.wallet.KeyBag,org.bitcoinj.crypto.AesKey)\
      \ : void"
    modelFingerprint: "59781E3375D900BFEACC02BF514C8E7E"
    problemWasSolvedByProver: true
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "5F30E18AAC3E8FB97DA8DD2327D941A1"
      index: 1
      valueUuid: "target"
    - type: "INPUT"
      name: "pubKey"
      modelFingerprint: "4896771F3F9CB9E845DE91D546DE6AB8"
      index: 2
      valueUuid: "findKeyFromPubKey_byte[]1"
    - type: "FIELD"
      name: "target"
      modelFingerprint: "2A995F54B59ACA97011BA6DE398F5472"
      index: 3
      valueUuid: "<init>_keyBag1"
      methodExercised:
        target: "this.target"
        name: "findKeyFromPubKey"
        parameters:
        - name: "arg0"
          valueUuid: "findKeyFromPubKey_byte[]1"
        signature: "findKeyFromPubKey(byte[]): ECKey"
        returnValueUuid: "findKeyFromPubKey_eCKey1"
        access: 1025
    - type: "RESULT"
      name: "result"
      modelFingerprint: "06245C8FA6438FEEF64CA217AF2B3EE1"
      index: 4
      valueUuid: "maybeDecrypt_eCKey1"
    uuid: "3d7d7bf6-29c5-3904-a6b8-511994e0c3a7"
    deleted: false
    disabled: false
    ignoredBySystem: false
    prover: "DEFAULT"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.bitcoinj.wallet.DecryptingKeyBag"
        parameters:
        - name: "target"
          value:
            sapientType: "MOCK"
            valueType: "org.bitcoinj.wallet.KeyBag"
            uuid: "<init>_keyBag1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "aesKey"
          value:
            sapientType: "MOCK"
            valueType: "org.bitcoinj.crypto.AesKey"
            uuid: "<init>_aesKey1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      valueType: "org.bitcoinj.wallet.DecryptingKeyBag"
      uuid: "target"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "byte[]"
      uuid: "findKeyFromPubKey_byte[]1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.bitcoinj.wallet.KeyBag"
      uuid: "<init>_keyBag1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "NULL"
      valueType: "org.bitcoinj.crypto.ECKey"
      uuid: "findKeyFromPubKey_eCKey1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "byte[]"
      uuid: "findKeyFromPubKey_byte[]1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "NULL"
      valueType: "org.bitcoinj.crypto.ECKey"
      uuid: "maybeDecrypt_eCKey1"
      fixed: true
      equalsMethodPresent: true
      explicitCastNeeded: false
  - pathId: "path4"
    testPathName: "findKeyFromPubKeyWhenKeyNotIsEncrypted"
    constructorSignature: "<init>(org.bitcoinj.wallet.KeyBag,org.bitcoinj.crypto.AesKey)\
      \ : void"
    modelFingerprint: "71A7B359E25068DD6FCAE671726957B0"
    problemWasSolvedByProver: true
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "5F30E18AAC3E8FB97DA8DD2327D941A1"
      index: 1
      valueUuid: "target"
    - type: "INPUT"
      name: "pubKey"
      modelFingerprint: "4896771F3F9CB9E845DE91D546DE6AB8"
      index: 2
      valueUuid: "findKeyFromPubKey_byte[]1"
    - type: "FIELD"
      name: "target"
      modelFingerprint: "7136B1D8CD0A699A9396DAD258469085"
      index: 3
      valueUuid: "<init>_keyBag1"
      methodExercised:
        target: "this.target"
        name: "findKeyFromPubKey"
        parameters:
        - name: "arg0"
          valueUuid: "findKeyFromPubKey_byte[]1"
        signature: "findKeyFromPubKey(byte[]): ECKey"
        returnValueUuid: "findKeyFromPubKey_eCKey1"
        access: 1025
    - type: "LOCAL_VARIABLE"
      name: "key"
      modelFingerprint: "0E530C99AB70EE9D491C5AA5A9DDADEE"
      index: 4
      valueUuid: "findKeyFromPubKey_eCKey1"
      methodExercised:
        target: "key"
        name: "isEncrypted"
        parameters: []
        signature: "isEncrypted(): boolean"
        returnValueUuid: "maybeDecrypt_boolean1"
        access: 1
    - type: "RESULT"
      name: "result"
      modelFingerprint: "89A88F6F7D53B9E2280D6AF040EB14BF"
      index: 5
      valueUuid: "findKeyFromPubKey_eCKey1"
    uuid: "4ecc54fc-dd2e-3fa8-80db-d0e24e14dd0e"
    deleted: false
    disabled: false
    ignoredBySystem: false
    prover: "DEFAULT"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.bitcoinj.wallet.DecryptingKeyBag"
        parameters:
        - name: "target"
          value:
            sapientType: "MOCK"
            valueType: "org.bitcoinj.wallet.KeyBag"
            uuid: "<init>_keyBag1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "aesKey"
          value:
            sapientType: "MOCK"
            valueType: "org.bitcoinj.crypto.AesKey"
            uuid: "<init>_aesKey1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      valueType: "org.bitcoinj.wallet.DecryptingKeyBag"
      uuid: "target"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "byte[]"
      uuid: "findKeyFromPubKey_byte[]1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.bitcoinj.wallet.KeyBag"
      uuid: "<init>_keyBag1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.bitcoinj.crypto.ECKey"
      uuid: "findKeyFromPubKey_eCKey1"
      fixed: false
      equalsMethodPresent: true
      explicitCastNeeded: false
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "byte[]"
      uuid: "findKeyFromPubKey_byte[]1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.bitcoinj.crypto.ECKey"
      uuid: "findKeyFromPubKey_eCKey1"
      fixed: false
      equalsMethodPresent: true
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "maybeDecrypt_boolean1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.bitcoinj.crypto.ECKey"
      uuid: "findKeyFromPubKey_eCKey1"
      fixed: false
      equalsMethodPresent: true
      explicitCastNeeded: false
  - pathId: "path2"
    testPathName: "findKeyFromPubKeyWhenAesKeyIsNullThrowsECKeyKeyIsEncryptedException"
    constructorSignature: "<init>(org.bitcoinj.wallet.KeyBag,org.bitcoinj.crypto.AesKey)\
      \ : void"
    modelFingerprint: "26374AFAA68E2BD705859CD9E0345956"
    problemWasSolvedByProver: true
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "D9CB3381764E6D2B8286119D40647259"
      index: 1
      valueUuid: "target"
    - type: "INPUT"
      name: "pubKey"
      modelFingerprint: "4896771F3F9CB9E845DE91D546DE6AB8"
      index: 2
      valueUuid: "findKeyFromPubKey_byte[]1"
    - type: "FIELD"
      name: "target"
      modelFingerprint: "B5C63E72DF6F4B9A28BB593DA770E9BD"
      index: 3
      valueUuid: "<init>_keyBag1"
      methodExercised:
        target: "this.target"
        name: "findKeyFromPubKey"
        parameters:
        - name: "arg0"
          valueUuid: "findKeyFromPubKey_byte[]1"
        signature: "findKeyFromPubKey(byte[]): ECKey"
        returnValueUuid: "findKeyFromPubKey_eCKey1"
        access: 1025
    - type: "LOCAL_VARIABLE"
      name: "key"
      modelFingerprint: "610E8DB7B91193C0CE2593494B7F9AB5"
      index: 4
      valueUuid: "findKeyFromPubKey_eCKey1"
      methodExercised:
        target: "key"
        name: "isEncrypted"
        parameters: []
        signature: "isEncrypted(): boolean"
        returnValueUuid: "maybeDecrypt_boolean1"
        access: 1
    - type: "RESULT"
      name: "result"
      modelFingerprint: "E693FEC55CE33EA5DEA8526262D3A904"
      index: 5
      valueUuid: "maybeDecrypt_eCKey.KeyIsEncryptedException1"
    uuid: "1efcc87a-1fa8-39ea-ba9b-2eacdc689274"
    deleted: false
    disabled: false
    ignoredBySystem: false
    prover: "DEFAULT"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.bitcoinj.wallet.DecryptingKeyBag"
        parameters:
        - name: "target"
          value:
            sapientType: "MOCK"
            valueType: "org.bitcoinj.wallet.KeyBag"
            uuid: "<init>_keyBag1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "aesKey"
          value:
            sapientType: "NULL"
            valueType: "org.bitcoinj.crypto.AesKey"
            uuid: "<init>_aesKey1"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      valueType: "org.bitcoinj.wallet.DecryptingKeyBag"
      uuid: "target"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "byte[]"
      uuid: "findKeyFromPubKey_byte[]1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.bitcoinj.wallet.KeyBag"
      uuid: "<init>_keyBag1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.bitcoinj.crypto.ECKey"
      uuid: "findKeyFromPubKey_eCKey1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "byte[]"
      uuid: "findKeyFromPubKey_byte[]1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.bitcoinj.crypto.ECKey"
      uuid: "findKeyFromPubKey_eCKey1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "maybeDecrypt_boolean1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "EXCEPTION"
      content: !<new>
        target: "org.bitcoinj.crypto.ECKey$KeyIsEncryptedException"
        parameters: []
        privateConstructor: false
        createdByTargetCode: true
      valueType: "org.bitcoinj.crypto.ECKey$KeyIsEncryptedException"
      uuid: "maybeDecrypt_eCKey.KeyIsEncryptedException1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
  - pathId: "path3"
    testPathName: "findKeyFromPubKeyWhenAesKeyIsNotNull"
    constructorSignature: "<init>(org.bitcoinj.wallet.KeyBag,org.bitcoinj.crypto.AesKey)\
      \ : void"
    modelFingerprint: "0D38CA5E8D65C2F5ACFE8C29932CFE43"
    problemWasSolvedByProver: true
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "5F30E18AAC3E8FB97DA8DD2327D941A1"
      index: 1
      valueUuid: "target"
    - type: "INPUT"
      name: "pubKey"
      modelFingerprint: "4896771F3F9CB9E845DE91D546DE6AB8"
      index: 2
      valueUuid: "findKeyFromPubKey_byte[]1"
    - type: "FIELD"
      name: "target"
      modelFingerprint: "B5C63E72DF6F4B9A28BB593DA770E9BD"
      index: 3
      valueUuid: "<init>_keyBag1"
      methodExercised:
        target: "this.target"
        name: "findKeyFromPubKey"
        parameters:
        - name: "arg0"
          valueUuid: "findKeyFromPubKey_byte[]1"
        signature: "findKeyFromPubKey(byte[]): ECKey"
        returnValueUuid: "findKeyFromPubKey_eCKey1"
        access: 1025
    - type: "LOCAL_VARIABLE"
      name: "key"
      modelFingerprint: "610E8DB7B91193C0CE2593494B7F9AB5"
      index: 4
      valueUuid: "findKeyFromPubKey_eCKey1"
      methodExercised:
        target: "key"
        name: "isEncrypted"
        parameters: []
        signature: "isEncrypted(): boolean"
        returnValueUuid: "maybeDecrypt_boolean1"
        access: 1
    - type: "LOCAL_VARIABLE"
      name: "key"
      modelFingerprint: "8D257042B616AE6F878B51543940A34F"
      index: 5
      valueUuid: "findKeyFromPubKey_eCKey1"
      methodExercised:
        target: "key"
        name: "decrypt"
        parameters:
        - name: "aesKey"
          valueUuid: "<init>_aesKey1"
        throwsExceptions:
        - "org.bitcoinj.crypto.KeyCrypterException"
        signature: "decrypt(AesKey): ECKey throws org.bitcoinj.crypto.KeyCrypterException"
        returnValueUuid: "maybeDecrypt_eCKey1"
        access: 1
    - type: "RESULT"
      name: "result"
      modelFingerprint: "C726D6CBC072210C06F6D234FCFBB032"
      index: 6
      valueUuid: "maybeDecrypt_eCKey1"
    uuid: "5df3db22-c0f6-37ab-84c0-e993c59b2f74"
    deleted: false
    disabled: false
    ignoredBySystem: false
    prover: "DEFAULT"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.bitcoinj.wallet.DecryptingKeyBag"
        parameters:
        - name: "target"
          value:
            sapientType: "MOCK"
            valueType: "org.bitcoinj.wallet.KeyBag"
            uuid: "<init>_keyBag1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "aesKey"
          value:
            sapientType: "MOCK"
            valueType: "org.bitcoinj.crypto.AesKey"
            uuid: "<init>_aesKey1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      valueType: "org.bitcoinj.wallet.DecryptingKeyBag"
      uuid: "target"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "byte[]"
      uuid: "findKeyFromPubKey_byte[]1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.bitcoinj.wallet.KeyBag"
      uuid: "<init>_keyBag1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.bitcoinj.crypto.ECKey"
      uuid: "findKeyFromPubKey_eCKey1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "byte[]"
      uuid: "findKeyFromPubKey_byte[]1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.bitcoinj.crypto.ECKey"
      uuid: "findKeyFromPubKey_eCKey1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "maybeDecrypt_boolean1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.bitcoinj.crypto.ECKey"
      uuid: "findKeyFromPubKey_eCKey1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.bitcoinj.crypto.ECKey"
      uuid: "maybeDecrypt_eCKey1"
      fixed: false
      equalsMethodPresent: true
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.bitcoinj.crypto.AesKey"
      uuid: "<init>_aesKey1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.bitcoinj.crypto.ECKey"
      uuid: "maybeDecrypt_eCKey1"
      fixed: false
      equalsMethodPresent: true
      explicitCastNeeded: false
- method:
    name: "findRedeemDataFromScriptHash"
    signature: "findRedeemDataFromScriptHash(byte[]) : org.bitcoinj.wallet.RedeemData"
    sourceCodeSignature: "RedeemData findRedeemDataFromScriptHash(byte[] scriptHash)"
    instructionFingerprint: "CD08DC503D5A2623E1134B7DEBB08BD2"
  paths:
  - pathId: "path5"
    testPathName: "findRedeemDataFromScriptHashWhenRedeemDataKeysIsEmpty"
    constructorSignature: "<init>(org.bitcoinj.wallet.KeyBag,org.bitcoinj.crypto.AesKey)\
      \ : void"
    modelFingerprint: "E8B242872EF04CB86E0ACAD93F612C34"
    problemWasSolvedByProver: true
    truncated: true
    inputParameters: []
    uuid: "eef7abbb-da93-3b4f-921f-39a229c2f6fe"
    deleted: true
    disabled: false
    ignoredBySystem: true
    prover: "DEFAULT"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues: []
  - pathId: "path1"
    testPathName: "findRedeemDataFromScriptHashWhenKeyIsNull"
    constructorSignature: "<init>(org.bitcoinj.wallet.KeyBag,org.bitcoinj.crypto.AesKey)\
      \ : void"
    modelFingerprint: "955F5862EBC3B8EBEA90455C0F8A1DBA"
    problemWasSolvedByProver: false
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "0AA05CDAF4EC1E2782E3794C9CE515AA"
      index: 1
      valueUuid: "target"
    - type: "INPUT"
      name: "scriptHash"
      modelFingerprint: "44F1B60A27158B32E73F0F8CF1C6DD48"
      index: 2
      valueUuid: "findRedeemDataFromScriptHash_byte[]1"
    - type: "FIELD"
      name: "target"
      modelFingerprint: "986D747BC153559277A2B127605946A4"
      index: 3
      valueUuid: "<init>_keyBag1"
      methodExercised:
        target: "this.target"
        name: "findRedeemDataFromScriptHash"
        parameters:
        - name: "arg0"
          valueUuid: "findRedeemDataFromScriptHash_byte[]1"
        signature: "findRedeemDataFromScriptHash(byte[]): RedeemData"
        returnValueUuid: "findRedeemDataFromScriptHash_redeemData1"
        access: 1025
    - type: "STATIC"
      name: "RedeemData"
      modelFingerprint: "CBB5408B5F27552F8B569B4131B74658"
      index: 4
      valueUuid: "uuid1"
      methodExercised:
        target: "org.bitcoinj.wallet.RedeemData"
        name: "of"
        parameters:
        - name: "keys"
          valueUuid: "maybeDecrypt_arrayList1"
        - name: "redeemScript"
          valueUuid: "maybeDecrypt_script3"
        signature: "of(List,Script): RedeemData"
        returnValueUuid: "maybeDecrypt_redeemData1"
        access: 9
    - type: "RESULT"
      name: "result"
      modelFingerprint: "E72FAEA21AC64BC712F6669CDCD57BBA"
      index: 5
      valueUuid: "maybeDecrypt_redeemData1"
    uuid: "0fb967ea-5cf9-3b00-b91a-83e3da7223c3"
    deleted: false
    disabled: true
    ignoredBySystem: false
    failureReason:
      reason: "UNKNOWN_REASON"
    prover: "DEFAULT"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: true
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.bitcoinj.wallet.DecryptingKeyBag"
        parameters:
        - name: "target"
          value:
            sapientType: "MOCK"
            valueType: "org.bitcoinj.wallet.KeyBag"
            uuid: "<init>_keyBag1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "aesKey"
          value:
            sapientType: "MOCK"
            valueType: "org.bitcoinj.crypto.AesKey"
            uuid: "<init>_aesKey1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      valueType: "org.bitcoinj.wallet.DecryptingKeyBag"
      uuid: "target"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "byte[]"
      uuid: "findRedeemDataFromScriptHash_byte[]1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.bitcoinj.wallet.KeyBag"
      uuid: "<init>_keyBag1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.bitcoinj.wallet.RedeemData"
        method: "of"
        methodParameters:
        - name: "keys"
          value:
            sapientType: "COLLECTION"
            content: !<collection>
              collectionClass: "java.util.ArrayList"
              parameters: []
              values:
              - sapientType: "NULL"
                valueType: "org.bitcoinj.crypto.ECKey"
                uuid: "maybeDecrypt_object1"
                fixed: true
                collectionUuid: "maybeDecrypt_list3"
                equalsMethodPresent: false
                explicitCastNeeded: true
            valueType: "java.util.List"
            uuid: "maybeDecrypt_list3"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "redeemScript"
          value:
            sapientType: "MOCK"
            valueType: "org.bitcoinj.script.Script"
            uuid: "maybeDecrypt_script3"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
      valueType: "org.bitcoinj.wallet.RedeemData"
      uuid: "findRedeemDataFromScriptHash_redeemData1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "byte[]"
      uuid: "findRedeemDataFromScriptHash_byte[]1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.bitcoinj.wallet.RedeemData"
      uuid: "uuid1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.bitcoinj.wallet.RedeemData"
      uuid: "maybeDecrypt_redeemData1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.ArrayList"
        parameters: []
        values:
        - sapientType: "NULL"
          valueType: "org.bitcoinj.crypto.ECKey"
          uuid: "maybeDecrypt_eCKey1"
          fixed: true
          equalsMethodPresent: false
          explicitCastNeeded: false
      valueType: "java.util.List"
      genericValueType: "org.bitcoinj.crypto.ECKey"
      uuid: "maybeDecrypt_arrayList1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.bitcoinj.script.Script"
      uuid: "maybeDecrypt_script3"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.bitcoinj.wallet.RedeemData"
      uuid: "maybeDecrypt_redeemData1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
  - pathId: "path4"
    testPathName: "findRedeemDataFromScriptHashWhenKeyNotIsEncrypted"
    constructorSignature: "<init>(org.bitcoinj.wallet.KeyBag,org.bitcoinj.crypto.AesKey)\
      \ : void"
    modelFingerprint: "544F51CDE94773E26C0F2649BFC2E503"
    problemWasSolvedByProver: false
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "0AA05CDAF4EC1E2782E3794C9CE515AA"
      index: 1
      valueUuid: "target"
    - type: "INPUT"
      name: "scriptHash"
      modelFingerprint: "44F1B60A27158B32E73F0F8CF1C6DD48"
      index: 2
      valueUuid: "findRedeemDataFromScriptHash_byte[]1"
    - type: "FIELD"
      name: "target"
      modelFingerprint: "08E9E4519DB6F40902511637EF3DAB1E"
      index: 3
      valueUuid: "<init>_keyBag1"
      methodExercised:
        target: "this.target"
        name: "findRedeemDataFromScriptHash"
        parameters:
        - name: "arg0"
          valueUuid: "findRedeemDataFromScriptHash_byte[]1"
        signature: "findRedeemDataFromScriptHash(byte[]): RedeemData"
        returnValueUuid: "findRedeemDataFromScriptHash_redeemData1"
        access: 1025
    - type: "LOCAL_VARIABLE"
      name: "key"
      modelFingerprint: "1D1C45787C63F8F3BC5DBD38CF4E01A5"
      index: 4
      valueUuid: "maybeDecrypt_object1"
      methodExercised:
        target: "key"
        name: "isEncrypted"
        parameters: []
        signature: "isEncrypted(): boolean"
        returnValueUuid: "maybeDecrypt_boolean2"
        access: 1
    - type: "STATIC"
      name: "RedeemData"
      modelFingerprint: "07B44238814CCEF49B4F559CC84CCAF6"
      index: 5
      valueUuid: "uuid1"
      methodExercised:
        target: "org.bitcoinj.wallet.RedeemData"
        name: "of"
        parameters:
        - name: "keys"
          valueUuid: "maybeDecrypt_arrayList1"
        - name: "redeemScript"
          valueUuid: "maybeDecrypt_script3"
        signature: "of(List,Script): RedeemData"
        returnValueUuid: "maybeDecrypt_redeemData1"
        access: 9
    - type: "RESULT"
      name: "result"
      modelFingerprint: "E72FAEA21AC64BC712F6669CDCD57BBA"
      index: 6
      valueUuid: "maybeDecrypt_redeemData1"
    uuid: "e32c1ee9-0c0e-3c15-8bcc-1afa0d2f3717"
    deleted: false
    disabled: true
    ignoredBySystem: false
    failureReason:
      reason: "UNKNOWN_REASON"
    prover: "DEFAULT"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: true
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.bitcoinj.wallet.DecryptingKeyBag"
        parameters:
        - name: "target"
          value:
            sapientType: "MOCK"
            valueType: "org.bitcoinj.wallet.KeyBag"
            uuid: "<init>_keyBag1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "aesKey"
          value:
            sapientType: "MOCK"
            valueType: "org.bitcoinj.crypto.AesKey"
            uuid: "<init>_aesKey1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      valueType: "org.bitcoinj.wallet.DecryptingKeyBag"
      uuid: "target"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "byte[]"
      uuid: "findRedeemDataFromScriptHash_byte[]1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.bitcoinj.wallet.KeyBag"
      uuid: "<init>_keyBag1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.bitcoinj.wallet.RedeemData"
        method: "of"
        methodParameters:
        - name: "keys"
          value:
            sapientType: "COLLECTION"
            content: !<collection>
              collectionClass: "java.util.ArrayList"
              parameters: []
              values:
              - sapientType: "MOCK"
                valueType: "org.bitcoinj.crypto.ECKey"
                uuid: "maybeDecrypt_object1"
                fixed: false
                collectionUuid: "maybeDecrypt_list3"
                equalsMethodPresent: false
                explicitCastNeeded: true
            valueType: "java.util.List"
            uuid: "maybeDecrypt_list3"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "redeemScript"
          value:
            sapientType: "MOCK"
            valueType: "org.bitcoinj.script.Script"
            uuid: "maybeDecrypt_script3"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
      valueType: "org.bitcoinj.wallet.RedeemData"
      uuid: "findRedeemDataFromScriptHash_redeemData1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "byte[]"
      uuid: "findRedeemDataFromScriptHash_byte[]1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.bitcoinj.crypto.ECKey"
      uuid: "maybeDecrypt_object1"
      fixed: false
      collectionUuid: "maybeDecrypt_list3"
      equalsMethodPresent: false
      explicitCastNeeded: true
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "maybeDecrypt_boolean2"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.bitcoinj.wallet.RedeemData"
      uuid: "uuid1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.bitcoinj.wallet.RedeemData"
      uuid: "maybeDecrypt_redeemData1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.ArrayList"
        parameters: []
        values:
        - sapientType: "MOCK"
          valueType: "org.bitcoinj.crypto.ECKey"
          uuid: "maybeDecrypt_object1"
          fixed: false
          collectionUuid: "maybeDecrypt_list3"
          equalsMethodPresent: false
          explicitCastNeeded: true
      valueType: "java.util.List"
      genericValueType: "org.bitcoinj.crypto.ECKey"
      uuid: "maybeDecrypt_arrayList1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.bitcoinj.script.Script"
      uuid: "maybeDecrypt_script3"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.bitcoinj.wallet.RedeemData"
      uuid: "maybeDecrypt_redeemData1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
  - pathId: "path2"
    testPathName: "findRedeemDataFromScriptHashWhenAesKeyIsNullThrowsECKeyKeyIsEncryptedException"
    constructorSignature: "<init>(org.bitcoinj.wallet.KeyBag,org.bitcoinj.crypto.AesKey)\
      \ : void"
    modelFingerprint: "7F2B1D34B9B035EADB953054A116D272"
    problemWasSolvedByProver: true
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "D9CB3381764E6D2B8286119D40647259"
      index: 1
      valueUuid: "target"
    - type: "INPUT"
      name: "scriptHash"
      modelFingerprint: "F6F3BC8BE56743B0468E3580C74339A8"
      index: 2
      valueUuid: "findRedeemDataFromScriptHash_byte[]1"
    - type: "FIELD"
      name: "target"
      modelFingerprint: "D4C9F7A125AB3B87D3942C7D20FA21E4"
      index: 3
      valueUuid: "<init>_keyBag1"
      methodExercised:
        target: "this.target"
        name: "findRedeemDataFromScriptHash"
        parameters:
        - name: "arg0"
          valueUuid: "findRedeemDataFromScriptHash_byte[]1"
        signature: "findRedeemDataFromScriptHash(byte[]): RedeemData"
        returnValueUuid: "findRedeemDataFromScriptHash_redeemData1"
        access: 1025
    - type: "LOCAL_VARIABLE"
      name: "key"
      modelFingerprint: "610E8DB7B91193C0CE2593494B7F9AB5"
      index: 4
      valueUuid: "maybeDecrypt_object1"
      methodExercised:
        target: "key"
        name: "isEncrypted"
        parameters: []
        signature: "isEncrypted(): boolean"
        returnValueUuid: "maybeDecrypt_boolean2"
        access: 1
    - type: "RESULT"
      name: "result"
      modelFingerprint: "E693FEC55CE33EA5DEA8526262D3A904"
      index: 5
      valueUuid: "maybeDecrypt_eCKey.KeyIsEncryptedException1"
    uuid: "3c1f3b56-8350-39d8-a8d3-99a55c0bd742"
    deleted: false
    disabled: false
    ignoredBySystem: false
    prover: "DEFAULT"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.bitcoinj.wallet.DecryptingKeyBag"
        parameters:
        - name: "target"
          value:
            sapientType: "MOCK"
            valueType: "org.bitcoinj.wallet.KeyBag"
            uuid: "<init>_keyBag1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "aesKey"
          value:
            sapientType: "NULL"
            valueType: "org.bitcoinj.crypto.AesKey"
            uuid: "<init>_aesKey1"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      valueType: "org.bitcoinj.wallet.DecryptingKeyBag"
      uuid: "target"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "byte[]"
      uuid: "findRedeemDataFromScriptHash_byte[]1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.bitcoinj.wallet.KeyBag"
      uuid: "<init>_keyBag1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.bitcoinj.wallet.RedeemData"
        method: "of"
        methodParameters:
        - name: "keys"
          value:
            sapientType: "COLLECTION"
            content: !<collection>
              collectionClass: "java.util.ArrayList"
              parameters: []
              values:
              - sapientType: "MOCK"
                valueType: "org.bitcoinj.crypto.ECKey"
                uuid: "maybeDecrypt_object1"
                fixed: false
                collectionUuid: "maybeDecrypt_list3"
                equalsMethodPresent: false
                explicitCastNeeded: true
            valueType: "java.util.List"
            uuid: "maybeDecrypt_list3"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "redeemScript"
          value:
            sapientType: "MOCK"
            valueType: "org.bitcoinj.script.Script"
            uuid: "findRedeemDataFromScriptHash_redeemData1-redeemScript"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
      valueType: "org.bitcoinj.wallet.RedeemData"
      uuid: "findRedeemDataFromScriptHash_redeemData1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "byte[]"
      uuid: "findRedeemDataFromScriptHash_byte[]1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.bitcoinj.crypto.ECKey"
      uuid: "maybeDecrypt_object1"
      fixed: false
      collectionUuid: "maybeDecrypt_list3"
      equalsMethodPresent: false
      explicitCastNeeded: true
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "maybeDecrypt_boolean2"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "EXCEPTION"
      content: !<new>
        target: "org.bitcoinj.crypto.ECKey$KeyIsEncryptedException"
        parameters: []
        privateConstructor: false
        createdByTargetCode: true
      valueType: "org.bitcoinj.crypto.ECKey$KeyIsEncryptedException"
      uuid: "maybeDecrypt_eCKey.KeyIsEncryptedException1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
  - pathId: "path3"
    testPathName: "findRedeemDataFromScriptHashWhenAesKeyIsNotNull"
    constructorSignature: "<init>(org.bitcoinj.wallet.KeyBag,org.bitcoinj.crypto.AesKey)\
      \ : void"
    modelFingerprint: "D284E7BB2CE80A3C2E225BC2C3F1D6F9"
    problemWasSolvedByProver: false
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "0AA05CDAF4EC1E2782E3794C9CE515AA"
      index: 1
      valueUuid: "target"
    - type: "INPUT"
      name: "scriptHash"
      modelFingerprint: "44F1B60A27158B32E73F0F8CF1C6DD48"
      index: 2
      valueUuid: "findRedeemDataFromScriptHash_byte[]1"
    - type: "FIELD"
      name: "target"
      modelFingerprint: "08E9E4519DB6F40902511637EF3DAB1E"
      index: 3
      valueUuid: "<init>_keyBag1"
      methodExercised:
        target: "this.target"
        name: "findRedeemDataFromScriptHash"
        parameters:
        - name: "arg0"
          valueUuid: "findRedeemDataFromScriptHash_byte[]1"
        signature: "findRedeemDataFromScriptHash(byte[]): RedeemData"
        returnValueUuid: "findRedeemDataFromScriptHash_redeemData1"
        access: 1025
    - type: "LOCAL_VARIABLE"
      name: "key"
      modelFingerprint: "610E8DB7B91193C0CE2593494B7F9AB5"
      index: 4
      valueUuid: "maybeDecrypt_object1"
      methodExercised:
        target: "key"
        name: "isEncrypted"
        parameters: []
        signature: "isEncrypted(): boolean"
        returnValueUuid: "maybeDecrypt_boolean2"
        access: 1
    - type: "LOCAL_VARIABLE"
      name: "key"
      modelFingerprint: "D1261D52CA9E70C7E58B5EF0BB3F0402"
      index: 5
      valueUuid: "maybeDecrypt_object1"
      methodExercised:
        target: "key"
        name: "decrypt"
        parameters:
        - name: "aesKey"
          valueUuid: "<init>_aesKey1"
        throwsExceptions:
        - "org.bitcoinj.crypto.KeyCrypterException"
        signature: "decrypt(AesKey): ECKey throws org.bitcoinj.crypto.KeyCrypterException"
        returnValueUuid: "maybeDecrypt_eCKey1"
        access: 1
    - type: "STATIC"
      name: "RedeemData"
      modelFingerprint: "76B94A33E5CD32DFA3177C53877041E3"
      index: 6
      valueUuid: "uuid1"
      methodExercised:
        target: "org.bitcoinj.wallet.RedeemData"
        name: "of"
        parameters:
        - name: "keys"
          valueUuid: "maybeDecrypt_arrayList1"
        - name: "redeemScript"
          valueUuid: "maybeDecrypt_script3"
        signature: "of(List,Script): RedeemData"
        returnValueUuid: "maybeDecrypt_redeemData1"
        access: 9
    - type: "RESULT"
      name: "result"
      modelFingerprint: "E72FAEA21AC64BC712F6669CDCD57BBA"
      index: 7
      valueUuid: "maybeDecrypt_redeemData1"
    uuid: "a6d40181-ac68-3236-a9df-d3031ae980dc"
    deleted: false
    disabled: true
    ignoredBySystem: false
    failureReason:
      reason: "UNKNOWN_REASON"
    prover: "DEFAULT"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: true
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.bitcoinj.wallet.DecryptingKeyBag"
        parameters:
        - name: "target"
          value:
            sapientType: "MOCK"
            valueType: "org.bitcoinj.wallet.KeyBag"
            uuid: "<init>_keyBag1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "aesKey"
          value:
            sapientType: "MOCK"
            valueType: "org.bitcoinj.crypto.AesKey"
            uuid: "<init>_aesKey1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      valueType: "org.bitcoinj.wallet.DecryptingKeyBag"
      uuid: "target"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "byte[]"
      uuid: "findRedeemDataFromScriptHash_byte[]1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.bitcoinj.wallet.KeyBag"
      uuid: "<init>_keyBag1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.bitcoinj.wallet.RedeemData"
        method: "of"
        methodParameters:
        - name: "keys"
          value:
            sapientType: "COLLECTION"
            content: !<collection>
              collectionClass: "java.util.ArrayList"
              parameters: []
              values:
              - sapientType: "MOCK"
                valueType: "org.bitcoinj.crypto.ECKey"
                uuid: "maybeDecrypt_object1"
                fixed: false
                collectionUuid: "maybeDecrypt_list3"
                equalsMethodPresent: false
                explicitCastNeeded: true
            valueType: "java.util.List"
            uuid: "maybeDecrypt_list3"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "redeemScript"
          value:
            sapientType: "MOCK"
            valueType: "org.bitcoinj.script.Script"
            uuid: "maybeDecrypt_script3"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
      valueType: "org.bitcoinj.wallet.RedeemData"
      uuid: "findRedeemDataFromScriptHash_redeemData1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "byte[]"
      uuid: "findRedeemDataFromScriptHash_byte[]1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.bitcoinj.crypto.ECKey"
      uuid: "maybeDecrypt_object1"
      fixed: false
      collectionUuid: "maybeDecrypt_list3"
      equalsMethodPresent: false
      explicitCastNeeded: true
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "maybeDecrypt_boolean2"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.bitcoinj.crypto.ECKey"
      uuid: "maybeDecrypt_object1"
      fixed: false
      collectionUuid: "maybeDecrypt_list3"
      equalsMethodPresent: false
      explicitCastNeeded: true
    - sapientType: "MOCK"
      valueType: "org.bitcoinj.crypto.ECKey"
      uuid: "maybeDecrypt_eCKey1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.bitcoinj.crypto.AesKey"
      uuid: "<init>_aesKey1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.bitcoinj.wallet.RedeemData"
      uuid: "uuid1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.bitcoinj.wallet.RedeemData"
      uuid: "maybeDecrypt_redeemData1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.ArrayList"
        parameters: []
        values:
        - sapientType: "MOCK"
          valueType: "org.bitcoinj.crypto.ECKey"
          uuid: "maybeDecrypt_eCKey1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
      valueType: "java.util.List"
      genericValueType: "org.bitcoinj.crypto.ECKey"
      uuid: "maybeDecrypt_arrayList1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.bitcoinj.script.Script"
      uuid: "maybeDecrypt_script3"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.bitcoinj.wallet.RedeemData"
      uuid: "maybeDecrypt_redeemData1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
