---
modelFingerprint: "9BC3E299561F31177E8DCD79012F8BAC"
methods:
- method:
    name: "getKeyCrypter"
    returnType: "org.bitcoinj.crypto.KeyCrypter"
    signature: "getKeyCrypter() : org.bitcoinj.crypto.KeyCrypter"
    instructionFingerprint: "9B08BDFB36B35F69546277FD105FC087"
    parametersTypes: []
  paths:
  - pathId: "path1"
    pathIdForUser: "path1"
    testPathName: "getKeyCrypterTest"
    nameDefinedByUser: false
    constructorSignature: "<init>(org.bitcoinj.crypto.KeyCrypter) : void"
    priorityDefinedByUser: false
    filledByUser: false
    priority: "LOW"
    modelFingerprint: "2FB0E66AA8BC6933DC622B168DD72810"
    problemWasSolvedByProver: true
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "35099553EB48D2AEC42E2A9279A21C51"
      index: 1
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "OBJECT"
        content: !<new>
          target: "org.bitcoinj.wallet.BasicKeyChain"
          parameters:
          - name: "crypter"
            value:
              sapientType: "MOCK"
              valueType: "org.bitcoinj.crypto.KeyCrypter"
              uuid: "<init>_keyCrypter1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: false
        suggestedContent: !<new>
          target: "org.bitcoinj.wallet.BasicKeyChain"
          parameters:
          - name: "crypter"
            value:
              sapientType: "UNKNOWN"
              valueType: "org.bitcoinj.crypto.KeyCrypter"
              uuid: "<init>_keyCrypter1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: false
        valueType: "org.bitcoinj.wallet.BasicKeyChain"
        uuid: "target"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    - type: "STATIC"
      name: "Threading"
      modelFingerprint: "931BDCE1DF6454A48EA195CE5432B664"
      index: 2
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "REAL"
        valueType: "org.bitcoinj.utils.Threading"
        uuid: "org.bitcoinj.utils.Threading"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "org.bitcoinj.utils.Threading"
        name: "lock"
        parameters:
        - name: "clazz"
          value:
            sapientType: "CLASS"
            content: !<regular>
              value: "org.bitcoinj.wallet.BasicKeyChain"
            valueType: "java.lang.Class"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "lock(Class): ReentrantLock"
        returnValue:
          sapientType: "OBJECT"
          content: !<static_method_return>
            target: "org.bitcoinj.utils.Threading"
            method: "lock"
            methodParameters:
            - value:
                sapientType: "CLASS"
                content: !<regular>
                  value: "org.bitcoinj.wallet.BasicKeyChain"
                valueType: "java.lang.Class"
                fixed: true
                equalsMethodPresent: false
                explicitCastNeeded: false
          suggestedContent: !<static_method_return>
            target: "org.bitcoinj.utils.Threading"
            method: "lock"
            methodParameters:
            - value:
                sapientType: "CLASS"
                content: !<regular>
                  value: "org.bitcoinj.wallet.BasicKeyChain"
                valueType: "java.lang.Class"
                fixed: true
                equalsMethodPresent: false
                explicitCastNeeded: false
          valueType: "java.util.concurrent.locks.ReentrantLock"
          uuid: "<init>_reentrantLock1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 9
      staticReadMethodForField: false
      filledByUser: false
    - type: "RESULT"
      name: "result"
      modelFingerprint: "E597BFB0BA3F8892A5D21EDD457E7A07"
      index: 3
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        valueType: "org.bitcoinj.crypto.KeyCrypter"
        uuid: "<init>_keyCrypter1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    uuid: "5263e1c8-6ee4-3528-9e17-7641d8067bcf"
    deleted: false
    disabled: false
    ignoredBySystem: false
    prover: "DEFAULT"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
- method:
    name: "getKey"
    returnType: "org.bitcoinj.crypto.ECKey"
    signature: "getKey(org.bitcoinj.wallet.KeyChain$KeyPurpose) : org.bitcoinj.crypto.ECKey"
    instructionFingerprint: "94D85E9854645FE0118D223ECFAFC5EE"
    parametersTypes:
    - "org.bitcoinj.wallet.KeyChain$KeyPurpose"
  paths:
  - pathId: "path2"
    pathIdForUser: "path1"
    testPathName: "getKeyWhenKeyCrypterIsNotNullThrowsIllegalStateException"
    nameDefinedByUser: false
    constructorSignature: "<init>(org.bitcoinj.crypto.KeyCrypter) : void"
    priorityDefinedByUser: false
    filledByUser: false
    priority: "LOW"
    modelFingerprint: "5FE52DC7D5380A6DA638C1BF0C9E5708"
    problemWasSolvedByProver: true
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "35099553EB48D2AEC42E2A9279A21C51"
      index: 1
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "OBJECT"
        content: !<new>
          target: "org.bitcoinj.wallet.BasicKeyChain"
          parameters:
          - name: "crypter"
            value:
              sapientType: "MOCK"
              valueType: "org.bitcoinj.crypto.KeyCrypter"
              uuid: "<init>_keyCrypter1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: false
        suggestedContent: !<new>
          target: "org.bitcoinj.wallet.BasicKeyChain"
          parameters:
          - name: "crypter"
            value:
              sapientType: "UNKNOWN"
              valueType: "org.bitcoinj.crypto.KeyCrypter"
              uuid: "<init>_keyCrypter1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: false
        valueType: "org.bitcoinj.wallet.BasicKeyChain"
        uuid: "target"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    - type: "INPUT"
      name: "ignored"
      modelFingerprint: "051CAD88FDA4E3DB1AF2F6A820E9B2EE"
      index: 2
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "ENUM"
        content: !<regular>
          value: "RECEIVE_FUNDS"
        valueType: "org.bitcoinj.wallet.KeyChain$KeyPurpose"
        uuid: "getKey_keyChain.KeyPurpose1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    - type: "STATIC"
      name: "Threading"
      modelFingerprint: "931BDCE1DF6454A48EA195CE5432B664"
      index: 3
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "REAL"
        valueType: "org.bitcoinj.utils.Threading"
        uuid: "org.bitcoinj.utils.Threading"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "org.bitcoinj.utils.Threading"
        name: "lock"
        parameters:
        - name: "clazz"
          value:
            sapientType: "CLASS"
            content: !<regular>
              value: "org.bitcoinj.wallet.BasicKeyChain"
            valueType: "java.lang.Class"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "lock(Class): ReentrantLock"
        returnValue:
          sapientType: "OBJECT"
          content: !<static_method_return>
            target: "org.bitcoinj.utils.Threading"
            method: "lock"
            methodParameters:
            - value:
                sapientType: "CLASS"
                content: !<regular>
                  value: "org.bitcoinj.wallet.BasicKeyChain"
                valueType: "java.lang.Class"
                fixed: true
                equalsMethodPresent: false
                explicitCastNeeded: false
          suggestedContent: !<static_method_return>
            target: "org.bitcoinj.utils.Threading"
            method: "lock"
            methodParameters:
            - value:
                sapientType: "CLASS"
                content: !<regular>
                  value: "org.bitcoinj.wallet.BasicKeyChain"
                valueType: "java.lang.Class"
                fixed: true
                equalsMethodPresent: false
                explicitCastNeeded: false
          valueType: "java.util.concurrent.locks.ReentrantLock"
          uuid: "<init>_reentrantLock1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 9
      staticReadMethodForField: false
      filledByUser: false
    - type: "STATIC"
      name: "Preconditions"
      modelFingerprint: "5D1C76B3909AD28BDDC21FFF70362CB1"
      index: 4
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        valueType: "org.bitcoinj.base.internal.Preconditions"
        uuid: "org.bitcoinj.base.internal.Preconditions"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "org.bitcoinj.base.internal.Preconditions"
        name: "checkState"
        parameters:
        - name: "expression"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: false
            valueType: "boolean"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "checkState(boolean): void"
        returnValue:
          sapientType: "EXCEPTION"
          content: !<new>
            target: "java.lang.IllegalStateException"
            parameters: []
            privateConstructor: false
            createdByTargetCode: false
          suggestedContent: !<new>
            target: "java.lang.IllegalStateException"
            parameters: []
            privateConstructor: false
            createdByTargetCode: false
          valueType: "java.lang.IllegalStateException"
          fixed: true
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 9
      staticReadMethodForField: false
      filledByUser: false
    - type: "RESULT"
      name: "result"
      modelFingerprint: "C9C68C9339F812BC8DEC7C1D6145A135"
      index: 5
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "EXCEPTION"
        content: !<new>
          target: "java.lang.IllegalStateException"
          parameters: []
          privateConstructor: false
          createdByTargetCode: false
        suggestedContent: !<new>
          target: "java.lang.IllegalStateException"
          parameters: []
          privateConstructor: false
          createdByTargetCode: false
        valueType: "java.lang.IllegalStateException"
        fixed: true
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    uuid: "b3aabb5a-13d7-3113-8205-37e1e5c5b342"
    deleted: false
    disabled: false
    ignoredBySystem: false
    prover: "DEFAULT"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
  - pathId: "path1"
    pathIdForUser: "path2"
    testPathName: "getKeyWhenPreviousKeyIsNullThrowsIllegalStateException"
    nameDefinedByUser: false
    constructorSignature: "<init>(org.bitcoinj.crypto.KeyCrypter) : void"
    priorityDefinedByUser: false
    filledByUser: false
    priority: "LOW"
    modelFingerprint: "710E380FBDCF5B3C5F49478DAE8E24B1"
    problemWasSolvedByProver: false
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "AC70298FA93F6048125F94F6464F3643"
      index: 1
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "OBJECT"
        content: !<new>
          target: "org.bitcoinj.wallet.BasicKeyChain"
          parameters:
          - name: "crypter"
            value:
              sapientType: "NULL"
              valueType: "org.bitcoinj.crypto.KeyCrypter"
              uuid: "<init>_keyCrypter1"
              fixed: true
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: false
        suggestedContent: !<new>
          target: "org.bitcoinj.wallet.BasicKeyChain"
          parameters:
          - name: "crypter"
            value:
              sapientType: "NULL"
              valueType: "org.bitcoinj.crypto.KeyCrypter"
              uuid: "<init>_keyCrypter1"
              fixed: true
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: false
        valueType: "org.bitcoinj.wallet.BasicKeyChain"
        uuid: "target"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    - type: "INPUT"
      name: "ignored"
      modelFingerprint: "051CAD88FDA4E3DB1AF2F6A820E9B2EE"
      index: 2
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "ENUM"
        content: !<regular>
          value: "RECEIVE_FUNDS"
        valueType: "org.bitcoinj.wallet.KeyChain$KeyPurpose"
        uuid: "getKey_keyChain.KeyPurpose1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    - type: "STATIC"
      name: "Threading"
      modelFingerprint: "931BDCE1DF6454A48EA195CE5432B664"
      index: 3
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "REAL"
        valueType: "org.bitcoinj.utils.Threading"
        uuid: "org.bitcoinj.utils.Threading"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "org.bitcoinj.utils.Threading"
        name: "lock"
        parameters:
        - name: "clazz"
          value:
            sapientType: "CLASS"
            content: !<regular>
              value: "org.bitcoinj.wallet.BasicKeyChain"
            valueType: "java.lang.Class"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "lock(Class): ReentrantLock"
        returnValue:
          sapientType: "OBJECT"
          content: !<static_method_return>
            target: "org.bitcoinj.utils.Threading"
            method: "lock"
            methodParameters:
            - value:
                sapientType: "CLASS"
                content: !<regular>
                  value: "org.bitcoinj.wallet.BasicKeyChain"
                valueType: "java.lang.Class"
                fixed: true
                equalsMethodPresent: false
                explicitCastNeeded: false
          suggestedContent: !<static_method_return>
            target: "org.bitcoinj.utils.Threading"
            method: "lock"
            methodParameters:
            - value:
                sapientType: "CLASS"
                content: !<regular>
                  value: "org.bitcoinj.wallet.BasicKeyChain"
                valueType: "java.lang.Class"
                fixed: true
                equalsMethodPresent: false
                explicitCastNeeded: false
          valueType: "java.util.concurrent.locks.ReentrantLock"
          uuid: "<init>_reentrantLock1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 9
      staticReadMethodForField: false
      filledByUser: false
    - type: "STATIC"
      name: "Preconditions"
      modelFingerprint: "ACF07FFCA3E2E1576E0B7D7733EEEFF8"
      index: 4
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        valueType: "org.bitcoinj.base.internal.Preconditions"
        uuid: "org.bitcoinj.base.internal.Preconditions"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "org.bitcoinj.base.internal.Preconditions"
        name: "checkState"
        parameters:
        - name: "expression"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: true
            valueType: "boolean"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "checkState(boolean): void"
        returnValue:
          sapientType: "VOID"
          valueType: "void"
          uuid: "getKey_void2"
          fixed: true
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 9
      staticReadMethodForField: false
      filledByUser: false
    - type: "LOCAL_VARIABLE"
      name: "key"
      modelFingerprint: "F3D83E38C83208A30267772DB87E20BA"
      index: 5
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "OBJECT"
        content: !<new>
          target: "org.bitcoinj.crypto.ECKey"
          parameters: []
          privateConstructor: false
          createdByTargetCode: true
        suggestedContent: !<new>
          target: "org.bitcoinj.crypto.ECKey"
          parameters: []
          privateConstructor: false
          createdByTargetCode: true
        valueType: "org.bitcoinj.crypto.ECKey"
        uuid: "getKey_eCKey1"
        fixed: true
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "key"
        name: "isWatching"
        parameters: []
        signature: "isWatching(): boolean"
        returnValue:
          sapientType: "BASIC"
          content: !<regular>
            value: false
          valueType: "boolean"
          uuid: "importKeyLocked_boolean2"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 1
      staticReadMethodForField: false
      filledByUser: false
    - type: "LOCAL_VARIABLE"
      name: "key"
      modelFingerprint: "A3E04C551B9A0394B799935FFD9007AF"
      index: 6
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "OBJECT"
        content: !<new>
          target: "org.bitcoinj.crypto.ECKey"
          parameters: []
          privateConstructor: false
          createdByTargetCode: true
        suggestedContent: !<new>
          target: "org.bitcoinj.crypto.ECKey"
          parameters: []
          privateConstructor: false
          createdByTargetCode: true
        valueType: "org.bitcoinj.crypto.ECKey"
        uuid: "getKey_eCKey1"
        fixed: true
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "key"
        name: "getPubKey"
        parameters: []
        signature: "getPubKey(): byte[]"
        returnValue:
          sapientType: "ARRAY"
          content: !<array>
            values:
              0:
                sapientType: "BASIC"
                content: !<regular>
                  value: 2
                valueType: "byte"
                fixed: false
                equalsMethodPresent: false
                explicitCastNeeded: false
              1:
                sapientType: "BASIC"
                content: !<regular>
                  value: 17
                valueType: "byte"
                fixed: false
                equalsMethodPresent: false
                explicitCastNeeded: false
              2:
                sapientType: "BASIC"
                content: !<regular>
                  value: 67
                valueType: "byte"
                fixed: false
                equalsMethodPresent: false
                explicitCastNeeded: false
              3:
                sapientType: "BASIC"
                content: !<regular>
                  value: -39
                valueType: "byte"
                fixed: false
                equalsMethodPresent: false
                explicitCastNeeded: false
              4:
                sapientType: "BASIC"
                content: !<regular>
                  value: -2
                valueType: "byte"
                fixed: false
                equalsMethodPresent: false
                explicitCastNeeded: false
              5:
                sapientType: "BASIC"
                content: !<regular>
                  value: -101
                valueType: "byte"
                fixed: false
                equalsMethodPresent: false
                explicitCastNeeded: false
              6:
                sapientType: "BASIC"
                content: !<regular>
                  value: 76
                valueType: "byte"
                fixed: false
                equalsMethodPresent: false
                explicitCastNeeded: false
              7:
                sapientType: "BASIC"
                content: !<regular>
                  value: 53
                valueType: "byte"
                fixed: false
                equalsMethodPresent: false
                explicitCastNeeded: false
              8:
                sapientType: "BASIC"
                content: !<regular>
                  value: -127
                valueType: "byte"
                fixed: false
                equalsMethodPresent: false
                explicitCastNeeded: false
              9:
                sapientType: "BASIC"
                content: !<regular>
                  value: -56
                valueType: "byte"
                fixed: false
                equalsMethodPresent: false
                explicitCastNeeded: false
              10:
                sapientType: "BASIC"
                content: !<regular>
                  value: -54
                valueType: "byte"
                fixed: false
                equalsMethodPresent: false
                explicitCastNeeded: false
              11:
                sapientType: "BASIC"
                content: !<regular>
                  value: -27
                valueType: "byte"
                fixed: false
                equalsMethodPresent: false
                explicitCastNeeded: false
              12:
                sapientType: "BASIC"
                content: !<regular>
                  value: -70
                valueType: "byte"
                fixed: false
                equalsMethodPresent: false
                explicitCastNeeded: false
              13:
                sapientType: "BASIC"
                content: !<regular>
                  value: 56
                valueType: "byte"
                fixed: false
                equalsMethodPresent: false
                explicitCastNeeded: false
              14:
                sapientType: "BASIC"
                content: !<regular>
                  value: 57
                valueType: "byte"
                fixed: false
                equalsMethodPresent: false
                explicitCastNeeded: false
              15:
                sapientType: "BASIC"
                content: !<regular>
                  value: -5
                valueType: "byte"
                fixed: false
                equalsMethodPresent: false
                explicitCastNeeded: false
              16:
                sapientType: "BASIC"
                content: !<regular>
                  value: -98
                valueType: "byte"
                fixed: false
                equalsMethodPresent: false
                explicitCastNeeded: false
              17:
                sapientType: "BASIC"
                content: !<regular>
                  value: 44
                valueType: "byte"
                fixed: false
                equalsMethodPresent: false
                explicitCastNeeded: false
              18:
                sapientType: "BASIC"
                content: !<regular>
                  value: -42
                valueType: "byte"
                fixed: false
                equalsMethodPresent: false
                explicitCastNeeded: false
              19:
                sapientType: "BASIC"
                content: !<regular>
                  value: 112
                valueType: "byte"
                fixed: false
                equalsMethodPresent: false
                explicitCastNeeded: false
              20:
                sapientType: "BASIC"
                content: !<regular>
                  value: 110
                valueType: "byte"
                fixed: false
                equalsMethodPresent: false
                explicitCastNeeded: false
              21:
                sapientType: "BASIC"
                content: !<regular>
                  value: -59
                valueType: "byte"
                fixed: false
                equalsMethodPresent: false
                explicitCastNeeded: false
              22:
                sapientType: "BASIC"
                content: !<regular>
                  value: 107
                valueType: "byte"
                fixed: false
                equalsMethodPresent: false
                explicitCastNeeded: false
              23:
                sapientType: "BASIC"
                content: !<regular>
                  value: -125
                valueType: "byte"
                fixed: false
                equalsMethodPresent: false
                explicitCastNeeded: false
              24:
                sapientType: "BASIC"
                content: !<regular>
                  value: -61
                valueType: "byte"
                fixed: false
                equalsMethodPresent: false
                explicitCastNeeded: false
              25:
                sapientType: "BASIC"
                content: !<regular>
                  value: -93
                valueType: "byte"
                fixed: false
                equalsMethodPresent: false
                explicitCastNeeded: false
              26:
                sapientType: "BASIC"
                content: !<regular>
                  value: 26
                valueType: "byte"
                fixed: false
                equalsMethodPresent: false
                explicitCastNeeded: false
              27:
                sapientType: "BASIC"
                content: !<regular>
                  value: 119
                valueType: "byte"
                fixed: false
                equalsMethodPresent: false
                explicitCastNeeded: false
              28:
                sapientType: "BASIC"
                content: !<regular>
                  value: -47
                valueType: "byte"
                fixed: false
                equalsMethodPresent: false
                explicitCastNeeded: false
              29:
                sapientType: "BASIC"
                content: !<regular>
                  value: 12
                valueType: "byte"
                fixed: false
                equalsMethodPresent: false
                explicitCastNeeded: false
              30:
                sapientType: "BASIC"
                content: !<regular>
                  value: -58
                valueType: "byte"
                fixed: false
                equalsMethodPresent: false
                explicitCastNeeded: false
              31:
                sapientType: "BASIC"
                content: !<regular>
                  value: -90
                valueType: "byte"
                fixed: false
                equalsMethodPresent: false
                explicitCastNeeded: false
              32:
                sapientType: "BASIC"
                content: !<regular>
                  value: -24
                valueType: "byte"
                fixed: false
                equalsMethodPresent: false
                explicitCastNeeded: false
          suggestedContent: !<array>
            values:
              0:
                sapientType: "BASIC"
                content: !<regular>
                  value: 2
                valueType: "byte"
                fixed: false
                equalsMethodPresent: false
                explicitCastNeeded: false
              1:
                sapientType: "BASIC"
                content: !<regular>
                  value: 17
                valueType: "byte"
                fixed: false
                equalsMethodPresent: false
                explicitCastNeeded: false
              2:
                sapientType: "BASIC"
                content: !<regular>
                  value: 67
                valueType: "byte"
                fixed: false
                equalsMethodPresent: false
                explicitCastNeeded: false
              3:
                sapientType: "BASIC"
                content: !<regular>
                  value: -39
                valueType: "byte"
                fixed: false
                equalsMethodPresent: false
                explicitCastNeeded: false
              4:
                sapientType: "BASIC"
                content: !<regular>
                  value: -2
                valueType: "byte"
                fixed: false
                equalsMethodPresent: false
                explicitCastNeeded: false
              5:
                sapientType: "BASIC"
                content: !<regular>
                  value: -101
                valueType: "byte"
                fixed: false
                equalsMethodPresent: false
                explicitCastNeeded: false
              6:
                sapientType: "BASIC"
                content: !<regular>
                  value: 76
                valueType: "byte"
                fixed: false
                equalsMethodPresent: false
                explicitCastNeeded: false
              7:
                sapientType: "BASIC"
                content: !<regular>
                  value: 53
                valueType: "byte"
                fixed: false
                equalsMethodPresent: false
                explicitCastNeeded: false
              8:
                sapientType: "BASIC"
                content: !<regular>
                  value: -127
                valueType: "byte"
                fixed: false
                equalsMethodPresent: false
                explicitCastNeeded: false
              9:
                sapientType: "BASIC"
                content: !<regular>
                  value: -56
                valueType: "byte"
                fixed: false
                equalsMethodPresent: false
                explicitCastNeeded: false
              10:
                sapientType: "BASIC"
                content: !<regular>
                  value: -54
                valueType: "byte"
                fixed: false
                equalsMethodPresent: false
                explicitCastNeeded: false
              11:
                sapientType: "BASIC"
                content: !<regular>
                  value: -27
                valueType: "byte"
                fixed: false
                equalsMethodPresent: false
                explicitCastNeeded: false
              12:
                sapientType: "BASIC"
                content: !<regular>
                  value: -70
                valueType: "byte"
                fixed: false
                equalsMethodPresent: false
                explicitCastNeeded: false
              13:
                sapientType: "BASIC"
                content: !<regular>
                  value: 56
                valueType: "byte"
                fixed: false
                equalsMethodPresent: false
                explicitCastNeeded: false
              14:
                sapientType: "BASIC"
                content: !<regular>
                  value: 57
                valueType: "byte"
                fixed: false
                equalsMethodPresent: false
                explicitCastNeeded: false
              15:
                sapientType: "BASIC"
                content: !<regular>
                  value: -5
                valueType: "byte"
                fixed: false
                equalsMethodPresent: false
                explicitCastNeeded: false
              16:
                sapientType: "BASIC"
                content: !<regular>
                  value: -98
                valueType: "byte"
                fixed: false
                equalsMethodPresent: false
                explicitCastNeeded: false
              17:
                sapientType: "BASIC"
                content: !<regular>
                  value: 44
                valueType: "byte"
                fixed: false
                equalsMethodPresent: false
                explicitCastNeeded: false
              18:
                sapientType: "BASIC"
                content: !<regular>
                  value: -42
                valueType: "byte"
                fixed: false
                equalsMethodPresent: false
                explicitCastNeeded: false
              19:
                sapientType: "BASIC"
                content: !<regular>
                  value: 112
                valueType: "byte"
                fixed: false
                equalsMethodPresent: false
                explicitCastNeeded: false
              20:
                sapientType: "BASIC"
                content: !<regular>
                  value: 110
                valueType: "byte"
                fixed: false
                equalsMethodPresent: false
                explicitCastNeeded: false
              21:
                sapientType: "BASIC"
                content: !<regular>
                  value: -59
                valueType: "byte"
                fixed: false
                equalsMethodPresent: false
                explicitCastNeeded: false
              22:
                sapientType: "BASIC"
                content: !<regular>
                  value: 107
                valueType: "byte"
                fixed: false
                equalsMethodPresent: false
                explicitCastNeeded: false
              23:
                sapientType: "BASIC"
                content: !<regular>
                  value: -125
                valueType: "byte"
                fixed: false
                equalsMethodPresent: false
                explicitCastNeeded: false
              24:
                sapientType: "BASIC"
                content: !<regular>
                  value: -61
                valueType: "byte"
                fixed: false
                equalsMethodPresent: false
                explicitCastNeeded: false
              25:
                sapientType: "BASIC"
                content: !<regular>
                  value: -93
                valueType: "byte"
                fixed: false
                equalsMethodPresent: false
                explicitCastNeeded: false
              26:
                sapientType: "BASIC"
                content: !<regular>
                  value: 26
                valueType: "byte"
                fixed: false
                equalsMethodPresent: false
                explicitCastNeeded: false
              27:
                sapientType: "BASIC"
                content: !<regular>
                  value: 119
                valueType: "byte"
                fixed: false
                equalsMethodPresent: false
                explicitCastNeeded: false
              28:
                sapientType: "BASIC"
                content: !<regular>
                  value: -47
                valueType: "byte"
                fixed: false
                equalsMethodPresent: false
                explicitCastNeeded: false
              29:
                sapientType: "BASIC"
                content: !<regular>
                  value: 12
                valueType: "byte"
                fixed: false
                equalsMethodPresent: false
                explicitCastNeeded: false
              30:
                sapientType: "BASIC"
                content: !<regular>
                  value: -58
                valueType: "byte"
                fixed: false
                equalsMethodPresent: false
                explicitCastNeeded: false
              31:
                sapientType: "BASIC"
                content: !<regular>
                  value: -90
                valueType: "byte"
                fixed: false
                equalsMethodPresent: false
                explicitCastNeeded: false
              32:
                sapientType: "BASIC"
                content: !<regular>
                  value: -24
                valueType: "byte"
                fixed: false
                equalsMethodPresent: false
                explicitCastNeeded: false
          valueType: "byte[]"
          uuid: "importKeyLocked_byte[]1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 1
      staticReadMethodForField: false
      filledByUser: false
    - type: "STATIC"
      name: "ByteString"
      modelFingerprint: "3368703AA91C8E7820ABCD37AA0BE534"
      index: 7
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "REAL"
        valueType: "com.google.protobuf.ByteString"
        uuid: "com.google.protobuf.ByteString"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "com.google.protobuf.ByteString"
        name: "copyFrom"
        parameters:
        - name: "bytes"
          value:
            sapientType: "ARRAY"
            content: !<array>
              values:
                0:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: 2
                  valueType: "byte"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                1:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: 17
                  valueType: "byte"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                2:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: 67
                  valueType: "byte"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                3:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: -39
                  valueType: "byte"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                4:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: -2
                  valueType: "byte"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                5:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: -101
                  valueType: "byte"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                6:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: 76
                  valueType: "byte"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                7:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: 53
                  valueType: "byte"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                8:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: -127
                  valueType: "byte"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                9:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: -56
                  valueType: "byte"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                10:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: -54
                  valueType: "byte"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                11:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: -27
                  valueType: "byte"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                12:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: -70
                  valueType: "byte"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                13:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: 56
                  valueType: "byte"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                14:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: 57
                  valueType: "byte"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                15:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: -5
                  valueType: "byte"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                16:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: -98
                  valueType: "byte"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                17:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: 44
                  valueType: "byte"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                18:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: -42
                  valueType: "byte"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                19:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: 112
                  valueType: "byte"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                20:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: 110
                  valueType: "byte"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                21:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: -59
                  valueType: "byte"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                22:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: 107
                  valueType: "byte"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                23:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: -125
                  valueType: "byte"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                24:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: -61
                  valueType: "byte"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                25:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: -93
                  valueType: "byte"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                26:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: 26
                  valueType: "byte"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                27:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: 119
                  valueType: "byte"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                28:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: -47
                  valueType: "byte"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                29:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: 12
                  valueType: "byte"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                30:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: -58
                  valueType: "byte"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                31:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: -90
                  valueType: "byte"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                32:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: -24
                  valueType: "byte"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
            suggestedContent: !<array>
              values:
                0:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: 2
                  valueType: "byte"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                1:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: 17
                  valueType: "byte"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                2:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: 67
                  valueType: "byte"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                3:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: -39
                  valueType: "byte"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                4:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: -2
                  valueType: "byte"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                5:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: -101
                  valueType: "byte"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                6:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: 76
                  valueType: "byte"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                7:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: 53
                  valueType: "byte"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                8:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: -127
                  valueType: "byte"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                9:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: -56
                  valueType: "byte"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                10:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: -54
                  valueType: "byte"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                11:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: -27
                  valueType: "byte"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                12:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: -70
                  valueType: "byte"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                13:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: 56
                  valueType: "byte"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                14:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: 57
                  valueType: "byte"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                15:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: -5
                  valueType: "byte"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                16:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: -98
                  valueType: "byte"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                17:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: 44
                  valueType: "byte"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                18:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: -42
                  valueType: "byte"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                19:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: 112
                  valueType: "byte"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                20:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: 110
                  valueType: "byte"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                21:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: -59
                  valueType: "byte"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                22:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: 107
                  valueType: "byte"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                23:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: -125
                  valueType: "byte"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                24:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: -61
                  valueType: "byte"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                25:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: -93
                  valueType: "byte"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                26:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: 26
                  valueType: "byte"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                27:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: 119
                  valueType: "byte"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                28:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: -47
                  valueType: "byte"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                29:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: 12
                  valueType: "byte"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                30:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: -58
                  valueType: "byte"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                31:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: -90
                  valueType: "byte"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                32:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: -24
                  valueType: "byte"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
            valueType: "byte[]"
            uuid: "importKeyLocked_byte[]1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "copyFrom(byte[]): ByteString"
        returnValue:
          sapientType: "OBJECT"
          content: !<static_method_return>
            target: "com.google.protobuf.ByteString"
            method: "copyFrom"
            methodParameters:
            - value:
                sapientType: "ARRAY"
                content: !<array>
                  values:
                    0:
                      sapientType: "BASIC"
                      content: !<regular>
                        value: 2
                      valueType: "byte"
                      fixed: false
                      equalsMethodPresent: false
                      explicitCastNeeded: false
                    1:
                      sapientType: "BASIC"
                      content: !<regular>
                        value: 17
                      valueType: "byte"
                      fixed: false
                      equalsMethodPresent: false
                      explicitCastNeeded: false
                    2:
                      sapientType: "BASIC"
                      content: !<regular>
                        value: 67
                      valueType: "byte"
                      fixed: false
                      equalsMethodPresent: false
                      explicitCastNeeded: false
                    3:
                      sapientType: "BASIC"
                      content: !<regular>
                        value: -39
                      valueType: "byte"
                      fixed: false
                      equalsMethodPresent: false
                      explicitCastNeeded: false
                    4:
                      sapientType: "BASIC"
                      content: !<regular>
                        value: -2
                      valueType: "byte"
                      fixed: false
                      equalsMethodPresent: false
                      explicitCastNeeded: false
                    5:
                      sapientType: "BASIC"
                      content: !<regular>
                        value: -101
                      valueType: "byte"
                      fixed: false
                      equalsMethodPresent: false
                      explicitCastNeeded: false
                    6:
                      sapientType: "BASIC"
                      content: !<regular>
                        value: 76
                      valueType: "byte"
                      fixed: false
                      equalsMethodPresent: false
                      explicitCastNeeded: false
                    7:
                      sapientType: "BASIC"
                      content: !<regular>
                        value: 53
                      valueType: "byte"
                      fixed: false
                      equalsMethodPresent: false
                      explicitCastNeeded: false
                    8:
                      sapientType: "BASIC"
                      content: !<regular>
                        value: -127
                      valueType: "byte"
                      fixed: false
                      equalsMethodPresent: false
                      explicitCastNeeded: false
                    9:
                      sapientType: "BASIC"
                      content: !<regular>
                        value: -56
                      valueType: "byte"
                      fixed: false
                      equalsMethodPresent: false
                      explicitCastNeeded: false
                    10:
                      sapientType: "BASIC"
                      content: !<regular>
                        value: -54
                      valueType: "byte"
                      fixed: false
                      equalsMethodPresent: false
                      explicitCastNeeded: false
                    11:
                      sapientType: "BASIC"
                      content: !<regular>
                        value: -27
                      valueType: "byte"
                      fixed: false
                      equalsMethodPresent: false
                      explicitCastNeeded: false
                    12:
                      sapientType: "BASIC"
                      content: !<regular>
                        value: -70
                      valueType: "byte"
                      fixed: false
                      equalsMethodPresent: false
                      explicitCastNeeded: false
                    13:
                      sapientType: "BASIC"
                      content: !<regular>
                        value: 56
                      valueType: "byte"
                      fixed: false
                      equalsMethodPresent: false
                      explicitCastNeeded: false
                    14:
                      sapientType: "BASIC"
                      content: !<regular>
                        value: 57
                      valueType: "byte"
                      fixed: false
                      equalsMethodPresent: false
                      explicitCastNeeded: false
                    15:
                      sapientType: "BASIC"
                      content: !<regular>
                        value: -5
                      valueType: "byte"
                      fixed: false
                      equalsMethodPresent: false
                      explicitCastNeeded: false
                    16:
                      sapientType: "BASIC"
                      content: !<regular>
                        value: -98
                      valueType: "byte"
                      fixed: false
                      equalsMethodPresent: false
                      explicitCastNeeded: false
                    17:
                      sapientType: "BASIC"
                      content: !<regular>
                        value: 44
                      valueType: "byte"
                      fixed: false
                      equalsMethodPresent: false
                      explicitCastNeeded: false
                    18:
                      sapientType: "BASIC"
                      content: !<regular>
                        value: -42
                      valueType: "byte"
                      fixed: false
                      equalsMethodPresent: false
                      explicitCastNeeded: false
                    19:
                      sapientType: "BASIC"
                      content: !<regular>
                        value: 112
                      valueType: "byte"
                      fixed: false
                      equalsMethodPresent: false
                      explicitCastNeeded: false
                    20:
                      sapientType: "BASIC"
                      content: !<regular>
                        value: 110
                      valueType: "byte"
                      fixed: false
                      equalsMethodPresent: false
                      explicitCastNeeded: false
                    21:
                      sapientType: "BASIC"
                      content: !<regular>
                        value: -59
                      valueType: "byte"
                      fixed: false
                      equalsMethodPresent: false
                      explicitCastNeeded: false
                    22:
                      sapientType: "BASIC"
                      content: !<regular>
                        value: 107
                      valueType: "byte"
                      fixed: false
                      equalsMethodPresent: false
                      explicitCastNeeded: false
                    23:
                      sapientType: "BASIC"
                      content: !<regular>
                        value: -125
                      valueType: "byte"
                      fixed: false
                      equalsMethodPresent: false
                      explicitCastNeeded: false
                    24:
                      sapientType: "BASIC"
                      content: !<regular>
                        value: -61
                      valueType: "byte"
                      fixed: false
                      equalsMethodPresent: false
                      explicitCastNeeded: false
                    25:
                      sapientType: "BASIC"
                      content: !<regular>
                        value: -93
                      valueType: "byte"
                      fixed: false
                      equalsMethodPresent: false
                      explicitCastNeeded: false
                    26:
                      sapientType: "BASIC"
                      content: !<regular>
                        value: 26
                      valueType: "byte"
                      fixed: false
                      equalsMethodPresent: false
                      explicitCastNeeded: false
                    27:
                      sapientType: "BASIC"
                      content: !<regular>
                        value: 119
                      valueType: "byte"
                      fixed: false
                      equalsMethodPresent: false
                      explicitCastNeeded: false
                    28:
                      sapientType: "BASIC"
                      content: !<regular>
                        value: -47
                      valueType: "byte"
                      fixed: false
                      equalsMethodPresent: false
                      explicitCastNeeded: false
                    29:
                      sapientType: "BASIC"
                      content: !<regular>
                        value: 12
                      valueType: "byte"
                      fixed: false
                      equalsMethodPresent: false
                      explicitCastNeeded: false
                    30:
                      sapientType: "BASIC"
                      content: !<regular>
                        value: -58
                      valueType: "byte"
                      fixed: false
                      equalsMethodPresent: false
                      explicitCastNeeded: false
                    31:
                      sapientType: "BASIC"
                      content: !<regular>
                        value: -90
                      valueType: "byte"
                      fixed: false
                      equalsMethodPresent: false
                      explicitCastNeeded: false
                    32:
                      sapientType: "BASIC"
                      content: !<regular>
                        value: -24
                      valueType: "byte"
                      fixed: false
                      equalsMethodPresent: false
                      explicitCastNeeded: false
                suggestedContent: !<array>
                  values:
                    0:
                      sapientType: "BASIC"
                      content: !<regular>
                        value: 2
                      valueType: "byte"
                      fixed: false
                      equalsMethodPresent: false
                      explicitCastNeeded: false
                    1:
                      sapientType: "BASIC"
                      content: !<regular>
                        value: 17
                      valueType: "byte"
                      fixed: false
                      equalsMethodPresent: false
                      explicitCastNeeded: false
                    2:
                      sapientType: "BASIC"
                      content: !<regular>
                        value: 67
                      valueType: "byte"
                      fixed: false
                      equalsMethodPresent: false
                      explicitCastNeeded: false
                    3:
                      sapientType: "BASIC"
                      content: !<regular>
                        value: -39
                      valueType: "byte"
                      fixed: false
                      equalsMethodPresent: false
                      explicitCastNeeded: false
                    4:
                      sapientType: "BASIC"
                      content: !<regular>
                        value: -2
                      valueType: "byte"
                      fixed: false
                      equalsMethodPresent: false
                      explicitCastNeeded: false
                    5:
                      sapientType: "BASIC"
                      content: !<regular>
                        value: -101
                      valueType: "byte"
                      fixed: false
                      equalsMethodPresent: false
                      explicitCastNeeded: false
                    6:
                      sapientType: "BASIC"
                      content: !<regular>
                        value: 76
                      valueType: "byte"
                      fixed: false
                      equalsMethodPresent: false
                      explicitCastNeeded: false
                    7:
                      sapientType: "BASIC"
                      content: !<regular>
                        value: 53
                      valueType: "byte"
                      fixed: false
                      equalsMethodPresent: false
                      explicitCastNeeded: false
                    8:
                      sapientType: "BASIC"
                      content: !<regular>
                        value: -127
                      valueType: "byte"
                      fixed: false
                      equalsMethodPresent: false
                      explicitCastNeeded: false
                    9:
                      sapientType: "BASIC"
                      content: !<regular>
                        value: -56
                      valueType: "byte"
                      fixed: false
                      equalsMethodPresent: false
                      explicitCastNeeded: false
                    10:
                      sapientType: "BASIC"
                      content: !<regular>
                        value: -54
                      valueType: "byte"
                      fixed: false
                      equalsMethodPresent: false
                      explicitCastNeeded: false
                    11:
                      sapientType: "BASIC"
                      content: !<regular>
                        value: -27
                      valueType: "byte"
                      fixed: false
                      equalsMethodPresent: false
                      explicitCastNeeded: false
                    12:
                      sapientType: "BASIC"
                      content: !<regular>
                        value: -70
                      valueType: "byte"
                      fixed: false
                      equalsMethodPresent: false
                      explicitCastNeeded: false
                    13:
                      sapientType: "BASIC"
                      content: !<regular>
                        value: 56
                      valueType: "byte"
                      fixed: false
                      equalsMethodPresent: false
                      explicitCastNeeded: false
                    14:
                      sapientType: "BASIC"
                      content: !<regular>
                        value: 57
                      valueType: "byte"
                      fixed: false
                      equalsMethodPresent: false
                      explicitCastNeeded: false
                    15:
                      sapientType: "BASIC"
                      content: !<regular>
                        value: -5
                      valueType: "byte"
                      fixed: false
                      equalsMethodPresent: false
                      explicitCastNeeded: false
                    16:
                      sapientType: "BASIC"
                      content: !<regular>
                        value: -98
                      valueType: "byte"
                      fixed: false
                      equalsMethodPresent: false
                      explicitCastNeeded: false
                    17:
                      sapientType: "BASIC"
                      content: !<regular>
                        value: 44
                      valueType: "byte"
                      fixed: false
                      equalsMethodPresent: false
                      explicitCastNeeded: false
                    18:
                      sapientType: "BASIC"
                      content: !<regular>
                        value: -42
                      valueType: "byte"
                      fixed: false
                      equalsMethodPresent: false
                      explicitCastNeeded: false
                    19:
                      sapientType: "BASIC"
                      content: !<regular>
                        value: 112
                      valueType: "byte"
                      fixed: false
                      equalsMethodPresent: false
                      explicitCastNeeded: false
                    20:
                      sapientType: "BASIC"
                      content: !<regular>
                        value: 110
                      valueType: "byte"
                      fixed: false
                      equalsMethodPresent: false
                      explicitCastNeeded: false
                    21:
                      sapientType: "BASIC"
                      content: !<regular>
                        value: -59
                      valueType: "byte"
                      fixed: false
                      equalsMethodPresent: false
                      explicitCastNeeded: false
                    22:
                      sapientType: "BASIC"
                      content: !<regular>
                        value: 107
                      valueType: "byte"
                      fixed: false
                      equalsMethodPresent: false
                      explicitCastNeeded: false
                    23:
                      sapientType: "BASIC"
                      content: !<regular>
                        value: -125
                      valueType: "byte"
                      fixed: false
                      equalsMethodPresent: false
                      explicitCastNeeded: false
                    24:
                      sapientType: "BASIC"
                      content: !<regular>
                        value: -61
                      valueType: "byte"
                      fixed: false
                      equalsMethodPresent: false
                      explicitCastNeeded: false
                    25:
                      sapientType: "BASIC"
                      content: !<regular>
                        value: -93
                      valueType: "byte"
                      fixed: false
                      equalsMethodPresent: false
                      explicitCastNeeded: false
                    26:
                      sapientType: "BASIC"
                      content: !<regular>
                        value: 26
                      valueType: "byte"
                      fixed: false
                      equalsMethodPresent: false
                      explicitCastNeeded: false
                    27:
                      sapientType: "BASIC"
                      content: !<regular>
                        value: 119
                      valueType: "byte"
                      fixed: false
                      equalsMethodPresent: false
                      explicitCastNeeded: false
                    28:
                      sapientType: "BASIC"
                      content: !<regular>
                        value: -47
                      valueType: "byte"
                      fixed: false
                      equalsMethodPresent: false
                      explicitCastNeeded: false
                    29:
                      sapientType: "BASIC"
                      content: !<regular>
                        value: 12
                      valueType: "byte"
                      fixed: false
                      equalsMethodPresent: false
                      explicitCastNeeded: false
                    30:
                      sapientType: "BASIC"
                      content: !<regular>
                        value: -58
                      valueType: "byte"
                      fixed: false
                      equalsMethodPresent: false
                      explicitCastNeeded: false
                    31:
                      sapientType: "BASIC"
                      content: !<regular>
                        value: -90
                      valueType: "byte"
                      fixed: false
                      equalsMethodPresent: false
                      explicitCastNeeded: false
                    32:
                      sapientType: "BASIC"
                      content: !<regular>
                        value: -24
                      valueType: "byte"
                      fixed: false
                      equalsMethodPresent: false
                      explicitCastNeeded: false
                valueType: "byte[]"
                uuid: "importKeyLocked_byte[]1"
                fixed: false
                equalsMethodPresent: false
                explicitCastNeeded: false
          suggestedContent: !<static_method_return>
            target: "com.google.protobuf.ByteString"
            method: "copyFrom"
            methodParameters:
            - value:
                sapientType: "ARRAY"
                suggestedContent: !<array>
                  values:
                    0:
                      sapientType: "BASIC"
                      content: !<regular>
                        value: 2
                      valueType: "byte"
                      fixed: false
                      equalsMethodPresent: false
                      explicitCastNeeded: false
                    1:
                      sapientType: "BASIC"
                      content: !<regular>
                        value: 17
                      valueType: "byte"
                      fixed: false
                      equalsMethodPresent: false
                      explicitCastNeeded: false
                    2:
                      sapientType: "BASIC"
                      content: !<regular>
                        value: 67
                      valueType: "byte"
                      fixed: false
                      equalsMethodPresent: false
                      explicitCastNeeded: false
                    3:
                      sapientType: "BASIC"
                      content: !<regular>
                        value: -39
                      valueType: "byte"
                      fixed: false
                      equalsMethodPresent: false
                      explicitCastNeeded: false
                    4:
                      sapientType: "BASIC"
                      content: !<regular>
                        value: -2
                      valueType: "byte"
                      fixed: false
                      equalsMethodPresent: false
                      explicitCastNeeded: false
                    5:
                      sapientType: "BASIC"
                      content: !<regular>
                        value: -101
                      valueType: "byte"
                      fixed: false
                      equalsMethodPresent: false
                      explicitCastNeeded: false
                    6:
                      sapientType: "BASIC"
                      content: !<regular>
                        value: 76
                      valueType: "byte"
                      fixed: false
                      equalsMethodPresent: false
                      explicitCastNeeded: false
                    7:
                      sapientType: "BASIC"
                      content: !<regular>
                        value: 53
                      valueType: "byte"
                      fixed: false
                      equalsMethodPresent: false
                      explicitCastNeeded: false
                    8:
                      sapientType: "BASIC"
                      content: !<regular>
                        value: -127
                      valueType: "byte"
                      fixed: false
                      equalsMethodPresent: false
                      explicitCastNeeded: false
                    9:
                      sapientType: "BASIC"
                      content: !<regular>
                        value: -56
                      valueType: "byte"
                      fixed: false
                      equalsMethodPresent: false
                      explicitCastNeeded: false
                    10:
                      sapientType: "BASIC"
                      content: !<regular>
                        value: -54
                      valueType: "byte"
                      fixed: false
                      equalsMethodPresent: false
                      explicitCastNeeded: false
                    11:
                      sapientType: "BASIC"
                      content: !<regular>
                        value: -27
                      valueType: "byte"
                      fixed: false
                      equalsMethodPresent: false
                      explicitCastNeeded: false
                    12:
                      sapientType: "BASIC"
                      content: !<regular>
                        value: -70
                      valueType: "byte"
                      fixed: false
                      equalsMethodPresent: false
                      explicitCastNeeded: false
                    13:
                      sapientType: "BASIC"
                      content: !<regular>
                        value: 56
                      valueType: "byte"
                      fixed: false
                      equalsMethodPresent: false
                      explicitCastNeeded: false
                    14:
                      sapientType: "BASIC"
                      content: !<regular>
                        value: 57
                      valueType: "byte"
                      fixed: false
                      equalsMethodPresent: false
                      explicitCastNeeded: false
                    15:
                      sapientType: "BASIC"
                      content: !<regular>
                        value: -5
                      valueType: "byte"
                      fixed: false
                      equalsMethodPresent: false
                      explicitCastNeeded: false
                    16:
                      sapientType: "BASIC"
                      content: !<regular>
                        value: -98
                      valueType: "byte"
                      fixed: false
                      equalsMethodPresent: false
                      explicitCastNeeded: false
                    17:
                      sapientType: "BASIC"
                      content: !<regular>
                        value: 44
                      valueType: "byte"
                      fixed: false
                      equalsMethodPresent: false
                      explicitCastNeeded: false
                    18:
                      sapientType: "BASIC"
                      content: !<regular>
                        value: -42
                      valueType: "byte"
                      fixed: false
                      equalsMethodPresent: false
                      explicitCastNeeded: false
                    19:
                      sapientType: "BASIC"
                      content: !<regular>
                        value: 112
                      valueType: "byte"
                      fixed: false
                      equalsMethodPresent: false
                      explicitCastNeeded: false
                    20:
                      sapientType: "BASIC"
                      content: !<regular>
                        value: 110
                      valueType: "byte"
                      fixed: false
                      equalsMethodPresent: false
                      explicitCastNeeded: false
                    21:
                      sapientType: "BASIC"
                      content: !<regular>
                        value: -59
                      valueType: "byte"
                      fixed: false
                      equalsMethodPresent: false
                      explicitCastNeeded: false
                    22:
                      sapientType: "BASIC"
                      content: !<regular>
                        value: 107
                      valueType: "byte"
                      fixed: false
                      equalsMethodPresent: false
                      explicitCastNeeded: false
                    23:
                      sapientType: "BASIC"
                      content: !<regular>
                        value: -125
                      valueType: "byte"
                      fixed: false
                      equalsMethodPresent: false
                      explicitCastNeeded: false
                    24:
                      sapientType: "BASIC"
                      content: !<regular>
                        value: -61
                      valueType: "byte"
                      fixed: false
                      equalsMethodPresent: false
                      explicitCastNeeded: false
                    25:
                      sapientType: "BASIC"
                      content: !<regular>
                        value: -93
                      valueType: "byte"
                      fixed: false
                      equalsMethodPresent: false
                      explicitCastNeeded: false
                    26:
                      sapientType: "BASIC"
                      content: !<regular>
                        value: 26
                      valueType: "byte"
                      fixed: false
                      equalsMethodPresent: false
                      explicitCastNeeded: false
                    27:
                      sapientType: "BASIC"
                      content: !<regular>
                        value: 119
                      valueType: "byte"
                      fixed: false
                      equalsMethodPresent: false
                      explicitCastNeeded: false
                    28:
                      sapientType: "BASIC"
                      content: !<regular>
                        value: -47
                      valueType: "byte"
                      fixed: false
                      equalsMethodPresent: false
                      explicitCastNeeded: false
                    29:
                      sapientType: "BASIC"
                      content: !<regular>
                        value: 12
                      valueType: "byte"
                      fixed: false
                      equalsMethodPresent: false
                      explicitCastNeeded: false
                    30:
                      sapientType: "BASIC"
                      content: !<regular>
                        value: -58
                      valueType: "byte"
                      fixed: false
                      equalsMethodPresent: false
                      explicitCastNeeded: false
                    31:
                      sapientType: "BASIC"
                      content: !<regular>
                        value: -90
                      valueType: "byte"
                      fixed: false
                      equalsMethodPresent: false
                      explicitCastNeeded: false
                    32:
                      sapientType: "BASIC"
                      content: !<regular>
                        value: -24
                      valueType: "byte"
                      fixed: false
                      equalsMethodPresent: false
                      explicitCastNeeded: false
                valueType: "byte[]"
                uuid: "importKeyLocked_byte[]1"
                fixed: false
                equalsMethodPresent: false
                explicitCastNeeded: false
          valueType: "com.google.protobuf.ByteString"
          uuid: "importKeyLocked_byteString1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 9
      staticReadMethodForField: false
      filledByUser: false
    - type: "LOCAL_VARIABLE"
      name: "key"
      modelFingerprint: "0FD0973AD2AF0CE56BEB9B02C6DA4A21"
      index: 8
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "OBJECT"
        content: !<new>
          target: "org.bitcoinj.crypto.ECKey"
          parameters: []
          privateConstructor: false
          createdByTargetCode: true
        suggestedContent: !<new>
          target: "org.bitcoinj.crypto.ECKey"
          parameters: []
          privateConstructor: false
          createdByTargetCode: true
        valueType: "org.bitcoinj.crypto.ECKey"
        uuid: "getKey_eCKey1"
        fixed: true
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "key"
        name: "getPubKeyHash"
        parameters: []
        signature: "getPubKeyHash(): byte[]"
        returnValue:
          sapientType: "ARRAY"
          content: !<array>
            values:
              0:
                sapientType: "BASIC"
                content: !<regular>
                  value: -85
                valueType: "byte"
                fixed: false
                equalsMethodPresent: false
                explicitCastNeeded: false
              1:
                sapientType: "BASIC"
                content: !<regular>
                  value: 70
                valueType: "byte"
                fixed: false
                equalsMethodPresent: false
                explicitCastNeeded: false
              2:
                sapientType: "BASIC"
                content: !<regular>
                  value: -85
                valueType: "byte"
                fixed: false
                equalsMethodPresent: false
                explicitCastNeeded: false
              3:
                sapientType: "BASIC"
                content: !<regular>
                  value: -4
                valueType: "byte"
                fixed: false
                equalsMethodPresent: false
                explicitCastNeeded: false
              4:
                sapientType: "BASIC"
                content: !<regular>
                  value: 106
                valueType: "byte"
                fixed: false
                equalsMethodPresent: false
                explicitCastNeeded: false
              5:
                sapientType: "BASIC"
                content: !<regular>
                  value: 127
                valueType: "byte"
                fixed: false
                equalsMethodPresent: false
                explicitCastNeeded: false
              6:
                sapientType: "BASIC"
                content: !<regular>
                  value: -72
                valueType: "byte"
                fixed: false
                equalsMethodPresent: false
                explicitCastNeeded: false
              7:
                sapientType: "BASIC"
                content: !<regular>
                  value: -40
                valueType: "byte"
                fixed: false
                equalsMethodPresent: false
                explicitCastNeeded: false
              8:
                sapientType: "BASIC"
                content: !<regular>
                  value: -7
                valueType: "byte"
                fixed: false
                equalsMethodPresent: false
                explicitCastNeeded: false
              9:
                sapientType: "BASIC"
                content: !<regular>
                  value: -105
                valueType: "byte"
                fixed: false
                equalsMethodPresent: false
                explicitCastNeeded: false
              10:
                sapientType: "BASIC"
                content: !<regular>
                  value: -94
                valueType: "byte"
                fixed: false
                equalsMethodPresent: false
                explicitCastNeeded: false
              11:
                sapientType: "BASIC"
                content: !<regular>
                  value: 127
                valueType: "byte"
                fixed: false
                equalsMethodPresent: false
                explicitCastNeeded: false
              12:
                sapientType: "BASIC"
                content: !<regular>
                  value: 124
                valueType: "byte"
                fixed: false
                equalsMethodPresent: false
                explicitCastNeeded: false
              13:
                sapientType: "BASIC"
                content: !<regular>
                  value: -74
                valueType: "byte"
                fixed: false
                equalsMethodPresent: false
                explicitCastNeeded: false
              14:
                sapientType: "BASIC"
                content: !<regular>
                  value: 30
                valueType: "byte"
                fixed: false
                equalsMethodPresent: false
                explicitCastNeeded: false
              15:
                sapientType: "BASIC"
                content: !<regular>
                  value: 55
                valueType: "byte"
                fixed: false
                equalsMethodPresent: false
                explicitCastNeeded: false
              16:
                sapientType: "BASIC"
                content: !<regular>
                  value: -42
                valueType: "byte"
                fixed: false
                equalsMethodPresent: false
                explicitCastNeeded: false
              17:
                sapientType: "BASIC"
                content: !<regular>
                  value: -128
                valueType: "byte"
                fixed: false
                equalsMethodPresent: false
                explicitCastNeeded: false
              18:
                sapientType: "BASIC"
                content: !<regular>
                  value: -35
                valueType: "byte"
                fixed: false
                equalsMethodPresent: false
                explicitCastNeeded: false
              19:
                sapientType: "BASIC"
                content: !<regular>
                  value: 8
                valueType: "byte"
                fixed: false
                equalsMethodPresent: false
                explicitCastNeeded: false
          suggestedContent: !<array>
            values:
              0:
                sapientType: "BASIC"
                content: !<regular>
                  value: -85
                valueType: "byte"
                fixed: false
                equalsMethodPresent: false
                explicitCastNeeded: false
              1:
                sapientType: "BASIC"
                content: !<regular>
                  value: 70
                valueType: "byte"
                fixed: false
                equalsMethodPresent: false
                explicitCastNeeded: false
              2:
                sapientType: "BASIC"
                content: !<regular>
                  value: -85
                valueType: "byte"
                fixed: false
                equalsMethodPresent: false
                explicitCastNeeded: false
              3:
                sapientType: "BASIC"
                content: !<regular>
                  value: -4
                valueType: "byte"
                fixed: false
                equalsMethodPresent: false
                explicitCastNeeded: false
              4:
                sapientType: "BASIC"
                content: !<regular>
                  value: 106
                valueType: "byte"
                fixed: false
                equalsMethodPresent: false
                explicitCastNeeded: false
              5:
                sapientType: "BASIC"
                content: !<regular>
                  value: 127
                valueType: "byte"
                fixed: false
                equalsMethodPresent: false
                explicitCastNeeded: false
              6:
                sapientType: "BASIC"
                content: !<regular>
                  value: -72
                valueType: "byte"
                fixed: false
                equalsMethodPresent: false
                explicitCastNeeded: false
              7:
                sapientType: "BASIC"
                content: !<regular>
                  value: -40
                valueType: "byte"
                fixed: false
                equalsMethodPresent: false
                explicitCastNeeded: false
              8:
                sapientType: "BASIC"
                content: !<regular>
                  value: -7
                valueType: "byte"
                fixed: false
                equalsMethodPresent: false
                explicitCastNeeded: false
              9:
                sapientType: "BASIC"
                content: !<regular>
                  value: -105
                valueType: "byte"
                fixed: false
                equalsMethodPresent: false
                explicitCastNeeded: false
              10:
                sapientType: "BASIC"
                content: !<regular>
                  value: -94
                valueType: "byte"
                fixed: false
                equalsMethodPresent: false
                explicitCastNeeded: false
              11:
                sapientType: "BASIC"
                content: !<regular>
                  value: 127
                valueType: "byte"
                fixed: false
                equalsMethodPresent: false
                explicitCastNeeded: false
              12:
                sapientType: "BASIC"
                content: !<regular>
                  value: 124
                valueType: "byte"
                fixed: false
                equalsMethodPresent: false
                explicitCastNeeded: false
              13:
                sapientType: "BASIC"
                content: !<regular>
                  value: -74
                valueType: "byte"
                fixed: false
                equalsMethodPresent: false
                explicitCastNeeded: false
              14:
                sapientType: "BASIC"
                content: !<regular>
                  value: 30
                valueType: "byte"
                fixed: false
                equalsMethodPresent: false
                explicitCastNeeded: false
              15:
                sapientType: "BASIC"
                content: !<regular>
                  value: 55
                valueType: "byte"
                fixed: false
                equalsMethodPresent: false
                explicitCastNeeded: false
              16:
                sapientType: "BASIC"
                content: !<regular>
                  value: -42
                valueType: "byte"
                fixed: false
                equalsMethodPresent: false
                explicitCastNeeded: false
              17:
                sapientType: "BASIC"
                content: !<regular>
                  value: -128
                valueType: "byte"
                fixed: false
                equalsMethodPresent: false
                explicitCastNeeded: false
              18:
                sapientType: "BASIC"
                content: !<regular>
                  value: -35
                valueType: "byte"
                fixed: false
                equalsMethodPresent: false
                explicitCastNeeded: false
              19:
                sapientType: "BASIC"
                content: !<regular>
                  value: 8
                valueType: "byte"
                fixed: false
                equalsMethodPresent: false
                explicitCastNeeded: false
          valueType: "byte[]"
          uuid: "importKeyLocked_byte[]2"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 1
      staticReadMethodForField: false
      filledByUser: false
    - type: "STATIC"
      name: "ByteString"
      modelFingerprint: "AA349E005C6004CEFBC783AC13145491"
      index: 9
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "REAL"
        valueType: "com.google.protobuf.ByteString"
        uuid: "com.google.protobuf.ByteString"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "com.google.protobuf.ByteString"
        name: "copyFrom"
        parameters:
        - name: "bytes"
          value:
            sapientType: "ARRAY"
            content: !<array>
              values:
                0:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: -85
                  valueType: "byte"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                1:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: 70
                  valueType: "byte"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                2:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: -85
                  valueType: "byte"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                3:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: -4
                  valueType: "byte"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                4:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: 106
                  valueType: "byte"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                5:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: 127
                  valueType: "byte"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                6:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: -72
                  valueType: "byte"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                7:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: -40
                  valueType: "byte"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                8:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: -7
                  valueType: "byte"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                9:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: -105
                  valueType: "byte"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                10:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: -94
                  valueType: "byte"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                11:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: 127
                  valueType: "byte"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                12:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: 124
                  valueType: "byte"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                13:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: -74
                  valueType: "byte"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                14:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: 30
                  valueType: "byte"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                15:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: 55
                  valueType: "byte"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                16:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: -42
                  valueType: "byte"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                17:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: -128
                  valueType: "byte"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                18:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: -35
                  valueType: "byte"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                19:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: 8
                  valueType: "byte"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
            suggestedContent: !<array>
              values:
                0:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: -85
                  valueType: "byte"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                1:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: 70
                  valueType: "byte"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                2:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: -85
                  valueType: "byte"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                3:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: -4
                  valueType: "byte"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                4:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: 106
                  valueType: "byte"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                5:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: 127
                  valueType: "byte"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                6:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: -72
                  valueType: "byte"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                7:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: -40
                  valueType: "byte"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                8:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: -7
                  valueType: "byte"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                9:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: -105
                  valueType: "byte"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                10:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: -94
                  valueType: "byte"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                11:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: 127
                  valueType: "byte"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                12:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: 124
                  valueType: "byte"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                13:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: -74
                  valueType: "byte"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                14:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: 30
                  valueType: "byte"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                15:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: 55
                  valueType: "byte"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                16:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: -42
                  valueType: "byte"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                17:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: -128
                  valueType: "byte"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                18:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: -35
                  valueType: "byte"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                19:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: 8
                  valueType: "byte"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
            valueType: "byte[]"
            uuid: "importKeyLocked_byte[]2"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "copyFrom(byte[]): ByteString"
        returnValue:
          sapientType: "OBJECT"
          content: !<static_method_return>
            target: "com.google.protobuf.ByteString"
            method: "copyFrom"
            methodParameters:
            - value:
                sapientType: "ARRAY"
                content: !<array>
                  values:
                    0:
                      sapientType: "BASIC"
                      content: !<regular>
                        value: -85
                      valueType: "byte"
                      fixed: false
                      equalsMethodPresent: false
                      explicitCastNeeded: false
                    1:
                      sapientType: "BASIC"
                      content: !<regular>
                        value: 70
                      valueType: "byte"
                      fixed: false
                      equalsMethodPresent: false
                      explicitCastNeeded: false
                    2:
                      sapientType: "BASIC"
                      content: !<regular>
                        value: -85
                      valueType: "byte"
                      fixed: false
                      equalsMethodPresent: false
                      explicitCastNeeded: false
                    3:
                      sapientType: "BASIC"
                      content: !<regular>
                        value: -4
                      valueType: "byte"
                      fixed: false
                      equalsMethodPresent: false
                      explicitCastNeeded: false
                    4:
                      sapientType: "BASIC"
                      content: !<regular>
                        value: 106
                      valueType: "byte"
                      fixed: false
                      equalsMethodPresent: false
                      explicitCastNeeded: false
                    5:
                      sapientType: "BASIC"
                      content: !<regular>
                        value: 127
                      valueType: "byte"
                      fixed: false
                      equalsMethodPresent: false
                      explicitCastNeeded: false
                    6:
                      sapientType: "BASIC"
                      content: !<regular>
                        value: -72
                      valueType: "byte"
                      fixed: false
                      equalsMethodPresent: false
                      explicitCastNeeded: false
                    7:
                      sapientType: "BASIC"
                      content: !<regular>
                        value: -40
                      valueType: "byte"
                      fixed: false
                      equalsMethodPresent: false
                      explicitCastNeeded: false
                    8:
                      sapientType: "BASIC"
                      content: !<regular>
                        value: -7
                      valueType: "byte"
                      fixed: false
                      equalsMethodPresent: false
                      explicitCastNeeded: false
                    9:
                      sapientType: "BASIC"
                      content: !<regular>
                        value: -105
                      valueType: "byte"
                      fixed: false
                      equalsMethodPresent: false
                      explicitCastNeeded: false
                    10:
                      sapientType: "BASIC"
                      content: !<regular>
                        value: -94
                      valueType: "byte"
                      fixed: false
                      equalsMethodPresent: false
                      explicitCastNeeded: false
                    11:
                      sapientType: "BASIC"
                      content: !<regular>
                        value: 127
                      valueType: "byte"
                      fixed: false
                      equalsMethodPresent: false
                      explicitCastNeeded: false
                    12:
                      sapientType: "BASIC"
                      content: !<regular>
                        value: 124
                      valueType: "byte"
                      fixed: false
                      equalsMethodPresent: false
                      explicitCastNeeded: false
                    13:
                      sapientType: "BASIC"
                      content: !<regular>
                        value: -74
                      valueType: "byte"
                      fixed: false
                      equalsMethodPresent: false
                      explicitCastNeeded: false
                    14:
                      sapientType: "BASIC"
                      content: !<regular>
                        value: 30
                      valueType: "byte"
                      fixed: false
                      equalsMethodPresent: false
                      explicitCastNeeded: false
                    15:
                      sapientType: "BASIC"
                      content: !<regular>
                        value: 55
                      valueType: "byte"
                      fixed: false
                      equalsMethodPresent: false
                      explicitCastNeeded: false
                    16:
                      sapientType: "BASIC"
                      content: !<regular>
                        value: -42
                      valueType: "byte"
                      fixed: false
                      equalsMethodPresent: false
                      explicitCastNeeded: false
                    17:
                      sapientType: "BASIC"
                      content: !<regular>
                        value: -128
                      valueType: "byte"
                      fixed: false
                      equalsMethodPresent: false
                      explicitCastNeeded: false
                    18:
                      sapientType: "BASIC"
                      content: !<regular>
                        value: -35
                      valueType: "byte"
                      fixed: false
                      equalsMethodPresent: false
                      explicitCastNeeded: false
                    19:
                      sapientType: "BASIC"
                      content: !<regular>
                        value: 8
                      valueType: "byte"
                      fixed: false
                      equalsMethodPresent: false
                      explicitCastNeeded: false
                suggestedContent: !<array>
                  values:
                    0:
                      sapientType: "BASIC"
                      content: !<regular>
                        value: -85
                      valueType: "byte"
                      fixed: false
                      equalsMethodPresent: false
                      explicitCastNeeded: false
                    1:
                      sapientType: "BASIC"
                      content: !<regular>
                        value: 70
                      valueType: "byte"
                      fixed: false
                      equalsMethodPresent: false
                      explicitCastNeeded: false
                    2:
                      sapientType: "BASIC"
                      content: !<regular>
                        value: -85
                      valueType: "byte"
                      fixed: false
                      equalsMethodPresent: false
                      explicitCastNeeded: false
                    3:
                      sapientType: "BASIC"
                      content: !<regular>
                        value: -4
                      valueType: "byte"
                      fixed: false
                      equalsMethodPresent: false
                      explicitCastNeeded: false
                    4:
                      sapientType: "BASIC"
                      content: !<regular>
                        value: 106
                      valueType: "byte"
                      fixed: false
                      equalsMethodPresent: false
                      explicitCastNeeded: false
                    5:
                      sapientType: "BASIC"
                      content: !<regular>
                        value: 127
                      valueType: "byte"
                      fixed: false
                      equalsMethodPresent: false
                      explicitCastNeeded: false
                    6:
                      sapientType: "BASIC"
                      content: !<regular>
                        value: -72
                      valueType: "byte"
                      fixed: false
                      equalsMethodPresent: false
                      explicitCastNeeded: false
                    7:
                      sapientType: "BASIC"
                      content: !<regular>
                        value: -40
                      valueType: "byte"
                      fixed: false
                      equalsMethodPresent: false
                      explicitCastNeeded: false
                    8:
                      sapientType: "BASIC"
                      content: !<regular>
                        value: -7
                      valueType: "byte"
                      fixed: false
                      equalsMethodPresent: false
                      explicitCastNeeded: false
                    9:
                      sapientType: "BASIC"
                      content: !<regular>
                        value: -105
                      valueType: "byte"
                      fixed: false
                      equalsMethodPresent: false
                      explicitCastNeeded: false
                    10:
                      sapientType: "BASIC"
                      content: !<regular>
                        value: -94
                      valueType: "byte"
                      fixed: false
                      equalsMethodPresent: false
                      explicitCastNeeded: false
                    11:
                      sapientType: "BASIC"
                      content: !<regular>
                        value: 127
                      valueType: "byte"
                      fixed: false
                      equalsMethodPresent: false
                      explicitCastNeeded: false
                    12:
                      sapientType: "BASIC"
                      content: !<regular>
                        value: 124
                      valueType: "byte"
                      fixed: false
                      equalsMethodPresent: false
                      explicitCastNeeded: false
                    13:
                      sapientType: "BASIC"
                      content: !<regular>
                        value: -74
                      valueType: "byte"
                      fixed: false
                      equalsMethodPresent: false
                      explicitCastNeeded: false
                    14:
                      sapientType: "BASIC"
                      content: !<regular>
                        value: 30
                      valueType: "byte"
                      fixed: false
                      equalsMethodPresent: false
                      explicitCastNeeded: false
                    15:
                      sapientType: "BASIC"
                      content: !<regular>
                        value: 55
                      valueType: "byte"
                      fixed: false
                      equalsMethodPresent: false
                      explicitCastNeeded: false
                    16:
                      sapientType: "BASIC"
                      content: !<regular>
                        value: -42
                      valueType: "byte"
                      fixed: false
                      equalsMethodPresent: false
                      explicitCastNeeded: false
                    17:
                      sapientType: "BASIC"
                      content: !<regular>
                        value: -128
                      valueType: "byte"
                      fixed: false
                      equalsMethodPresent: false
                      explicitCastNeeded: false
                    18:
                      sapientType: "BASIC"
                      content: !<regular>
                        value: -35
                      valueType: "byte"
                      fixed: false
                      equalsMethodPresent: false
                      explicitCastNeeded: false
                    19:
                      sapientType: "BASIC"
                      content: !<regular>
                        value: 8
                      valueType: "byte"
                      fixed: false
                      equalsMethodPresent: false
                      explicitCastNeeded: false
                valueType: "byte[]"
                uuid: "importKeyLocked_byte[]2"
                fixed: false
                equalsMethodPresent: false
                explicitCastNeeded: false
          suggestedContent: !<static_method_return>
            target: "com.google.protobuf.ByteString"
            method: "copyFrom"
            methodParameters:
            - value:
                sapientType: "ARRAY"
                suggestedContent: !<array>
                  values:
                    0:
                      sapientType: "BASIC"
                      content: !<regular>
                        value: -85
                      valueType: "byte"
                      fixed: false
                      equalsMethodPresent: false
                      explicitCastNeeded: false
                    1:
                      sapientType: "BASIC"
                      content: !<regular>
                        value: 70
                      valueType: "byte"
                      fixed: false
                      equalsMethodPresent: false
                      explicitCastNeeded: false
                    2:
                      sapientType: "BASIC"
                      content: !<regular>
                        value: -85
                      valueType: "byte"
                      fixed: false
                      equalsMethodPresent: false
                      explicitCastNeeded: false
                    3:
                      sapientType: "BASIC"
                      content: !<regular>
                        value: -4
                      valueType: "byte"
                      fixed: false
                      equalsMethodPresent: false
                      explicitCastNeeded: false
                    4:
                      sapientType: "BASIC"
                      content: !<regular>
                        value: 106
                      valueType: "byte"
                      fixed: false
                      equalsMethodPresent: false
                      explicitCastNeeded: false
                    5:
                      sapientType: "BASIC"
                      content: !<regular>
                        value: 127
                      valueType: "byte"
                      fixed: false
                      equalsMethodPresent: false
                      explicitCastNeeded: false
                    6:
                      sapientType: "BASIC"
                      content: !<regular>
                        value: -72
                      valueType: "byte"
                      fixed: false
                      equalsMethodPresent: false
                      explicitCastNeeded: false
                    7:
                      sapientType: "BASIC"
                      content: !<regular>
                        value: -40
                      valueType: "byte"
                      fixed: false
                      equalsMethodPresent: false
                      explicitCastNeeded: false
                    8:
                      sapientType: "BASIC"
                      content: !<regular>
                        value: -7
                      valueType: "byte"
                      fixed: false
                      equalsMethodPresent: false
                      explicitCastNeeded: false
                    9:
                      sapientType: "BASIC"
                      content: !<regular>
                        value: -105
                      valueType: "byte"
                      fixed: false
                      equalsMethodPresent: false
                      explicitCastNeeded: false
                    10:
                      sapientType: "BASIC"
                      content: !<regular>
                        value: -94
                      valueType: "byte"
                      fixed: false
                      equalsMethodPresent: false
                      explicitCastNeeded: false
                    11:
                      sapientType: "BASIC"
                      content: !<regular>
                        value: 127
                      valueType: "byte"
                      fixed: false
                      equalsMethodPresent: false
                      explicitCastNeeded: false
                    12:
                      sapientType: "BASIC"
                      content: !<regular>
                        value: 124
                      valueType: "byte"
                      fixed: false
                      equalsMethodPresent: false
                      explicitCastNeeded: false
                    13:
                      sapientType: "BASIC"
                      content: !<regular>
                        value: -74
                      valueType: "byte"
                      fixed: false
                      equalsMethodPresent: false
                      explicitCastNeeded: false
                    14:
                      sapientType: "BASIC"
                      content: !<regular>
                        value: 30
                      valueType: "byte"
                      fixed: false
                      equalsMethodPresent: false
                      explicitCastNeeded: false
                    15:
                      sapientType: "BASIC"
                      content: !<regular>
                        value: 55
                      valueType: "byte"
                      fixed: false
                      equalsMethodPresent: false
                      explicitCastNeeded: false
                    16:
                      sapientType: "BASIC"
                      content: !<regular>
                        value: -42
                      valueType: "byte"
                      fixed: false
                      equalsMethodPresent: false
                      explicitCastNeeded: false
                    17:
                      sapientType: "BASIC"
                      content: !<regular>
                        value: -128
                      valueType: "byte"
                      fixed: false
                      equalsMethodPresent: false
                      explicitCastNeeded: false
                    18:
                      sapientType: "BASIC"
                      content: !<regular>
                        value: -35
                      valueType: "byte"
                      fixed: false
                      equalsMethodPresent: false
                      explicitCastNeeded: false
                    19:
                      sapientType: "BASIC"
                      content: !<regular>
                        value: 8
                      valueType: "byte"
                      fixed: false
                      equalsMethodPresent: false
                      explicitCastNeeded: false
                valueType: "byte[]"
                uuid: "importKeyLocked_byte[]2"
                fixed: false
                equalsMethodPresent: false
                explicitCastNeeded: false
          valueType: "com.google.protobuf.ByteString"
          uuid: "importKeyLocked_byteString2"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 9
      staticReadMethodForField: false
      filledByUser: false
    - type: "STATIC"
      name: "Preconditions"
      modelFingerprint: "ACF07FFCA3E2E1576E0B7D7733EEEFF8"
      index: 10
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "REAL"
        valueType: "org.bitcoinj.base.internal.Preconditions"
        uuid: "org.bitcoinj.base.internal.Preconditions"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "org.bitcoinj.base.internal.Preconditions"
        name: "checkState"
        parameters:
        - name: "expression"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: true
            valueType: "boolean"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "checkState(boolean): void"
        returnValue:
          sapientType: "VOID"
          valueType: "void"
          uuid: "importKeyLocked_void1"
          fixed: true
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 9
      staticReadMethodForField: false
      filledByUser: false
    - type: "STATIC"
      name: "Preconditions"
      modelFingerprint: "8E65D47E3C0602D60B2F22B827CB011E"
      index: 11
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        valueType: "org.bitcoinj.base.internal.Preconditions"
        uuid: "org.bitcoinj.base.internal.Preconditions"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "org.bitcoinj.base.internal.Preconditions"
        name: "checkState"
        parameters:
        - name: "expression"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: false
            valueType: "boolean"
            uuid: "queueOnKeysAdded_boolean1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "checkState(boolean): void"
        returnValue:
          sapientType: "EXCEPTION"
          content: !<new>
            target: "java.lang.IllegalStateException"
            parameters: []
            privateConstructor: false
            createdByTargetCode: false
          suggestedContent: !<new>
            target: "java.lang.IllegalStateException"
            parameters: []
            privateConstructor: false
            createdByTargetCode: false
          valueType: "java.lang.IllegalStateException"
          fixed: true
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 9
      staticReadMethodForField: false
      filledByUser: false
    - type: "RESULT"
      name: "result"
      modelFingerprint: "C9C68C9339F812BC8DEC7C1D6145A135"
      index: 12
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "EXCEPTION"
        content: !<new>
          target: "java.lang.IllegalStateException"
          parameters: []
          privateConstructor: false
          createdByTargetCode: false
        suggestedContent: !<new>
          target: "java.lang.IllegalStateException"
          parameters: []
          privateConstructor: false
          createdByTargetCode: false
        valueType: "java.lang.IllegalStateException"
        fixed: true
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    uuid: "6ca88477-f407-3d5d-a5d6-4b911490bffc"
    deleted: false
    disabled: true
    ignoredBySystem: false
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: true
- method:
    name: "getKeys"
    returnType: "java.util.List"
    signature: "getKeys(org.bitcoinj.wallet.KeyChain$KeyPurpose,int) : java.util.List<org.bitcoinj.crypto.ECKey>"
    instructionFingerprint: "389DC038C267126CEE95956A11B8A59C"
    parametersTypes:
    - "org.bitcoinj.wallet.KeyChain$KeyPurpose"
    - "int"
  paths:
  - pathId: "path4"
    pathIdForUser: "path1"
    testPathName: "getKeysWhenKeyCrypterIsNotNullThrowsIllegalStateException"
    nameDefinedByUser: false
    constructorSignature: "<init>(org.bitcoinj.crypto.KeyCrypter) : void"
    priorityDefinedByUser: false
    filledByUser: false
    priority: "LOW"
    modelFingerprint: "44918737BD09BB410E96605AA71D39A4"
    problemWasSolvedByProver: true
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "35099553EB48D2AEC42E2A9279A21C51"
      index: 1
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "OBJECT"
        content: !<new>
          target: "org.bitcoinj.wallet.BasicKeyChain"
          parameters:
          - name: "crypter"
            value:
              sapientType: "MOCK"
              valueType: "org.bitcoinj.crypto.KeyCrypter"
              uuid: "<init>_keyCrypter1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: false
        suggestedContent: !<new>
          target: "org.bitcoinj.wallet.BasicKeyChain"
          parameters:
          - name: "crypter"
            value:
              sapientType: "UNKNOWN"
              valueType: "org.bitcoinj.crypto.KeyCrypter"
              uuid: "<init>_keyCrypter1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: false
        valueType: "org.bitcoinj.wallet.BasicKeyChain"
        uuid: "target"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    - type: "INPUT"
      name: "purpose"
      modelFingerprint: "73A485DEF62F8F8DB3A849DDC926598C"
      index: 2
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "ENUM"
        content: !<regular>
          value: "RECEIVE_FUNDS"
        valueType: "org.bitcoinj.wallet.KeyChain$KeyPurpose"
        uuid: "getKeys_keyChain.KeyPurpose1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    - type: "INPUT"
      name: "numberOfKeys"
      modelFingerprint: "2DA1F46B8B1FFA2671A89E2C8C1DC18A"
      index: 3
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "BASIC"
        content: !<regular>
          value: 1
        suggestedContent: !<regular>
          value: 1
        valueType: "int"
        uuid: "getKeys_int1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    - type: "STATIC"
      name: "Threading"
      modelFingerprint: "931BDCE1DF6454A48EA195CE5432B664"
      index: 4
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "REAL"
        valueType: "org.bitcoinj.utils.Threading"
        uuid: "org.bitcoinj.utils.Threading"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "org.bitcoinj.utils.Threading"
        name: "lock"
        parameters:
        - name: "clazz"
          value:
            sapientType: "CLASS"
            content: !<regular>
              value: "org.bitcoinj.wallet.BasicKeyChain"
            valueType: "java.lang.Class"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "lock(Class): ReentrantLock"
        returnValue:
          sapientType: "OBJECT"
          content: !<static_method_return>
            target: "org.bitcoinj.utils.Threading"
            method: "lock"
            methodParameters:
            - value:
                sapientType: "CLASS"
                content: !<regular>
                  value: "org.bitcoinj.wallet.BasicKeyChain"
                valueType: "java.lang.Class"
                fixed: true
                equalsMethodPresent: false
                explicitCastNeeded: false
          suggestedContent: !<static_method_return>
            target: "org.bitcoinj.utils.Threading"
            method: "lock"
            methodParameters:
            - value:
                sapientType: "CLASS"
                content: !<regular>
                  value: "org.bitcoinj.wallet.BasicKeyChain"
                valueType: "java.lang.Class"
                fixed: true
                equalsMethodPresent: false
                explicitCastNeeded: false
          valueType: "java.util.concurrent.locks.ReentrantLock"
          uuid: "<init>_reentrantLock1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 9
      staticReadMethodForField: false
      filledByUser: false
    - type: "STATIC"
      name: "Preconditions"
      modelFingerprint: "60A6CF81A4B62FC26CAD9062FF6E1448"
      index: 5
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "REAL"
        valueType: "org.bitcoinj.base.internal.Preconditions"
        uuid: "org.bitcoinj.base.internal.Preconditions"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "org.bitcoinj.base.internal.Preconditions"
        name: "checkArgument"
        parameters:
        - name: "expression"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: true
            valueType: "boolean"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "checkArgument(boolean): void"
        returnValue:
          sapientType: "VOID"
          valueType: "void"
          uuid: "getKeys_void1"
          fixed: true
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 9
      staticReadMethodForField: false
      filledByUser: false
    - type: "STATIC"
      name: "Preconditions"
      modelFingerprint: "5D1C76B3909AD28BDDC21FFF70362CB1"
      index: 6
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        valueType: "org.bitcoinj.base.internal.Preconditions"
        uuid: "org.bitcoinj.base.internal.Preconditions"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "org.bitcoinj.base.internal.Preconditions"
        name: "checkState"
        parameters:
        - name: "expression"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: false
            valueType: "boolean"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "checkState(boolean): void"
        returnValue:
          sapientType: "EXCEPTION"
          content: !<new>
            target: "java.lang.IllegalStateException"
            parameters: []
            privateConstructor: false
            createdByTargetCode: false
          suggestedContent: !<new>
            target: "java.lang.IllegalStateException"
            parameters: []
            privateConstructor: false
            createdByTargetCode: false
          valueType: "java.lang.IllegalStateException"
          fixed: true
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 9
      staticReadMethodForField: false
      filledByUser: false
    - type: "RESULT"
      name: "result"
      modelFingerprint: "C9C68C9339F812BC8DEC7C1D6145A135"
      index: 7
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "EXCEPTION"
        content: !<new>
          target: "java.lang.IllegalStateException"
          parameters: []
          privateConstructor: false
          createdByTargetCode: false
        suggestedContent: !<new>
          target: "java.lang.IllegalStateException"
          parameters: []
          privateConstructor: false
          createdByTargetCode: false
        valueType: "java.lang.IllegalStateException"
        fixed: true
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    uuid: "5e2c1d6a-fa7a-31aa-89a4-55c7b4f4b9f6"
    deleted: false
    disabled: false
    ignoredBySystem: false
    prover: "DEFAULT"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
  - pathId: "path5"
    pathIdForUser: "path2"
    testPathName: "getKeysWhenHashToKeysValuesIteratorNotHasNext"
    nameDefinedByUser: false
    constructorSignature: "<init>(org.bitcoinj.crypto.KeyCrypter) : void"
    priorityDefinedByUser: false
    filledByUser: false
    priority: "LOW"
    modelFingerprint: "B84AA6B318D7D3258D283308161EE65D"
    problemWasSolvedByProver: true
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "35099553EB48D2AEC42E2A9279A21C51"
      index: 1
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "OBJECT"
        content: !<new>
          target: "org.bitcoinj.wallet.BasicKeyChain"
          parameters:
          - name: "crypter"
            value:
              sapientType: "MOCK"
              valueType: "org.bitcoinj.crypto.KeyCrypter"
              uuid: "<init>_keyCrypter1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: false
        suggestedContent: !<new>
          target: "org.bitcoinj.wallet.BasicKeyChain"
          parameters:
          - name: "crypter"
            value:
              sapientType: "UNKNOWN"
              valueType: "org.bitcoinj.crypto.KeyCrypter"
              uuid: "<init>_keyCrypter1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: false
        valueType: "org.bitcoinj.wallet.BasicKeyChain"
        uuid: "target"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    - type: "INPUT"
      name: "purpose"
      modelFingerprint: "73A485DEF62F8F8DB3A849DDC926598C"
      index: 2
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "ENUM"
        content: !<regular>
          value: "RECEIVE_FUNDS"
        valueType: "org.bitcoinj.wallet.KeyChain$KeyPurpose"
        uuid: "getKeys_keyChain.KeyPurpose1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    - type: "INPUT"
      name: "numberOfKeys"
      modelFingerprint: "A7378A1AAFC6B8D93F68454D8AD5851F"
      index: 3
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "BASIC"
        content: !<regular>
          value: 0
        suggestedContent: !<regular>
          value: 0
        valueType: "int"
        uuid: "getKeys_int1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    - type: "STATIC"
      name: "Threading"
      modelFingerprint: "931BDCE1DF6454A48EA195CE5432B664"
      index: 4
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "REAL"
        valueType: "org.bitcoinj.utils.Threading"
        uuid: "org.bitcoinj.utils.Threading"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "org.bitcoinj.utils.Threading"
        name: "lock"
        parameters:
        - name: "clazz"
          value:
            sapientType: "CLASS"
            content: !<regular>
              value: "org.bitcoinj.wallet.BasicKeyChain"
            valueType: "java.lang.Class"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "lock(Class): ReentrantLock"
        returnValue:
          sapientType: "OBJECT"
          content: !<static_method_return>
            target: "org.bitcoinj.utils.Threading"
            method: "lock"
            methodParameters:
            - value:
                sapientType: "CLASS"
                content: !<regular>
                  value: "org.bitcoinj.wallet.BasicKeyChain"
                valueType: "java.lang.Class"
                fixed: true
                equalsMethodPresent: false
                explicitCastNeeded: false
          suggestedContent: !<static_method_return>
            target: "org.bitcoinj.utils.Threading"
            method: "lock"
            methodParameters:
            - value:
                sapientType: "CLASS"
                content: !<regular>
                  value: "org.bitcoinj.wallet.BasicKeyChain"
                valueType: "java.lang.Class"
                fixed: true
                equalsMethodPresent: false
                explicitCastNeeded: false
          valueType: "java.util.concurrent.locks.ReentrantLock"
          uuid: "<init>_reentrantLock1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 9
      staticReadMethodForField: false
      filledByUser: false
    - type: "STATIC"
      name: "Preconditions"
      modelFingerprint: "E804CAA01F6E06275AA3B02F677C606A"
      index: 5
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        valueType: "org.bitcoinj.base.internal.Preconditions"
        uuid: "org.bitcoinj.base.internal.Preconditions"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "org.bitcoinj.base.internal.Preconditions"
        name: "checkArgument"
        parameters:
        - name: "expression"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: false
            valueType: "boolean"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "checkArgument(boolean): void"
        returnValue:
          sapientType: "VOID"
          valueType: "void"
          uuid: "getKeys_void1"
          fixed: true
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 9
      staticReadMethodForField: false
      filledByUser: false
    - type: "RESULT"
      name: "result"
      modelFingerprint: "63304133291ABC9838A99C234C0DD2B7"
      index: 6
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "COLLECTION"
        content: !<collection>
          collectionClass: "java.util.ArrayList"
          parameters: []
          values: []
        suggestedContent: !<collection>
          collectionClass: "java.util.ArrayList"
          parameters: []
          values: []
        valueType: "java.util.List"
        genericValueType: "org.bitcoinj.crypto.ECKey"
        uuid: "getKeys_arrayList1"
        fixed: false
        equalsMethodPresent: true
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    uuid: "7da9c3a1-3a35-37ee-9318-c7cb30afd316"
    deleted: false
    disabled: false
    ignoredBySystem: false
    prover: "DEFAULT"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
  - pathId: "path2"
    pathIdForUser: "path3"
    testPathName: "getKeysWhenKeysIsEmptyThrowsIllegalStateException"
    nameDefinedByUser: false
    constructorSignature: "<init>(org.bitcoinj.crypto.KeyCrypter) : void"
    priorityDefinedByUser: false
    filledByUser: false
    priority: "LOW"
    modelFingerprint: "7E33846AD62F92C21D7C071CCD4B6606"
    problemWasSolvedByProver: false
    truncated: true
    inputParameters: []
    uuid: "92840171-5bbe-3be1-8a1a-10ae9238bf8f"
    deleted: true
    disabled: false
    ignoredBySystem: true
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
  - pathId: "path3"
    pathIdForUser: "path4"
    testPathName: "getKeysWhenINotLessThanNumberOfKeysMinusHashToKeysSizeAndKeysIsEmptyThrowsIllegalStateException"
    nameDefinedByUser: false
    constructorSignature: "<init>(org.bitcoinj.crypto.KeyCrypter) : void"
    priorityDefinedByUser: false
    filledByUser: false
    priority: "LOW"
    modelFingerprint: "05396BFCDE51246374C06F1BAE939F27"
    problemWasSolvedByProver: false
    truncated: true
    inputParameters: []
    uuid: "d4c1acc6-ad01-34ae-8f85-492a762a6b3b"
    deleted: true
    disabled: false
    ignoredBySystem: true
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
  - pathId: "path1"
    pathIdForUser: "path5"
    testPathName: "getKeysWhenPreviousKeyIsNullThrowsIllegalStateException"
    nameDefinedByUser: false
    constructorSignature: "<init>(org.bitcoinj.crypto.KeyCrypter) : void"
    priorityDefinedByUser: false
    filledByUser: false
    priority: "MODERATE"
    modelFingerprint: "DF2CF423F321C1EEC7B8360438188B04"
    problemWasSolvedByProver: false
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "AC70298FA93F6048125F94F6464F3643"
      index: 1
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "OBJECT"
        content: !<new>
          target: "org.bitcoinj.wallet.BasicKeyChain"
          parameters:
          - name: "crypter"
            value:
              sapientType: "NULL"
              valueType: "org.bitcoinj.crypto.KeyCrypter"
              uuid: "<init>_keyCrypter1"
              fixed: true
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: false
        suggestedContent: !<new>
          target: "org.bitcoinj.wallet.BasicKeyChain"
          parameters:
          - name: "crypter"
            value:
              sapientType: "NULL"
              valueType: "org.bitcoinj.crypto.KeyCrypter"
              uuid: "<init>_keyCrypter1"
              fixed: true
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: false
        valueType: "org.bitcoinj.wallet.BasicKeyChain"
        uuid: "target"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    - type: "INPUT"
      name: "purpose"
      modelFingerprint: "73A485DEF62F8F8DB3A849DDC926598C"
      index: 2
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "ENUM"
        content: !<regular>
          value: "RECEIVE_FUNDS"
        valueType: "org.bitcoinj.wallet.KeyChain$KeyPurpose"
        uuid: "getKeys_keyChain.KeyPurpose1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    - type: "INPUT"
      name: "numberOfKeys"
      modelFingerprint: "2DA1F46B8B1FFA2671A89E2C8C1DC18A"
      index: 3
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "BASIC"
        content: !<regular>
          value: 1
        suggestedContent: !<regular>
          value: 1
        valueType: "int"
        uuid: "getKeys_int1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    - type: "STATIC"
      name: "Threading"
      modelFingerprint: "931BDCE1DF6454A48EA195CE5432B664"
      index: 4
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "REAL"
        valueType: "org.bitcoinj.utils.Threading"
        uuid: "org.bitcoinj.utils.Threading"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "org.bitcoinj.utils.Threading"
        name: "lock"
        parameters:
        - name: "clazz"
          value:
            sapientType: "CLASS"
            content: !<regular>
              value: "org.bitcoinj.wallet.BasicKeyChain"
            valueType: "java.lang.Class"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "lock(Class): ReentrantLock"
        returnValue:
          sapientType: "OBJECT"
          content: !<static_method_return>
            target: "org.bitcoinj.utils.Threading"
            method: "lock"
            methodParameters:
            - value:
                sapientType: "CLASS"
                content: !<regular>
                  value: "org.bitcoinj.wallet.BasicKeyChain"
                valueType: "java.lang.Class"
                fixed: true
                equalsMethodPresent: false
                explicitCastNeeded: false
          suggestedContent: !<static_method_return>
            target: "org.bitcoinj.utils.Threading"
            method: "lock"
            methodParameters:
            - value:
                sapientType: "CLASS"
                content: !<regular>
                  value: "org.bitcoinj.wallet.BasicKeyChain"
                valueType: "java.lang.Class"
                fixed: true
                equalsMethodPresent: false
                explicitCastNeeded: false
          valueType: "java.util.concurrent.locks.ReentrantLock"
          uuid: "<init>_reentrantLock1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 9
      staticReadMethodForField: false
      filledByUser: false
    - type: "STATIC"
      name: "Preconditions"
      modelFingerprint: "60A6CF81A4B62FC26CAD9062FF6E1448"
      index: 5
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "REAL"
        valueType: "org.bitcoinj.base.internal.Preconditions"
        uuid: "org.bitcoinj.base.internal.Preconditions"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "org.bitcoinj.base.internal.Preconditions"
        name: "checkArgument"
        parameters:
        - name: "expression"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: true
            valueType: "boolean"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "checkArgument(boolean): void"
        returnValue:
          sapientType: "VOID"
          valueType: "void"
          uuid: "getKeys_void1"
          fixed: true
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 9
      staticReadMethodForField: false
      filledByUser: false
    - type: "STATIC"
      name: "Preconditions"
      modelFingerprint: "ACF07FFCA3E2E1576E0B7D7733EEEFF8"
      index: 6
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        valueType: "org.bitcoinj.base.internal.Preconditions"
        uuid: "org.bitcoinj.base.internal.Preconditions"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "org.bitcoinj.base.internal.Preconditions"
        name: "checkState"
        parameters:
        - name: "expression"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: true
            valueType: "boolean"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "checkState(boolean): void"
        returnValue:
          sapientType: "VOID"
          valueType: "void"
          uuid: "getKeys_void3"
          fixed: true
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 9
      staticReadMethodForField: false
      filledByUser: false
    - type: "LOCAL_VARIABLE"
      name: "key"
      modelFingerprint: "D50F6365A097CA852613BD95CD4F1D90"
      index: 7
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        suggestedContent: !<unknown_object>
          target: "org.bitcoinj.crypto.ECKey"
          onlyPojoFunctions: false
          builderPattern: false
        valueType: "org.bitcoinj.crypto.ECKey"
        uuid: "importKeysLocked_object1"
        fixed: false
        collectionUuid: "getKeys_list1"
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "key"
        name: "isWatching"
        parameters: []
        signature: "isWatching(): boolean"
        returnValue:
          sapientType: "BASIC"
          content: !<regular>
            value: false
          valueType: "boolean"
          uuid: "importKeyLocked_boolean2"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 1
      staticReadMethodForField: false
      filledByUser: false
    - type: "LOCAL_VARIABLE"
      name: "key"
      modelFingerprint: "E8CC71C57D5FE22B7EA34F376F4790D1"
      index: 8
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        suggestedContent: !<unknown_object>
          target: "org.bitcoinj.crypto.ECKey"
          onlyPojoFunctions: false
          builderPattern: false
        valueType: "org.bitcoinj.crypto.ECKey"
        uuid: "importKeysLocked_object1"
        fixed: false
        collectionUuid: "getKeys_list1"
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "key"
        name: "getPubKey"
        parameters: []
        signature: "getPubKey(): byte[]"
        returnValue:
          sapientType: "ARRAY"
          content: !<array>
            values: {}
          suggestedContent: !<array>
            values: {}
          valueType: "byte[]"
          uuid: "importKeyLocked_byte[]1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 1
      staticReadMethodForField: false
      filledByUser: false
    - type: "STATIC"
      name: "ByteString"
      modelFingerprint: "2684DE1377B0A6D3657E2DDFE316973F"
      index: 9
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        valueType: "com.google.protobuf.ByteString"
        uuid: "com.google.protobuf.ByteString"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "com.google.protobuf.ByteString"
        name: "copyFrom"
        parameters:
        - name: "bytes"
          value:
            sapientType: "ARRAY"
            content: !<array>
              values: {}
            suggestedContent: !<array>
              values: {}
            valueType: "byte[]"
            uuid: "importKeyLocked_byte[]1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "copyFrom(byte[]): ByteString"
        returnValue:
          sapientType: "MOCK"
          valueType: "com.google.protobuf.ByteString"
          uuid: "importKeyLocked_byteString1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 9
      staticReadMethodForField: false
      filledByUser: false
    - type: "LOCAL_VARIABLE"
      name: "key"
      modelFingerprint: "7A975842CF2A4EB984A817D751464DE2"
      index: 10
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        suggestedContent: !<unknown_object>
          target: "org.bitcoinj.crypto.ECKey"
          onlyPojoFunctions: false
          builderPattern: false
        valueType: "org.bitcoinj.crypto.ECKey"
        uuid: "importKeysLocked_object1"
        fixed: false
        collectionUuid: "getKeys_list1"
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "key"
        name: "getPubKeyHash"
        parameters: []
        signature: "getPubKeyHash(): byte[]"
        returnValue:
          sapientType: "ARRAY"
          content: !<array>
            values: {}
          suggestedContent: !<array>
            values: {}
          valueType: "byte[]"
          uuid: "importKeyLocked_byte[]2"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 1
      staticReadMethodForField: false
      filledByUser: false
    - type: "STATIC"
      name: "ByteString"
      modelFingerprint: "2684DE1377B0A6D3657E2DDFE316973F"
      index: 11
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        valueType: "com.google.protobuf.ByteString"
        uuid: "com.google.protobuf.ByteString"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "com.google.protobuf.ByteString"
        name: "copyFrom"
        parameters:
        - name: "bytes"
          value:
            sapientType: "ARRAY"
            content: !<array>
              values: {}
            suggestedContent: !<array>
              values: {}
            valueType: "byte[]"
            uuid: "importKeyLocked_byte[]2"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "copyFrom(byte[]): ByteString"
        returnValue:
          sapientType: "MOCK"
          valueType: "com.google.protobuf.ByteString"
          uuid: "importKeyLocked_byteString2"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 9
      staticReadMethodForField: false
      filledByUser: false
    - type: "STATIC"
      name: "Preconditions"
      modelFingerprint: "ACF07FFCA3E2E1576E0B7D7733EEEFF8"
      index: 12
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "REAL"
        valueType: "org.bitcoinj.base.internal.Preconditions"
        uuid: "org.bitcoinj.base.internal.Preconditions"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "org.bitcoinj.base.internal.Preconditions"
        name: "checkState"
        parameters:
        - name: "expression"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: true
            valueType: "boolean"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "checkState(boolean): void"
        returnValue:
          sapientType: "VOID"
          valueType: "void"
          uuid: "importKeyLocked_void1"
          fixed: true
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 9
      staticReadMethodForField: false
      filledByUser: false
    - type: "STATIC"
      name: "Preconditions"
      modelFingerprint: "8E65D47E3C0602D60B2F22B827CB011E"
      index: 13
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        valueType: "org.bitcoinj.base.internal.Preconditions"
        uuid: "org.bitcoinj.base.internal.Preconditions"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "org.bitcoinj.base.internal.Preconditions"
        name: "checkState"
        parameters:
        - name: "expression"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: false
            valueType: "boolean"
            uuid: "queueOnKeysAdded_boolean1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "checkState(boolean): void"
        returnValue:
          sapientType: "EXCEPTION"
          content: !<new>
            target: "java.lang.IllegalStateException"
            parameters: []
            privateConstructor: false
            createdByTargetCode: false
          suggestedContent: !<new>
            target: "java.lang.IllegalStateException"
            parameters: []
            privateConstructor: false
            createdByTargetCode: false
          valueType: "java.lang.IllegalStateException"
          fixed: true
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 9
      staticReadMethodForField: false
      filledByUser: false
    - type: "RESULT"
      name: "result"
      modelFingerprint: "C9C68C9339F812BC8DEC7C1D6145A135"
      index: 14
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "EXCEPTION"
        content: !<new>
          target: "java.lang.IllegalStateException"
          parameters: []
          privateConstructor: false
          createdByTargetCode: false
        suggestedContent: !<new>
          target: "java.lang.IllegalStateException"
          parameters: []
          privateConstructor: false
          createdByTargetCode: false
        valueType: "java.lang.IllegalStateException"
        fixed: true
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    uuid: "60ce3b48-6ab0-35db-9e0d-7284cf8f074b"
    deleted: false
    disabled: true
    ignoredBySystem: false
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: true
- method:
    name: "getKeys"
    returnType: "java.util.List"
    signature: "getKeys() : java.util.List<org.bitcoinj.crypto.ECKey>"
    instructionFingerprint: "5FD2BB49F69D0C72E3DD0FA6ED62101D"
    parametersTypes: []
  paths:
  - pathId: "path1"
    pathIdForUser: "path1"
    testPathName: "getKeys1Test"
    nameDefinedByUser: false
    constructorSignature: "<init>(org.bitcoinj.crypto.KeyCrypter) : void"
    priorityDefinedByUser: false
    filledByUser: false
    priority: "LOW"
    modelFingerprint: "1763B77E31327D383C5241598125184E"
    problemWasSolvedByProver: true
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "35099553EB48D2AEC42E2A9279A21C51"
      index: 1
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "OBJECT"
        content: !<new>
          target: "org.bitcoinj.wallet.BasicKeyChain"
          parameters:
          - name: "crypter"
            value:
              sapientType: "MOCK"
              valueType: "org.bitcoinj.crypto.KeyCrypter"
              uuid: "<init>_keyCrypter1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: false
        suggestedContent: !<new>
          target: "org.bitcoinj.wallet.BasicKeyChain"
          parameters:
          - name: "crypter"
            value:
              sapientType: "UNKNOWN"
              valueType: "org.bitcoinj.crypto.KeyCrypter"
              uuid: "<init>_keyCrypter1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: false
        valueType: "org.bitcoinj.wallet.BasicKeyChain"
        uuid: "target"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    - type: "STATIC"
      name: "Threading"
      modelFingerprint: "931BDCE1DF6454A48EA195CE5432B664"
      index: 2
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "REAL"
        valueType: "org.bitcoinj.utils.Threading"
        uuid: "org.bitcoinj.utils.Threading"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "org.bitcoinj.utils.Threading"
        name: "lock"
        parameters:
        - name: "clazz"
          value:
            sapientType: "CLASS"
            content: !<regular>
              value: "org.bitcoinj.wallet.BasicKeyChain"
            valueType: "java.lang.Class"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "lock(Class): ReentrantLock"
        returnValue:
          sapientType: "OBJECT"
          content: !<static_method_return>
            target: "org.bitcoinj.utils.Threading"
            method: "lock"
            methodParameters:
            - value:
                sapientType: "CLASS"
                content: !<regular>
                  value: "org.bitcoinj.wallet.BasicKeyChain"
                valueType: "java.lang.Class"
                fixed: true
                equalsMethodPresent: false
                explicitCastNeeded: false
          suggestedContent: !<static_method_return>
            target: "org.bitcoinj.utils.Threading"
            method: "lock"
            methodParameters:
            - value:
                sapientType: "CLASS"
                content: !<regular>
                  value: "org.bitcoinj.wallet.BasicKeyChain"
                valueType: "java.lang.Class"
                fixed: true
                equalsMethodPresent: false
                explicitCastNeeded: false
          valueType: "java.util.concurrent.locks.ReentrantLock"
          uuid: "<init>_reentrantLock1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 9
      staticReadMethodForField: false
      filledByUser: false
    - type: "RESULT"
      name: "result"
      modelFingerprint: "5824C7B1DA601864DDB84981F0C57EC0"
      index: 3
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "COLLECTION"
        content: !<collection>
          collectionClass: "java.util.ArrayList"
          parameters:
          - name: "c"
            value:
              sapientType: "COLLECTION"
              content: !<collection>
                parameters: []
                values: []
              suggestedContent: !<collection>
                parameters: []
                values: []
              valueType: "java.util.Collection"
              uuid: "getKeys_collection1"
              fixed: false
              collectionUuid: "<init>_linkedHashMap1"
              equalsMethodPresent: false
              explicitCastNeeded: false
          values: []
        suggestedContent: !<collection>
          collectionClass: "java.util.ArrayList"
          parameters:
          - name: "c"
            value:
              sapientType: "COLLECTION"
              content: !<collection>
                parameters: []
                values: []
              suggestedContent: !<collection>
                parameters: []
                values: []
              valueType: "java.util.Collection"
              uuid: "getKeys_collection1"
              fixed: false
              collectionUuid: "<init>_linkedHashMap1"
              equalsMethodPresent: false
              explicitCastNeeded: false
          values: []
        valueType: "java.util.List"
        uuid: "getKeys_arrayList1"
        fixed: false
        equalsMethodPresent: true
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    uuid: "cc8c439a-b662-33f9-9f35-96d83f8e34c4"
    deleted: false
    disabled: false
    ignoredBySystem: false
    prover: "DEFAULT"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
- method:
    name: "importKeys"
    returnType: "int"
    signature: "importKeys(org.bitcoinj.crypto.ECKey[]) : int"
    instructionFingerprint: "612398AE80B1AB0C8F82EAC48E61E102"
    parametersTypes:
    - "org.bitcoinj.crypto.ECKey[]"
  paths:
  - pathId: "path1"
    pathIdForUser: "path1"
    testPathName: "importKeysTest"
    nameDefinedByUser: false
    constructorSignature: "<init>(org.bitcoinj.crypto.KeyCrypter) : void"
    priorityDefinedByUser: false
    filledByUser: false
    priority: "LOW"
    modelFingerprint: "D8ABEDE2D20146E81FA6C3D56F071614"
    problemWasSolvedByProver: true
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "35099553EB48D2AEC42E2A9279A21C51"
      index: 1
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "OBJECT"
        content: !<new>
          target: "org.bitcoinj.wallet.BasicKeyChain"
          parameters:
          - name: "crypter"
            value:
              sapientType: "MOCK"
              valueType: "org.bitcoinj.crypto.KeyCrypter"
              uuid: "<init>_keyCrypter1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: false
        suggestedContent: !<new>
          target: "org.bitcoinj.wallet.BasicKeyChain"
          parameters:
          - name: "crypter"
            value:
              sapientType: "UNKNOWN"
              valueType: "org.bitcoinj.crypto.KeyCrypter"
              uuid: "<init>_keyCrypter1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: false
        valueType: "org.bitcoinj.wallet.BasicKeyChain"
        uuid: "target"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    - type: "INPUT"
      name: "keys"
      modelFingerprint: "C3DC5E368A3163F30734824E9BCBE147"
      index: 2
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "ARRAY"
        content: !<array>
          values: {}
        suggestedContent: !<array>
          values: {}
        valueType: "org.bitcoinj.crypto.ECKey[]"
        uuid: "importKeys_eCKey[]1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    - type: "STATIC"
      name: "Threading"
      modelFingerprint: "931BDCE1DF6454A48EA195CE5432B664"
      index: 3
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "REAL"
        valueType: "org.bitcoinj.utils.Threading"
        uuid: "org.bitcoinj.utils.Threading"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "org.bitcoinj.utils.Threading"
        name: "lock"
        parameters:
        - name: "clazz"
          value:
            sapientType: "CLASS"
            content: !<regular>
              value: "org.bitcoinj.wallet.BasicKeyChain"
            valueType: "java.lang.Class"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "lock(Class): ReentrantLock"
        returnValue:
          sapientType: "OBJECT"
          content: !<static_method_return>
            target: "org.bitcoinj.utils.Threading"
            method: "lock"
            methodParameters:
            - value:
                sapientType: "CLASS"
                content: !<regular>
                  value: "org.bitcoinj.wallet.BasicKeyChain"
                valueType: "java.lang.Class"
                fixed: true
                equalsMethodPresent: false
                explicitCastNeeded: false
          suggestedContent: !<static_method_return>
            target: "org.bitcoinj.utils.Threading"
            method: "lock"
            methodParameters:
            - value:
                sapientType: "CLASS"
                content: !<regular>
                  value: "org.bitcoinj.wallet.BasicKeyChain"
                valueType: "java.lang.Class"
                fixed: true
                equalsMethodPresent: false
                explicitCastNeeded: false
          valueType: "java.util.concurrent.locks.ReentrantLock"
          uuid: "<init>_reentrantLock1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 9
      staticReadMethodForField: false
      filledByUser: false
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "6BB06717549332520CD1875A600D6EE9"
      index: 4
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      methodExercised:
        target: "target"
        name: "importKeys"
        parameters:
        - name: "keys"
          value:
            sapientType: "COLLECTION"
            content: !<collection>
              parameters: []
              values: []
            suggestedContent: !<collection>
              parameters: []
              values: []
            valueType: "java.util.List"
            uuid: "importKeys_list2"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "importKeys(List): int"
        returnValue:
          sapientType: "BASIC"
          content: !<regular>
            value: 0
          valueType: "int"
          uuid: "importKeys_int1"
          fixed: false
          equalsMethodPresent: true
          explicitCastNeeded: false
        access: 1
      staticReadMethodForField: false
      filledByUser: false
    - type: "RESULT"
      name: "result"
      modelFingerprint: "ACBCF6744C1A4F89BFBA83521C7CE3BD"
      index: 5
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "BASIC"
        content: !<regular>
          value: 0
        valueType: "int"
        uuid: "importKeys_int1"
        fixed: false
        equalsMethodPresent: true
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    uuid: "3e4f80e0-78f4-3998-b2c2-bf3e665bc4b6"
    deleted: false
    disabled: false
    ignoredBySystem: false
    prover: "DEFAULT"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
- method:
    name: "importKeys"
    returnType: "int"
    signature: "importKeys(java.util.List<? extends org.bitcoinj.crypto.ECKey>) :\
      \ int"
    instructionFingerprint: "9B0F78C03AB22B863EE77D5A4422582F"
    parametersTypes:
    - "java.util.List"
  paths:
  - pathId: "path1"
    pathIdForUser: "path1"
    testPathName: "importKeys1WhenKeyIsEncryptedThrowsKeyCrypterException"
    nameDefinedByUser: false
    constructorSignature: "<init>(org.bitcoinj.crypto.KeyCrypter) : void"
    priorityDefinedByUser: false
    filledByUser: false
    priority: "LOW"
    modelFingerprint: "6A34F2421384BC015BC442EEA8E4DC8E"
    problemWasSolvedByProver: true
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "AC70298FA93F6048125F94F6464F3643"
      index: 1
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "OBJECT"
        content: !<new>
          target: "org.bitcoinj.wallet.BasicKeyChain"
          parameters:
          - name: "crypter"
            value:
              sapientType: "NULL"
              valueType: "org.bitcoinj.crypto.KeyCrypter"
              uuid: "<init>_keyCrypter1"
              fixed: true
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: false
        suggestedContent: !<new>
          target: "org.bitcoinj.wallet.BasicKeyChain"
          parameters:
          - name: "crypter"
            value:
              sapientType: "NULL"
              valueType: "org.bitcoinj.crypto.KeyCrypter"
              uuid: "<init>_keyCrypter1"
              fixed: true
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: false
        valueType: "org.bitcoinj.wallet.BasicKeyChain"
        uuid: "target"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    - type: "INPUT"
      name: "keys"
      modelFingerprint: "199E5F6370CC28AADD0C78F98EF383B5"
      index: 2
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "COLLECTION"
        content: !<collection>
          collectionClass: "java.util.ArrayList"
          parameters: []
          values:
          - sapientType: "MOCK"
            suggestedContent: !<unknown_object>
              target: "org.bitcoinj.crypto.ECKey"
              onlyPojoFunctions: false
              builderPattern: false
            valueType: "org.bitcoinj.crypto.ECKey"
            uuid: "importKeys_object1"
            fixed: false
            collectionUuid: "importKeys_list1"
            equalsMethodPresent: false
            explicitCastNeeded: false
        suggestedContent: !<collection>
          collectionClass: "java.util.ArrayList"
          parameters: []
          values:
          - sapientType: "MOCK"
            suggestedContent: !<unknown_object>
              target: "org.bitcoinj.crypto.ECKey"
              onlyPojoFunctions: false
              builderPattern: false
            valueType: "org.bitcoinj.crypto.ECKey"
            uuid: "importKeys_object1"
            fixed: false
            collectionUuid: "importKeys_list1"
            equalsMethodPresent: false
            explicitCastNeeded: false
        valueType: "java.util.List"
        genericValueType: "? extends org.bitcoinj.crypto.ECKey"
        uuid: "importKeys_list1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    - type: "STATIC"
      name: "Threading"
      modelFingerprint: "931BDCE1DF6454A48EA195CE5432B664"
      index: 3
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "REAL"
        valueType: "org.bitcoinj.utils.Threading"
        uuid: "org.bitcoinj.utils.Threading"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "org.bitcoinj.utils.Threading"
        name: "lock"
        parameters:
        - name: "clazz"
          value:
            sapientType: "CLASS"
            content: !<regular>
              value: "org.bitcoinj.wallet.BasicKeyChain"
            valueType: "java.lang.Class"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "lock(Class): ReentrantLock"
        returnValue:
          sapientType: "OBJECT"
          content: !<static_method_return>
            target: "org.bitcoinj.utils.Threading"
            method: "lock"
            methodParameters:
            - value:
                sapientType: "CLASS"
                content: !<regular>
                  value: "org.bitcoinj.wallet.BasicKeyChain"
                valueType: "java.lang.Class"
                fixed: true
                equalsMethodPresent: false
                explicitCastNeeded: false
          suggestedContent: !<static_method_return>
            target: "org.bitcoinj.utils.Threading"
            method: "lock"
            methodParameters:
            - value:
                sapientType: "CLASS"
                content: !<regular>
                  value: "org.bitcoinj.wallet.BasicKeyChain"
                valueType: "java.lang.Class"
                fixed: true
                equalsMethodPresent: false
                explicitCastNeeded: false
          valueType: "java.util.concurrent.locks.ReentrantLock"
          uuid: "<init>_reentrantLock1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 9
      staticReadMethodForField: false
      filledByUser: false
    - type: "LOCAL_VARIABLE"
      name: "key"
      modelFingerprint: "610E8DB7B91193C0CE2593494B7F9AB5"
      index: 4
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        suggestedContent: !<unknown_object>
          target: "org.bitcoinj.crypto.ECKey"
          onlyPojoFunctions: false
          builderPattern: false
        valueType: "org.bitcoinj.crypto.ECKey"
        uuid: "importKeys_object1"
        fixed: false
        collectionUuid: "importKeys_list1"
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "key"
        name: "isEncrypted"
        parameters: []
        signature: "isEncrypted(): boolean"
        returnValue:
          sapientType: "BASIC"
          content: !<regular>
            value: true
          suggestedContent: !<regular>
            value: true
          valueType: "boolean"
          uuid: "checkKeyEncryptionStateMatches_boolean1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 1
      staticReadMethodForField: false
      filledByUser: false
    - type: "RESULT"
      name: "result"
      modelFingerprint: "E4BB238DA9F58E7767D759F8B6D4B53A"
      index: 5
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "EXCEPTION"
        content: !<new>
          target: "org.bitcoinj.crypto.KeyCrypterException"
          parameters:
          - name: "message"
            value:
              sapientType: "BASIC"
              content: !<regular>
                value: "Key is encrypted but chain is not"
              valueType: "java.lang.String"
              fixed: true
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: true
        suggestedContent: !<new>
          target: "org.bitcoinj.crypto.KeyCrypterException"
          parameters:
          - name: "message"
            value:
              sapientType: "BASIC"
              content: !<regular>
                value: "Key is encrypted but chain is not"
              valueType: "java.lang.String"
              fixed: true
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: true
        valueType: "org.bitcoinj.crypto.KeyCrypterException"
        uuid: "checkKeyEncryptionStateMatches_keyCrypterException1"
        fixed: true
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    uuid: "9c16092d-1bdb-30f4-9dd4-f705c844ea84"
    deleted: false
    disabled: false
    ignoredBySystem: false
    prover: "DEFAULT"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
  - pathId: "path9"
    pathIdForUser: "path2"
    testPathName: "importKeys1WhenActuallyAddedSizeNotGreaterThan0"
    nameDefinedByUser: false
    constructorSignature: "<init>(org.bitcoinj.crypto.KeyCrypter) : void"
    priorityDefinedByUser: false
    filledByUser: false
    priority: "LOW"
    modelFingerprint: "C56708C9C2693BB70D632CAC05FEED3C"
    problemWasSolvedByProver: true
    truncated: true
    inputParameters: []
    uuid: "a6256186-c500-302d-aa70-9c6eb7d6b714"
    deleted: true
    disabled: false
    ignoredBySystem: true
    prover: "DEFAULT"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
  - pathId: "path4"
    pathIdForUser: "path3"
    testPathName: "importKeys1WhenKeyNotIsEncryptedThrowsKeyCrypterException"
    nameDefinedByUser: false
    constructorSignature: "<init>(org.bitcoinj.crypto.KeyCrypter) : void"
    priorityDefinedByUser: false
    filledByUser: false
    priority: "LOW"
    modelFingerprint: "11F1354D7C36E8019718B9E5A3780ADD"
    problemWasSolvedByProver: true
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "35099553EB48D2AEC42E2A9279A21C51"
      index: 1
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "OBJECT"
        content: !<new>
          target: "org.bitcoinj.wallet.BasicKeyChain"
          parameters:
          - name: "crypter"
            value:
              sapientType: "MOCK"
              valueType: "org.bitcoinj.crypto.KeyCrypter"
              uuid: "<init>_keyCrypter1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: false
        suggestedContent: !<new>
          target: "org.bitcoinj.wallet.BasicKeyChain"
          parameters:
          - name: "crypter"
            value:
              sapientType: "UNKNOWN"
              valueType: "org.bitcoinj.crypto.KeyCrypter"
              uuid: "<init>_keyCrypter1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: false
        valueType: "org.bitcoinj.wallet.BasicKeyChain"
        uuid: "target"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    - type: "INPUT"
      name: "keys"
      modelFingerprint: "199E5F6370CC28AADD0C78F98EF383B5"
      index: 2
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "COLLECTION"
        content: !<collection>
          collectionClass: "java.util.ArrayList"
          parameters: []
          values:
          - sapientType: "MOCK"
            suggestedContent: !<unknown_object>
              target: "org.bitcoinj.crypto.ECKey"
              onlyPojoFunctions: false
              builderPattern: false
            valueType: "org.bitcoinj.crypto.ECKey"
            uuid: "importKeys_object1"
            fixed: false
            collectionUuid: "importKeys_list1"
            equalsMethodPresent: false
            explicitCastNeeded: false
        suggestedContent: !<collection>
          collectionClass: "java.util.ArrayList"
          parameters: []
          values:
          - sapientType: "MOCK"
            suggestedContent: !<unknown_object>
              target: "org.bitcoinj.crypto.ECKey"
              onlyPojoFunctions: false
              builderPattern: false
            valueType: "org.bitcoinj.crypto.ECKey"
            uuid: "importKeys_object1"
            fixed: false
            collectionUuid: "importKeys_list1"
            equalsMethodPresent: false
            explicitCastNeeded: false
        valueType: "java.util.List"
        genericValueType: "? extends org.bitcoinj.crypto.ECKey"
        uuid: "importKeys_list1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    - type: "STATIC"
      name: "Threading"
      modelFingerprint: "931BDCE1DF6454A48EA195CE5432B664"
      index: 3
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "REAL"
        valueType: "org.bitcoinj.utils.Threading"
        uuid: "org.bitcoinj.utils.Threading"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "org.bitcoinj.utils.Threading"
        name: "lock"
        parameters:
        - name: "clazz"
          value:
            sapientType: "CLASS"
            content: !<regular>
              value: "org.bitcoinj.wallet.BasicKeyChain"
            valueType: "java.lang.Class"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "lock(Class): ReentrantLock"
        returnValue:
          sapientType: "OBJECT"
          content: !<static_method_return>
            target: "org.bitcoinj.utils.Threading"
            method: "lock"
            methodParameters:
            - value:
                sapientType: "CLASS"
                content: !<regular>
                  value: "org.bitcoinj.wallet.BasicKeyChain"
                valueType: "java.lang.Class"
                fixed: true
                equalsMethodPresent: false
                explicitCastNeeded: false
          suggestedContent: !<static_method_return>
            target: "org.bitcoinj.utils.Threading"
            method: "lock"
            methodParameters:
            - value:
                sapientType: "CLASS"
                content: !<regular>
                  value: "org.bitcoinj.wallet.BasicKeyChain"
                valueType: "java.lang.Class"
                fixed: true
                equalsMethodPresent: false
                explicitCastNeeded: false
          valueType: "java.util.concurrent.locks.ReentrantLock"
          uuid: "<init>_reentrantLock1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 9
      staticReadMethodForField: false
      filledByUser: false
    - type: "LOCAL_VARIABLE"
      name: "key"
      modelFingerprint: "1D1C45787C63F8F3BC5DBD38CF4E01A5"
      index: 4
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        suggestedContent: !<unknown_object>
          target: "org.bitcoinj.crypto.ECKey"
          onlyPojoFunctions: false
          builderPattern: false
        valueType: "org.bitcoinj.crypto.ECKey"
        uuid: "importKeys_object1"
        fixed: false
        collectionUuid: "importKeys_list1"
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "key"
        name: "isEncrypted"
        parameters: []
        signature: "isEncrypted(): boolean"
        returnValue:
          sapientType: "BASIC"
          content: !<regular>
            value: false
          suggestedContent: !<regular>
            value: false
          valueType: "boolean"
          uuid: "checkKeyEncryptionStateMatches_boolean1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 1
      staticReadMethodForField: false
      filledByUser: false
    - type: "RESULT"
      name: "result"
      modelFingerprint: "3686C3B93B681249C8B0AE2C12EC9D77"
      index: 5
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "EXCEPTION"
        content: !<new>
          target: "org.bitcoinj.crypto.KeyCrypterException"
          parameters:
          - name: "message"
            value:
              sapientType: "BASIC"
              content: !<regular>
                value: "Key is not encrypted but chain is"
              valueType: "java.lang.String"
              fixed: true
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: true
        suggestedContent: !<new>
          target: "org.bitcoinj.crypto.KeyCrypterException"
          parameters:
          - name: "message"
            value:
              sapientType: "BASIC"
              content: !<regular>
                value: "Key is not encrypted but chain is"
              valueType: "java.lang.String"
              fixed: true
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: true
        valueType: "org.bitcoinj.crypto.KeyCrypterException"
        uuid: "checkKeyEncryptionStateMatches_keyCrypterException1"
        fixed: true
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    uuid: "9b885d56-7164-33c1-9974-e0be328a75bc"
    deleted: false
    disabled: false
    ignoredBySystem: false
    prover: "DEFAULT"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
  - pathId: "path8"
    pathIdForUser: "path4"
    testPathName: "importKeys1WhenActuallyAddedSizeGreaterThan0ThrowsIllegalStateException"
    nameDefinedByUser: false
    constructorSignature: "<init>(org.bitcoinj.crypto.KeyCrypter) : void"
    priorityDefinedByUser: false
    filledByUser: false
    priority: "LOW"
    modelFingerprint: "AB3AFD04F5AE09A21F553AF39A2F51C3"
    problemWasSolvedByProver: false
    truncated: true
    inputParameters: []
    uuid: "af17af29-63ce-3244-8362-e31013e5be8d"
    deleted: true
    disabled: false
    ignoredBySystem: true
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
  - pathId: "path3"
    pathIdForUser: "path5"
    testPathName: "importKeys1WhenKeysIsEmptyAndActuallyAddedSizeNotGreaterThan0"
    nameDefinedByUser: false
    constructorSignature: "<init>(org.bitcoinj.crypto.KeyCrypter) : void"
    priorityDefinedByUser: false
    filledByUser: false
    priority: "LOW"
    modelFingerprint: "5F8267FDDB671938A710A452E17D611A"
    problemWasSolvedByProver: false
    truncated: true
    inputParameters: []
    uuid: "a510a511-9348-3911-afa9-7f679a2dd542"
    deleted: true
    disabled: false
    ignoredBySystem: true
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
  - pathId: "path5"
    pathIdForUser: "path6"
    testPathName: "importKeys1WhenKeyGetKeyCrypterNotEqualsKeyCrypterThrowsKeyCrypterException"
    nameDefinedByUser: false
    constructorSignature: "<init>(org.bitcoinj.crypto.KeyCrypter) : void"
    priorityDefinedByUser: false
    filledByUser: false
    priority: "LOW"
    modelFingerprint: "AE08E2BD0F80F4A603E2EF042F15E8E4"
    problemWasSolvedByProver: false
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "35099553EB48D2AEC42E2A9279A21C51"
      index: 1
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "OBJECT"
        content: !<new>
          target: "org.bitcoinj.wallet.BasicKeyChain"
          parameters:
          - name: "crypter"
            value:
              sapientType: "MOCK"
              valueType: "org.bitcoinj.crypto.KeyCrypter"
              uuid: "<init>_keyCrypter1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: false
        suggestedContent: !<new>
          target: "org.bitcoinj.wallet.BasicKeyChain"
          parameters:
          - name: "crypter"
            value:
              sapientType: "UNKNOWN"
              valueType: "org.bitcoinj.crypto.KeyCrypter"
              uuid: "<init>_keyCrypter1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: false
        valueType: "org.bitcoinj.wallet.BasicKeyChain"
        uuid: "target"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    - type: "INPUT"
      name: "keys"
      modelFingerprint: "199E5F6370CC28AADD0C78F98EF383B5"
      index: 2
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "COLLECTION"
        content: !<collection>
          collectionClass: "java.util.ArrayList"
          parameters: []
          values:
          - sapientType: "MOCK"
            suggestedContent: !<unknown_object>
              target: "org.bitcoinj.crypto.ECKey"
              onlyPojoFunctions: false
              builderPattern: false
            valueType: "org.bitcoinj.crypto.ECKey"
            uuid: "importKeys_object1"
            fixed: false
            collectionUuid: "importKeys_list1"
            equalsMethodPresent: false
            explicitCastNeeded: false
        suggestedContent: !<collection>
          collectionClass: "java.util.ArrayList"
          parameters: []
          values:
          - sapientType: "MOCK"
            suggestedContent: !<unknown_object>
              target: "org.bitcoinj.crypto.ECKey"
              onlyPojoFunctions: false
              builderPattern: false
            valueType: "org.bitcoinj.crypto.ECKey"
            uuid: "importKeys_object1"
            fixed: false
            collectionUuid: "importKeys_list1"
            equalsMethodPresent: false
            explicitCastNeeded: false
        valueType: "java.util.List"
        genericValueType: "? extends org.bitcoinj.crypto.ECKey"
        uuid: "importKeys_list1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    - type: "STATIC"
      name: "Threading"
      modelFingerprint: "931BDCE1DF6454A48EA195CE5432B664"
      index: 3
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "REAL"
        valueType: "org.bitcoinj.utils.Threading"
        uuid: "org.bitcoinj.utils.Threading"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "org.bitcoinj.utils.Threading"
        name: "lock"
        parameters:
        - name: "clazz"
          value:
            sapientType: "CLASS"
            content: !<regular>
              value: "org.bitcoinj.wallet.BasicKeyChain"
            valueType: "java.lang.Class"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "lock(Class): ReentrantLock"
        returnValue:
          sapientType: "OBJECT"
          content: !<static_method_return>
            target: "org.bitcoinj.utils.Threading"
            method: "lock"
            methodParameters:
            - value:
                sapientType: "CLASS"
                content: !<regular>
                  value: "org.bitcoinj.wallet.BasicKeyChain"
                valueType: "java.lang.Class"
                fixed: true
                equalsMethodPresent: false
                explicitCastNeeded: false
          suggestedContent: !<static_method_return>
            target: "org.bitcoinj.utils.Threading"
            method: "lock"
            methodParameters:
            - value:
                sapientType: "CLASS"
                content: !<regular>
                  value: "org.bitcoinj.wallet.BasicKeyChain"
                valueType: "java.lang.Class"
                fixed: true
                equalsMethodPresent: false
                explicitCastNeeded: false
          valueType: "java.util.concurrent.locks.ReentrantLock"
          uuid: "<init>_reentrantLock1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 9
      staticReadMethodForField: false
      filledByUser: false
    - type: "LOCAL_VARIABLE"
      name: "key"
      modelFingerprint: "610E8DB7B91193C0CE2593494B7F9AB5"
      index: 4
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        suggestedContent: !<unknown_object>
          target: "org.bitcoinj.crypto.ECKey"
          onlyPojoFunctions: false
          builderPattern: false
        valueType: "org.bitcoinj.crypto.ECKey"
        uuid: "importKeys_object1"
        fixed: false
        collectionUuid: "importKeys_list1"
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "key"
        name: "isEncrypted"
        parameters: []
        signature: "isEncrypted(): boolean"
        returnValue:
          sapientType: "BASIC"
          content: !<regular>
            value: true
          suggestedContent: !<regular>
            value: true
          valueType: "boolean"
          uuid: "checkKeyEncryptionStateMatches_boolean1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 1
      staticReadMethodForField: false
      filledByUser: false
    - type: "LOCAL_VARIABLE"
      name: "key"
      modelFingerprint: "16CA7834E981C659F91490E3E9EE49CE"
      index: 5
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        suggestedContent: !<unknown_object>
          target: "org.bitcoinj.crypto.ECKey"
          onlyPojoFunctions: false
          builderPattern: false
        valueType: "org.bitcoinj.crypto.ECKey"
        uuid: "importKeys_object1"
        fixed: false
        collectionUuid: "importKeys_list1"
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "key"
        name: "getKeyCrypter"
        parameters: []
        signature: "getKeyCrypter(): KeyCrypter"
        returnValue:
          sapientType: "MOCK"
          valueType: "org.bitcoinj.crypto.KeyCrypter"
          uuid: "checkKeyEncryptionStateMatches_keyCrypter1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 1
      staticReadMethodForField: false
      filledByUser: false
    - type: "LOCAL_VARIABLE"
      name: "key"
      modelFingerprint: "94A7FD921B53D572F1ADFE35C8FB6188"
      index: 6
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        suggestedContent: !<unknown_object>
          target: "org.bitcoinj.crypto.ECKey"
          onlyPojoFunctions: false
          builderPattern: false
        valueType: "org.bitcoinj.crypto.ECKey"
        uuid: "importKeys_object1"
        fixed: false
        collectionUuid: "importKeys_list1"
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "key"
        name: "getKeyCrypter"
        parameters: []
        signature: "getKeyCrypter(): KeyCrypter"
        returnValue:
          sapientType: "MOCK"
          suggestedContent: !<unknown_object>
            target: "org.bitcoinj.crypto.KeyCrypter"
            onlyPojoFunctions: false
            builderPattern: false
          valueType: "org.bitcoinj.crypto.KeyCrypter"
          uuid: "checkKeyEncryptionStateMatches_keyCrypter2"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 1
      staticReadMethodForField: false
      filledByUser: false
    - type: "RESULT"
      name: "result"
      modelFingerprint: "DF2970BE6D55A511C0E254AEBD95BE55"
      index: 7
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "EXCEPTION"
        content: !<new>
          target: "org.bitcoinj.crypto.KeyCrypterException"
          parameters:
          - name: "message"
            value:
              sapientType: "BASIC"
              content: !<regular>
                value: "Key encrypted under different parameters to chain"
              valueType: "java.lang.String"
              fixed: true
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: true
        suggestedContent: !<new>
          target: "org.bitcoinj.crypto.KeyCrypterException"
          parameters:
          - name: "message"
            value:
              sapientType: "BASIC"
              content: !<regular>
                value: "Key encrypted under different parameters to chain"
              valueType: "java.lang.String"
              fixed: true
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: true
        valueType: "org.bitcoinj.crypto.KeyCrypterException"
        uuid: "checkKeyEncryptionStateMatches_keyCrypterException1"
        fixed: true
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    uuid: "cc49f4c0-eb5d-33b0-a1c9-0aeeb8ad7dd5"
    deleted: false
    disabled: false
    ignoredBySystem: false
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
  - pathId: "path7"
    pathIdForUser: "path7"
    testPathName: "importKeys1WhenKeyGetKeyCrypterIsNullAndKeysIsEmptyAndActuallyAddedSizeNotGreaterThan0"
    nameDefinedByUser: false
    constructorSignature: "<init>(org.bitcoinj.crypto.KeyCrypter) : void"
    priorityDefinedByUser: false
    filledByUser: false
    priority: "LOW"
    modelFingerprint: "425A05ADB097DF5A9C769C5B1CA9D3CC"
    problemWasSolvedByProver: false
    truncated: true
    inputParameters: []
    uuid: "b716ad54-ebd4-3b7f-a1ba-91c08f2737e5"
    deleted: true
    disabled: false
    ignoredBySystem: true
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
  - pathId: "path6"
    pathIdForUser: "path8"
    testPathName: "importKeys1WhenKeyGetKeyCrypterEqualsKeyCrypterAndKeysIsEmptyAndActuallyAddedSizeNotGreaterThan0"
    nameDefinedByUser: false
    constructorSignature: "<init>(org.bitcoinj.crypto.KeyCrypter) : void"
    priorityDefinedByUser: false
    filledByUser: false
    priority: "LOW"
    modelFingerprint: "862C01AD532337DCE68FF820542F58D5"
    problemWasSolvedByProver: true
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "35099553EB48D2AEC42E2A9279A21C51"
      index: 1
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "OBJECT"
        content: !<new>
          target: "org.bitcoinj.wallet.BasicKeyChain"
          parameters:
          - name: "crypter"
            value:
              sapientType: "MOCK"
              valueType: "org.bitcoinj.crypto.KeyCrypter"
              uuid: "<init>_keyCrypter1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: false
        suggestedContent: !<new>
          target: "org.bitcoinj.wallet.BasicKeyChain"
          parameters:
          - name: "crypter"
            value:
              sapientType: "UNKNOWN"
              valueType: "org.bitcoinj.crypto.KeyCrypter"
              uuid: "<init>_keyCrypter1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: false
        valueType: "org.bitcoinj.wallet.BasicKeyChain"
        uuid: "target"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    - type: "INPUT"
      name: "keys"
      modelFingerprint: "1D7D60EC9B58E876516C2438FE9B8BD9"
      index: 2
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "COLLECTION"
        content: !<collection>
          parameters: []
          values: []
        suggestedContent: !<collection>
          parameters: []
          values: []
        valueType: "java.util.List"
        genericValueType: "? extends org.bitcoinj.crypto.ECKey"
        uuid: "importKeys_list1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    - type: "STATIC"
      name: "Threading"
      modelFingerprint: "931BDCE1DF6454A48EA195CE5432B664"
      index: 3
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "REAL"
        valueType: "org.bitcoinj.utils.Threading"
        uuid: "org.bitcoinj.utils.Threading"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "org.bitcoinj.utils.Threading"
        name: "lock"
        parameters:
        - name: "clazz"
          value:
            sapientType: "CLASS"
            content: !<regular>
              value: "org.bitcoinj.wallet.BasicKeyChain"
            valueType: "java.lang.Class"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "lock(Class): ReentrantLock"
        returnValue:
          sapientType: "OBJECT"
          content: !<static_method_return>
            target: "org.bitcoinj.utils.Threading"
            method: "lock"
            methodParameters:
            - value:
                sapientType: "CLASS"
                content: !<regular>
                  value: "org.bitcoinj.wallet.BasicKeyChain"
                valueType: "java.lang.Class"
                fixed: true
                equalsMethodPresent: false
                explicitCastNeeded: false
          suggestedContent: !<static_method_return>
            target: "org.bitcoinj.utils.Threading"
            method: "lock"
            methodParameters:
            - value:
                sapientType: "CLASS"
                content: !<regular>
                  value: "org.bitcoinj.wallet.BasicKeyChain"
                valueType: "java.lang.Class"
                fixed: true
                equalsMethodPresent: false
                explicitCastNeeded: false
          valueType: "java.util.concurrent.locks.ReentrantLock"
          uuid: "<init>_reentrantLock1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 9
      staticReadMethodForField: false
      filledByUser: false
    - type: "RESULT"
      name: "result"
      modelFingerprint: "8E4E4A3F04320A5F313F9B77CB2C7276"
      index: 4
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "BASIC"
        content: !<regular>
          value: 0
        valueType: "int"
        uuid: "importKeys_int3"
        fixed: false
        collectionUuid: "importKeys_arrayList1"
        equalsMethodPresent: true
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    uuid: "dcd34d84-29ec-38ba-b13e-8865c6ba9b3c"
    deleted: false
    disabled: false
    ignoredBySystem: false
    prover: "DEFAULT"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
  - pathId: "path2"
    pathIdForUser: "path9"
    testPathName: "importKeys1WhenPreviousKeyIsNullAndActuallyAddedSizeGreaterThan0ThrowsIllegalStateException"
    nameDefinedByUser: false
    constructorSignature: "<init>(org.bitcoinj.crypto.KeyCrypter) : void"
    priorityDefinedByUser: false
    filledByUser: false
    priority: "LOW"
    modelFingerprint: "862C01AD532337DCE68FF820542F58D5"
    problemWasSolvedByProver: true
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "35099553EB48D2AEC42E2A9279A21C51"
      index: 1
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "OBJECT"
        content: !<new>
          target: "org.bitcoinj.wallet.BasicKeyChain"
          parameters:
          - name: "crypter"
            value:
              sapientType: "MOCK"
              valueType: "org.bitcoinj.crypto.KeyCrypter"
              uuid: "<init>_keyCrypter1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: false
        suggestedContent: !<new>
          target: "org.bitcoinj.wallet.BasicKeyChain"
          parameters:
          - name: "crypter"
            value:
              sapientType: "UNKNOWN"
              valueType: "org.bitcoinj.crypto.KeyCrypter"
              uuid: "<init>_keyCrypter1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: false
        valueType: "org.bitcoinj.wallet.BasicKeyChain"
        uuid: "target"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    - type: "INPUT"
      name: "keys"
      modelFingerprint: "1D7D60EC9B58E876516C2438FE9B8BD9"
      index: 2
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "COLLECTION"
        content: !<collection>
          parameters: []
          values: []
        suggestedContent: !<collection>
          parameters: []
          values: []
        valueType: "java.util.List"
        genericValueType: "? extends org.bitcoinj.crypto.ECKey"
        uuid: "importKeys_list1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    - type: "STATIC"
      name: "Threading"
      modelFingerprint: "931BDCE1DF6454A48EA195CE5432B664"
      index: 3
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "REAL"
        valueType: "org.bitcoinj.utils.Threading"
        uuid: "org.bitcoinj.utils.Threading"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "org.bitcoinj.utils.Threading"
        name: "lock"
        parameters:
        - name: "clazz"
          value:
            sapientType: "CLASS"
            content: !<regular>
              value: "org.bitcoinj.wallet.BasicKeyChain"
            valueType: "java.lang.Class"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "lock(Class): ReentrantLock"
        returnValue:
          sapientType: "OBJECT"
          content: !<static_method_return>
            target: "org.bitcoinj.utils.Threading"
            method: "lock"
            methodParameters:
            - value:
                sapientType: "CLASS"
                content: !<regular>
                  value: "org.bitcoinj.wallet.BasicKeyChain"
                valueType: "java.lang.Class"
                fixed: true
                equalsMethodPresent: false
                explicitCastNeeded: false
          suggestedContent: !<static_method_return>
            target: "org.bitcoinj.utils.Threading"
            method: "lock"
            methodParameters:
            - value:
                sapientType: "CLASS"
                content: !<regular>
                  value: "org.bitcoinj.wallet.BasicKeyChain"
                valueType: "java.lang.Class"
                fixed: true
                equalsMethodPresent: false
                explicitCastNeeded: false
          valueType: "java.util.concurrent.locks.ReentrantLock"
          uuid: "<init>_reentrantLock1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 9
      staticReadMethodForField: false
      filledByUser: false
    - type: "RESULT"
      name: "result"
      modelFingerprint: "8E4E4A3F04320A5F313F9B77CB2C7276"
      index: 4
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "BASIC"
        content: !<regular>
          value: 0
        valueType: "int"
        uuid: "importKeys_int3"
        fixed: false
        collectionUuid: "importKeys_arrayList1"
        equalsMethodPresent: true
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    uuid: "776a82d2-14fa-3913-869b-5fd3b1919580"
    deleted: false
    disabled: false
    ignoredBySystem: false
    prover: "DEFAULT"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
- method:
    name: "importKey"
    returnType: "void"
    signature: "importKey(org.bitcoinj.crypto.ECKey) : void"
    instructionFingerprint: "3A4CFBF372EEAFA89CC7A723D029A9D1"
    parametersTypes:
    - "org.bitcoinj.crypto.ECKey"
  paths:
  - pathId: "path1"
    pathIdForUser: "path1"
    testPathName: "importKeyWhenKeyIsEncryptedThrowsKeyCrypterException"
    nameDefinedByUser: false
    constructorSignature: "<init>(org.bitcoinj.crypto.KeyCrypter) : void"
    priorityDefinedByUser: false
    filledByUser: false
    priority: "LOW"
    modelFingerprint: "9A2766E2DC96C2E90DC2592861580E13"
    problemWasSolvedByProver: true
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "AC70298FA93F6048125F94F6464F3643"
      index: 1
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "OBJECT"
        content: !<new>
          target: "org.bitcoinj.wallet.BasicKeyChain"
          parameters:
          - name: "crypter"
            value:
              sapientType: "NULL"
              valueType: "org.bitcoinj.crypto.KeyCrypter"
              uuid: "<init>_keyCrypter1"
              fixed: true
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: false
        suggestedContent: !<new>
          target: "org.bitcoinj.wallet.BasicKeyChain"
          parameters:
          - name: "crypter"
            value:
              sapientType: "NULL"
              valueType: "org.bitcoinj.crypto.KeyCrypter"
              uuid: "<init>_keyCrypter1"
              fixed: true
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: false
        valueType: "org.bitcoinj.wallet.BasicKeyChain"
        uuid: "target"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    - type: "INPUT"
      name: "key"
      modelFingerprint: "C1A18A41926BD71E225A702884E0335F"
      index: 2
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        suggestedContent: !<unknown_object>
          target: "org.bitcoinj.crypto.ECKey"
          onlyPojoFunctions: false
          builderPattern: false
        valueType: "org.bitcoinj.crypto.ECKey"
        uuid: "importKey_eCKey1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    - type: "STATIC"
      name: "Threading"
      modelFingerprint: "931BDCE1DF6454A48EA195CE5432B664"
      index: 3
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "REAL"
        valueType: "org.bitcoinj.utils.Threading"
        uuid: "org.bitcoinj.utils.Threading"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "org.bitcoinj.utils.Threading"
        name: "lock"
        parameters:
        - name: "clazz"
          value:
            sapientType: "CLASS"
            content: !<regular>
              value: "org.bitcoinj.wallet.BasicKeyChain"
            valueType: "java.lang.Class"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "lock(Class): ReentrantLock"
        returnValue:
          sapientType: "OBJECT"
          content: !<static_method_return>
            target: "org.bitcoinj.utils.Threading"
            method: "lock"
            methodParameters:
            - value:
                sapientType: "CLASS"
                content: !<regular>
                  value: "org.bitcoinj.wallet.BasicKeyChain"
                valueType: "java.lang.Class"
                fixed: true
                equalsMethodPresent: false
                explicitCastNeeded: false
          suggestedContent: !<static_method_return>
            target: "org.bitcoinj.utils.Threading"
            method: "lock"
            methodParameters:
            - value:
                sapientType: "CLASS"
                content: !<regular>
                  value: "org.bitcoinj.wallet.BasicKeyChain"
                valueType: "java.lang.Class"
                fixed: true
                equalsMethodPresent: false
                explicitCastNeeded: false
          valueType: "java.util.concurrent.locks.ReentrantLock"
          uuid: "<init>_reentrantLock1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 9
      staticReadMethodForField: false
      filledByUser: false
    - type: "LOCAL_VARIABLE"
      name: "key"
      modelFingerprint: "610E8DB7B91193C0CE2593494B7F9AB5"
      index: 4
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        suggestedContent: !<unknown_object>
          target: "org.bitcoinj.crypto.ECKey"
          onlyPojoFunctions: false
          builderPattern: false
        valueType: "org.bitcoinj.crypto.ECKey"
        uuid: "importKey_eCKey1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "key"
        name: "isEncrypted"
        parameters: []
        signature: "isEncrypted(): boolean"
        returnValue:
          sapientType: "BASIC"
          content: !<regular>
            value: true
          suggestedContent: !<regular>
            value: true
          valueType: "boolean"
          uuid: "checkKeyEncryptionStateMatches_boolean1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 1
      staticReadMethodForField: false
      filledByUser: false
    - type: "RESULT"
      name: "result"
      modelFingerprint: "E4BB238DA9F58E7767D759F8B6D4B53A"
      index: 5
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "EXCEPTION"
        content: !<new>
          target: "org.bitcoinj.crypto.KeyCrypterException"
          parameters:
          - name: "message"
            value:
              sapientType: "BASIC"
              content: !<regular>
                value: "Key is encrypted but chain is not"
              valueType: "java.lang.String"
              fixed: true
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: true
        suggestedContent: !<new>
          target: "org.bitcoinj.crypto.KeyCrypterException"
          parameters:
          - name: "message"
            value:
              sapientType: "BASIC"
              content: !<regular>
                value: "Key is encrypted but chain is not"
              valueType: "java.lang.String"
              fixed: true
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: true
        valueType: "org.bitcoinj.crypto.KeyCrypterException"
        uuid: "checkKeyEncryptionStateMatches_keyCrypterException1"
        fixed: true
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    uuid: "6226c405-f308-3af3-acd5-15b1f8649e8a"
    deleted: false
    disabled: false
    ignoredBySystem: false
    prover: "DEFAULT"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
  - pathId: "path4"
    pathIdForUser: "path2"
    testPathName: "importKeyWhenKeyNotIsEncryptedThrowsKeyCrypterException"
    nameDefinedByUser: false
    constructorSignature: "<init>(org.bitcoinj.crypto.KeyCrypter) : void"
    priorityDefinedByUser: false
    filledByUser: false
    priority: "LOW"
    modelFingerprint: "589B2FA7AABD2561BB06008F852D65FF"
    problemWasSolvedByProver: true
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "35099553EB48D2AEC42E2A9279A21C51"
      index: 1
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "OBJECT"
        content: !<new>
          target: "org.bitcoinj.wallet.BasicKeyChain"
          parameters:
          - name: "crypter"
            value:
              sapientType: "MOCK"
              valueType: "org.bitcoinj.crypto.KeyCrypter"
              uuid: "<init>_keyCrypter1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: false
        suggestedContent: !<new>
          target: "org.bitcoinj.wallet.BasicKeyChain"
          parameters:
          - name: "crypter"
            value:
              sapientType: "UNKNOWN"
              valueType: "org.bitcoinj.crypto.KeyCrypter"
              uuid: "<init>_keyCrypter1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: false
        valueType: "org.bitcoinj.wallet.BasicKeyChain"
        uuid: "target"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    - type: "INPUT"
      name: "key"
      modelFingerprint: "C1A18A41926BD71E225A702884E0335F"
      index: 2
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        suggestedContent: !<unknown_object>
          target: "org.bitcoinj.crypto.ECKey"
          onlyPojoFunctions: false
          builderPattern: false
        valueType: "org.bitcoinj.crypto.ECKey"
        uuid: "importKey_eCKey1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    - type: "STATIC"
      name: "Threading"
      modelFingerprint: "931BDCE1DF6454A48EA195CE5432B664"
      index: 3
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "REAL"
        valueType: "org.bitcoinj.utils.Threading"
        uuid: "org.bitcoinj.utils.Threading"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "org.bitcoinj.utils.Threading"
        name: "lock"
        parameters:
        - name: "clazz"
          value:
            sapientType: "CLASS"
            content: !<regular>
              value: "org.bitcoinj.wallet.BasicKeyChain"
            valueType: "java.lang.Class"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "lock(Class): ReentrantLock"
        returnValue:
          sapientType: "OBJECT"
          content: !<static_method_return>
            target: "org.bitcoinj.utils.Threading"
            method: "lock"
            methodParameters:
            - value:
                sapientType: "CLASS"
                content: !<regular>
                  value: "org.bitcoinj.wallet.BasicKeyChain"
                valueType: "java.lang.Class"
                fixed: true
                equalsMethodPresent: false
                explicitCastNeeded: false
          suggestedContent: !<static_method_return>
            target: "org.bitcoinj.utils.Threading"
            method: "lock"
            methodParameters:
            - value:
                sapientType: "CLASS"
                content: !<regular>
                  value: "org.bitcoinj.wallet.BasicKeyChain"
                valueType: "java.lang.Class"
                fixed: true
                equalsMethodPresent: false
                explicitCastNeeded: false
          valueType: "java.util.concurrent.locks.ReentrantLock"
          uuid: "<init>_reentrantLock1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 9
      staticReadMethodForField: false
      filledByUser: false
    - type: "LOCAL_VARIABLE"
      name: "key"
      modelFingerprint: "1D1C45787C63F8F3BC5DBD38CF4E01A5"
      index: 4
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        suggestedContent: !<unknown_object>
          target: "org.bitcoinj.crypto.ECKey"
          onlyPojoFunctions: false
          builderPattern: false
        valueType: "org.bitcoinj.crypto.ECKey"
        uuid: "importKey_eCKey1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "key"
        name: "isEncrypted"
        parameters: []
        signature: "isEncrypted(): boolean"
        returnValue:
          sapientType: "BASIC"
          content: !<regular>
            value: false
          suggestedContent: !<regular>
            value: false
          valueType: "boolean"
          uuid: "checkKeyEncryptionStateMatches_boolean1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 1
      staticReadMethodForField: false
      filledByUser: false
    - type: "RESULT"
      name: "result"
      modelFingerprint: "3686C3B93B681249C8B0AE2C12EC9D77"
      index: 5
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "EXCEPTION"
        content: !<new>
          target: "org.bitcoinj.crypto.KeyCrypterException"
          parameters:
          - name: "message"
            value:
              sapientType: "BASIC"
              content: !<regular>
                value: "Key is not encrypted but chain is"
              valueType: "java.lang.String"
              fixed: true
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: true
        suggestedContent: !<new>
          target: "org.bitcoinj.crypto.KeyCrypterException"
          parameters:
          - name: "message"
            value:
              sapientType: "BASIC"
              content: !<regular>
                value: "Key is not encrypted but chain is"
              valueType: "java.lang.String"
              fixed: true
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: true
        valueType: "org.bitcoinj.crypto.KeyCrypterException"
        uuid: "checkKeyEncryptionStateMatches_keyCrypterException1"
        fixed: true
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    uuid: "8b8091a7-bea8-38f5-8299-055174796a9a"
    deleted: false
    disabled: false
    ignoredBySystem: false
    prover: "DEFAULT"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
  - pathId: "path2"
    pathIdForUser: "path3"
    testPathName: "importKeyWhenHasKeyKey"
    nameDefinedByUser: false
    constructorSignature: "<init>(org.bitcoinj.crypto.KeyCrypter) : void"
    priorityDefinedByUser: false
    filledByUser: false
    priority: "LOW"
    modelFingerprint: "79C27B3FEEA9BD7D9F195C3CEE3F7042"
    problemWasSolvedByProver: true
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "AC70298FA93F6048125F94F6464F3643"
      index: 1
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "OBJECT"
        content: !<new>
          target: "org.bitcoinj.wallet.BasicKeyChain"
          parameters:
          - name: "crypter"
            value:
              sapientType: "NULL"
              valueType: "org.bitcoinj.crypto.KeyCrypter"
              uuid: "<init>_keyCrypter1"
              fixed: true
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: false
        suggestedContent: !<new>
          target: "org.bitcoinj.wallet.BasicKeyChain"
          parameters:
          - name: "crypter"
            value:
              sapientType: "NULL"
              valueType: "org.bitcoinj.crypto.KeyCrypter"
              uuid: "<init>_keyCrypter1"
              fixed: true
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: false
        valueType: "org.bitcoinj.wallet.BasicKeyChain"
        uuid: "target"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    - type: "INPUT"
      name: "key"
      modelFingerprint: "C1A18A41926BD71E225A702884E0335F"
      index: 2
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        suggestedContent: !<unknown_object>
          target: "org.bitcoinj.crypto.ECKey"
          onlyPojoFunctions: false
          builderPattern: false
        valueType: "org.bitcoinj.crypto.ECKey"
        uuid: "importKey_eCKey1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    - type: "STATIC"
      name: "Threading"
      modelFingerprint: "931BDCE1DF6454A48EA195CE5432B664"
      index: 3
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "REAL"
        valueType: "org.bitcoinj.utils.Threading"
        uuid: "org.bitcoinj.utils.Threading"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "org.bitcoinj.utils.Threading"
        name: "lock"
        parameters:
        - name: "clazz"
          value:
            sapientType: "CLASS"
            content: !<regular>
              value: "org.bitcoinj.wallet.BasicKeyChain"
            valueType: "java.lang.Class"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "lock(Class): ReentrantLock"
        returnValue:
          sapientType: "OBJECT"
          content: !<static_method_return>
            target: "org.bitcoinj.utils.Threading"
            method: "lock"
            methodParameters:
            - value:
                sapientType: "CLASS"
                content: !<regular>
                  value: "org.bitcoinj.wallet.BasicKeyChain"
                valueType: "java.lang.Class"
                fixed: true
                equalsMethodPresent: false
                explicitCastNeeded: false
          suggestedContent: !<static_method_return>
            target: "org.bitcoinj.utils.Threading"
            method: "lock"
            methodParameters:
            - value:
                sapientType: "CLASS"
                content: !<regular>
                  value: "org.bitcoinj.wallet.BasicKeyChain"
                valueType: "java.lang.Class"
                fixed: true
                equalsMethodPresent: false
                explicitCastNeeded: false
          valueType: "java.util.concurrent.locks.ReentrantLock"
          uuid: "<init>_reentrantLock1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 9
      staticReadMethodForField: false
      filledByUser: false
    - type: "LOCAL_VARIABLE"
      name: "key"
      modelFingerprint: "1D1C45787C63F8F3BC5DBD38CF4E01A5"
      index: 4
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        suggestedContent: !<unknown_object>
          target: "org.bitcoinj.crypto.ECKey"
          onlyPojoFunctions: false
          builderPattern: false
        valueType: "org.bitcoinj.crypto.ECKey"
        uuid: "importKey_eCKey1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "key"
        name: "isEncrypted"
        parameters: []
        signature: "isEncrypted(): boolean"
        returnValue:
          sapientType: "BASIC"
          content: !<regular>
            value: false
          suggestedContent: !<regular>
            value: false
          valueType: "boolean"
          uuid: "checkKeyEncryptionStateMatches_boolean1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 1
      staticReadMethodForField: false
      filledByUser: false
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "B99FEDAB47DE509C3844C640181E7418"
      index: 5
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      methodExercised:
        target: "target"
        name: "hasKey"
        parameters:
        - name: "key"
          value:
            sapientType: "MOCK"
            suggestedContent: !<unknown_object>
              target: "org.bitcoinj.crypto.ECKey"
              onlyPojoFunctions: false
              builderPattern: false
            valueType: "org.bitcoinj.crypto.ECKey"
            uuid: "importKey_eCKey1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "hasKey(ECKey): boolean"
        returnValue:
          sapientType: "BASIC"
          content: !<regular>
            value: true
          suggestedContent: !<regular>
            value: true
          valueType: "boolean"
          uuid: "importKey_boolean1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 1
      staticReadMethodForField: false
      filledByUser: false
    - type: "RESULT"
      name: "result"
      modelFingerprint: "68041019986276EDF5D420282D883A57"
      index: 6
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "VOID"
        fixed: true
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    uuid: "14e95dcb-c9d8-32d7-a36c-ce7c73b8d07c"
    deleted: false
    disabled: false
    ignoredBySystem: false
    prover: "DEFAULT"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
  - pathId: "path5"
    pathIdForUser: "path4"
    testPathName: "importKeyWhenKeyGetKeyCrypterNotEqualsKeyCrypterThrowsKeyCrypterException"
    nameDefinedByUser: false
    constructorSignature: "<init>(org.bitcoinj.crypto.KeyCrypter) : void"
    priorityDefinedByUser: false
    filledByUser: false
    priority: "LOW"
    modelFingerprint: "01BA4B9717F21740F63EED8AE255F637"
    problemWasSolvedByProver: false
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "35099553EB48D2AEC42E2A9279A21C51"
      index: 1
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "OBJECT"
        content: !<new>
          target: "org.bitcoinj.wallet.BasicKeyChain"
          parameters:
          - name: "crypter"
            value:
              sapientType: "MOCK"
              valueType: "org.bitcoinj.crypto.KeyCrypter"
              uuid: "<init>_keyCrypter1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: false
        suggestedContent: !<new>
          target: "org.bitcoinj.wallet.BasicKeyChain"
          parameters:
          - name: "crypter"
            value:
              sapientType: "UNKNOWN"
              valueType: "org.bitcoinj.crypto.KeyCrypter"
              uuid: "<init>_keyCrypter1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: false
        valueType: "org.bitcoinj.wallet.BasicKeyChain"
        uuid: "target"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    - type: "INPUT"
      name: "key"
      modelFingerprint: "C1A18A41926BD71E225A702884E0335F"
      index: 2
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        suggestedContent: !<unknown_object>
          target: "org.bitcoinj.crypto.ECKey"
          onlyPojoFunctions: false
          builderPattern: false
        valueType: "org.bitcoinj.crypto.ECKey"
        uuid: "importKey_eCKey1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    - type: "STATIC"
      name: "Threading"
      modelFingerprint: "931BDCE1DF6454A48EA195CE5432B664"
      index: 3
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "REAL"
        valueType: "org.bitcoinj.utils.Threading"
        uuid: "org.bitcoinj.utils.Threading"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "org.bitcoinj.utils.Threading"
        name: "lock"
        parameters:
        - name: "clazz"
          value:
            sapientType: "CLASS"
            content: !<regular>
              value: "org.bitcoinj.wallet.BasicKeyChain"
            valueType: "java.lang.Class"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "lock(Class): ReentrantLock"
        returnValue:
          sapientType: "OBJECT"
          content: !<static_method_return>
            target: "org.bitcoinj.utils.Threading"
            method: "lock"
            methodParameters:
            - value:
                sapientType: "CLASS"
                content: !<regular>
                  value: "org.bitcoinj.wallet.BasicKeyChain"
                valueType: "java.lang.Class"
                fixed: true
                equalsMethodPresent: false
                explicitCastNeeded: false
          suggestedContent: !<static_method_return>
            target: "org.bitcoinj.utils.Threading"
            method: "lock"
            methodParameters:
            - value:
                sapientType: "CLASS"
                content: !<regular>
                  value: "org.bitcoinj.wallet.BasicKeyChain"
                valueType: "java.lang.Class"
                fixed: true
                equalsMethodPresent: false
                explicitCastNeeded: false
          valueType: "java.util.concurrent.locks.ReentrantLock"
          uuid: "<init>_reentrantLock1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 9
      staticReadMethodForField: false
      filledByUser: false
    - type: "LOCAL_VARIABLE"
      name: "key"
      modelFingerprint: "610E8DB7B91193C0CE2593494B7F9AB5"
      index: 4
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        suggestedContent: !<unknown_object>
          target: "org.bitcoinj.crypto.ECKey"
          onlyPojoFunctions: false
          builderPattern: false
        valueType: "org.bitcoinj.crypto.ECKey"
        uuid: "importKey_eCKey1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "key"
        name: "isEncrypted"
        parameters: []
        signature: "isEncrypted(): boolean"
        returnValue:
          sapientType: "BASIC"
          content: !<regular>
            value: true
          suggestedContent: !<regular>
            value: true
          valueType: "boolean"
          uuid: "checkKeyEncryptionStateMatches_boolean1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 1
      staticReadMethodForField: false
      filledByUser: false
    - type: "LOCAL_VARIABLE"
      name: "key"
      modelFingerprint: "16CA7834E981C659F91490E3E9EE49CE"
      index: 5
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        suggestedContent: !<unknown_object>
          target: "org.bitcoinj.crypto.ECKey"
          onlyPojoFunctions: false
          builderPattern: false
        valueType: "org.bitcoinj.crypto.ECKey"
        uuid: "importKey_eCKey1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "key"
        name: "getKeyCrypter"
        parameters: []
        signature: "getKeyCrypter(): KeyCrypter"
        returnValue:
          sapientType: "MOCK"
          valueType: "org.bitcoinj.crypto.KeyCrypter"
          uuid: "checkKeyEncryptionStateMatches_keyCrypter1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 1
      staticReadMethodForField: false
      filledByUser: false
    - type: "LOCAL_VARIABLE"
      name: "key"
      modelFingerprint: "94A7FD921B53D572F1ADFE35C8FB6188"
      index: 6
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        suggestedContent: !<unknown_object>
          target: "org.bitcoinj.crypto.ECKey"
          onlyPojoFunctions: false
          builderPattern: false
        valueType: "org.bitcoinj.crypto.ECKey"
        uuid: "importKey_eCKey1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "key"
        name: "getKeyCrypter"
        parameters: []
        signature: "getKeyCrypter(): KeyCrypter"
        returnValue:
          sapientType: "MOCK"
          suggestedContent: !<unknown_object>
            target: "org.bitcoinj.crypto.KeyCrypter"
            onlyPojoFunctions: false
            builderPattern: false
          valueType: "org.bitcoinj.crypto.KeyCrypter"
          uuid: "checkKeyEncryptionStateMatches_keyCrypter2"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 1
      staticReadMethodForField: false
      filledByUser: false
    - type: "RESULT"
      name: "result"
      modelFingerprint: "DF2970BE6D55A511C0E254AEBD95BE55"
      index: 7
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "EXCEPTION"
        content: !<new>
          target: "org.bitcoinj.crypto.KeyCrypterException"
          parameters:
          - name: "message"
            value:
              sapientType: "BASIC"
              content: !<regular>
                value: "Key encrypted under different parameters to chain"
              valueType: "java.lang.String"
              fixed: true
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: true
        suggestedContent: !<new>
          target: "org.bitcoinj.crypto.KeyCrypterException"
          parameters:
          - name: "message"
            value:
              sapientType: "BASIC"
              content: !<regular>
                value: "Key encrypted under different parameters to chain"
              valueType: "java.lang.String"
              fixed: true
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: true
        valueType: "org.bitcoinj.crypto.KeyCrypterException"
        uuid: "checkKeyEncryptionStateMatches_keyCrypterException1"
        fixed: true
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    uuid: "0fbbb6c0-e5fc-3b42-a92f-f76272295ca1"
    deleted: false
    disabled: false
    ignoredBySystem: false
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
  - pathId: "path3"
    pathIdForUser: "path5"
    testPathName: "importKeyWhenPreviousKeyIsNullThrowsIllegalStateException"
    nameDefinedByUser: false
    constructorSignature: "<init>(org.bitcoinj.crypto.KeyCrypter) : void"
    priorityDefinedByUser: false
    filledByUser: false
    priority: "LOW"
    modelFingerprint: "26F1175D9BFCF7A3C3252335ABD50CD6"
    problemWasSolvedByProver: false
    truncated: true
    inputParameters: []
    uuid: "1dd6b4c6-04ae-383e-8147-2027eb910d35"
    deleted: true
    disabled: false
    ignoredBySystem: true
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
  - pathId: "path7"
    pathIdForUser: "path6"
    testPathName: "importKeyWhenHashToKeysIsEmptyAndPreviousKeyIsNullThrowsIllegalStateException"
    nameDefinedByUser: false
    constructorSignature: "<init>(org.bitcoinj.crypto.KeyCrypter) : void"
    priorityDefinedByUser: false
    filledByUser: false
    priority: "LOW"
    modelFingerprint: "2A331AD05C38EF5FD715902B9542451F"
    problemWasSolvedByProver: false
    truncated: true
    inputParameters: []
    uuid: "b5b6e7ca-74ac-3af1-997c-6a8b5c68ce27"
    deleted: true
    disabled: false
    ignoredBySystem: true
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
  - pathId: "path6"
    pathIdForUser: "path7"
    testPathName: "importKeyWhenHasKeyNotKeyAndHashToKeysIsEmptyAndPreviousKeyIsNullThrowsIllegalStateException"
    nameDefinedByUser: false
    constructorSignature: "<init>(org.bitcoinj.crypto.KeyCrypter) : void"
    priorityDefinedByUser: false
    filledByUser: false
    priority: "LOW"
    modelFingerprint: "232155B6B06E5589D4FAA92C6B955565"
    problemWasSolvedByProver: false
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "35099553EB48D2AEC42E2A9279A21C51"
      index: 1
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "OBJECT"
        content: !<new>
          target: "org.bitcoinj.wallet.BasicKeyChain"
          parameters:
          - name: "crypter"
            value:
              sapientType: "MOCK"
              valueType: "org.bitcoinj.crypto.KeyCrypter"
              uuid: "<init>_keyCrypter1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: false
        suggestedContent: !<new>
          target: "org.bitcoinj.wallet.BasicKeyChain"
          parameters:
          - name: "crypter"
            value:
              sapientType: "UNKNOWN"
              valueType: "org.bitcoinj.crypto.KeyCrypter"
              uuid: "<init>_keyCrypter1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: false
        valueType: "org.bitcoinj.wallet.BasicKeyChain"
        uuid: "target"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    - type: "INPUT"
      name: "key"
      modelFingerprint: "C1A18A41926BD71E225A702884E0335F"
      index: 2
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        suggestedContent: !<unknown_object>
          target: "org.bitcoinj.crypto.ECKey"
          onlyPojoFunctions: false
          builderPattern: false
        valueType: "org.bitcoinj.crypto.ECKey"
        uuid: "importKey_eCKey1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    - type: "STATIC"
      name: "Threading"
      modelFingerprint: "931BDCE1DF6454A48EA195CE5432B664"
      index: 3
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "REAL"
        valueType: "org.bitcoinj.utils.Threading"
        uuid: "org.bitcoinj.utils.Threading"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "org.bitcoinj.utils.Threading"
        name: "lock"
        parameters:
        - name: "clazz"
          value:
            sapientType: "CLASS"
            content: !<regular>
              value: "org.bitcoinj.wallet.BasicKeyChain"
            valueType: "java.lang.Class"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "lock(Class): ReentrantLock"
        returnValue:
          sapientType: "OBJECT"
          content: !<static_method_return>
            target: "org.bitcoinj.utils.Threading"
            method: "lock"
            methodParameters:
            - value:
                sapientType: "CLASS"
                content: !<regular>
                  value: "org.bitcoinj.wallet.BasicKeyChain"
                valueType: "java.lang.Class"
                fixed: true
                equalsMethodPresent: false
                explicitCastNeeded: false
          suggestedContent: !<static_method_return>
            target: "org.bitcoinj.utils.Threading"
            method: "lock"
            methodParameters:
            - value:
                sapientType: "CLASS"
                content: !<regular>
                  value: "org.bitcoinj.wallet.BasicKeyChain"
                valueType: "java.lang.Class"
                fixed: true
                equalsMethodPresent: false
                explicitCastNeeded: false
          valueType: "java.util.concurrent.locks.ReentrantLock"
          uuid: "<init>_reentrantLock1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 9
      staticReadMethodForField: false
      filledByUser: false
    - type: "LOCAL_VARIABLE"
      name: "key"
      modelFingerprint: "610E8DB7B91193C0CE2593494B7F9AB5"
      index: 4
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        suggestedContent: !<unknown_object>
          target: "org.bitcoinj.crypto.ECKey"
          onlyPojoFunctions: false
          builderPattern: false
        valueType: "org.bitcoinj.crypto.ECKey"
        uuid: "importKey_eCKey1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "key"
        name: "isEncrypted"
        parameters: []
        signature: "isEncrypted(): boolean"
        returnValue:
          sapientType: "BASIC"
          content: !<regular>
            value: true
          suggestedContent: !<regular>
            value: true
          valueType: "boolean"
          uuid: "checkKeyEncryptionStateMatches_boolean1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 1
      staticReadMethodForField: false
      filledByUser: false
    - type: "LOCAL_VARIABLE"
      name: "key"
      modelFingerprint: "16CA7834E981C659F91490E3E9EE49CE"
      index: 5
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        suggestedContent: !<unknown_object>
          target: "org.bitcoinj.crypto.ECKey"
          onlyPojoFunctions: false
          builderPattern: false
        valueType: "org.bitcoinj.crypto.ECKey"
        uuid: "importKey_eCKey1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "key"
        name: "getKeyCrypter"
        parameters: []
        signature: "getKeyCrypter(): KeyCrypter"
        returnValue:
          sapientType: "MOCK"
          valueType: "org.bitcoinj.crypto.KeyCrypter"
          uuid: "checkKeyEncryptionStateMatches_keyCrypter1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 1
      staticReadMethodForField: false
      filledByUser: false
    - type: "LOCAL_VARIABLE"
      name: "key"
      modelFingerprint: "94A7FD921B53D572F1ADFE35C8FB6188"
      index: 6
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        suggestedContent: !<unknown_object>
          target: "org.bitcoinj.crypto.ECKey"
          onlyPojoFunctions: false
          builderPattern: false
        valueType: "org.bitcoinj.crypto.ECKey"
        uuid: "importKey_eCKey1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "key"
        name: "getKeyCrypter"
        parameters: []
        signature: "getKeyCrypter(): KeyCrypter"
        returnValue:
          sapientType: "MOCK"
          suggestedContent: !<unknown_object>
            target: "org.bitcoinj.crypto.KeyCrypter"
            onlyPojoFunctions: false
            builderPattern: false
          valueType: "org.bitcoinj.crypto.KeyCrypter"
          uuid: "checkKeyEncryptionStateMatches_keyCrypter2"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 1
      staticReadMethodForField: false
      filledByUser: false
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "42AC741528825A46A7F2C43548629266"
      index: 7
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      methodExercised:
        target: "target"
        name: "hasKey"
        parameters:
        - name: "key"
          value:
            sapientType: "MOCK"
            suggestedContent: !<unknown_object>
              target: "org.bitcoinj.crypto.ECKey"
              onlyPojoFunctions: false
              builderPattern: false
            valueType: "org.bitcoinj.crypto.ECKey"
            uuid: "importKey_eCKey1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "hasKey(ECKey): boolean"
        returnValue:
          sapientType: "BASIC"
          content: !<regular>
            value: false
          suggestedContent: !<regular>
            value: false
          valueType: "boolean"
          uuid: "importKey_boolean1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 1
      staticReadMethodForField: false
      filledByUser: false
    - type: "LOCAL_VARIABLE"
      name: "key"
      modelFingerprint: "D50F6365A097CA852613BD95CD4F1D90"
      index: 8
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        suggestedContent: !<unknown_object>
          target: "org.bitcoinj.crypto.ECKey"
          onlyPojoFunctions: false
          builderPattern: false
        valueType: "org.bitcoinj.crypto.ECKey"
        uuid: "importKey_eCKey1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "key"
        name: "isWatching"
        parameters: []
        signature: "isWatching(): boolean"
        returnValue:
          sapientType: "BASIC"
          content: !<regular>
            value: false
          valueType: "boolean"
          uuid: "importKeyLocked_boolean2"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 1
      staticReadMethodForField: false
      filledByUser: false
    - type: "LOCAL_VARIABLE"
      name: "key"
      modelFingerprint: "E8CC71C57D5FE22B7EA34F376F4790D1"
      index: 9
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        suggestedContent: !<unknown_object>
          target: "org.bitcoinj.crypto.ECKey"
          onlyPojoFunctions: false
          builderPattern: false
        valueType: "org.bitcoinj.crypto.ECKey"
        uuid: "importKey_eCKey1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "key"
        name: "getPubKey"
        parameters: []
        signature: "getPubKey(): byte[]"
        returnValue:
          sapientType: "ARRAY"
          content: !<array>
            values: {}
          suggestedContent: !<array>
            values: {}
          valueType: "byte[]"
          uuid: "importKeyLocked_byte[]1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 1
      staticReadMethodForField: false
      filledByUser: false
    - type: "STATIC"
      name: "ByteString"
      modelFingerprint: "2684DE1377B0A6D3657E2DDFE316973F"
      index: 10
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        valueType: "com.google.protobuf.ByteString"
        uuid: "com.google.protobuf.ByteString"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "com.google.protobuf.ByteString"
        name: "copyFrom"
        parameters:
        - name: "bytes"
          value:
            sapientType: "ARRAY"
            content: !<array>
              values: {}
            suggestedContent: !<array>
              values: {}
            valueType: "byte[]"
            uuid: "importKeyLocked_byte[]1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "copyFrom(byte[]): ByteString"
        returnValue:
          sapientType: "MOCK"
          valueType: "com.google.protobuf.ByteString"
          uuid: "importKeyLocked_byteString1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 9
      staticReadMethodForField: false
      filledByUser: false
    - type: "LOCAL_VARIABLE"
      name: "key"
      modelFingerprint: "7A975842CF2A4EB984A817D751464DE2"
      index: 11
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        suggestedContent: !<unknown_object>
          target: "org.bitcoinj.crypto.ECKey"
          onlyPojoFunctions: false
          builderPattern: false
        valueType: "org.bitcoinj.crypto.ECKey"
        uuid: "importKey_eCKey1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "key"
        name: "getPubKeyHash"
        parameters: []
        signature: "getPubKeyHash(): byte[]"
        returnValue:
          sapientType: "ARRAY"
          content: !<array>
            values: {}
          suggestedContent: !<array>
            values: {}
          valueType: "byte[]"
          uuid: "importKeyLocked_byte[]2"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 1
      staticReadMethodForField: false
      filledByUser: false
    - type: "STATIC"
      name: "ByteString"
      modelFingerprint: "2684DE1377B0A6D3657E2DDFE316973F"
      index: 12
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        valueType: "com.google.protobuf.ByteString"
        uuid: "com.google.protobuf.ByteString"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "com.google.protobuf.ByteString"
        name: "copyFrom"
        parameters:
        - name: "bytes"
          value:
            sapientType: "ARRAY"
            content: !<array>
              values: {}
            suggestedContent: !<array>
              values: {}
            valueType: "byte[]"
            uuid: "importKeyLocked_byte[]2"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "copyFrom(byte[]): ByteString"
        returnValue:
          sapientType: "MOCK"
          valueType: "com.google.protobuf.ByteString"
          uuid: "importKeyLocked_byteString2"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 9
      staticReadMethodForField: false
      filledByUser: false
    - type: "STATIC"
      name: "Preconditions"
      modelFingerprint: "ACF07FFCA3E2E1576E0B7D7733EEEFF8"
      index: 13
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        valueType: "org.bitcoinj.base.internal.Preconditions"
        uuid: "org.bitcoinj.base.internal.Preconditions"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "org.bitcoinj.base.internal.Preconditions"
        name: "checkState"
        parameters:
        - name: "expression"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: true
            valueType: "boolean"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "checkState(boolean): void"
        returnValue:
          sapientType: "VOID"
          valueType: "void"
          uuid: "importKeyLocked_void1"
          fixed: true
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 9
      staticReadMethodForField: false
      filledByUser: false
    - type: "STATIC"
      name: "Preconditions"
      modelFingerprint: "8E65D47E3C0602D60B2F22B827CB011E"
      index: 14
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        valueType: "org.bitcoinj.base.internal.Preconditions"
        uuid: "org.bitcoinj.base.internal.Preconditions"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "org.bitcoinj.base.internal.Preconditions"
        name: "checkState"
        parameters:
        - name: "expression"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: false
            valueType: "boolean"
            uuid: "queueOnKeysAdded_boolean1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "checkState(boolean): void"
        returnValue:
          sapientType: "EXCEPTION"
          content: !<new>
            target: "java.lang.IllegalStateException"
            parameters: []
            privateConstructor: false
            createdByTargetCode: false
          suggestedContent: !<new>
            target: "java.lang.IllegalStateException"
            parameters: []
            privateConstructor: false
            createdByTargetCode: false
          valueType: "java.lang.IllegalStateException"
          fixed: true
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 9
      staticReadMethodForField: false
      filledByUser: false
    - type: "RESULT"
      name: "result"
      modelFingerprint: "C9C68C9339F812BC8DEC7C1D6145A135"
      index: 15
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "EXCEPTION"
        content: !<new>
          target: "java.lang.IllegalStateException"
          parameters: []
          privateConstructor: false
          createdByTargetCode: false
        suggestedContent: !<new>
          target: "java.lang.IllegalStateException"
          parameters: []
          privateConstructor: false
          createdByTargetCode: false
        valueType: "java.lang.IllegalStateException"
        fixed: true
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    uuid: "6a3a37d2-6642-3ccd-a791-ddfc4cd06bef"
    deleted: false
    disabled: true
    ignoredBySystem: false
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: true
- method:
    name: "findKeyFromPubHash"
    returnType: "org.bitcoinj.crypto.ECKey"
    signature: "findKeyFromPubHash(byte[]) : org.bitcoinj.crypto.ECKey"
    instructionFingerprint: "0CBCAC735472F165800596306C8CA4C8"
    parametersTypes:
    - "byte[]"
  paths:
  - pathId: "path1"
    pathIdForUser: "path1"
    testPathName: "findKeyFromPubHashTest"
    nameDefinedByUser: false
    constructorSignature: "<init>(org.bitcoinj.crypto.KeyCrypter) : void"
    priorityDefinedByUser: false
    filledByUser: false
    priority: "LOW"
    modelFingerprint: "1B7DC1CBE73BD1B8636EC8046C36C759"
    problemWasSolvedByProver: true
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "35099553EB48D2AEC42E2A9279A21C51"
      index: 1
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "OBJECT"
        content: !<new>
          target: "org.bitcoinj.wallet.BasicKeyChain"
          parameters:
          - name: "crypter"
            value:
              sapientType: "MOCK"
              valueType: "org.bitcoinj.crypto.KeyCrypter"
              uuid: "<init>_keyCrypter1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: false
        suggestedContent: !<new>
          target: "org.bitcoinj.wallet.BasicKeyChain"
          parameters:
          - name: "crypter"
            value:
              sapientType: "UNKNOWN"
              valueType: "org.bitcoinj.crypto.KeyCrypter"
              uuid: "<init>_keyCrypter1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: false
        valueType: "org.bitcoinj.wallet.BasicKeyChain"
        uuid: "target"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    - type: "INPUT"
      name: "pubKeyHash"
      modelFingerprint: "E93ACF48A2476635AC21AD157B987CAF"
      index: 2
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "ARRAY"
        content: !<array>
          values: {}
        suggestedContent: !<array>
          values: {}
        valueType: "byte[]"
        uuid: "findKeyFromPubHash_byte[]1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    - type: "STATIC"
      name: "Threading"
      modelFingerprint: "931BDCE1DF6454A48EA195CE5432B664"
      index: 3
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "REAL"
        valueType: "org.bitcoinj.utils.Threading"
        uuid: "org.bitcoinj.utils.Threading"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "org.bitcoinj.utils.Threading"
        name: "lock"
        parameters:
        - name: "clazz"
          value:
            sapientType: "CLASS"
            content: !<regular>
              value: "org.bitcoinj.wallet.BasicKeyChain"
            valueType: "java.lang.Class"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "lock(Class): ReentrantLock"
        returnValue:
          sapientType: "OBJECT"
          content: !<static_method_return>
            target: "org.bitcoinj.utils.Threading"
            method: "lock"
            methodParameters:
            - value:
                sapientType: "CLASS"
                content: !<regular>
                  value: "org.bitcoinj.wallet.BasicKeyChain"
                valueType: "java.lang.Class"
                fixed: true
                equalsMethodPresent: false
                explicitCastNeeded: false
          suggestedContent: !<static_method_return>
            target: "org.bitcoinj.utils.Threading"
            method: "lock"
            methodParameters:
            - value:
                sapientType: "CLASS"
                content: !<regular>
                  value: "org.bitcoinj.wallet.BasicKeyChain"
                valueType: "java.lang.Class"
                fixed: true
                equalsMethodPresent: false
                explicitCastNeeded: false
          valueType: "java.util.concurrent.locks.ReentrantLock"
          uuid: "<init>_reentrantLock1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 9
      staticReadMethodForField: false
      filledByUser: false
    - type: "STATIC"
      name: "ByteString"
      modelFingerprint: "2684DE1377B0A6D3657E2DDFE316973F"
      index: 4
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        valueType: "com.google.protobuf.ByteString"
        uuid: "com.google.protobuf.ByteString"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "com.google.protobuf.ByteString"
        name: "copyFrom"
        parameters:
        - name: "bytes"
          value:
            sapientType: "ARRAY"
            content: !<array>
              values: {}
            suggestedContent: !<array>
              values: {}
            valueType: "byte[]"
            uuid: "findKeyFromPubHash_byte[]1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "copyFrom(byte[]): ByteString"
        returnValue:
          sapientType: "MOCK"
          valueType: "com.google.protobuf.ByteString"
          uuid: "findKeyFromPubHash_byteString1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 9
      staticReadMethodForField: false
      filledByUser: false
    - type: "RESULT"
      name: "result"
      modelFingerprint: "08890B6BF3164EA84B2BFA20C164B778"
      index: 5
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "NULL"
        valueType: "org.bitcoinj.crypto.ECKey"
        uuid: "findKeyFromPubHash_eCKey1"
        fixed: false
        collectionUuid: "<init>_linkedHashMap1"
        equalsMethodPresent: true
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    uuid: "44fa91be-011c-3f0c-ba05-2ff6bddb0b80"
    deleted: false
    disabled: false
    ignoredBySystem: false
    prover: "DEFAULT"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
- method:
    name: "findKeyFromPubKey"
    returnType: "org.bitcoinj.crypto.ECKey"
    signature: "findKeyFromPubKey(byte[]) : org.bitcoinj.crypto.ECKey"
    instructionFingerprint: "EF39BA6757BDFBB54D9A89BD92F226F6"
    parametersTypes:
    - "byte[]"
  paths:
  - pathId: "path1"
    pathIdForUser: "path1"
    testPathName: "findKeyFromPubKeyTest"
    nameDefinedByUser: false
    constructorSignature: "<init>(org.bitcoinj.crypto.KeyCrypter) : void"
    priorityDefinedByUser: false
    filledByUser: false
    priority: "LOW"
    modelFingerprint: "68DB4CF61BE3518A07AA62E061F012F3"
    problemWasSolvedByProver: true
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "35099553EB48D2AEC42E2A9279A21C51"
      index: 1
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "OBJECT"
        content: !<new>
          target: "org.bitcoinj.wallet.BasicKeyChain"
          parameters:
          - name: "crypter"
            value:
              sapientType: "MOCK"
              valueType: "org.bitcoinj.crypto.KeyCrypter"
              uuid: "<init>_keyCrypter1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: false
        suggestedContent: !<new>
          target: "org.bitcoinj.wallet.BasicKeyChain"
          parameters:
          - name: "crypter"
            value:
              sapientType: "UNKNOWN"
              valueType: "org.bitcoinj.crypto.KeyCrypter"
              uuid: "<init>_keyCrypter1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: false
        valueType: "org.bitcoinj.wallet.BasicKeyChain"
        uuid: "target"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    - type: "INPUT"
      name: "pubKey"
      modelFingerprint: "4896771F3F9CB9E845DE91D546DE6AB8"
      index: 2
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "ARRAY"
        content: !<array>
          values: {}
        suggestedContent: !<array>
          values: {}
        valueType: "byte[]"
        uuid: "findKeyFromPubKey_byte[]1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    - type: "STATIC"
      name: "Threading"
      modelFingerprint: "931BDCE1DF6454A48EA195CE5432B664"
      index: 3
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "REAL"
        valueType: "org.bitcoinj.utils.Threading"
        uuid: "org.bitcoinj.utils.Threading"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "org.bitcoinj.utils.Threading"
        name: "lock"
        parameters:
        - name: "clazz"
          value:
            sapientType: "CLASS"
            content: !<regular>
              value: "org.bitcoinj.wallet.BasicKeyChain"
            valueType: "java.lang.Class"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "lock(Class): ReentrantLock"
        returnValue:
          sapientType: "OBJECT"
          content: !<static_method_return>
            target: "org.bitcoinj.utils.Threading"
            method: "lock"
            methodParameters:
            - value:
                sapientType: "CLASS"
                content: !<regular>
                  value: "org.bitcoinj.wallet.BasicKeyChain"
                valueType: "java.lang.Class"
                fixed: true
                equalsMethodPresent: false
                explicitCastNeeded: false
          suggestedContent: !<static_method_return>
            target: "org.bitcoinj.utils.Threading"
            method: "lock"
            methodParameters:
            - value:
                sapientType: "CLASS"
                content: !<regular>
                  value: "org.bitcoinj.wallet.BasicKeyChain"
                valueType: "java.lang.Class"
                fixed: true
                equalsMethodPresent: false
                explicitCastNeeded: false
          valueType: "java.util.concurrent.locks.ReentrantLock"
          uuid: "<init>_reentrantLock1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 9
      staticReadMethodForField: false
      filledByUser: false
    - type: "STATIC"
      name: "ByteString"
      modelFingerprint: "2684DE1377B0A6D3657E2DDFE316973F"
      index: 4
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        valueType: "com.google.protobuf.ByteString"
        uuid: "com.google.protobuf.ByteString"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "com.google.protobuf.ByteString"
        name: "copyFrom"
        parameters:
        - name: "bytes"
          value:
            sapientType: "ARRAY"
            content: !<array>
              values: {}
            suggestedContent: !<array>
              values: {}
            valueType: "byte[]"
            uuid: "findKeyFromPubKey_byte[]1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "copyFrom(byte[]): ByteString"
        returnValue:
          sapientType: "MOCK"
          valueType: "com.google.protobuf.ByteString"
          uuid: "findKeyFromPubKey_byteString1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 9
      staticReadMethodForField: false
      filledByUser: false
    - type: "RESULT"
      name: "result"
      modelFingerprint: "08890B6BF3164EA84B2BFA20C164B778"
      index: 5
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "NULL"
        valueType: "org.bitcoinj.crypto.ECKey"
        uuid: "findKeyFromPubKey_eCKey1"
        fixed: false
        collectionUuid: "<init>_linkedHashMap2"
        equalsMethodPresent: true
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    uuid: "f3262d68-f653-32db-9e91-cc2045869e94"
    deleted: false
    disabled: false
    ignoredBySystem: false
    prover: "DEFAULT"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
- method:
    name: "hasKey"
    returnType: "boolean"
    signature: "hasKey(org.bitcoinj.crypto.ECKey) : boolean"
    instructionFingerprint: "CBA33B7F99967A32A5244FE3D0D5F274"
    parametersTypes:
    - "org.bitcoinj.crypto.ECKey"
  paths:
  - pathId: "path1"
    pathIdForUser: "path1"
    testPathName: "hasKeyWhenFindKeyFromPubKeyKeyGetPubKeyIsNull"
    nameDefinedByUser: false
    constructorSignature: "<init>(org.bitcoinj.crypto.KeyCrypter) : void"
    priorityDefinedByUser: false
    filledByUser: false
    priority: "LOW"
    modelFingerprint: "9C18212CF020DDA0F4D81D83BEDE9207"
    problemWasSolvedByProver: true
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "35099553EB48D2AEC42E2A9279A21C51"
      index: 1
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "OBJECT"
        content: !<new>
          target: "org.bitcoinj.wallet.BasicKeyChain"
          parameters:
          - name: "crypter"
            value:
              sapientType: "MOCK"
              valueType: "org.bitcoinj.crypto.KeyCrypter"
              uuid: "<init>_keyCrypter1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: false
        suggestedContent: !<new>
          target: "org.bitcoinj.wallet.BasicKeyChain"
          parameters:
          - name: "crypter"
            value:
              sapientType: "UNKNOWN"
              valueType: "org.bitcoinj.crypto.KeyCrypter"
              uuid: "<init>_keyCrypter1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: false
        valueType: "org.bitcoinj.wallet.BasicKeyChain"
        uuid: "target"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    - type: "INPUT"
      name: "key"
      modelFingerprint: "C1A18A41926BD71E225A702884E0335F"
      index: 2
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        suggestedContent: !<unknown_object>
          target: "org.bitcoinj.crypto.ECKey"
          onlyPojoFunctions: false
          builderPattern: false
        valueType: "org.bitcoinj.crypto.ECKey"
        uuid: "hasKey_eCKey1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    - type: "STATIC"
      name: "Threading"
      modelFingerprint: "931BDCE1DF6454A48EA195CE5432B664"
      index: 3
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "REAL"
        valueType: "org.bitcoinj.utils.Threading"
        uuid: "org.bitcoinj.utils.Threading"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "org.bitcoinj.utils.Threading"
        name: "lock"
        parameters:
        - name: "clazz"
          value:
            sapientType: "CLASS"
            content: !<regular>
              value: "org.bitcoinj.wallet.BasicKeyChain"
            valueType: "java.lang.Class"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "lock(Class): ReentrantLock"
        returnValue:
          sapientType: "OBJECT"
          content: !<static_method_return>
            target: "org.bitcoinj.utils.Threading"
            method: "lock"
            methodParameters:
            - value:
                sapientType: "CLASS"
                content: !<regular>
                  value: "org.bitcoinj.wallet.BasicKeyChain"
                valueType: "java.lang.Class"
                fixed: true
                equalsMethodPresent: false
                explicitCastNeeded: false
          suggestedContent: !<static_method_return>
            target: "org.bitcoinj.utils.Threading"
            method: "lock"
            methodParameters:
            - value:
                sapientType: "CLASS"
                content: !<regular>
                  value: "org.bitcoinj.wallet.BasicKeyChain"
                valueType: "java.lang.Class"
                fixed: true
                equalsMethodPresent: false
                explicitCastNeeded: false
          valueType: "java.util.concurrent.locks.ReentrantLock"
          uuid: "<init>_reentrantLock1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 9
      staticReadMethodForField: false
      filledByUser: false
    - type: "LOCAL_VARIABLE"
      name: "key"
      modelFingerprint: "E8CC71C57D5FE22B7EA34F376F4790D1"
      index: 4
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        suggestedContent: !<unknown_object>
          target: "org.bitcoinj.crypto.ECKey"
          onlyPojoFunctions: false
          builderPattern: false
        valueType: "org.bitcoinj.crypto.ECKey"
        uuid: "hasKey_eCKey1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "key"
        name: "getPubKey"
        parameters: []
        signature: "getPubKey(): byte[]"
        returnValue:
          sapientType: "ARRAY"
          content: !<array>
            values: {}
          suggestedContent: !<array>
            values: {}
          valueType: "byte[]"
          uuid: "hasKey_byte[]1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 1
      staticReadMethodForField: false
      filledByUser: false
    - type: "STATIC"
      name: "ByteString"
      modelFingerprint: "2684DE1377B0A6D3657E2DDFE316973F"
      index: 5
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        valueType: "com.google.protobuf.ByteString"
        uuid: "com.google.protobuf.ByteString"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "com.google.protobuf.ByteString"
        name: "copyFrom"
        parameters:
        - name: "bytes"
          value:
            sapientType: "ARRAY"
            content: !<array>
              values: {}
            suggestedContent: !<array>
              values: {}
            valueType: "byte[]"
            uuid: "hasKey_byte[]1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "copyFrom(byte[]): ByteString"
        returnValue:
          sapientType: "MOCK"
          valueType: "com.google.protobuf.ByteString"
          uuid: "findKeyFromPubKey_byteString1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 9
      staticReadMethodForField: false
      filledByUser: false
    - type: "RESULT"
      name: "result"
      modelFingerprint: "3A21543F56248AC92654D6E439128AED"
      index: 6
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "BASIC"
        content: !<regular>
          value: false
        valueType: "boolean"
        fixed: true
        equalsMethodPresent: true
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    uuid: "218c8a6e-bdce-36d0-a1a9-db8aea87747a"
    deleted: false
    disabled: false
    ignoredBySystem: false
    prover: "DEFAULT"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
- method:
    name: "numKeys"
    returnType: "int"
    signature: "numKeys() : int"
    instructionFingerprint: "AA8473FB05E22EB061A793FC8F72B162"
    parametersTypes: []
  paths:
  - pathId: "path1"
    pathIdForUser: "path1"
    testPathName: "numKeysTest"
    nameDefinedByUser: false
    constructorSignature: "<init>(org.bitcoinj.crypto.KeyCrypter) : void"
    priorityDefinedByUser: false
    filledByUser: false
    priority: "LOW"
    modelFingerprint: "4E30A537D97ABA05FC590E87F0511DB5"
    problemWasSolvedByProver: true
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "35099553EB48D2AEC42E2A9279A21C51"
      index: 1
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "OBJECT"
        content: !<new>
          target: "org.bitcoinj.wallet.BasicKeyChain"
          parameters:
          - name: "crypter"
            value:
              sapientType: "MOCK"
              valueType: "org.bitcoinj.crypto.KeyCrypter"
              uuid: "<init>_keyCrypter1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: false
        suggestedContent: !<new>
          target: "org.bitcoinj.wallet.BasicKeyChain"
          parameters:
          - name: "crypter"
            value:
              sapientType: "UNKNOWN"
              valueType: "org.bitcoinj.crypto.KeyCrypter"
              uuid: "<init>_keyCrypter1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: false
        valueType: "org.bitcoinj.wallet.BasicKeyChain"
        uuid: "target"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    - type: "STATIC"
      name: "Threading"
      modelFingerprint: "931BDCE1DF6454A48EA195CE5432B664"
      index: 2
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "REAL"
        valueType: "org.bitcoinj.utils.Threading"
        uuid: "org.bitcoinj.utils.Threading"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "org.bitcoinj.utils.Threading"
        name: "lock"
        parameters:
        - name: "clazz"
          value:
            sapientType: "CLASS"
            content: !<regular>
              value: "org.bitcoinj.wallet.BasicKeyChain"
            valueType: "java.lang.Class"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "lock(Class): ReentrantLock"
        returnValue:
          sapientType: "OBJECT"
          content: !<static_method_return>
            target: "org.bitcoinj.utils.Threading"
            method: "lock"
            methodParameters:
            - value:
                sapientType: "CLASS"
                content: !<regular>
                  value: "org.bitcoinj.wallet.BasicKeyChain"
                valueType: "java.lang.Class"
                fixed: true
                equalsMethodPresent: false
                explicitCastNeeded: false
          suggestedContent: !<static_method_return>
            target: "org.bitcoinj.utils.Threading"
            method: "lock"
            methodParameters:
            - value:
                sapientType: "CLASS"
                content: !<regular>
                  value: "org.bitcoinj.wallet.BasicKeyChain"
                valueType: "java.lang.Class"
                fixed: true
                equalsMethodPresent: false
                explicitCastNeeded: false
          valueType: "java.util.concurrent.locks.ReentrantLock"
          uuid: "<init>_reentrantLock1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 9
      staticReadMethodForField: false
      filledByUser: false
    - type: "RESULT"
      name: "result"
      modelFingerprint: "8E4E4A3F04320A5F313F9B77CB2C7276"
      index: 3
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "BASIC"
        content: !<regular>
          value: 0
        valueType: "int"
        uuid: "numKeys_int1"
        fixed: false
        collectionUuid: "<init>_linkedHashMap2"
        equalsMethodPresent: true
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    uuid: "76299944-2002-360a-8bb8-28994d8ad5a4"
    deleted: false
    disabled: false
    ignoredBySystem: false
    prover: "DEFAULT"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
- method:
    name: "isWatching"
    returnType: "org.bitcoinj.wallet.BasicKeyChain$State"
    signature: "isWatching() : org.bitcoinj.wallet.BasicKeyChain$State"
    instructionFingerprint: "DF10B74BB8E18FA6D2C1737956E39949"
    parametersTypes: []
  paths:
  - pathId: "path1"
    pathIdForUser: "path1"
    testPathName: "isWatchingWhenHashToKeysIsEmpty"
    nameDefinedByUser: false
    constructorSignature: "<init>(org.bitcoinj.crypto.KeyCrypter) : void"
    priorityDefinedByUser: false
    filledByUser: false
    priority: "LOW"
    modelFingerprint: "6986A6DE399DCA2EE07D3FF3A7D2ACF2"
    problemWasSolvedByProver: true
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "35099553EB48D2AEC42E2A9279A21C51"
      index: 1
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "OBJECT"
        content: !<new>
          target: "org.bitcoinj.wallet.BasicKeyChain"
          parameters:
          - name: "crypter"
            value:
              sapientType: "MOCK"
              valueType: "org.bitcoinj.crypto.KeyCrypter"
              uuid: "<init>_keyCrypter1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: false
        suggestedContent: !<new>
          target: "org.bitcoinj.wallet.BasicKeyChain"
          parameters:
          - name: "crypter"
            value:
              sapientType: "UNKNOWN"
              valueType: "org.bitcoinj.crypto.KeyCrypter"
              uuid: "<init>_keyCrypter1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: false
        valueType: "org.bitcoinj.wallet.BasicKeyChain"
        uuid: "target"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    - type: "STATIC"
      name: "Threading"
      modelFingerprint: "931BDCE1DF6454A48EA195CE5432B664"
      index: 2
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "REAL"
        valueType: "org.bitcoinj.utils.Threading"
        uuid: "org.bitcoinj.utils.Threading"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "org.bitcoinj.utils.Threading"
        name: "lock"
        parameters:
        - name: "clazz"
          value:
            sapientType: "CLASS"
            content: !<regular>
              value: "org.bitcoinj.wallet.BasicKeyChain"
            valueType: "java.lang.Class"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "lock(Class): ReentrantLock"
        returnValue:
          sapientType: "OBJECT"
          content: !<static_method_return>
            target: "org.bitcoinj.utils.Threading"
            method: "lock"
            methodParameters:
            - value:
                sapientType: "CLASS"
                content: !<regular>
                  value: "org.bitcoinj.wallet.BasicKeyChain"
                valueType: "java.lang.Class"
                fixed: true
                equalsMethodPresent: false
                explicitCastNeeded: false
          suggestedContent: !<static_method_return>
            target: "org.bitcoinj.utils.Threading"
            method: "lock"
            methodParameters:
            - value:
                sapientType: "CLASS"
                content: !<regular>
                  value: "org.bitcoinj.wallet.BasicKeyChain"
                valueType: "java.lang.Class"
                fixed: true
                equalsMethodPresent: false
                explicitCastNeeded: false
          valueType: "java.util.concurrent.locks.ReentrantLock"
          uuid: "<init>_reentrantLock1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 9
      staticReadMethodForField: false
      filledByUser: false
    - type: "RESULT"
      name: "result"
      modelFingerprint: "9A8BF8457F1B97690ECA5441F49E4F48"
      index: 3
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "ENUM"
        content: !<regular>
          value: "EMPTY"
        valueType: "org.bitcoinj.wallet.BasicKeyChain$State"
        uuid: "Enum-org.bitcoinj.wallet.BasicKeyChain$State-EMPTY"
        fixed: true
        equalsMethodPresent: true
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    uuid: "8b7e17ce-2d02-314f-bb8f-e71b83aa7f47"
    deleted: false
    disabled: false
    ignoredBySystem: false
    prover: "DEFAULT"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
- method:
    name: "removeKey"
    returnType: "boolean"
    signature: "removeKey(org.bitcoinj.crypto.ECKey) : boolean"
    instructionFingerprint: "8A1518D54AAE676682AA547969E6C4EA"
    parametersTypes:
    - "org.bitcoinj.crypto.ECKey"
  paths:
  - pathId: "path1"
    pathIdForUser: "path1"
    testPathName: "removeKeyWhenAEqualsB"
    nameDefinedByUser: false
    constructorSignature: "<init>(org.bitcoinj.crypto.KeyCrypter) : void"
    priorityDefinedByUser: false
    filledByUser: false
    priority: "LOW"
    modelFingerprint: "514DD21B438DB9605C42BBAED7FCD2A9"
    problemWasSolvedByProver: true
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "35099553EB48D2AEC42E2A9279A21C51"
      index: 1
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "OBJECT"
        content: !<new>
          target: "org.bitcoinj.wallet.BasicKeyChain"
          parameters:
          - name: "crypter"
            value:
              sapientType: "MOCK"
              valueType: "org.bitcoinj.crypto.KeyCrypter"
              uuid: "<init>_keyCrypter1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: false
        suggestedContent: !<new>
          target: "org.bitcoinj.wallet.BasicKeyChain"
          parameters:
          - name: "crypter"
            value:
              sapientType: "UNKNOWN"
              valueType: "org.bitcoinj.crypto.KeyCrypter"
              uuid: "<init>_keyCrypter1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: false
        valueType: "org.bitcoinj.wallet.BasicKeyChain"
        uuid: "target"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    - type: "INPUT"
      name: "key"
      modelFingerprint: "C1A18A41926BD71E225A702884E0335F"
      index: 2
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        suggestedContent: !<unknown_object>
          target: "org.bitcoinj.crypto.ECKey"
          onlyPojoFunctions: false
          builderPattern: false
        valueType: "org.bitcoinj.crypto.ECKey"
        uuid: "removeKey_eCKey1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    - type: "STATIC"
      name: "Threading"
      modelFingerprint: "931BDCE1DF6454A48EA195CE5432B664"
      index: 3
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "REAL"
        valueType: "org.bitcoinj.utils.Threading"
        uuid: "org.bitcoinj.utils.Threading"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "org.bitcoinj.utils.Threading"
        name: "lock"
        parameters:
        - name: "clazz"
          value:
            sapientType: "CLASS"
            content: !<regular>
              value: "org.bitcoinj.wallet.BasicKeyChain"
            valueType: "java.lang.Class"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "lock(Class): ReentrantLock"
        returnValue:
          sapientType: "OBJECT"
          content: !<static_method_return>
            target: "org.bitcoinj.utils.Threading"
            method: "lock"
            methodParameters:
            - value:
                sapientType: "CLASS"
                content: !<regular>
                  value: "org.bitcoinj.wallet.BasicKeyChain"
                valueType: "java.lang.Class"
                fixed: true
                equalsMethodPresent: false
                explicitCastNeeded: false
          suggestedContent: !<static_method_return>
            target: "org.bitcoinj.utils.Threading"
            method: "lock"
            methodParameters:
            - value:
                sapientType: "CLASS"
                content: !<regular>
                  value: "org.bitcoinj.wallet.BasicKeyChain"
                valueType: "java.lang.Class"
                fixed: true
                equalsMethodPresent: false
                explicitCastNeeded: false
          valueType: "java.util.concurrent.locks.ReentrantLock"
          uuid: "<init>_reentrantLock1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 9
      staticReadMethodForField: false
      filledByUser: false
    - type: "LOCAL_VARIABLE"
      name: "key"
      modelFingerprint: "7A975842CF2A4EB984A817D751464DE2"
      index: 4
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        suggestedContent: !<unknown_object>
          target: "org.bitcoinj.crypto.ECKey"
          onlyPojoFunctions: false
          builderPattern: false
        valueType: "org.bitcoinj.crypto.ECKey"
        uuid: "removeKey_eCKey1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "key"
        name: "getPubKeyHash"
        parameters: []
        signature: "getPubKeyHash(): byte[]"
        returnValue:
          sapientType: "ARRAY"
          content: !<array>
            values: {}
          suggestedContent: !<array>
            values: {}
          valueType: "byte[]"
          uuid: "removeKey_byte[]1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 1
      staticReadMethodForField: false
      filledByUser: false
    - type: "STATIC"
      name: "ByteString"
      modelFingerprint: "2684DE1377B0A6D3657E2DDFE316973F"
      index: 5
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        valueType: "com.google.protobuf.ByteString"
        uuid: "com.google.protobuf.ByteString"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "com.google.protobuf.ByteString"
        name: "copyFrom"
        parameters:
        - name: "bytes"
          value:
            sapientType: "ARRAY"
            content: !<array>
              values: {}
            suggestedContent: !<array>
              values: {}
            valueType: "byte[]"
            uuid: "removeKey_byte[]1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "copyFrom(byte[]): ByteString"
        returnValue:
          sapientType: "MOCK"
          valueType: "com.google.protobuf.ByteString"
          uuid: "removeKey_byteString1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 9
      staticReadMethodForField: false
      filledByUser: false
    - type: "LOCAL_VARIABLE"
      name: "key"
      modelFingerprint: "E8CC71C57D5FE22B7EA34F376F4790D1"
      index: 6
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        suggestedContent: !<unknown_object>
          target: "org.bitcoinj.crypto.ECKey"
          onlyPojoFunctions: false
          builderPattern: false
        valueType: "org.bitcoinj.crypto.ECKey"
        uuid: "removeKey_eCKey1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "key"
        name: "getPubKey"
        parameters: []
        signature: "getPubKey(): byte[]"
        returnValue:
          sapientType: "ARRAY"
          content: !<array>
            values: {}
          suggestedContent: !<array>
            values: {}
          valueType: "byte[]"
          uuid: "removeKey_byte[]2"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 1
      staticReadMethodForField: false
      filledByUser: false
    - type: "STATIC"
      name: "ByteString"
      modelFingerprint: "2684DE1377B0A6D3657E2DDFE316973F"
      index: 7
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        valueType: "com.google.protobuf.ByteString"
        uuid: "com.google.protobuf.ByteString"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "com.google.protobuf.ByteString"
        name: "copyFrom"
        parameters:
        - name: "bytes"
          value:
            sapientType: "ARRAY"
            content: !<array>
              values: {}
            suggestedContent: !<array>
              values: {}
            valueType: "byte[]"
            uuid: "removeKey_byte[]2"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "copyFrom(byte[]): ByteString"
        returnValue:
          sapientType: "MOCK"
          valueType: "com.google.protobuf.ByteString"
          uuid: "removeKey_byteString2"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 9
      staticReadMethodForField: false
      filledByUser: false
    - type: "STATIC"
      name: "Preconditions"
      modelFingerprint: "ACF07FFCA3E2E1576E0B7D7733EEEFF8"
      index: 8
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "REAL"
        valueType: "org.bitcoinj.base.internal.Preconditions"
        uuid: "org.bitcoinj.base.internal.Preconditions"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "org.bitcoinj.base.internal.Preconditions"
        name: "checkState"
        parameters:
        - name: "expression"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: true
            valueType: "boolean"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "checkState(boolean): void"
        returnValue:
          sapientType: "VOID"
          valueType: "void"
          uuid: "removeKey_void2"
          fixed: true
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 9
      staticReadMethodForField: false
      filledByUser: false
    - type: "RESULT"
      name: "result"
      modelFingerprint: "3A21543F56248AC92654D6E439128AED"
      index: 9
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "BASIC"
        content: !<regular>
          value: false
        valueType: "boolean"
        uuid: "removeKey_int1"
        fixed: true
        equalsMethodPresent: true
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    uuid: "1c1f74e0-e925-3619-a83e-4e5986e3aeed"
    deleted: false
    disabled: false
    ignoredBySystem: false
    prover: "DEFAULT"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
- method:
    name: "earliestKeyCreationTime"
    returnType: "java.time.Instant"
    signature: "earliestKeyCreationTime() : java.time.Instant"
    instructionFingerprint: "F65AB185A307D6E2B61B1A41AEC7D018"
    parametersTypes: []
  paths:
  - pathId: "path1"
    pathIdForUser: "path1"
    testPathName: "earliestKeyCreationTimeTest"
    nameDefinedByUser: false
    constructorSignature: "<init>(org.bitcoinj.crypto.KeyCrypter) : void"
    priorityDefinedByUser: false
    filledByUser: false
    priority: "LOW"
    modelFingerprint: "753CFD3D3E70666644E9D8CD303365C5"
    problemWasSolvedByProver: true
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "35099553EB48D2AEC42E2A9279A21C51"
      index: 1
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "OBJECT"
        content: !<new>
          target: "org.bitcoinj.wallet.BasicKeyChain"
          parameters:
          - name: "crypter"
            value:
              sapientType: "MOCK"
              valueType: "org.bitcoinj.crypto.KeyCrypter"
              uuid: "<init>_keyCrypter1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: false
        suggestedContent: !<new>
          target: "org.bitcoinj.wallet.BasicKeyChain"
          parameters:
          - name: "crypter"
            value:
              sapientType: "UNKNOWN"
              valueType: "org.bitcoinj.crypto.KeyCrypter"
              uuid: "<init>_keyCrypter1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: false
        valueType: "org.bitcoinj.wallet.BasicKeyChain"
        uuid: "target"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    - type: "STATIC"
      name: "Threading"
      modelFingerprint: "931BDCE1DF6454A48EA195CE5432B664"
      index: 2
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "REAL"
        valueType: "org.bitcoinj.utils.Threading"
        uuid: "org.bitcoinj.utils.Threading"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "org.bitcoinj.utils.Threading"
        name: "lock"
        parameters:
        - name: "clazz"
          value:
            sapientType: "CLASS"
            content: !<regular>
              value: "org.bitcoinj.wallet.BasicKeyChain"
            valueType: "java.lang.Class"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "lock(Class): ReentrantLock"
        returnValue:
          sapientType: "OBJECT"
          content: !<static_method_return>
            target: "org.bitcoinj.utils.Threading"
            method: "lock"
            methodParameters:
            - value:
                sapientType: "CLASS"
                content: !<regular>
                  value: "org.bitcoinj.wallet.BasicKeyChain"
                valueType: "java.lang.Class"
                fixed: true
                equalsMethodPresent: false
                explicitCastNeeded: false
          suggestedContent: !<static_method_return>
            target: "org.bitcoinj.utils.Threading"
            method: "lock"
            methodParameters:
            - value:
                sapientType: "CLASS"
                content: !<regular>
                  value: "org.bitcoinj.wallet.BasicKeyChain"
                valueType: "java.lang.Class"
                fixed: true
                equalsMethodPresent: false
                explicitCastNeeded: false
          valueType: "java.util.concurrent.locks.ReentrantLock"
          uuid: "<init>_reentrantLock1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 9
      staticReadMethodForField: false
      filledByUser: false
    - type: "RESULT"
      name: "result"
      modelFingerprint: "72669FA3DE1BBB43E2FDD327F3E0C21F"
      index: 3
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "OBJECT"
        content: !<method_return_from_value>
          target: "java.lang.Object"
          localVariableValue:
            sapientType: "OPTIONAL"
            content: !<optional>
              value:
                sapientType: "NULL"
                fixed: false
                equalsMethodPresent: false
                explicitCastNeeded: false
              target: "java.util.Optional"
            valueType: "java.util.Optional"
            uuid: "earliestKeyCreationTime_optional1"
            fixed: false
            collectionUuid: "earliestKeyCreationTime_list1"
            equalsMethodPresent: false
            explicitCastNeeded: false
          methodParameters:
          - value:
              sapientType: "OBJECT"
              content: !<static_field_return>
                target: "java.time.Instant"
                fieldName: "MAX"
              suggestedContent: !<static_field_return>
                target: "java.time.Instant"
                fieldName: "MAX"
              valueType: "java.time.Instant"
              uuid: "earliestKeyCreationTime_instant1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          methodName: "orElse"
        suggestedContent: !<method_return_from_value>
          target: "java.lang.Object"
          localVariableValue:
            sapientType: "OPTIONAL"
            content: !<optional>
              value:
                sapientType: "NULL"
                fixed: false
                equalsMethodPresent: false
                explicitCastNeeded: false
              target: "java.util.Optional"
            valueType: "java.util.Optional"
            uuid: "earliestKeyCreationTime_optional1"
            fixed: false
            collectionUuid: "earliestKeyCreationTime_list1"
            equalsMethodPresent: false
            explicitCastNeeded: false
          methodParameters:
          - value:
              sapientType: "OBJECT"
              suggestedContent: !<static_field_return>
                target: "java.time.Instant"
                fieldName: "MAX"
              valueType: "java.time.Instant"
              uuid: "earliestKeyCreationTime_instant1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          methodName: "orElse"
        valueType: "java.time.Instant"
        uuid: "earliestKeyCreationTime_object1"
        fixed: false
        equalsMethodPresent: true
        explicitCastNeeded: true
      staticReadMethodForField: false
      filledByUser: false
    uuid: "a206f8de-38c4-3d61-a8c3-413f43400cc2"
    deleted: false
    disabled: false
    ignoredBySystem: false
    prover: "DEFAULT"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
- method:
    name: "getListeners"
    returnType: "java.util.List"
    signature: "getListeners() : java.util.List<org.bitcoinj.utils.ListenerRegistration<org.bitcoinj.wallet.listeners.KeyChainEventListener>>"
    instructionFingerprint: "DD34737913577DB40E42ABADE4AA3340"
    parametersTypes: []
  paths:
  - pathId: "path1"
    pathIdForUser: "path1"
    testPathName: "getListenersTest"
    nameDefinedByUser: false
    constructorSignature: "<init>(org.bitcoinj.crypto.KeyCrypter) : void"
    priorityDefinedByUser: false
    filledByUser: false
    priority: "LOW"
    modelFingerprint: "B6F8B5D3F03980B141AFF42FC6330BF1"
    problemWasSolvedByProver: true
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "35099553EB48D2AEC42E2A9279A21C51"
      index: 1
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "OBJECT"
        content: !<new>
          target: "org.bitcoinj.wallet.BasicKeyChain"
          parameters:
          - name: "crypter"
            value:
              sapientType: "MOCK"
              valueType: "org.bitcoinj.crypto.KeyCrypter"
              uuid: "<init>_keyCrypter1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: false
        suggestedContent: !<new>
          target: "org.bitcoinj.wallet.BasicKeyChain"
          parameters:
          - name: "crypter"
            value:
              sapientType: "UNKNOWN"
              valueType: "org.bitcoinj.crypto.KeyCrypter"
              uuid: "<init>_keyCrypter1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: false
        valueType: "org.bitcoinj.wallet.BasicKeyChain"
        uuid: "target"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    - type: "STATIC"
      name: "Threading"
      modelFingerprint: "931BDCE1DF6454A48EA195CE5432B664"
      index: 2
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "REAL"
        valueType: "org.bitcoinj.utils.Threading"
        uuid: "org.bitcoinj.utils.Threading"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "org.bitcoinj.utils.Threading"
        name: "lock"
        parameters:
        - name: "clazz"
          value:
            sapientType: "CLASS"
            content: !<regular>
              value: "org.bitcoinj.wallet.BasicKeyChain"
            valueType: "java.lang.Class"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "lock(Class): ReentrantLock"
        returnValue:
          sapientType: "OBJECT"
          content: !<static_method_return>
            target: "org.bitcoinj.utils.Threading"
            method: "lock"
            methodParameters:
            - value:
                sapientType: "CLASS"
                content: !<regular>
                  value: "org.bitcoinj.wallet.BasicKeyChain"
                valueType: "java.lang.Class"
                fixed: true
                equalsMethodPresent: false
                explicitCastNeeded: false
          suggestedContent: !<static_method_return>
            target: "org.bitcoinj.utils.Threading"
            method: "lock"
            methodParameters:
            - value:
                sapientType: "CLASS"
                content: !<regular>
                  value: "org.bitcoinj.wallet.BasicKeyChain"
                valueType: "java.lang.Class"
                fixed: true
                equalsMethodPresent: false
                explicitCastNeeded: false
          valueType: "java.util.concurrent.locks.ReentrantLock"
          uuid: "<init>_reentrantLock1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 9
      staticReadMethodForField: false
      filledByUser: false
    - type: "RESULT"
      name: "result"
      modelFingerprint: "42ECED6A843B5FBD0966379CD73B036E"
      index: 3
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "COLLECTION"
        content: !<collection>
          collectionClass: "java.util.ArrayList"
          parameters:
          - name: "c"
            value:
              sapientType: "COLLECTION"
              content: !<collection>
                collectionClass: "java.util.concurrent.CopyOnWriteArrayList"
                parameters: []
                values: []
              suggestedContent: !<collection>
                collectionClass: "java.util.concurrent.CopyOnWriteArrayList"
                parameters: []
                values: []
              valueType: "java.util.concurrent.CopyOnWriteArrayList"
              genericValueType: "org.bitcoinj.utils.ListenerRegistration<org.bitcoinj.wallet.listeners.KeyChainEventListener>"
              uuid: "<init>_copyOnWriteArrayList1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          values: []
        suggestedContent: !<collection>
          collectionClass: "java.util.ArrayList"
          parameters:
          - name: "c"
            value:
              sapientType: "COLLECTION"
              content: !<collection>
                collectionClass: "java.util.concurrent.CopyOnWriteArrayList"
                parameters: []
                values: []
              suggestedContent: !<collection>
                collectionClass: "java.util.concurrent.CopyOnWriteArrayList"
                parameters: []
                values: []
              valueType: "java.util.concurrent.CopyOnWriteArrayList"
              genericValueType: "org.bitcoinj.utils.ListenerRegistration<org.bitcoinj.wallet.listeners.KeyChainEventListener>"
              uuid: "<init>_copyOnWriteArrayList1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          values: []
        valueType: "java.util.List"
        genericValueType: "org.bitcoinj.utils.ListenerRegistration<org.bitcoinj.wallet.listeners.KeyChainEventListener>"
        uuid: "getListeners_arrayList1"
        fixed: false
        equalsMethodPresent: true
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    uuid: "b1c37231-1147-3ac0-8762-d7c1e4be3220"
    deleted: false
    disabled: false
    ignoredBySystem: false
    prover: "DEFAULT"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
- method:
    name: "serializeToEditableProtobufs"
    returnType: "java.util.Map"
    signature: "serializeToEditableProtobufs() : java.util.Map<org.bitcoinj.crypto.ECKey,org.bitcoinj.protobuf.wallet.Protos$Key$Builder>"
    instructionFingerprint: "502EC9AE33653857C71151016BE40037"
    parametersTypes: []
  paths:
  - pathId: "path1"
    pathIdForUser: "path1"
    testPathName: "serializeToEditableProtobufsTest"
    nameDefinedByUser: false
    constructorSignature: "<init>(org.bitcoinj.crypto.KeyCrypter) : void"
    priorityDefinedByUser: false
    filledByUser: false
    priority: "LOW"
    modelFingerprint: "DED1F3093BE7E4AF5A747D34B212996A"
    problemWasSolvedByProver: false
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "5A578F42BFEB4203A6C7966A20EF0CCB"
      index: 1
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "OBJECT"
        content: !<new>
          target: "org.bitcoinj.wallet.BasicKeyChain"
          parameters:
          - name: "crypter"
            value:
              sapientType: "MOCK"
              suggestedContent: !<unknown_object>
                target: "org.bitcoinj.crypto.KeyCrypter"
                onlyPojoFunctions: false
                builderPattern: false
              valueType: "org.bitcoinj.crypto.KeyCrypter"
              uuid: "<init>_keyCrypter1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: false
        suggestedContent: !<new>
          target: "org.bitcoinj.wallet.BasicKeyChain"
          parameters:
          - name: "crypter"
            value:
              sapientType: "MOCK"
              suggestedContent: !<unknown_object>
                target: "org.bitcoinj.crypto.KeyCrypter"
                onlyPojoFunctions: false
                builderPattern: false
              valueType: "org.bitcoinj.crypto.KeyCrypter"
              uuid: "<init>_keyCrypter1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: false
        valueType: "org.bitcoinj.wallet.BasicKeyChain"
        uuid: "target"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    - type: "STATIC"
      name: "Threading"
      modelFingerprint: "174F7683379F425D09733051F3BCE619"
      index: 2
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        valueType: "org.bitcoinj.utils.Threading"
        uuid: "org.bitcoinj.utils.Threading"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "org.bitcoinj.utils.Threading"
        name: "lock"
        parameters:
        - name: "clazz"
          value:
            sapientType: "CLASS"
            content: !<regular>
              value: "org.bitcoinj.wallet.BasicKeyChain"
            valueType: "java.lang.Class"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "lock(Class): ReentrantLock"
        returnValue:
          sapientType: "NULL"
          content: !<unknown_object>
            target: "java.util.concurrent.locks.ReentrantLock"
            onlyPojoFunctions: true
            builderPattern: false
          suggestedContent: !<unknown_object>
            target: "java.util.concurrent.locks.ReentrantLock"
            onlyPojoFunctions: true
            builderPattern: false
          valueType: "java.util.concurrent.locks.ReentrantLock"
          uuid: "<init>_reentrantLock1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 9
      staticReadMethodForField: false
      filledByUser: false
    - type: "RESULT"
      name: "result"
      modelFingerprint: "F6D6172353840092A7569BE08ADE8334"
      index: 3
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "COLLECTION"
        content: !<collection>
          parameters: []
          values: []
        suggestedContent: !<collection>
          parameters: []
          values: []
        valueType: "java.util.Map"
        uuid: "serializeToEditableProtobufs_object1"
        fixed: false
        collectionUuid: "serializeToEditableProtobufs_collection1"
        equalsMethodPresent: false
        explicitCastNeeded: true
      staticReadMethodForField: false
      filledByUser: false
    uuid: "82f6de5e-6051-37f1-a097-7ec711cdfed2"
    deleted: false
    disabled: false
    ignoredBySystem: false
    prover: "LLM"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
- method:
    name: "serializeToProtobuf"
    returnType: "java.util.List"
    signature: "serializeToProtobuf() : java.util.List<org.bitcoinj.protobuf.wallet.Protos$Key>"
    instructionFingerprint: "71D8EEBBB8B38E018182FB049F271951"
    parametersTypes: []
  paths:
  - pathId: "path1"
    pathIdForUser: "path1"
    testPathName: "serializeToProtobufTest"
    nameDefinedByUser: false
    constructorSignature: "<init>(org.bitcoinj.crypto.KeyCrypter) : void"
    priorityDefinedByUser: false
    filledByUser: false
    priority: "LOW"
    modelFingerprint: "143BA697CD17FFB49E971391C1E2AAA0"
    problemWasSolvedByProver: false
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "35099553EB48D2AEC42E2A9279A21C51"
      index: 1
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "OBJECT"
        content: !<new>
          target: "org.bitcoinj.wallet.BasicKeyChain"
          parameters:
          - name: "crypter"
            value:
              sapientType: "MOCK"
              valueType: "org.bitcoinj.crypto.KeyCrypter"
              uuid: "<init>_keyCrypter1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: false
        suggestedContent: !<new>
          target: "org.bitcoinj.wallet.BasicKeyChain"
          parameters:
          - name: "crypter"
            value:
              sapientType: "UNKNOWN"
              valueType: "org.bitcoinj.crypto.KeyCrypter"
              uuid: "<init>_keyCrypter1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: false
        valueType: "org.bitcoinj.wallet.BasicKeyChain"
        uuid: "target"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    - type: "STATIC"
      name: "Threading"
      modelFingerprint: "0D4103179D909C67DEE8A906C8C7511A"
      index: 2
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        valueType: "org.bitcoinj.utils.Threading"
        uuid: "org.bitcoinj.utils.Threading"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "org.bitcoinj.utils.Threading"
        name: "lock"
        parameters:
        - name: "clazz"
          value:
            sapientType: "CLASS"
            content: !<regular>
              value: "org.bitcoinj.wallet.BasicKeyChain"
            valueType: "java.lang.Class"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "lock(Class): ReentrantLock"
        returnValue:
          sapientType: "OBJECT"
          content: !<static_method_return>
            target: "org.bitcoinj.utils.Threading"
            method: "lock"
            methodParameters:
            - value:
                sapientType: "CLASS"
                content: !<regular>
                  value: "org.bitcoinj.wallet.BasicKeyChain"
                valueType: "java.lang.Class"
                fixed: true
                equalsMethodPresent: false
                explicitCastNeeded: false
          suggestedContent: !<static_method_return>
            target: "org.bitcoinj.utils.Threading"
            method: "lock"
            methodParameters:
            - value:
                sapientType: "CLASS"
                content: !<regular>
                  value: "org.bitcoinj.wallet.BasicKeyChain"
                valueType: "java.lang.Class"
                fixed: true
                equalsMethodPresent: false
                explicitCastNeeded: false
          valueType: "java.util.concurrent.locks.ReentrantLock"
          uuid: "<init>_reentrantLock1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 9
      staticReadMethodForField: false
      filledByUser: false
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "D6F5B57AF4BDB1E68F8B211FAD8C5BE2"
      index: 3
      ignored: false
      nestedInLoop: true
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        suggestedContent: !<unknown_object>
          target: "com.google.protobuf.GeneratedMessageLite$Builder"
          onlyPojoFunctions: false
          builderPattern: false
        valueType: "com.google.protobuf.GeneratedMessageLite$Builder"
        uuid: "serializeToProtobuf_object1"
        fixed: false
        collectionUuid: "serializeToProtobuf_collection1"
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "com.google.protobuf.GeneratedMessageLite$Builder"
        name: "build"
        parameters: []
        signature: "build(): GeneratedMessageLite"
        returnValue:
          sapientType: "MOCK"
          valueType: "org.bitcoinj.protobuf.wallet.Protos$Key"
          uuid: "serializeToProtobuf_generatedMessageLite1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 17
      staticReadMethodForField: false
      filledByUser: false
    - type: "RESULT"
      name: "result"
      modelFingerprint: "C8A8B651C37B2A1511C90561C4B14882"
      index: 4
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "COLLECTION"
        content: !<collection>
          parameters: []
          values:
          - sapientType: "MOCK"
            valueType: "org.bitcoinj.protobuf.wallet.Protos$Key"
            uuid: "serializeToProtobuf_generatedMessageLite1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        suggestedContent: !<collection>
          parameters: []
          values:
          - sapientType: "MOCK"
            valueType: "org.bitcoinj.protobuf.wallet.Protos$Key"
            uuid: "serializeToProtobuf_generatedMessageLite1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        valueType: "java.util.List"
        genericValueType: "org.bitcoinj.protobuf.wallet.Protos$Key"
        uuid: "serializeToProtobuf_object2"
        fixed: false
        collectionUuid: "serializeToProtobuf_list1"
        equalsMethodPresent: true
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    uuid: "16b1754a-bfdb-3aa3-bb73-83575a15fdd0"
    deleted: false
    disabled: true
    ignoredBySystem: false
    prover: "LLM"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: true
- method:
    name: "serializeEncryptableItem"
    returnType: "org.bitcoinj.protobuf.wallet.Protos$Key$Builder"
    signature: "serializeEncryptableItem(org.bitcoinj.crypto.EncryptableItem) : org.bitcoinj.protobuf.wallet.Protos$Key$Builder"
    instructionFingerprint: "BC961D6940F0E83DB094AB863F4A38F7"
    parametersTypes:
    - "org.bitcoinj.crypto.EncryptableItem"
  paths:
  - pathId: "path5"
    pathIdForUser: "path1"
    testPathName: "serializeEncryptableItemWhenSecretIsNotNull"
    nameDefinedByUser: false
    priorityDefinedByUser: false
    filledByUser: false
    priority: "LOW"
    modelFingerprint: "64A70490857DBC7147C40D4D046CB292"
    problemWasSolvedByProver: false
    truncated: true
    inputParameters: []
    uuid: "97552314-8345-3bb3-850e-2e1ff688ee97"
    deleted: true
    disabled: false
    ignoredBySystem: true
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
  - pathId: "path6"
    pathIdForUser: "path2"
    testPathName: "serializeEncryptableItemWhenSecretIsNull"
    nameDefinedByUser: false
    priorityDefinedByUser: false
    filledByUser: false
    priority: "LOW"
    modelFingerprint: "A7C04D90C8079604F39F4C3AE4EA99AB"
    problemWasSolvedByProver: false
    truncated: true
    inputParameters: []
    uuid: "3dc1e04e-04d8-3d01-af81-f546e776794a"
    deleted: true
    disabled: false
    ignoredBySystem: true
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
  - pathId: "path1"
    pathIdForUser: "path3"
    testPathName: "serializeEncryptableItemWhenItemGetEncryptionTypeEqualsProtosWalletEncryptionTypeENCRYPTED_SCRYPT_AES"
    nameDefinedByUser: false
    priorityDefinedByUser: false
    filledByUser: false
    priority: "LOW"
    modelFingerprint: "C7A64E85DDF135A2C11F66AD26D5E6E3"
    problemWasSolvedByProver: true
    truncated: false
    inputParameters:
    - type: "INPUT"
      name: "item"
      modelFingerprint: "6CF0E67F70398B5DE55D5B6BFFB7463D"
      index: 1
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        suggestedContent: !<unknown_object>
          target: "org.bitcoinj.crypto.EncryptableItem"
          onlyPojoFunctions: false
          builderPattern: false
        valueType: "org.bitcoinj.crypto.EncryptableItem"
        uuid: "serializeEncryptableItem_encryptableItem1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    - type: "STATIC"
      name: "Protos.Key"
      modelFingerprint: "2410F698D7B508D4C11EA271C7CDCF3F"
      index: 2
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        valueType: "org.bitcoinj.protobuf.wallet.Protos$Key"
        uuid: "org.bitcoinj.protobuf.wallet.Protos$Key"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "org.bitcoinj.protobuf.wallet.Protos$Key"
        name: "newBuilder"
        parameters: []
        signature: "newBuilder(): Protos$Key$Builder"
        returnValue:
          sapientType: "MOCK"
          suggestedContent: !<unknown_object>
            target: "org.bitcoinj.protobuf.wallet.Protos$Key$Builder"
            onlyPojoFunctions: false
            builderPattern: false
          valueType: "org.bitcoinj.protobuf.wallet.Protos$Key$Builder"
          uuid: "serializeEncryptableItem_protos.Key.Builder1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 9
      staticReadMethodForField: false
      filledByUser: false
    - type: "LOCAL_VARIABLE"
      name: "item"
      modelFingerprint: "4CDE5A3044107838CC89A6534A38CECD"
      index: 3
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        suggestedContent: !<unknown_object>
          target: "org.bitcoinj.crypto.EncryptableItem"
          onlyPojoFunctions: false
          builderPattern: false
        valueType: "org.bitcoinj.crypto.EncryptableItem"
        uuid: "serializeEncryptableItem_encryptableItem1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "item"
        name: "creationTime"
        parameters: []
        signature: "creationTime(): Optional"
        returnValue:
          sapientType: "OPTIONAL"
          content: !<optional>
            value:
              sapientType: "OBJECT"
              content: !<static_method_return>
                target: "java.time.Instant"
                method: "now"
                methodParameters: []
              suggestedContent: !<static_method_return>
                target: "java.time.Instant"
                method: "now"
                methodParameters: []
              valueType: "java.time.Instant"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
            target: "java.util.Optional"
          suggestedContent: !<optional>
            value:
              sapientType: "OBJECT"
              content: !<static_method_return>
                target: "java.time.Instant"
                method: "now"
                methodParameters: []
              suggestedContent: !<static_method_return>
                target: "java.time.Instant"
                method: "now"
                methodParameters: []
              valueType: "java.time.Instant"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
            target: "java.util.Optional"
          valueType: "java.util.Optional"
          genericValueType: "java.time.Instant"
          uuid: "serializeEncryptableItem_optional1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 1025
      staticReadMethodForField: false
      filledByUser: false
    - type: "LOCAL_VARIABLE"
      name: "proto"
      modelFingerprint: "C312E5AB0C77F12BAC3528C9ED6EC086"
      index: 4
      ignored: false
      nestedInLoop: true
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        suggestedContent: !<unknown_object>
          target: "org.bitcoinj.protobuf.wallet.Protos$Key$Builder"
          onlyPojoFunctions: false
          builderPattern: false
        valueType: "org.bitcoinj.protobuf.wallet.Protos$Key$Builder"
        uuid: "serializeEncryptableItem_protos.Key.Builder1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "proto"
        name: "setCreationTimestamp"
        parameters:
        - name: "value"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 1703144040920
            valueType: "long"
            uuid: "lambda$serializeEncryptableItem$4_long1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "setCreationTimestamp(long): Protos$Key$Builder"
        returnValue:
          sapientType: "MOCK"
          suggestedContent: !<unknown_object>
            target: "org.bitcoinj.protobuf.wallet.Protos$Key$Builder"
            onlyPojoFunctions: false
            builderPattern: false
          valueType: "org.bitcoinj.protobuf.wallet.Protos$Key$Builder"
          uuid: "lambda$serializeEncryptableItem$4_protos.Key.Builder1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 1
      staticReadMethodForField: false
      filledByUser: false
    - type: "LOCAL_VARIABLE"
      name: "item"
      modelFingerprint: "96710194E7BF4420E9FF3D0442A67CC7"
      index: 5
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        suggestedContent: !<unknown_object>
          target: "org.bitcoinj.crypto.EncryptableItem"
          onlyPojoFunctions: false
          builderPattern: false
        valueType: "org.bitcoinj.crypto.EncryptableItem"
        uuid: "serializeEncryptableItem_encryptableItem1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "item"
        name: "isEncrypted"
        parameters: []
        signature: "isEncrypted(): boolean"
        returnValue:
          sapientType: "BASIC"
          content: !<regular>
            value: false
          suggestedContent: !<regular>
            value: false
          valueType: "boolean"
          uuid: "serializeEncryptableItem_boolean1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 1025
      staticReadMethodForField: false
      filledByUser: false
    - type: "LOCAL_VARIABLE"
      name: "item"
      modelFingerprint: "972BDADD2D19C017AFAFD561D60E097E"
      index: 6
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        suggestedContent: !<unknown_object>
          target: "org.bitcoinj.crypto.EncryptableItem"
          onlyPojoFunctions: false
          builderPattern: false
        valueType: "org.bitcoinj.crypto.EncryptableItem"
        uuid: "serializeEncryptableItem_encryptableItem1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "item"
        name: "getSecretBytes"
        parameters: []
        signature: "getSecretBytes(): byte[]"
        returnValue:
          sapientType: "ARRAY"
          content: !<array>
            values: {}
          suggestedContent: !<array>
            values: {}
          valueType: "byte[]"
          uuid: "serializeEncryptableItem_byte[]1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 1025
      staticReadMethodForField: false
      filledByUser: false
    - type: "STATIC"
      name: "ByteString"
      modelFingerprint: "2684DE1377B0A6D3657E2DDFE316973F"
      index: 7
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        valueType: "com.google.protobuf.ByteString"
        uuid: "com.google.protobuf.ByteString"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "com.google.protobuf.ByteString"
        name: "copyFrom"
        parameters:
        - name: "bytes"
          value:
            sapientType: "ARRAY"
            content: !<array>
              values: {}
            suggestedContent: !<array>
              values: {}
            valueType: "byte[]"
            uuid: "serializeEncryptableItem_byte[]1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "copyFrom(byte[]): ByteString"
        returnValue:
          sapientType: "MOCK"
          valueType: "com.google.protobuf.ByteString"
          uuid: "serializeEncryptableItem_byteString1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 9
      staticReadMethodForField: false
      filledByUser: false
    - type: "LOCAL_VARIABLE"
      name: "proto"
      modelFingerprint: "BF95F209C2AF180A71515090D5CFFAB0"
      index: 8
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        suggestedContent: !<unknown_object>
          target: "org.bitcoinj.protobuf.wallet.Protos$Key$Builder"
          onlyPojoFunctions: false
          builderPattern: false
        valueType: "org.bitcoinj.protobuf.wallet.Protos$Key$Builder"
        uuid: "serializeEncryptableItem_protos.Key.Builder1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "proto"
        name: "setSecretBytes"
        parameters:
        - name: "value"
          value:
            sapientType: "MOCK"
            valueType: "com.google.protobuf.ByteString"
            uuid: "serializeEncryptableItem_byteString1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "setSecretBytes(ByteString): Protos$Key$Builder"
        returnValue:
          sapientType: "MOCK"
          suggestedContent: !<unknown_object>
            target: "org.bitcoinj.protobuf.wallet.Protos$Key$Builder"
            onlyPojoFunctions: false
            builderPattern: false
          valueType: "org.bitcoinj.protobuf.wallet.Protos$Key$Builder"
          uuid: "serializeEncryptableItem_protos.Key.Builder2"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 1
      staticReadMethodForField: false
      filledByUser: false
    - type: "LOCAL_VARIABLE"
      name: "proto"
      modelFingerprint: "AF2B402018DEF4FE7754598647E3FA34"
      index: 9
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        suggestedContent: !<unknown_object>
          target: "org.bitcoinj.protobuf.wallet.Protos$Key$Builder"
          onlyPojoFunctions: false
          builderPattern: false
        valueType: "org.bitcoinj.protobuf.wallet.Protos$Key$Builder"
        uuid: "serializeEncryptableItem_protos.Key.Builder1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "proto"
        name: "setType"
        parameters:
        - name: "value"
          value:
            sapientType: "ENUM"
            content: !<regular>
              value: "ORIGINAL"
            valueType: "org.bitcoinj.protobuf.wallet.Protos$Key$Type"
            uuid: "Enum-org.bitcoinj.protobuf.wallet.Protos$Key$Type-ORIGINAL"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "setType(Protos$Key$Type): Protos$Key$Builder"
        returnValue:
          sapientType: "MOCK"
          suggestedContent: !<unknown_object>
            target: "org.bitcoinj.protobuf.wallet.Protos$Key$Builder"
            onlyPojoFunctions: false
            builderPattern: false
          valueType: "org.bitcoinj.protobuf.wallet.Protos$Key$Builder"
          uuid: "serializeEncryptableItem_protos.Key.Builder3"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 1
      staticReadMethodForField: false
      filledByUser: false
    - type: "RESULT"
      name: "result"
      modelFingerprint: "F3846077862D4A9B15E7CD87B3F6DF36"
      index: 10
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        suggestedContent: !<unknown_object>
          target: "org.bitcoinj.protobuf.wallet.Protos$Key$Builder"
          onlyPojoFunctions: false
          builderPattern: false
        valueType: "org.bitcoinj.protobuf.wallet.Protos$Key$Builder"
        uuid: "serializeEncryptableItem_protos.Key.Builder1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    uuid: "b5252992-9729-3995-9a93-ad56de200d2e"
    deleted: false
    disabled: true
    ignoredBySystem: false
    prover: "LLM"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: true
  - pathId: "path2"
    pathIdForUser: "path4"
    testPathName: "serializeEncryptableItemWhenItemGetEncryptionTypeNotEqualsProtosWalletEncryptionTypeENCRYPTEThrowsIllegalStateException"
    nameDefinedByUser: false
    priorityDefinedByUser: false
    filledByUser: false
    priority: "LOW"
    modelFingerprint: "2C37F2DFD745A34D595C61E5A9160DCE"
    problemWasSolvedByProver: false
    truncated: false
    inputParameters:
    - type: "INPUT"
      name: "item"
      modelFingerprint: "6CF0E67F70398B5DE55D5B6BFFB7463D"
      index: 1
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        suggestedContent: !<unknown_object>
          target: "org.bitcoinj.crypto.EncryptableItem"
          onlyPojoFunctions: false
          builderPattern: false
        valueType: "org.bitcoinj.crypto.EncryptableItem"
        uuid: "serializeEncryptableItem_encryptableItem1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    - type: "STATIC"
      name: "Protos.Key"
      modelFingerprint: "2410F698D7B508D4C11EA271C7CDCF3F"
      index: 2
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        valueType: "org.bitcoinj.protobuf.wallet.Protos$Key"
        uuid: "org.bitcoinj.protobuf.wallet.Protos$Key"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "org.bitcoinj.protobuf.wallet.Protos$Key"
        name: "newBuilder"
        parameters: []
        signature: "newBuilder(): Protos$Key$Builder"
        returnValue:
          sapientType: "MOCK"
          suggestedContent: !<unknown_object>
            target: "org.bitcoinj.protobuf.wallet.Protos$Key$Builder"
            onlyPojoFunctions: false
            builderPattern: false
          valueType: "org.bitcoinj.protobuf.wallet.Protos$Key$Builder"
          uuid: "serializeEncryptableItem_protos.Key.Builder1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 9
      staticReadMethodForField: false
      filledByUser: false
    - type: "LOCAL_VARIABLE"
      name: "item"
      modelFingerprint: "4CDE5A3044107838CC89A6534A38CECD"
      index: 3
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        suggestedContent: !<unknown_object>
          target: "org.bitcoinj.crypto.EncryptableItem"
          onlyPojoFunctions: false
          builderPattern: false
        valueType: "org.bitcoinj.crypto.EncryptableItem"
        uuid: "serializeEncryptableItem_encryptableItem1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "item"
        name: "creationTime"
        parameters: []
        signature: "creationTime(): Optional"
        returnValue:
          sapientType: "OPTIONAL"
          content: !<optional>
            value:
              sapientType: "OBJECT"
              content: !<static_method_return>
                target: "java.time.Instant"
                method: "now"
                methodParameters: []
              suggestedContent: !<static_method_return>
                target: "java.time.Instant"
                method: "now"
                methodParameters: []
              valueType: "java.time.Instant"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
            target: "java.util.Optional"
          suggestedContent: !<optional>
            value:
              sapientType: "OBJECT"
              content: !<static_method_return>
                target: "java.time.Instant"
                method: "now"
                methodParameters: []
              suggestedContent: !<static_method_return>
                target: "java.time.Instant"
                method: "now"
                methodParameters: []
              valueType: "java.time.Instant"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
            target: "java.util.Optional"
          valueType: "java.util.Optional"
          genericValueType: "java.time.Instant"
          uuid: "serializeEncryptableItem_optional1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 1025
      staticReadMethodForField: false
      filledByUser: false
    - type: "LOCAL_VARIABLE"
      name: "proto"
      modelFingerprint: "1256664AF6928515CB4493D03E5E8BAC"
      index: 4
      ignored: false
      nestedInLoop: true
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        suggestedContent: !<unknown_object>
          target: "org.bitcoinj.protobuf.wallet.Protos$Key$Builder"
          onlyPojoFunctions: false
          builderPattern: false
        valueType: "org.bitcoinj.protobuf.wallet.Protos$Key$Builder"
        uuid: "serializeEncryptableItem_protos.Key.Builder1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "proto"
        name: "setCreationTimestamp"
        parameters:
        - name: "value"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 1703144048188
            valueType: "long"
            uuid: "lambda$serializeEncryptableItem$4_long1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "setCreationTimestamp(long): Protos$Key$Builder"
        returnValue:
          sapientType: "MOCK"
          suggestedContent: !<unknown_object>
            target: "org.bitcoinj.protobuf.wallet.Protos$Key$Builder"
            onlyPojoFunctions: false
            builderPattern: false
          valueType: "org.bitcoinj.protobuf.wallet.Protos$Key$Builder"
          uuid: "lambda$serializeEncryptableItem$4_protos.Key.Builder1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 1
      staticReadMethodForField: false
      filledByUser: false
    - type: "LOCAL_VARIABLE"
      name: "item"
      modelFingerprint: "996BB2E3C597026F44B0778B9AFBA73B"
      index: 5
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        suggestedContent: !<unknown_object>
          target: "org.bitcoinj.crypto.EncryptableItem"
          onlyPojoFunctions: false
          builderPattern: false
        valueType: "org.bitcoinj.crypto.EncryptableItem"
        uuid: "serializeEncryptableItem_encryptableItem1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "item"
        name: "isEncrypted"
        parameters: []
        signature: "isEncrypted(): boolean"
        returnValue:
          sapientType: "BASIC"
          content: !<regular>
            value: true
          suggestedContent: !<regular>
            value: true
          valueType: "boolean"
          uuid: "serializeEncryptableItem_boolean1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 1025
      staticReadMethodForField: false
      filledByUser: false
    - type: "LOCAL_VARIABLE"
      name: "item"
      modelFingerprint: "703E8D418C319B441A3DD0D384BA290E"
      index: 6
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        suggestedContent: !<unknown_object>
          target: "org.bitcoinj.crypto.EncryptableItem"
          onlyPojoFunctions: false
          builderPattern: false
        valueType: "org.bitcoinj.crypto.EncryptableItem"
        uuid: "serializeEncryptableItem_encryptableItem1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "item"
        name: "getEncryptedData"
        parameters: []
        signature: "getEncryptedData(): EncryptedData"
        returnValue:
          sapientType: "MOCK"
          valueType: "org.bitcoinj.crypto.EncryptedData"
          uuid: "serializeEncryptableItem_encryptedData1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 1025
      staticReadMethodForField: false
      filledByUser: false
    - type: "LOCAL_VARIABLE"
      name: "item"
      modelFingerprint: "61EDF80C9AC0BBB16665B9F8E71C87EB"
      index: 7
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        suggestedContent: !<unknown_object>
          target: "org.bitcoinj.crypto.EncryptableItem"
          onlyPojoFunctions: false
          builderPattern: false
        valueType: "org.bitcoinj.crypto.EncryptableItem"
        uuid: "serializeEncryptableItem_encryptableItem1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "item"
        name: "getEncryptedData"
        parameters: []
        signature: "getEncryptedData(): EncryptedData"
        returnValue:
          sapientType: "MOCK"
          suggestedContent: !<unknown_object>
            target: "org.bitcoinj.crypto.EncryptedData"
            onlyPojoFunctions: false
            builderPattern: false
          valueType: "org.bitcoinj.crypto.EncryptedData"
          uuid: "serializeEncryptableItem_encryptedData2"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 1025
      staticReadMethodForField: false
      filledByUser: false
    - type: "LOCAL_VARIABLE"
      name: "proto"
      modelFingerprint: "454C712183346AC4D5515502FD31C52E"
      index: 8
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        suggestedContent: !<unknown_object>
          target: "org.bitcoinj.protobuf.wallet.Protos$Key$Builder"
          onlyPojoFunctions: false
          builderPattern: false
        valueType: "org.bitcoinj.protobuf.wallet.Protos$Key$Builder"
        uuid: "serializeEncryptableItem_protos.Key.Builder1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "proto"
        name: "getEncryptedData"
        parameters: []
        signature: "getEncryptedData(): Protos$EncryptedData"
        returnValue:
          sapientType: "OBJECT"
          content: !<static_method_return>
            target: "org.bitcoinj.protobuf.wallet.Protos$EncryptedData"
            method: "getDefaultInstance"
            methodParameters: []
          suggestedContent: !<static_method_return>
            target: "org.bitcoinj.protobuf.wallet.Protos$EncryptedData"
            method: "getDefaultInstance"
            methodParameters: []
          valueType: "org.bitcoinj.protobuf.wallet.Protos$EncryptedData"
          uuid: "serializeEncryptableItem_protos.EncryptedData1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 1
      staticReadMethodForField: false
      filledByUser: false
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "596A61E04ED2205151DF7BB0735C5E0F"
      index: 9
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "OBJECT"
        content: !<static_method_return>
          target: "org.bitcoinj.protobuf.wallet.Protos$EncryptedData"
          method: "getDefaultInstance"
          methodParameters: []
        suggestedContent: !<static_method_return>
          target: "org.bitcoinj.protobuf.wallet.Protos$EncryptedData"
          method: "getDefaultInstance"
          methodParameters: []
        valueType: "org.bitcoinj.protobuf.wallet.Protos$EncryptedData"
        uuid: "serializeEncryptableItem_protos.EncryptedData1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "org.bitcoinj.protobuf.wallet.Protos$EncryptedData"
        name: "toBuilder"
        parameters: []
        signature: "toBuilder(): GeneratedMessageLite$Builder"
        returnValue:
          sapientType: "MOCK"
          suggestedContent: !<unknown_object>
            target: "org.bitcoinj.protobuf.wallet.Protos$EncryptedData$Builder"
            onlyPojoFunctions: false
            builderPattern: false
          valueType: "org.bitcoinj.protobuf.wallet.Protos$EncryptedData$Builder"
          uuid: "serializeEncryptableItem_generatedMessageLite.Builder1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: true
        access: 17
      staticReadMethodForField: false
      filledByUser: false
    - type: "STATIC"
      name: "ByteString"
      modelFingerprint: "2684DE1377B0A6D3657E2DDFE316973F"
      index: 10
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        valueType: "com.google.protobuf.ByteString"
        uuid: "com.google.protobuf.ByteString"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "com.google.protobuf.ByteString"
        name: "copyFrom"
        parameters:
        - name: "bytes"
          value:
            sapientType: "ARRAY"
            content: !<array>
              values: {}
            suggestedContent: !<array>
              values: {}
            valueType: "byte[]"
            uuid: "serializeEncryptableItem_byte[]1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "copyFrom(byte[]): ByteString"
        returnValue:
          sapientType: "MOCK"
          valueType: "com.google.protobuf.ByteString"
          uuid: "serializeEncryptableItem_byteString1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 9
      staticReadMethodForField: false
      filledByUser: false
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "527228727724C5542B5AF1323F4C4E85"
      index: 11
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        suggestedContent: !<unknown_object>
          target: "org.bitcoinj.protobuf.wallet.Protos$EncryptedData$Builder"
          onlyPojoFunctions: false
          builderPattern: false
        valueType: "org.bitcoinj.protobuf.wallet.Protos$EncryptedData$Builder"
        uuid: "serializeEncryptableItem_generatedMessageLite.Builder1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: true
      methodExercised:
        target: "org.bitcoinj.protobuf.wallet.Protos$EncryptedData$Builder"
        name: "setEncryptedPrivateKey"
        parameters:
        - name: "value"
          value:
            sapientType: "MOCK"
            valueType: "com.google.protobuf.ByteString"
            uuid: "serializeEncryptableItem_byteString1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "setEncryptedPrivateKey(ByteString): Protos$EncryptedData$Builder"
        returnValue:
          sapientType: "MOCK"
          suggestedContent: !<unknown_object>
            target: "org.bitcoinj.protobuf.wallet.Protos$EncryptedData$Builder"
            onlyPojoFunctions: false
            builderPattern: false
          valueType: "org.bitcoinj.protobuf.wallet.Protos$EncryptedData$Builder"
          uuid: "serializeEncryptableItem_protos.EncryptedData.Builder1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 1
      staticReadMethodForField: false
      filledByUser: false
    - type: "STATIC"
      name: "ByteString"
      modelFingerprint: "88B09FBCD11086CD879B6CB742FC087A"
      index: 12
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        valueType: "com.google.protobuf.ByteString"
        uuid: "com.google.protobuf.ByteString"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "com.google.protobuf.ByteString"
        name: "copyFrom"
        parameters:
        - name: "bytes"
          value:
            sapientType: "ARRAY"
            content: !<array>
              values: {}
            suggestedContent: !<array>
              values: {}
            valueType: "byte[]"
            uuid: "serializeEncryptableItem_byte[]2"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "copyFrom(byte[]): ByteString"
        returnValue:
          sapientType: "OBJECT"
          content: !<static_method_return>
            target: "com.google.protobuf.ByteString"
            method: "empty"
            methodParameters: []
          suggestedContent: !<static_method_return>
            target: "com.google.protobuf.ByteString"
            method: "empty"
            methodParameters: []
          valueType: "com.google.protobuf.ByteString"
          uuid: "serializeEncryptableItem_byteString2"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 9
      staticReadMethodForField: false
      filledByUser: false
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "5DF7EAF84C47F51411B2E9880C0B9C4F"
      index: 13
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        suggestedContent: !<unknown_object>
          target: "org.bitcoinj.protobuf.wallet.Protos$EncryptedData$Builder"
          onlyPojoFunctions: false
          builderPattern: false
        valueType: "org.bitcoinj.protobuf.wallet.Protos$EncryptedData$Builder"
        uuid: "serializeEncryptableItem_protos.EncryptedData.Builder1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "org.bitcoinj.protobuf.wallet.Protos$EncryptedData$Builder"
        name: "setInitialisationVector"
        parameters:
        - name: "value"
          value:
            sapientType: "OBJECT"
            content: !<static_method_return>
              target: "com.google.protobuf.ByteString"
              method: "empty"
              methodParameters: []
            suggestedContent: !<static_method_return>
              target: "com.google.protobuf.ByteString"
              method: "empty"
              methodParameters: []
            valueType: "com.google.protobuf.ByteString"
            uuid: "serializeEncryptableItem_byteString2"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "setInitialisationVector(ByteString): Protos$EncryptedData$Builder"
        returnValue:
          sapientType: "MOCK"
          suggestedContent: !<unknown_object>
            target: "org.bitcoinj.protobuf.wallet.Protos$EncryptedData$Builder"
            onlyPojoFunctions: false
            builderPattern: false
          valueType: "org.bitcoinj.protobuf.wallet.Protos$EncryptedData$Builder"
          uuid: "serializeEncryptableItem_protos.EncryptedData.Builder2"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 1
      staticReadMethodForField: false
      filledByUser: false
    - type: "LOCAL_VARIABLE"
      name: "proto"
      modelFingerprint: "187B37B13C7C398D2D7295E91E5F9823"
      index: 14
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        suggestedContent: !<unknown_object>
          target: "org.bitcoinj.protobuf.wallet.Protos$Key$Builder"
          onlyPojoFunctions: false
          builderPattern: false
        valueType: "org.bitcoinj.protobuf.wallet.Protos$Key$Builder"
        uuid: "serializeEncryptableItem_protos.Key.Builder1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "proto"
        name: "setEncryptedData"
        parameters:
        - name: "builderForValue"
          value:
            sapientType: "MOCK"
            suggestedContent: !<unknown_object>
              target: "org.bitcoinj.protobuf.wallet.Protos$EncryptedData$Builder"
              onlyPojoFunctions: false
              builderPattern: false
            valueType: "org.bitcoinj.protobuf.wallet.Protos$EncryptedData$Builder"
            uuid: "serializeEncryptableItem_protos.EncryptedData.Builder2"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "setEncryptedData(Protos$EncryptedData$Builder): Protos$Key$Builder"
        returnValue:
          sapientType: "MOCK"
          suggestedContent: !<unknown_object>
            target: "org.bitcoinj.protobuf.wallet.Protos$Key$Builder"
            onlyPojoFunctions: false
            builderPattern: false
          valueType: "org.bitcoinj.protobuf.wallet.Protos$Key$Builder"
          uuid: "serializeEncryptableItem_protos.Key.Builder2"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 1
      staticReadMethodForField: false
      filledByUser: false
    - type: "LOCAL_VARIABLE"
      name: "item"
      modelFingerprint: "7AF4642D3A3622BA355BA5E599ED5DA8"
      index: 15
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        suggestedContent: !<unknown_object>
          target: "org.bitcoinj.crypto.EncryptableItem"
          onlyPojoFunctions: false
          builderPattern: false
        valueType: "org.bitcoinj.crypto.EncryptableItem"
        uuid: "serializeEncryptableItem_encryptableItem1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "item"
        name: "getEncryptionType"
        parameters: []
        signature: "getEncryptionType(): Protos$Wallet$EncryptionType"
        returnValue:
          sapientType: "ENUM"
          content: !<regular>
            value: "ENCRYPTED_SCRYPT_AES"
          suggestedContent: !<regular>
            value: "ENCRYPTED_SCRYPT_AES"
          valueType: "org.bitcoinj.protobuf.wallet.Protos$Wallet$EncryptionType"
          uuid: "serializeEncryptableItem_protos.Wallet.EncryptionType1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 1025
      staticReadMethodForField: false
      filledByUser: false
    - type: "STATIC"
      name: "Preconditions"
      modelFingerprint: "ACF07FFCA3E2E1576E0B7D7733EEEFF8"
      index: 16
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "REAL"
        valueType: "org.bitcoinj.base.internal.Preconditions"
        uuid: "org.bitcoinj.base.internal.Preconditions"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "org.bitcoinj.base.internal.Preconditions"
        name: "checkState"
        parameters:
        - name: "expression"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: true
            valueType: "boolean"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "checkState(boolean): void"
        returnValue:
          sapientType: "VOID"
          valueType: "void"
          uuid: "serializeEncryptableItem_void2"
          fixed: true
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 9
      staticReadMethodForField: false
      filledByUser: false
    - type: "LOCAL_VARIABLE"
      name: "proto"
      modelFingerprint: "CF2E2860F71977BB15980E9EDCE4662A"
      index: 17
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        suggestedContent: !<unknown_object>
          target: "org.bitcoinj.protobuf.wallet.Protos$Key$Builder"
          onlyPojoFunctions: false
          builderPattern: false
        valueType: "org.bitcoinj.protobuf.wallet.Protos$Key$Builder"
        uuid: "serializeEncryptableItem_protos.Key.Builder1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "proto"
        name: "setType"
        parameters:
        - name: "value"
          value:
            sapientType: "ENUM"
            content: !<regular>
              value: "ENCRYPTED_SCRYPT_AES"
            valueType: "org.bitcoinj.protobuf.wallet.Protos$Key$Type"
            uuid: "Enum-org.bitcoinj.protobuf.wallet.Protos$Key$Type-ENCRYPTED_SCRYPT_AES"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "setType(Protos$Key$Type): Protos$Key$Builder"
        returnValue:
          sapientType: "MOCK"
          valueType: "org.bitcoinj.protobuf.wallet.Protos$Key$Builder"
          uuid: "serializeEncryptableItem_protos.Key.Builder3"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 1
      staticReadMethodForField: false
      filledByUser: false
    - type: "RESULT"
      name: "result"
      modelFingerprint: "F3846077862D4A9B15E7CD87B3F6DF36"
      index: 18
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        suggestedContent: !<unknown_object>
          target: "org.bitcoinj.protobuf.wallet.Protos$Key$Builder"
          onlyPojoFunctions: false
          builderPattern: false
        valueType: "org.bitcoinj.protobuf.wallet.Protos$Key$Builder"
        uuid: "serializeEncryptableItem_protos.Key.Builder1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    uuid: "5d7f5fe0-fed9-38a5-8021-edd5adc6a17e"
    deleted: false
    disabled: true
    ignoredBySystem: false
    prover: "LLM"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: true
  - pathId: "path3"
    pathIdForUser: "path5"
    testPathName: "serializeEncryptableItemWhenItemGetEncryptedDataIsNullAndSecretIsNotNull"
    nameDefinedByUser: false
    priorityDefinedByUser: false
    filledByUser: false
    priority: "LOW"
    modelFingerprint: "C423F87695C73C26B4555B188BFAAC3B"
    problemWasSolvedByProver: true
    truncated: false
    inputParameters:
    - type: "INPUT"
      name: "item"
      modelFingerprint: "6CF0E67F70398B5DE55D5B6BFFB7463D"
      index: 1
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        suggestedContent: !<unknown_object>
          target: "org.bitcoinj.crypto.EncryptableItem"
          onlyPojoFunctions: false
          builderPattern: false
        valueType: "org.bitcoinj.crypto.EncryptableItem"
        uuid: "serializeEncryptableItem_encryptableItem1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    - type: "STATIC"
      name: "Protos.Key"
      modelFingerprint: "2410F698D7B508D4C11EA271C7CDCF3F"
      index: 2
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        valueType: "org.bitcoinj.protobuf.wallet.Protos$Key"
        uuid: "org.bitcoinj.protobuf.wallet.Protos$Key"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "org.bitcoinj.protobuf.wallet.Protos$Key"
        name: "newBuilder"
        parameters: []
        signature: "newBuilder(): Protos$Key$Builder"
        returnValue:
          sapientType: "MOCK"
          suggestedContent: !<unknown_object>
            target: "org.bitcoinj.protobuf.wallet.Protos$Key$Builder"
            onlyPojoFunctions: false
            builderPattern: false
          valueType: "org.bitcoinj.protobuf.wallet.Protos$Key$Builder"
          uuid: "serializeEncryptableItem_protos.Key.Builder1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 9
      staticReadMethodForField: false
      filledByUser: false
    - type: "LOCAL_VARIABLE"
      name: "item"
      modelFingerprint: "4CDE5A3044107838CC89A6534A38CECD"
      index: 3
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        suggestedContent: !<unknown_object>
          target: "org.bitcoinj.crypto.EncryptableItem"
          onlyPojoFunctions: false
          builderPattern: false
        valueType: "org.bitcoinj.crypto.EncryptableItem"
        uuid: "serializeEncryptableItem_encryptableItem1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "item"
        name: "creationTime"
        parameters: []
        signature: "creationTime(): Optional"
        returnValue:
          sapientType: "OPTIONAL"
          content: !<optional>
            value:
              sapientType: "OBJECT"
              content: !<static_method_return>
                target: "java.time.Instant"
                method: "now"
                methodParameters: []
              suggestedContent: !<static_method_return>
                target: "java.time.Instant"
                method: "now"
                methodParameters: []
              valueType: "java.time.Instant"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
            target: "java.util.Optional"
          suggestedContent: !<optional>
            value:
              sapientType: "OBJECT"
              content: !<static_method_return>
                target: "java.time.Instant"
                method: "now"
                methodParameters: []
              suggestedContent: !<static_method_return>
                target: "java.time.Instant"
                method: "now"
                methodParameters: []
              valueType: "java.time.Instant"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
            target: "java.util.Optional"
          valueType: "java.util.Optional"
          genericValueType: "java.time.Instant"
          uuid: "serializeEncryptableItem_optional1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 1025
      staticReadMethodForField: false
      filledByUser: false
    - type: "LOCAL_VARIABLE"
      name: "proto"
      modelFingerprint: "FD2265A8AE140C4217F0071312C9C084"
      index: 4
      ignored: false
      nestedInLoop: true
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        suggestedContent: !<unknown_object>
          target: "org.bitcoinj.protobuf.wallet.Protos$Key$Builder"
          onlyPojoFunctions: false
          builderPattern: false
        valueType: "org.bitcoinj.protobuf.wallet.Protos$Key$Builder"
        uuid: "serializeEncryptableItem_protos.Key.Builder1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "proto"
        name: "setCreationTimestamp"
        parameters:
        - name: "value"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 1703144038677
            valueType: "long"
            uuid: "lambda$serializeEncryptableItem$4_long1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "setCreationTimestamp(long): Protos$Key$Builder"
        returnValue:
          sapientType: "MOCK"
          suggestedContent: !<unknown_object>
            target: "org.bitcoinj.protobuf.wallet.Protos$Key$Builder"
            onlyPojoFunctions: false
            builderPattern: false
          valueType: "org.bitcoinj.protobuf.wallet.Protos$Key$Builder"
          uuid: "lambda$serializeEncryptableItem$4_protos.Key.Builder1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 1
      staticReadMethodForField: false
      filledByUser: false
    - type: "LOCAL_VARIABLE"
      name: "item"
      modelFingerprint: "96710194E7BF4420E9FF3D0442A67CC7"
      index: 5
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        suggestedContent: !<unknown_object>
          target: "org.bitcoinj.crypto.EncryptableItem"
          onlyPojoFunctions: false
          builderPattern: false
        valueType: "org.bitcoinj.crypto.EncryptableItem"
        uuid: "serializeEncryptableItem_encryptableItem1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "item"
        name: "isEncrypted"
        parameters: []
        signature: "isEncrypted(): boolean"
        returnValue:
          sapientType: "BASIC"
          content: !<regular>
            value: false
          suggestedContent: !<regular>
            value: false
          valueType: "boolean"
          uuid: "serializeEncryptableItem_boolean1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 1025
      staticReadMethodForField: false
      filledByUser: false
    - type: "LOCAL_VARIABLE"
      name: "item"
      modelFingerprint: "7648BF77E9E54FEBA378B1FC1C5C5E9B"
      index: 6
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        suggestedContent: !<unknown_object>
          target: "org.bitcoinj.crypto.EncryptableItem"
          onlyPojoFunctions: false
          builderPattern: false
        valueType: "org.bitcoinj.crypto.EncryptableItem"
        uuid: "serializeEncryptableItem_encryptableItem1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "item"
        name: "getSecretBytes"
        parameters: []
        signature: "getSecretBytes(): byte[]"
        returnValue:
          sapientType: "ARRAY"
          content: !<array>
            values: {}
          suggestedContent: !<array>
            values: {}
          valueType: "byte[]"
          uuid: "serializeEncryptableItem_byte[]1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 1025
      staticReadMethodForField: false
      filledByUser: false
    - type: "STATIC"
      name: "ByteString"
      modelFingerprint: "CC86FEC8BAEFED1CD48A46419FABD5DA"
      index: 7
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        valueType: "com.google.protobuf.ByteString"
        uuid: "com.google.protobuf.ByteString"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "com.google.protobuf.ByteString"
        name: "copyFrom"
        parameters:
        - name: "bytes"
          value:
            sapientType: "ARRAY"
            content: !<array>
              values: {}
            suggestedContent: !<array>
              values: {}
            valueType: "byte[]"
            uuid: "serializeEncryptableItem_byte[]1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "copyFrom(byte[]): ByteString"
        returnValue:
          sapientType: "OBJECT"
          content: !<static_method_return>
            target: "com.google.protobuf.ByteString"
            method: "empty"
            methodParameters: []
          suggestedContent: !<static_method_return>
            target: "com.google.protobuf.ByteString"
            method: "empty"
            methodParameters: []
          valueType: "com.google.protobuf.ByteString"
          uuid: "serializeEncryptableItem_byteString1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 9
      staticReadMethodForField: false
      filledByUser: false
    - type: "LOCAL_VARIABLE"
      name: "proto"
      modelFingerprint: "E8E1AD1181835CB87A93892B2D241F04"
      index: 8
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        suggestedContent: !<unknown_object>
          target: "org.bitcoinj.protobuf.wallet.Protos$Key$Builder"
          onlyPojoFunctions: false
          builderPattern: false
        valueType: "org.bitcoinj.protobuf.wallet.Protos$Key$Builder"
        uuid: "serializeEncryptableItem_protos.Key.Builder1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "proto"
        name: "setSecretBytes"
        parameters:
        - name: "value"
          value:
            sapientType: "OBJECT"
            content: !<static_method_return>
              target: "com.google.protobuf.ByteString"
              method: "empty"
              methodParameters: []
            suggestedContent: !<static_method_return>
              target: "com.google.protobuf.ByteString"
              method: "empty"
              methodParameters: []
            valueType: "com.google.protobuf.ByteString"
            uuid: "serializeEncryptableItem_byteString1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "setSecretBytes(ByteString): Protos$Key$Builder"
        returnValue:
          sapientType: "MOCK"
          suggestedContent: !<unknown_object>
            target: "org.bitcoinj.protobuf.wallet.Protos$Key$Builder"
            onlyPojoFunctions: false
            builderPattern: false
          valueType: "org.bitcoinj.protobuf.wallet.Protos$Key$Builder"
          uuid: "serializeEncryptableItem_protos.Key.Builder2"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 1
      staticReadMethodForField: false
      filledByUser: false
    - type: "LOCAL_VARIABLE"
      name: "proto"
      modelFingerprint: "AF2B402018DEF4FE7754598647E3FA34"
      index: 9
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        suggestedContent: !<unknown_object>
          target: "org.bitcoinj.protobuf.wallet.Protos$Key$Builder"
          onlyPojoFunctions: false
          builderPattern: false
        valueType: "org.bitcoinj.protobuf.wallet.Protos$Key$Builder"
        uuid: "serializeEncryptableItem_protos.Key.Builder1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "proto"
        name: "setType"
        parameters:
        - name: "value"
          value:
            sapientType: "ENUM"
            content: !<regular>
              value: "ORIGINAL"
            valueType: "org.bitcoinj.protobuf.wallet.Protos$Key$Type"
            uuid: "Enum-org.bitcoinj.protobuf.wallet.Protos$Key$Type-ORIGINAL"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "setType(Protos$Key$Type): Protos$Key$Builder"
        returnValue:
          sapientType: "MOCK"
          suggestedContent: !<unknown_object>
            target: "org.bitcoinj.protobuf.wallet.Protos$Key$Builder"
            onlyPojoFunctions: false
            builderPattern: false
          valueType: "org.bitcoinj.protobuf.wallet.Protos$Key$Builder"
          uuid: "serializeEncryptableItem_protos.Key.Builder3"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 1
      staticReadMethodForField: false
      filledByUser: false
    - type: "RESULT"
      name: "result"
      modelFingerprint: "F3846077862D4A9B15E7CD87B3F6DF36"
      index: 10
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        suggestedContent: !<unknown_object>
          target: "org.bitcoinj.protobuf.wallet.Protos$Key$Builder"
          onlyPojoFunctions: false
          builderPattern: false
        valueType: "org.bitcoinj.protobuf.wallet.Protos$Key$Builder"
        uuid: "serializeEncryptableItem_protos.Key.Builder1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    uuid: "c57e4a51-6b5c-38f6-af65-31609a3c64a3"
    deleted: false
    disabled: true
    ignoredBySystem: false
    prover: "LLM"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: true
  - pathId: "path4"
    pathIdForUser: "path6"
    testPathName: "serializeEncryptableItemWhenItemGetEncryptedDataIsNullAndSecretIsNull"
    nameDefinedByUser: false
    priorityDefinedByUser: false
    filledByUser: false
    priority: "LOW"
    modelFingerprint: "61A68B7DEDA624E9F3C593C593C14AE5"
    problemWasSolvedByProver: false
    truncated: true
    inputParameters: []
    uuid: "7767b577-1ca4-349a-b642-e5b234c8582b"
    deleted: true
    disabled: false
    ignoredBySystem: true
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
- method:
    name: "fromProtobufUnencrypted"
    returnType: "org.bitcoinj.wallet.BasicKeyChain"
    signature: "fromProtobufUnencrypted(java.util.List<org.bitcoinj.protobuf.wallet.Protos$Key>)\
      \ : org.bitcoinj.wallet.BasicKeyChain"
    throwsExceptions:
    - "org.bitcoinj.wallet.UnreadableWalletException"
    instructionFingerprint: "D6713B638C6850F9B75471A2A90E25BD"
    parametersTypes:
    - "java.util.List"
  paths:
  - pathId: "path1"
    pathIdForUser: "path1"
    testPathName: "fromProtobufUnencryptedTest"
    nameDefinedByUser: false
    priorityDefinedByUser: false
    filledByUser: false
    priority: "LOW"
    modelFingerprint: "519474F1424EA39BAD641415D3AB3C3E"
    problemWasSolvedByProver: false
    truncated: false
    inputParameters:
    - type: "INPUT"
      name: "keys"
      modelFingerprint: "5B3901672C9DA23FB3FC6A4D12E89A88"
      index: 1
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "COLLECTION"
        content: !<collection>
          collectionClass: "java.util.ArrayList"
          parameters: []
          values: []
        suggestedContent: !<collection>
          collectionClass: "java.util.ArrayList"
          parameters: []
          values: []
        valueType: "java.util.List"
        genericValueType: "org.bitcoinj.protobuf.wallet.Protos$Key"
        uuid: "fromProtobufUnencrypted_list1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    - type: "STATIC"
      name: "Threading"
      modelFingerprint: "0D4103179D909C67DEE8A906C8C7511A"
      index: 2
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        valueType: "org.bitcoinj.utils.Threading"
        uuid: "org.bitcoinj.utils.Threading"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "org.bitcoinj.utils.Threading"
        name: "lock"
        parameters:
        - name: "clazz"
          value:
            sapientType: "CLASS"
            content: !<regular>
              value: "org.bitcoinj.wallet.BasicKeyChain"
            valueType: "java.lang.Class"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "lock(Class): ReentrantLock"
        returnValue:
          sapientType: "OBJECT"
          content: !<static_method_return>
            target: "org.bitcoinj.utils.Threading"
            method: "lock"
            methodParameters:
            - value:
                sapientType: "CLASS"
                content: !<regular>
                  value: "org.bitcoinj.wallet.BasicKeyChain"
                valueType: "java.lang.Class"
                fixed: true
                equalsMethodPresent: false
                explicitCastNeeded: false
          suggestedContent: !<static_method_return>
            target: "org.bitcoinj.utils.Threading"
            method: "lock"
            methodParameters:
            - value:
                sapientType: "CLASS"
                content: !<regular>
                  value: "org.bitcoinj.wallet.BasicKeyChain"
                valueType: "java.lang.Class"
                fixed: true
                equalsMethodPresent: false
                explicitCastNeeded: false
          valueType: "java.util.concurrent.locks.ReentrantLock"
          uuid: "<init>_reentrantLock1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 9
      staticReadMethodForField: false
      filledByUser: false
    - type: "LOCAL_VARIABLE"
      name: "chain"
      modelFingerprint: "4C1B7B015FB9D3A7BC889D4648C02C43"
      index: 3
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "OBJECT"
        content: !<new>
          target: "org.bitcoinj.wallet.BasicKeyChain"
          parameters: []
          privateConstructor: false
          createdByTargetCode: true
        suggestedContent: !<new>
          target: "org.bitcoinj.wallet.BasicKeyChain"
          parameters: []
          privateConstructor: false
          createdByTargetCode: true
        valueType: "org.bitcoinj.wallet.BasicKeyChain"
        uuid: "fromProtobufUnencrypted_basicKeyChain1"
        fixed: true
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "chain"
        name: "deserializeFromProtobuf"
        parameters:
        - name: "keys"
          value:
            sapientType: "COLLECTION"
            content: !<collection>
              collectionClass: "java.util.ArrayList"
              parameters: []
              values: []
            suggestedContent: !<collection>
              collectionClass: "java.util.ArrayList"
              parameters: []
              values: []
            valueType: "java.util.List"
            genericValueType: "org.bitcoinj.protobuf.wallet.Protos$Key"
            uuid: "fromProtobufUnencrypted_list1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        throwsExceptions:
        - "org.bitcoinj.wallet.UnreadableWalletException"
        signature: "deserializeFromProtobuf(List): void throws org.bitcoinj.wallet.UnreadableWalletException"
        returnValue:
          sapientType: "VOID"
          valueType: "void"
          uuid: "fromProtobufUnencrypted_void1"
          fixed: true
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 2
      staticReadMethodForField: false
      filledByUser: false
    - type: "RESULT"
      name: "result"
      modelFingerprint: "88D58C66A1884AF62C8AB2C09B073734"
      index: 4
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "OBJECT"
        content: !<new>
          target: "org.bitcoinj.wallet.BasicKeyChain"
          parameters: []
          privateConstructor: false
          createdByTargetCode: true
        suggestedContent: !<new>
          target: "org.bitcoinj.wallet.BasicKeyChain"
          parameters: []
          privateConstructor: false
          createdByTargetCode: true
        valueType: "org.bitcoinj.wallet.BasicKeyChain"
        uuid: "fromProtobufUnencrypted_basicKeyChain1"
        fixed: true
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    uuid: "eabd3d02-7d16-38fc-868d-6e8863269a78"
    deleted: false
    disabled: true
    ignoredBySystem: false
    variablesCouldNotBeIsolated: "chain"
    prover: "LLM"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: true
- method:
    name: "fromProtobufEncrypted"
    returnType: "org.bitcoinj.wallet.BasicKeyChain"
    signature: "fromProtobufEncrypted(java.util.List<org.bitcoinj.protobuf.wallet.Protos$Key>,org.bitcoinj.crypto.KeyCrypter)\
      \ : org.bitcoinj.wallet.BasicKeyChain"
    throwsExceptions:
    - "org.bitcoinj.wallet.UnreadableWalletException"
    instructionFingerprint: "0B18532DDE1D6CE29473160EA5DEC538"
    parametersTypes:
    - "java.util.List"
    - "org.bitcoinj.crypto.KeyCrypter"
  paths:
  - pathId: "path1"
    pathIdForUser: "path1"
    testPathName: "fromProtobufEncryptedTest"
    nameDefinedByUser: false
    priorityDefinedByUser: false
    filledByUser: false
    priority: "LOW"
    modelFingerprint: "ABBD73D56CF3837EF4FBC8A63DB9C1BC"
    problemWasSolvedByProver: false
    truncated: false
    inputParameters:
    - type: "INPUT"
      name: "keys"
      modelFingerprint: "5B3901672C9DA23FB3FC6A4D12E89A88"
      index: 1
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "COLLECTION"
        content: !<collection>
          collectionClass: "java.util.ArrayList"
          parameters: []
          values: []
        suggestedContent: !<collection>
          collectionClass: "java.util.ArrayList"
          parameters: []
          values: []
        valueType: "java.util.List"
        genericValueType: "org.bitcoinj.protobuf.wallet.Protos$Key"
        uuid: "fromProtobufEncrypted_list1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    - type: "INPUT"
      name: "crypter"
      modelFingerprint: "745B2FE0EB74A91913C92410643B1E51"
      index: 2
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        suggestedContent: !<unknown_object>
          target: "org.bitcoinj.crypto.KeyCrypter"
          onlyPojoFunctions: false
          builderPattern: false
        valueType: "org.bitcoinj.crypto.KeyCrypter"
        uuid: "fromProtobufEncrypted_keyCrypter1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    - type: "STATIC"
      name: "Threading"
      modelFingerprint: "174F7683379F425D09733051F3BCE619"
      index: 3
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        valueType: "org.bitcoinj.utils.Threading"
        uuid: "org.bitcoinj.utils.Threading"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "org.bitcoinj.utils.Threading"
        name: "lock"
        parameters:
        - name: "clazz"
          value:
            sapientType: "CLASS"
            content: !<regular>
              value: "org.bitcoinj.wallet.BasicKeyChain"
            valueType: "java.lang.Class"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "lock(Class): ReentrantLock"
        returnValue:
          sapientType: "NULL"
          content: !<unknown_object>
            target: "java.util.concurrent.locks.ReentrantLock"
            onlyPojoFunctions: true
            builderPattern: false
          suggestedContent: !<unknown_object>
            target: "java.util.concurrent.locks.ReentrantLock"
            onlyPojoFunctions: true
            builderPattern: false
          valueType: "java.util.concurrent.locks.ReentrantLock"
          uuid: "<init>_reentrantLock1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 9
      staticReadMethodForField: false
      filledByUser: false
    - type: "LOCAL_VARIABLE"
      name: "chain"
      modelFingerprint: "62769531E16AD9BF6E88C769B2824F85"
      index: 4
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "OBJECT"
        content: !<new>
          target: "org.bitcoinj.wallet.BasicKeyChain"
          parameters:
          - name: "crypter"
            value:
              sapientType: "MOCK"
              suggestedContent: !<unknown_object>
                target: "org.bitcoinj.crypto.KeyCrypter"
                onlyPojoFunctions: false
                builderPattern: false
              valueType: "org.bitcoinj.crypto.KeyCrypter"
              uuid: "fromProtobufEncrypted_keyCrypter1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: true
        suggestedContent: !<new>
          target: "org.bitcoinj.wallet.BasicKeyChain"
          parameters:
          - name: "crypter"
            value:
              sapientType: "MOCK"
              suggestedContent: !<unknown_object>
                target: "org.bitcoinj.crypto.KeyCrypter"
                onlyPojoFunctions: false
                builderPattern: false
              valueType: "org.bitcoinj.crypto.KeyCrypter"
              uuid: "fromProtobufEncrypted_keyCrypter1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: true
        valueType: "org.bitcoinj.wallet.BasicKeyChain"
        uuid: "fromProtobufEncrypted_basicKeyChain1"
        fixed: true
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "chain"
        name: "deserializeFromProtobuf"
        parameters:
        - name: "keys"
          value:
            sapientType: "COLLECTION"
            content: !<collection>
              collectionClass: "java.util.ArrayList"
              parameters: []
              values: []
            suggestedContent: !<collection>
              collectionClass: "java.util.ArrayList"
              parameters: []
              values: []
            valueType: "java.util.List"
            genericValueType: "org.bitcoinj.protobuf.wallet.Protos$Key"
            uuid: "fromProtobufEncrypted_list1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        throwsExceptions:
        - "org.bitcoinj.wallet.UnreadableWalletException"
        signature: "deserializeFromProtobuf(List): void throws org.bitcoinj.wallet.UnreadableWalletException"
        returnValue:
          sapientType: "VOID"
          valueType: "void"
          uuid: "fromProtobufEncrypted_void1"
          fixed: true
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 2
      staticReadMethodForField: false
      filledByUser: false
    - type: "RESULT"
      name: "result"
      modelFingerprint: "A6078F31EE2A6D62A06C9358D2ABCFA8"
      index: 5
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "OBJECT"
        content: !<new>
          target: "org.bitcoinj.wallet.BasicKeyChain"
          parameters:
          - name: "crypter"
            value:
              sapientType: "MOCK"
              suggestedContent: !<unknown_object>
                target: "org.bitcoinj.crypto.KeyCrypter"
                onlyPojoFunctions: false
                builderPattern: false
              valueType: "org.bitcoinj.crypto.KeyCrypter"
              uuid: "fromProtobufEncrypted_keyCrypter1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: true
        suggestedContent: !<new>
          target: "org.bitcoinj.wallet.BasicKeyChain"
          parameters:
          - name: "crypter"
            value:
              sapientType: "MOCK"
              suggestedContent: !<unknown_object>
                target: "org.bitcoinj.crypto.KeyCrypter"
                onlyPojoFunctions: false
                builderPattern: false
              valueType: "org.bitcoinj.crypto.KeyCrypter"
              uuid: "fromProtobufEncrypted_keyCrypter1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: true
        valueType: "org.bitcoinj.wallet.BasicKeyChain"
        uuid: "fromProtobufEncrypted_basicKeyChain1"
        fixed: true
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    uuid: "fdf441cb-65fe-3b5c-b115-cf990a61aa5e"
    deleted: false
    disabled: true
    ignoredBySystem: false
    variablesCouldNotBeIsolated: "chain"
    prover: "LLM"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: true
- method:
    name: "addEventListener"
    returnType: "void"
    signature: "addEventListener(org.bitcoinj.wallet.listeners.KeyChainEventListener)\
      \ : void"
    instructionFingerprint: "3109EF994CC57651D6354429F17001FA"
    parametersTypes:
    - "org.bitcoinj.wallet.listeners.KeyChainEventListener"
  paths:
  - pathId: "path1"
    pathIdForUser: "path1"
    testPathName: "addEventListenerTest"
    nameDefinedByUser: false
    constructorSignature: "<init>(org.bitcoinj.crypto.KeyCrypter) : void"
    priorityDefinedByUser: false
    filledByUser: false
    priority: "LOW"
    modelFingerprint: "E5072D99BB434784CB5716DFE85E546E"
    problemWasSolvedByProver: true
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "35099553EB48D2AEC42E2A9279A21C51"
      index: 1
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "OBJECT"
        content: !<new>
          target: "org.bitcoinj.wallet.BasicKeyChain"
          parameters:
          - name: "crypter"
            value:
              sapientType: "MOCK"
              valueType: "org.bitcoinj.crypto.KeyCrypter"
              uuid: "<init>_keyCrypter1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: false
        suggestedContent: !<new>
          target: "org.bitcoinj.wallet.BasicKeyChain"
          parameters:
          - name: "crypter"
            value:
              sapientType: "UNKNOWN"
              valueType: "org.bitcoinj.crypto.KeyCrypter"
              uuid: "<init>_keyCrypter1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: false
        valueType: "org.bitcoinj.wallet.BasicKeyChain"
        uuid: "target"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    - type: "INPUT"
      name: "listener"
      modelFingerprint: "471320B8B0C8D874D42F1BA714E65624"
      index: 2
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        valueType: "org.bitcoinj.wallet.listeners.KeyChainEventListener"
        uuid: "addEventListener_keyChainEventListener1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    - type: "STATIC"
      name: "Threading"
      modelFingerprint: "931BDCE1DF6454A48EA195CE5432B664"
      index: 3
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "REAL"
        valueType: "org.bitcoinj.utils.Threading"
        uuid: "org.bitcoinj.utils.Threading"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "org.bitcoinj.utils.Threading"
        name: "lock"
        parameters:
        - name: "clazz"
          value:
            sapientType: "CLASS"
            content: !<regular>
              value: "org.bitcoinj.wallet.BasicKeyChain"
            valueType: "java.lang.Class"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "lock(Class): ReentrantLock"
        returnValue:
          sapientType: "OBJECT"
          content: !<static_method_return>
            target: "org.bitcoinj.utils.Threading"
            method: "lock"
            methodParameters:
            - value:
                sapientType: "CLASS"
                content: !<regular>
                  value: "org.bitcoinj.wallet.BasicKeyChain"
                valueType: "java.lang.Class"
                fixed: true
                equalsMethodPresent: false
                explicitCastNeeded: false
          suggestedContent: !<static_method_return>
            target: "org.bitcoinj.utils.Threading"
            method: "lock"
            methodParameters:
            - value:
                sapientType: "CLASS"
                content: !<regular>
                  value: "org.bitcoinj.wallet.BasicKeyChain"
                valueType: "java.lang.Class"
                fixed: true
                equalsMethodPresent: false
                explicitCastNeeded: false
          valueType: "java.util.concurrent.locks.ReentrantLock"
          uuid: "<init>_reentrantLock1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 9
      staticReadMethodForField: false
      filledByUser: false
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "9D406344E910A5F2B8639294F6F839B5"
      index: 4
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      methodExercised:
        target: "target"
        name: "addEventListener"
        parameters:
        - name: "listener"
          value:
            sapientType: "MOCK"
            valueType: "org.bitcoinj.wallet.listeners.KeyChainEventListener"
            uuid: "addEventListener_keyChainEventListener1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "executor"
          value:
            sapientType: "NULL"
            suggestedContent: !<unknown_object>
              target: "java.util.concurrent.Executor"
              onlyPojoFunctions: false
              builderPattern: false
            valueType: "java.util.concurrent.Executor"
            uuid: "addEventListener_executor1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "addEventListener(KeyChainEventListener,Executor): void"
        returnValue:
          sapientType: "VOID"
          valueType: "void"
          uuid: "addEventListener_void1"
          fixed: true
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 1
      staticReadMethodForField: false
      filledByUser: false
    - type: "RESULT"
      name: "result"
      modelFingerprint: "68041019986276EDF5D420282D883A57"
      index: 5
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "VOID"
        fixed: true
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    uuid: "0b160154-951e-3a14-95bd-e6793a7bce96"
    deleted: false
    disabled: true
    ignoredBySystem: false
    prover: "DEFAULT"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: true
- method:
    name: "addEventListener"
    returnType: "void"
    signature: "addEventListener(org.bitcoinj.wallet.listeners.KeyChainEventListener,java.util.concurrent.Executor)\
      \ : void"
    instructionFingerprint: "0844C071EAA5E0B5396BF5CE0B7B1320"
    parametersTypes:
    - "org.bitcoinj.wallet.listeners.KeyChainEventListener"
    - "java.util.concurrent.Executor"
  paths:
  - pathId: "path1"
    pathIdForUser: "path1"
    testPathName: "addEventListener1Test"
    nameDefinedByUser: false
    constructorSignature: "<init>(org.bitcoinj.crypto.KeyCrypter) : void"
    priorityDefinedByUser: false
    filledByUser: false
    priority: "LOW"
    modelFingerprint: "B30D564101B22C9B4110F7FFD4E43DC5"
    problemWasSolvedByProver: true
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "35099553EB48D2AEC42E2A9279A21C51"
      index: 1
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "OBJECT"
        content: !<new>
          target: "org.bitcoinj.wallet.BasicKeyChain"
          parameters:
          - name: "crypter"
            value:
              sapientType: "MOCK"
              valueType: "org.bitcoinj.crypto.KeyCrypter"
              uuid: "<init>_keyCrypter1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: false
        suggestedContent: !<new>
          target: "org.bitcoinj.wallet.BasicKeyChain"
          parameters:
          - name: "crypter"
            value:
              sapientType: "UNKNOWN"
              valueType: "org.bitcoinj.crypto.KeyCrypter"
              uuid: "<init>_keyCrypter1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: false
        valueType: "org.bitcoinj.wallet.BasicKeyChain"
        uuid: "target"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    - type: "INPUT"
      name: "listener"
      modelFingerprint: "471320B8B0C8D874D42F1BA714E65624"
      index: 2
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        valueType: "org.bitcoinj.wallet.listeners.KeyChainEventListener"
        uuid: "addEventListener_keyChainEventListener1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    - type: "INPUT"
      name: "executor"
      modelFingerprint: "98E456839F40A27F98C7C36BBD1A9805"
      index: 3
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "NULL"
        suggestedContent: !<unknown_object>
          target: "java.util.concurrent.Executor"
          onlyPojoFunctions: false
          builderPattern: false
        valueType: "java.util.concurrent.Executor"
        uuid: "addEventListener_executor1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    - type: "STATIC"
      name: "Threading"
      modelFingerprint: "931BDCE1DF6454A48EA195CE5432B664"
      index: 4
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "REAL"
        valueType: "org.bitcoinj.utils.Threading"
        uuid: "org.bitcoinj.utils.Threading"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "org.bitcoinj.utils.Threading"
        name: "lock"
        parameters:
        - name: "clazz"
          value:
            sapientType: "CLASS"
            content: !<regular>
              value: "org.bitcoinj.wallet.BasicKeyChain"
            valueType: "java.lang.Class"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "lock(Class): ReentrantLock"
        returnValue:
          sapientType: "OBJECT"
          content: !<static_method_return>
            target: "org.bitcoinj.utils.Threading"
            method: "lock"
            methodParameters:
            - value:
                sapientType: "CLASS"
                content: !<regular>
                  value: "org.bitcoinj.wallet.BasicKeyChain"
                valueType: "java.lang.Class"
                fixed: true
                equalsMethodPresent: false
                explicitCastNeeded: false
          suggestedContent: !<static_method_return>
            target: "org.bitcoinj.utils.Threading"
            method: "lock"
            methodParameters:
            - value:
                sapientType: "CLASS"
                content: !<regular>
                  value: "org.bitcoinj.wallet.BasicKeyChain"
                valueType: "java.lang.Class"
                fixed: true
                equalsMethodPresent: false
                explicitCastNeeded: false
          valueType: "java.util.concurrent.locks.ReentrantLock"
          uuid: "<init>_reentrantLock1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 9
      staticReadMethodForField: false
      filledByUser: false
    - type: "RESULT"
      name: "result"
      modelFingerprint: "68041019986276EDF5D420282D883A57"
      index: 5
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "VOID"
        fixed: true
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    uuid: "283de23e-4782-3528-be05-a980b30b2663"
    deleted: false
    disabled: true
    ignoredBySystem: false
    prover: "DEFAULT"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: true
- method:
    name: "addEventListener"
    returnType: "void"
    signature: "addEventListener(org.bitcoinj.utils.ListenerRegistration<org.bitcoinj.wallet.listeners.KeyChainEventListener>)\
      \ : void"
    instructionFingerprint: "112DA360D522E18BFFCBA5E76DF72A51"
    parametersTypes:
    - "org.bitcoinj.utils.ListenerRegistration"
  paths:
  - pathId: "path1"
    pathIdForUser: "path1"
    testPathName: "addEventListener2Test"
    nameDefinedByUser: false
    constructorSignature: "<init>(org.bitcoinj.crypto.KeyCrypter) : void"
    priorityDefinedByUser: false
    filledByUser: false
    priority: "LOW"
    modelFingerprint: "168193335A4717E4E83F3611F980D74F"
    problemWasSolvedByProver: true
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "35099553EB48D2AEC42E2A9279A21C51"
      index: 1
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "OBJECT"
        content: !<new>
          target: "org.bitcoinj.wallet.BasicKeyChain"
          parameters:
          - name: "crypter"
            value:
              sapientType: "MOCK"
              valueType: "org.bitcoinj.crypto.KeyCrypter"
              uuid: "<init>_keyCrypter1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: false
        suggestedContent: !<new>
          target: "org.bitcoinj.wallet.BasicKeyChain"
          parameters:
          - name: "crypter"
            value:
              sapientType: "UNKNOWN"
              valueType: "org.bitcoinj.crypto.KeyCrypter"
              uuid: "<init>_keyCrypter1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: false
        valueType: "org.bitcoinj.wallet.BasicKeyChain"
        uuid: "target"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    - type: "INPUT"
      name: "listener"
      modelFingerprint: "0940818736FC119671F6D28581D127B5"
      index: 2
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        valueType: "org.bitcoinj.utils.ListenerRegistration"
        genericValueType: "org.bitcoinj.wallet.listeners.KeyChainEventListener"
        uuid: "addEventListener_listenerRegistration1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    - type: "STATIC"
      name: "Threading"
      modelFingerprint: "931BDCE1DF6454A48EA195CE5432B664"
      index: 3
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "REAL"
        valueType: "org.bitcoinj.utils.Threading"
        uuid: "org.bitcoinj.utils.Threading"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "org.bitcoinj.utils.Threading"
        name: "lock"
        parameters:
        - name: "clazz"
          value:
            sapientType: "CLASS"
            content: !<regular>
              value: "org.bitcoinj.wallet.BasicKeyChain"
            valueType: "java.lang.Class"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "lock(Class): ReentrantLock"
        returnValue:
          sapientType: "OBJECT"
          content: !<static_method_return>
            target: "org.bitcoinj.utils.Threading"
            method: "lock"
            methodParameters:
            - value:
                sapientType: "CLASS"
                content: !<regular>
                  value: "org.bitcoinj.wallet.BasicKeyChain"
                valueType: "java.lang.Class"
                fixed: true
                equalsMethodPresent: false
                explicitCastNeeded: false
          suggestedContent: !<static_method_return>
            target: "org.bitcoinj.utils.Threading"
            method: "lock"
            methodParameters:
            - value:
                sapientType: "CLASS"
                content: !<regular>
                  value: "org.bitcoinj.wallet.BasicKeyChain"
                valueType: "java.lang.Class"
                fixed: true
                equalsMethodPresent: false
                explicitCastNeeded: false
          valueType: "java.util.concurrent.locks.ReentrantLock"
          uuid: "<init>_reentrantLock1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 9
      staticReadMethodForField: false
      filledByUser: false
    - type: "RESULT"
      name: "result"
      modelFingerprint: "68041019986276EDF5D420282D883A57"
      index: 4
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "VOID"
        fixed: true
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    uuid: "8fc36a2a-7a2b-30fb-8f9a-ff37f2073d36"
    deleted: false
    disabled: false
    ignoredBySystem: false
    prover: "DEFAULT"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
- method:
    name: "removeEventListener"
    returnType: "boolean"
    signature: "removeEventListener(org.bitcoinj.wallet.listeners.KeyChainEventListener)\
      \ : boolean"
    instructionFingerprint: "F2C05897187F219E09A2744CFE4F617F"
    parametersTypes:
    - "org.bitcoinj.wallet.listeners.KeyChainEventListener"
  paths:
  - pathId: "path1"
    pathIdForUser: "path1"
    testPathName: "removeEventListenerWhenListenerRegistrationRemoveFromListListenerListeners"
    nameDefinedByUser: false
    constructorSignature: "<init>(org.bitcoinj.crypto.KeyCrypter) : void"
    priorityDefinedByUser: false
    filledByUser: false
    priority: "LOW"
    modelFingerprint: "323D40822F5ED61890A21C416A2BB5EA"
    problemWasSolvedByProver: true
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "35099553EB48D2AEC42E2A9279A21C51"
      index: 1
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "OBJECT"
        content: !<new>
          target: "org.bitcoinj.wallet.BasicKeyChain"
          parameters:
          - name: "crypter"
            value:
              sapientType: "MOCK"
              valueType: "org.bitcoinj.crypto.KeyCrypter"
              uuid: "<init>_keyCrypter1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: false
        suggestedContent: !<new>
          target: "org.bitcoinj.wallet.BasicKeyChain"
          parameters:
          - name: "crypter"
            value:
              sapientType: "UNKNOWN"
              valueType: "org.bitcoinj.crypto.KeyCrypter"
              uuid: "<init>_keyCrypter1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: false
        valueType: "org.bitcoinj.wallet.BasicKeyChain"
        uuid: "target"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    - type: "INPUT"
      name: "listener"
      modelFingerprint: "471320B8B0C8D874D42F1BA714E65624"
      index: 2
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        valueType: "org.bitcoinj.wallet.listeners.KeyChainEventListener"
        uuid: "removeEventListener_keyChainEventListener1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    - type: "STATIC"
      name: "Threading"
      modelFingerprint: "931BDCE1DF6454A48EA195CE5432B664"
      index: 3
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "REAL"
        valueType: "org.bitcoinj.utils.Threading"
        uuid: "org.bitcoinj.utils.Threading"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "org.bitcoinj.utils.Threading"
        name: "lock"
        parameters:
        - name: "clazz"
          value:
            sapientType: "CLASS"
            content: !<regular>
              value: "org.bitcoinj.wallet.BasicKeyChain"
            valueType: "java.lang.Class"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "lock(Class): ReentrantLock"
        returnValue:
          sapientType: "OBJECT"
          content: !<static_method_return>
            target: "org.bitcoinj.utils.Threading"
            method: "lock"
            methodParameters:
            - value:
                sapientType: "CLASS"
                content: !<regular>
                  value: "org.bitcoinj.wallet.BasicKeyChain"
                valueType: "java.lang.Class"
                fixed: true
                equalsMethodPresent: false
                explicitCastNeeded: false
          suggestedContent: !<static_method_return>
            target: "org.bitcoinj.utils.Threading"
            method: "lock"
            methodParameters:
            - value:
                sapientType: "CLASS"
                content: !<regular>
                  value: "org.bitcoinj.wallet.BasicKeyChain"
                valueType: "java.lang.Class"
                fixed: true
                equalsMethodPresent: false
                explicitCastNeeded: false
          valueType: "java.util.concurrent.locks.ReentrantLock"
          uuid: "<init>_reentrantLock1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 9
      staticReadMethodForField: false
      filledByUser: false
    - type: "STATIC"
      name: "ListenerRegistration"
      modelFingerprint: "197BEA264D2E271243006804D99848DF"
      index: 4
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        valueType: "org.bitcoinj.utils.ListenerRegistration"
        uuid: "org.bitcoinj.utils.ListenerRegistration"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "org.bitcoinj.utils.ListenerRegistration"
        name: "removeFromList"
        parameters:
        - name: "listener"
          value:
            sapientType: "MOCK"
            valueType: "org.bitcoinj.wallet.listeners.KeyChainEventListener"
            uuid: "removeEventListener_keyChainEventListener1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "list"
          value:
            sapientType: "COLLECTION"
            content: !<collection>
              collectionClass: "java.util.concurrent.CopyOnWriteArrayList"
              parameters: []
              values: []
            suggestedContent: !<collection>
              collectionClass: "java.util.concurrent.CopyOnWriteArrayList"
              parameters: []
              values: []
            valueType: "java.util.concurrent.CopyOnWriteArrayList"
            genericValueType: "org.bitcoinj.utils.ListenerRegistration<org.bitcoinj.wallet.listeners.KeyChainEventListener>"
            uuid: "<init>_copyOnWriteArrayList1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "removeFromList(KeyChainEventListener,CopyOnWriteArrayList): boolean"
        returnValue:
          sapientType: "BASIC"
          content: !<regular>
            value: true
          valueType: "boolean"
          uuid: "removeEventListener_boolean1"
          fixed: true
          equalsMethodPresent: true
          explicitCastNeeded: false
        access: 9
      staticReadMethodForField: false
      filledByUser: false
    - type: "RESULT"
      name: "result"
      modelFingerprint: "753659628F1B3F179A2EF0629F555437"
      index: 5
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "BASIC"
        content: !<regular>
          value: true
        valueType: "boolean"
        uuid: "removeEventListener_boolean1"
        fixed: true
        equalsMethodPresent: true
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    uuid: "278547ff-7b2e-3fb2-965f-5808a178e872"
    deleted: false
    disabled: false
    ignoredBySystem: false
    prover: "DEFAULT"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
  - pathId: "path2"
    pathIdForUser: "path2"
    testPathName: "removeEventListenerWhenListenerRegistrationNotRemoveFromListListenerListeners"
    nameDefinedByUser: false
    constructorSignature: "<init>(org.bitcoinj.crypto.KeyCrypter) : void"
    priorityDefinedByUser: false
    filledByUser: false
    priority: "LOW"
    modelFingerprint: "2942339E171F74753663BBF82F4C3139"
    problemWasSolvedByProver: true
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "35099553EB48D2AEC42E2A9279A21C51"
      index: 1
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "OBJECT"
        content: !<new>
          target: "org.bitcoinj.wallet.BasicKeyChain"
          parameters:
          - name: "crypter"
            value:
              sapientType: "MOCK"
              valueType: "org.bitcoinj.crypto.KeyCrypter"
              uuid: "<init>_keyCrypter1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: false
        suggestedContent: !<new>
          target: "org.bitcoinj.wallet.BasicKeyChain"
          parameters:
          - name: "crypter"
            value:
              sapientType: "UNKNOWN"
              valueType: "org.bitcoinj.crypto.KeyCrypter"
              uuid: "<init>_keyCrypter1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: false
        valueType: "org.bitcoinj.wallet.BasicKeyChain"
        uuid: "target"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    - type: "INPUT"
      name: "listener"
      modelFingerprint: "471320B8B0C8D874D42F1BA714E65624"
      index: 2
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        valueType: "org.bitcoinj.wallet.listeners.KeyChainEventListener"
        uuid: "removeEventListener_keyChainEventListener1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    - type: "STATIC"
      name: "Threading"
      modelFingerprint: "931BDCE1DF6454A48EA195CE5432B664"
      index: 3
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "REAL"
        valueType: "org.bitcoinj.utils.Threading"
        uuid: "org.bitcoinj.utils.Threading"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "org.bitcoinj.utils.Threading"
        name: "lock"
        parameters:
        - name: "clazz"
          value:
            sapientType: "CLASS"
            content: !<regular>
              value: "org.bitcoinj.wallet.BasicKeyChain"
            valueType: "java.lang.Class"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "lock(Class): ReentrantLock"
        returnValue:
          sapientType: "OBJECT"
          content: !<static_method_return>
            target: "org.bitcoinj.utils.Threading"
            method: "lock"
            methodParameters:
            - value:
                sapientType: "CLASS"
                content: !<regular>
                  value: "org.bitcoinj.wallet.BasicKeyChain"
                valueType: "java.lang.Class"
                fixed: true
                equalsMethodPresent: false
                explicitCastNeeded: false
          suggestedContent: !<static_method_return>
            target: "org.bitcoinj.utils.Threading"
            method: "lock"
            methodParameters:
            - value:
                sapientType: "CLASS"
                content: !<regular>
                  value: "org.bitcoinj.wallet.BasicKeyChain"
                valueType: "java.lang.Class"
                fixed: true
                equalsMethodPresent: false
                explicitCastNeeded: false
          valueType: "java.util.concurrent.locks.ReentrantLock"
          uuid: "<init>_reentrantLock1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 9
      staticReadMethodForField: false
      filledByUser: false
    - type: "STATIC"
      name: "ListenerRegistration"
      modelFingerprint: "E9AF5456B6B2C1DECB91BDF01AC73B07"
      index: 4
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        valueType: "org.bitcoinj.utils.ListenerRegistration"
        uuid: "org.bitcoinj.utils.ListenerRegistration"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "org.bitcoinj.utils.ListenerRegistration"
        name: "removeFromList"
        parameters:
        - name: "listener"
          value:
            sapientType: "MOCK"
            valueType: "org.bitcoinj.wallet.listeners.KeyChainEventListener"
            uuid: "removeEventListener_keyChainEventListener1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "list"
          value:
            sapientType: "COLLECTION"
            content: !<collection>
              collectionClass: "java.util.concurrent.CopyOnWriteArrayList"
              parameters: []
              values: []
            suggestedContent: !<collection>
              collectionClass: "java.util.concurrent.CopyOnWriteArrayList"
              parameters: []
              values: []
            valueType: "java.util.concurrent.CopyOnWriteArrayList"
            genericValueType: "org.bitcoinj.utils.ListenerRegistration<org.bitcoinj.wallet.listeners.KeyChainEventListener>"
            uuid: "<init>_copyOnWriteArrayList1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "removeFromList(KeyChainEventListener,CopyOnWriteArrayList): boolean"
        returnValue:
          sapientType: "BASIC"
          content: !<regular>
            value: false
          valueType: "boolean"
          uuid: "removeEventListener_boolean1"
          fixed: true
          equalsMethodPresent: true
          explicitCastNeeded: false
        access: 9
      staticReadMethodForField: false
      filledByUser: false
    - type: "RESULT"
      name: "result"
      modelFingerprint: "3A21543F56248AC92654D6E439128AED"
      index: 5
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "BASIC"
        content: !<regular>
          value: false
        valueType: "boolean"
        uuid: "removeEventListener_boolean1"
        fixed: true
        equalsMethodPresent: true
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    uuid: "2729ee32-8492-327e-ba2d-e05b6e9496e8"
    deleted: false
    disabled: false
    ignoredBySystem: false
    prover: "DEFAULT"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
- method:
    name: "toEncrypted"
    returnType: "org.bitcoinj.wallet.BasicKeyChain"
    signature: "toEncrypted(java.lang.CharSequence) : org.bitcoinj.wallet.BasicKeyChain"
    instructionFingerprint: "B2F0215E94654B32A264D06254552A87"
    parametersTypes:
    - "java.lang.CharSequence"
  paths:
  - pathId: "path1"
    pathIdForUser: "path1"
    testPathName: "toEncryptedWhenPasswordLengthGreaterThan0"
    nameDefinedByUser: false
    constructorSignature: "<init>(org.bitcoinj.crypto.KeyCrypter) : void"
    priorityDefinedByUser: false
    filledByUser: false
    priority: "LOW"
    modelFingerprint: "1913D243CF0B7B5B94E6A852025AAFE5"
    problemWasSolvedByProver: true
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "35099553EB48D2AEC42E2A9279A21C51"
      index: 1
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "OBJECT"
        content: !<new>
          target: "org.bitcoinj.wallet.BasicKeyChain"
          parameters:
          - name: "crypter"
            value:
              sapientType: "MOCK"
              valueType: "org.bitcoinj.crypto.KeyCrypter"
              uuid: "<init>_keyCrypter1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: false
        suggestedContent: !<new>
          target: "org.bitcoinj.wallet.BasicKeyChain"
          parameters:
          - name: "crypter"
            value:
              sapientType: "UNKNOWN"
              valueType: "org.bitcoinj.crypto.KeyCrypter"
              uuid: "<init>_keyCrypter1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: false
        valueType: "org.bitcoinj.wallet.BasicKeyChain"
        uuid: "target"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    - type: "INPUT"
      name: "password"
      modelFingerprint: "79CB6EC3F99A5E69D14C27B4097AF91F"
      index: 2
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "BASIC"
        content: !<regular>
          value: "toEncrypted_charSequence1"
        suggestedContent: !<regular>
          value: "toEncrypted_charSequence1"
        valueType: "java.lang.String"
        uuid: "toEncrypted_charSequence1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
        explicitCastForOverloadedMethods: "java.lang.CharSequence"
      staticReadMethodForField: false
      filledByUser: false
    - type: "STATIC"
      name: "Threading"
      modelFingerprint: "931BDCE1DF6454A48EA195CE5432B664"
      index: 3
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "REAL"
        valueType: "org.bitcoinj.utils.Threading"
        uuid: "org.bitcoinj.utils.Threading"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "org.bitcoinj.utils.Threading"
        name: "lock"
        parameters:
        - name: "clazz"
          value:
            sapientType: "CLASS"
            content: !<regular>
              value: "org.bitcoinj.wallet.BasicKeyChain"
            valueType: "java.lang.Class"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "lock(Class): ReentrantLock"
        returnValue:
          sapientType: "OBJECT"
          content: !<static_method_return>
            target: "org.bitcoinj.utils.Threading"
            method: "lock"
            methodParameters:
            - value:
                sapientType: "CLASS"
                content: !<regular>
                  value: "org.bitcoinj.wallet.BasicKeyChain"
                valueType: "java.lang.Class"
                fixed: true
                equalsMethodPresent: false
                explicitCastNeeded: false
          suggestedContent: !<static_method_return>
            target: "org.bitcoinj.utils.Threading"
            method: "lock"
            methodParameters:
            - value:
                sapientType: "CLASS"
                content: !<regular>
                  value: "org.bitcoinj.wallet.BasicKeyChain"
                valueType: "java.lang.Class"
                fixed: true
                equalsMethodPresent: false
                explicitCastNeeded: false
          valueType: "java.util.concurrent.locks.ReentrantLock"
          uuid: "<init>_reentrantLock1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 9
      staticReadMethodForField: false
      filledByUser: false
    - type: "STATIC"
      name: "Preconditions"
      modelFingerprint: "60A6CF81A4B62FC26CAD9062FF6E1448"
      index: 4
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "REAL"
        valueType: "org.bitcoinj.base.internal.Preconditions"
        uuid: "org.bitcoinj.base.internal.Preconditions"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "org.bitcoinj.base.internal.Preconditions"
        name: "checkArgument"
        parameters:
        - name: "expression"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: true
            valueType: "boolean"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "checkArgument(boolean): void"
        returnValue:
          sapientType: "VOID"
          valueType: "void"
          uuid: "toEncrypted_void1"
          fixed: true
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 9
      staticReadMethodForField: false
      filledByUser: false
    - type: "LOCAL_VARIABLE"
      name: "scrypt"
      modelFingerprint: "976086F8E3CEE3F0B650972E0180C583"
      index: 5
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "OBJECT"
        content: !<new>
          target: "org.bitcoinj.crypto.KeyCrypterScrypt"
          parameters: []
          privateConstructor: false
          createdByTargetCode: true
        suggestedContent: !<new>
          target: "org.bitcoinj.crypto.KeyCrypterScrypt"
          parameters: []
          privateConstructor: false
          createdByTargetCode: true
        valueType: "org.bitcoinj.crypto.KeyCrypterScrypt"
        uuid: "toEncrypted_keyCrypterScrypt1"
        fixed: true
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "scrypt"
        name: "deriveKey"
        parameters:
        - name: "arg0"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "toEncrypted_charSequence1"
            suggestedContent: !<regular>
              value: "toEncrypted_charSequence1"
            valueType: "java.lang.String"
            uuid: "toEncrypted_charSequence1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        throwsExceptions:
        - "org.bitcoinj.crypto.KeyCrypterException"
        signature: "deriveKey(String): AesKey throws org.bitcoinj.crypto.KeyCrypterException"
        returnValue:
          sapientType: "OBJECT"
          content: !<method_return_from_value>
            target: "org.bitcoinj.crypto.AesKey"
            localVariableValue:
              sapientType: "OBJECT"
              content: !<new>
                target: "org.bitcoinj.crypto.KeyCrypterScrypt"
                parameters: []
                privateConstructor: false
                createdByTargetCode: true
              suggestedContent: !<new>
                target: "org.bitcoinj.crypto.KeyCrypterScrypt"
                parameters: []
                privateConstructor: false
                createdByTargetCode: true
              valueType: "org.bitcoinj.crypto.KeyCrypterScrypt"
              uuid: "toEncrypted_keyCrypterScrypt1"
              fixed: true
              equalsMethodPresent: false
              explicitCastNeeded: false
            methodParameters:
            - name: "arg0"
              value:
                sapientType: "BASIC"
                content: !<regular>
                  value: "toEncrypted_charSequence1"
                suggestedContent: !<regular>
                  value: "toEncrypted_charSequence1"
                valueType: "java.lang.String"
                uuid: "toEncrypted_charSequence1"
                fixed: false
                equalsMethodPresent: false
                explicitCastNeeded: false
            methodName: "deriveKey"
          suggestedContent: !<method_return_from_value>
            target: "org.bitcoinj.crypto.AesKey"
            localVariableValue:
              sapientType: "OBJECT"
              suggestedContent: !<new>
                target: "org.bitcoinj.crypto.KeyCrypterScrypt"
                parameters: []
                privateConstructor: false
                createdByTargetCode: true
              valueType: "org.bitcoinj.crypto.KeyCrypterScrypt"
              uuid: "toEncrypted_keyCrypterScrypt1"
              fixed: true
              equalsMethodPresent: false
              explicitCastNeeded: false
            methodParameters:
            - name: "arg0"
              value:
                sapientType: "BASIC"
                content: !<regular>
                  value: "toEncrypted_charSequence1"
                suggestedContent: !<regular>
                  value: "toEncrypted_charSequence1"
                valueType: "java.lang.String"
                uuid: "toEncrypted_charSequence1"
                fixed: false
                equalsMethodPresent: false
                explicitCastNeeded: false
            methodName: "deriveKey"
          valueType: "org.bitcoinj.crypto.AesKey"
          uuid: "toEncrypted_aesKey1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 1025
      staticReadMethodForField: false
      filledByUser: false
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "0D6A9A88C4AD11137B25B2EA6381B417"
      index: 6
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      methodExercised:
        target: "target"
        name: "toEncrypted"
        parameters:
        - name: "keyCrypter"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "org.bitcoinj.crypto.KeyCrypterScrypt"
              parameters: []
              privateConstructor: false
              createdByTargetCode: true
            suggestedContent: !<new>
              target: "org.bitcoinj.crypto.KeyCrypterScrypt"
              parameters: []
              privateConstructor: false
              createdByTargetCode: true
            valueType: "org.bitcoinj.crypto.KeyCrypterScrypt"
            uuid: "toEncrypted_keyCrypterScrypt1"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "aesKey"
          value:
            sapientType: "OBJECT"
            content: !<method_return_from_value>
              target: "org.bitcoinj.crypto.AesKey"
              localVariableValue:
                sapientType: "OBJECT"
                content: !<new>
                  target: "org.bitcoinj.crypto.KeyCrypterScrypt"
                  parameters: []
                  privateConstructor: false
                  createdByTargetCode: true
                suggestedContent: !<new>
                  target: "org.bitcoinj.crypto.KeyCrypterScrypt"
                  parameters: []
                  privateConstructor: false
                  createdByTargetCode: true
                valueType: "org.bitcoinj.crypto.KeyCrypterScrypt"
                uuid: "toEncrypted_keyCrypterScrypt1"
                fixed: true
                equalsMethodPresent: false
                explicitCastNeeded: false
              methodParameters:
              - name: "arg0"
                value:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: "toEncrypted_charSequence1"
                  suggestedContent: !<regular>
                    value: "toEncrypted_charSequence1"
                  valueType: "java.lang.String"
                  uuid: "toEncrypted_charSequence1"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
              methodName: "deriveKey"
            suggestedContent: !<method_return_from_value>
              target: "org.bitcoinj.crypto.AesKey"
              localVariableValue:
                sapientType: "OBJECT"
                suggestedContent: !<new>
                  target: "org.bitcoinj.crypto.KeyCrypterScrypt"
                  parameters: []
                  privateConstructor: false
                  createdByTargetCode: true
                valueType: "org.bitcoinj.crypto.KeyCrypterScrypt"
                uuid: "toEncrypted_keyCrypterScrypt1"
                fixed: true
                equalsMethodPresent: false
                explicitCastNeeded: false
              methodParameters:
              - name: "arg0"
                value:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: "toEncrypted_charSequence1"
                  suggestedContent: !<regular>
                    value: "toEncrypted_charSequence1"
                  valueType: "java.lang.String"
                  uuid: "toEncrypted_charSequence1"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
              methodName: "deriveKey"
            valueType: "org.bitcoinj.crypto.AesKey"
            uuid: "toEncrypted_aesKey1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "toEncrypted(KeyCrypterScrypt,AesKey): BasicKeyChain"
        returnValue:
          sapientType: "MOCK"
          valueType: "org.bitcoinj.wallet.BasicKeyChain"
          uuid: "toEncrypted_basicKeyChain1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 1
      staticReadMethodForField: false
      filledByUser: false
    - type: "RESULT"
      name: "result"
      modelFingerprint: "46A5B5B791B8D26716E51CA245D9F41E"
      index: 7
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        valueType: "org.bitcoinj.wallet.BasicKeyChain"
        uuid: "toEncrypted_basicKeyChain1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    uuid: "69dbc322-e198-3445-b244-24a19e5060ed"
    deleted: false
    disabled: false
    ignoredBySystem: false
    prover: "DEFAULT"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
  - pathId: "path2"
    pathIdForUser: "path2"
    testPathName: "toEncryptedWhenPasswordLengthNotGreaterThan0"
    nameDefinedByUser: false
    constructorSignature: "<init>(org.bitcoinj.crypto.KeyCrypter) : void"
    priorityDefinedByUser: false
    filledByUser: false
    priority: "LOW"
    modelFingerprint: "1913D243CF0B7B5B94E6A852025AAFE5"
    problemWasSolvedByProver: true
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "35099553EB48D2AEC42E2A9279A21C51"
      index: 1
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "OBJECT"
        content: !<new>
          target: "org.bitcoinj.wallet.BasicKeyChain"
          parameters:
          - name: "crypter"
            value:
              sapientType: "MOCK"
              valueType: "org.bitcoinj.crypto.KeyCrypter"
              uuid: "<init>_keyCrypter1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: false
        suggestedContent: !<new>
          target: "org.bitcoinj.wallet.BasicKeyChain"
          parameters:
          - name: "crypter"
            value:
              sapientType: "UNKNOWN"
              valueType: "org.bitcoinj.crypto.KeyCrypter"
              uuid: "<init>_keyCrypter1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: false
        valueType: "org.bitcoinj.wallet.BasicKeyChain"
        uuid: "target"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    - type: "INPUT"
      name: "password"
      modelFingerprint: "79CB6EC3F99A5E69D14C27B4097AF91F"
      index: 2
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "BASIC"
        content: !<regular>
          value: "toEncrypted_charSequence1"
        suggestedContent: !<regular>
          value: "toEncrypted_charSequence1"
        valueType: "java.lang.String"
        uuid: "toEncrypted_charSequence1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
        explicitCastForOverloadedMethods: "java.lang.CharSequence"
      staticReadMethodForField: false
      filledByUser: false
    - type: "STATIC"
      name: "Threading"
      modelFingerprint: "931BDCE1DF6454A48EA195CE5432B664"
      index: 3
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "REAL"
        valueType: "org.bitcoinj.utils.Threading"
        uuid: "org.bitcoinj.utils.Threading"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "org.bitcoinj.utils.Threading"
        name: "lock"
        parameters:
        - name: "clazz"
          value:
            sapientType: "CLASS"
            content: !<regular>
              value: "org.bitcoinj.wallet.BasicKeyChain"
            valueType: "java.lang.Class"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "lock(Class): ReentrantLock"
        returnValue:
          sapientType: "OBJECT"
          content: !<static_method_return>
            target: "org.bitcoinj.utils.Threading"
            method: "lock"
            methodParameters:
            - value:
                sapientType: "CLASS"
                content: !<regular>
                  value: "org.bitcoinj.wallet.BasicKeyChain"
                valueType: "java.lang.Class"
                fixed: true
                equalsMethodPresent: false
                explicitCastNeeded: false
          suggestedContent: !<static_method_return>
            target: "org.bitcoinj.utils.Threading"
            method: "lock"
            methodParameters:
            - value:
                sapientType: "CLASS"
                content: !<regular>
                  value: "org.bitcoinj.wallet.BasicKeyChain"
                valueType: "java.lang.Class"
                fixed: true
                equalsMethodPresent: false
                explicitCastNeeded: false
          valueType: "java.util.concurrent.locks.ReentrantLock"
          uuid: "<init>_reentrantLock1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 9
      staticReadMethodForField: false
      filledByUser: false
    - type: "STATIC"
      name: "Preconditions"
      modelFingerprint: "60A6CF81A4B62FC26CAD9062FF6E1448"
      index: 4
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "REAL"
        valueType: "org.bitcoinj.base.internal.Preconditions"
        uuid: "org.bitcoinj.base.internal.Preconditions"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "org.bitcoinj.base.internal.Preconditions"
        name: "checkArgument"
        parameters:
        - name: "expression"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: true
            valueType: "boolean"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "checkArgument(boolean): void"
        returnValue:
          sapientType: "VOID"
          valueType: "void"
          uuid: "toEncrypted_void1"
          fixed: true
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 9
      staticReadMethodForField: false
      filledByUser: false
    - type: "LOCAL_VARIABLE"
      name: "scrypt"
      modelFingerprint: "976086F8E3CEE3F0B650972E0180C583"
      index: 5
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "OBJECT"
        content: !<new>
          target: "org.bitcoinj.crypto.KeyCrypterScrypt"
          parameters: []
          privateConstructor: false
          createdByTargetCode: true
        suggestedContent: !<new>
          target: "org.bitcoinj.crypto.KeyCrypterScrypt"
          parameters: []
          privateConstructor: false
          createdByTargetCode: true
        valueType: "org.bitcoinj.crypto.KeyCrypterScrypt"
        uuid: "toEncrypted_keyCrypterScrypt1"
        fixed: true
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "scrypt"
        name: "deriveKey"
        parameters:
        - name: "arg0"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "toEncrypted_charSequence1"
            suggestedContent: !<regular>
              value: "toEncrypted_charSequence1"
            valueType: "java.lang.String"
            uuid: "toEncrypted_charSequence1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        throwsExceptions:
        - "org.bitcoinj.crypto.KeyCrypterException"
        signature: "deriveKey(String): AesKey throws org.bitcoinj.crypto.KeyCrypterException"
        returnValue:
          sapientType: "OBJECT"
          content: !<method_return_from_value>
            target: "org.bitcoinj.crypto.AesKey"
            localVariableValue:
              sapientType: "OBJECT"
              content: !<new>
                target: "org.bitcoinj.crypto.KeyCrypterScrypt"
                parameters: []
                privateConstructor: false
                createdByTargetCode: true
              suggestedContent: !<new>
                target: "org.bitcoinj.crypto.KeyCrypterScrypt"
                parameters: []
                privateConstructor: false
                createdByTargetCode: true
              valueType: "org.bitcoinj.crypto.KeyCrypterScrypt"
              uuid: "toEncrypted_keyCrypterScrypt1"
              fixed: true
              equalsMethodPresent: false
              explicitCastNeeded: false
            methodParameters:
            - name: "arg0"
              value:
                sapientType: "BASIC"
                content: !<regular>
                  value: "toEncrypted_charSequence1"
                suggestedContent: !<regular>
                  value: "toEncrypted_charSequence1"
                valueType: "java.lang.String"
                uuid: "toEncrypted_charSequence1"
                fixed: false
                equalsMethodPresent: false
                explicitCastNeeded: false
            methodName: "deriveKey"
          suggestedContent: !<method_return_from_value>
            target: "org.bitcoinj.crypto.AesKey"
            localVariableValue:
              sapientType: "OBJECT"
              suggestedContent: !<new>
                target: "org.bitcoinj.crypto.KeyCrypterScrypt"
                parameters: []
                privateConstructor: false
                createdByTargetCode: true
              valueType: "org.bitcoinj.crypto.KeyCrypterScrypt"
              uuid: "toEncrypted_keyCrypterScrypt1"
              fixed: true
              equalsMethodPresent: false
              explicitCastNeeded: false
            methodParameters:
            - name: "arg0"
              value:
                sapientType: "BASIC"
                content: !<regular>
                  value: "toEncrypted_charSequence1"
                suggestedContent: !<regular>
                  value: "toEncrypted_charSequence1"
                valueType: "java.lang.String"
                uuid: "toEncrypted_charSequence1"
                fixed: false
                equalsMethodPresent: false
                explicitCastNeeded: false
            methodName: "deriveKey"
          valueType: "org.bitcoinj.crypto.AesKey"
          uuid: "toEncrypted_aesKey1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 1025
      staticReadMethodForField: false
      filledByUser: false
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "0D6A9A88C4AD11137B25B2EA6381B417"
      index: 6
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      methodExercised:
        target: "target"
        name: "toEncrypted"
        parameters:
        - name: "keyCrypter"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "org.bitcoinj.crypto.KeyCrypterScrypt"
              parameters: []
              privateConstructor: false
              createdByTargetCode: true
            suggestedContent: !<new>
              target: "org.bitcoinj.crypto.KeyCrypterScrypt"
              parameters: []
              privateConstructor: false
              createdByTargetCode: true
            valueType: "org.bitcoinj.crypto.KeyCrypterScrypt"
            uuid: "toEncrypted_keyCrypterScrypt1"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "aesKey"
          value:
            sapientType: "OBJECT"
            content: !<method_return_from_value>
              target: "org.bitcoinj.crypto.AesKey"
              localVariableValue:
                sapientType: "OBJECT"
                content: !<new>
                  target: "org.bitcoinj.crypto.KeyCrypterScrypt"
                  parameters: []
                  privateConstructor: false
                  createdByTargetCode: true
                suggestedContent: !<new>
                  target: "org.bitcoinj.crypto.KeyCrypterScrypt"
                  parameters: []
                  privateConstructor: false
                  createdByTargetCode: true
                valueType: "org.bitcoinj.crypto.KeyCrypterScrypt"
                uuid: "toEncrypted_keyCrypterScrypt1"
                fixed: true
                equalsMethodPresent: false
                explicitCastNeeded: false
              methodParameters:
              - name: "arg0"
                value:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: "toEncrypted_charSequence1"
                  suggestedContent: !<regular>
                    value: "toEncrypted_charSequence1"
                  valueType: "java.lang.String"
                  uuid: "toEncrypted_charSequence1"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
              methodName: "deriveKey"
            suggestedContent: !<method_return_from_value>
              target: "org.bitcoinj.crypto.AesKey"
              localVariableValue:
                sapientType: "OBJECT"
                suggestedContent: !<new>
                  target: "org.bitcoinj.crypto.KeyCrypterScrypt"
                  parameters: []
                  privateConstructor: false
                  createdByTargetCode: true
                valueType: "org.bitcoinj.crypto.KeyCrypterScrypt"
                uuid: "toEncrypted_keyCrypterScrypt1"
                fixed: true
                equalsMethodPresent: false
                explicitCastNeeded: false
              methodParameters:
              - name: "arg0"
                value:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: "toEncrypted_charSequence1"
                  suggestedContent: !<regular>
                    value: "toEncrypted_charSequence1"
                  valueType: "java.lang.String"
                  uuid: "toEncrypted_charSequence1"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
              methodName: "deriveKey"
            valueType: "org.bitcoinj.crypto.AesKey"
            uuid: "toEncrypted_aesKey1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "toEncrypted(KeyCrypterScrypt,AesKey): BasicKeyChain"
        returnValue:
          sapientType: "MOCK"
          valueType: "org.bitcoinj.wallet.BasicKeyChain"
          uuid: "toEncrypted_basicKeyChain1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 1
      staticReadMethodForField: false
      filledByUser: false
    - type: "RESULT"
      name: "result"
      modelFingerprint: "46A5B5B791B8D26716E51CA245D9F41E"
      index: 7
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        valueType: "org.bitcoinj.wallet.BasicKeyChain"
        uuid: "toEncrypted_basicKeyChain1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    uuid: "d9be1371-e617-30dc-aa03-828f363c5022"
    deleted: false
    disabled: false
    ignoredBySystem: false
    prover: "DEFAULT"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
- method:
    name: "toEncrypted"
    returnType: "org.bitcoinj.wallet.BasicKeyChain"
    signature: "toEncrypted(org.bitcoinj.crypto.KeyCrypter,org.bitcoinj.crypto.AesKey)\
      \ : org.bitcoinj.wallet.BasicKeyChain"
    instructionFingerprint: "2F9FE478577AFBC19BC5CD3D6A668310"
    parametersTypes:
    - "org.bitcoinj.crypto.KeyCrypter"
    - "org.bitcoinj.crypto.AesKey"
  paths:
  - pathId: "path1"
    pathIdForUser: "path1"
    testPathName: "toEncrypted1WhenThisKeyCrypterIsNullThrowsIllegalStateException"
    nameDefinedByUser: false
    constructorSignature: "<init>(org.bitcoinj.crypto.KeyCrypter) : void"
    priorityDefinedByUser: false
    filledByUser: false
    priority: "LOW"
    modelFingerprint: "5EAEEC7A5BAE83E490E7CF7AF4171766"
    problemWasSolvedByProver: true
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "AC70298FA93F6048125F94F6464F3643"
      index: 1
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "OBJECT"
        content: !<new>
          target: "org.bitcoinj.wallet.BasicKeyChain"
          parameters:
          - name: "crypter"
            value:
              sapientType: "NULL"
              valueType: "org.bitcoinj.crypto.KeyCrypter"
              uuid: "<init>_keyCrypter1"
              fixed: true
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: false
        suggestedContent: !<new>
          target: "org.bitcoinj.wallet.BasicKeyChain"
          parameters:
          - name: "crypter"
            value:
              sapientType: "NULL"
              valueType: "org.bitcoinj.crypto.KeyCrypter"
              uuid: "<init>_keyCrypter1"
              fixed: true
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: false
        valueType: "org.bitcoinj.wallet.BasicKeyChain"
        uuid: "target"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    - type: "INPUT"
      name: "keyCrypter"
      modelFingerprint: "49411EB62D421A468020D743AD1053CC"
      index: 2
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        valueType: "org.bitcoinj.crypto.KeyCrypter"
        uuid: "toEncrypted_keyCrypter1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    - type: "INPUT"
      name: "aesKey"
      modelFingerprint: "DCA4AEF5E8DED66D0B002FF53D6204FF"
      index: 3
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        valueType: "org.bitcoinj.crypto.AesKey"
        uuid: "toEncrypted_aesKey1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    - type: "STATIC"
      name: "Threading"
      modelFingerprint: "931BDCE1DF6454A48EA195CE5432B664"
      index: 4
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "REAL"
        valueType: "org.bitcoinj.utils.Threading"
        uuid: "org.bitcoinj.utils.Threading"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "org.bitcoinj.utils.Threading"
        name: "lock"
        parameters:
        - name: "clazz"
          value:
            sapientType: "CLASS"
            content: !<regular>
              value: "org.bitcoinj.wallet.BasicKeyChain"
            valueType: "java.lang.Class"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "lock(Class): ReentrantLock"
        returnValue:
          sapientType: "OBJECT"
          content: !<static_method_return>
            target: "org.bitcoinj.utils.Threading"
            method: "lock"
            methodParameters:
            - value:
                sapientType: "CLASS"
                content: !<regular>
                  value: "org.bitcoinj.wallet.BasicKeyChain"
                valueType: "java.lang.Class"
                fixed: true
                equalsMethodPresent: false
                explicitCastNeeded: false
          suggestedContent: !<static_method_return>
            target: "org.bitcoinj.utils.Threading"
            method: "lock"
            methodParameters:
            - value:
                sapientType: "CLASS"
                content: !<regular>
                  value: "org.bitcoinj.wallet.BasicKeyChain"
                valueType: "java.lang.Class"
                fixed: true
                equalsMethodPresent: false
                explicitCastNeeded: false
          valueType: "java.util.concurrent.locks.ReentrantLock"
          uuid: "<init>_reentrantLock1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 9
      staticReadMethodForField: false
      filledByUser: false
    - type: "STATIC"
      name: "Preconditions"
      modelFingerprint: "54C4D53CCD04B53C1A47AA185AEE8B06"
      index: 5
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        valueType: "org.bitcoinj.base.internal.Preconditions"
        uuid: "org.bitcoinj.base.internal.Preconditions"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "org.bitcoinj.base.internal.Preconditions"
        name: "checkState"
        parameters:
        - name: "expression"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: false
            valueType: "boolean"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "messageSupplier"
          value:
            sapientType: "PRIVATE_INNER_CLASS_OR_LAMBDA"
            valueType: "java.util.function.Supplier"
            genericValueType: "java.lang.String"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "checkState(boolean,Supplier): void"
        returnValue:
          sapientType: "EXCEPTION"
          content: !<new>
            target: "java.lang.IllegalStateException"
            parameters: []
            privateConstructor: false
            createdByTargetCode: false
          suggestedContent: !<new>
            target: "java.lang.IllegalStateException"
            parameters: []
            privateConstructor: false
            createdByTargetCode: false
          valueType: "java.lang.IllegalStateException"
          fixed: true
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 9
      staticReadMethodForField: false
      filledByUser: false
    - type: "RESULT"
      name: "result"
      modelFingerprint: "C9C68C9339F812BC8DEC7C1D6145A135"
      index: 6
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "EXCEPTION"
        content: !<new>
          target: "java.lang.IllegalStateException"
          parameters: []
          privateConstructor: false
          createdByTargetCode: false
        suggestedContent: !<new>
          target: "java.lang.IllegalStateException"
          parameters: []
          privateConstructor: false
          createdByTargetCode: false
        valueType: "java.lang.IllegalStateException"
        fixed: true
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    uuid: "fbaf60a3-bd1e-38de-98ce-76faafb3cecd"
    deleted: false
    disabled: true
    ignoredBySystem: false
    prover: "DEFAULT"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: true
- method:
    name: "toDecrypted"
    returnType: "org.bitcoinj.wallet.BasicKeyChain"
    signature: "toDecrypted(java.lang.CharSequence) : org.bitcoinj.wallet.BasicKeyChain"
    tryCatchBlocks:
    - idExternalInstruction: 0
      id: 1
      catchExceptions:
      - "org.bitcoinj.crypto.KeyCrypterException"
    instructionFingerprint: "22B9064474614D74C1247282FC9C8837"
    parametersTypes:
    - "java.lang.CharSequence"
  paths:
  - pathId: "path1"
    pathIdForUser: "path1"
    testPathName: "toDecryptedTest"
    nameDefinedByUser: false
    constructorSignature: "<init>(org.bitcoinj.crypto.KeyCrypter) : void"
    priorityDefinedByUser: false
    filledByUser: false
    priority: "LOW"
    modelFingerprint: "95CA27A02FEC8851CFC4D1F1BA1FA719"
    problemWasSolvedByProver: true
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "92723DCF3172E2A06000C2981F8D18F8"
      index: 1
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "OBJECT"
        content: !<new>
          target: "org.bitcoinj.wallet.BasicKeyChain"
          parameters:
          - name: "crypter"
            value:
              sapientType: "MOCK"
              suggestedContent: !<unknown_object>
                target: "org.bitcoinj.crypto.KeyCrypter"
                onlyPojoFunctions: false
                builderPattern: false
              valueType: "org.bitcoinj.crypto.KeyCrypter"
              uuid: "<init>_keyCrypter1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: false
        suggestedContent: !<new>
          target: "org.bitcoinj.wallet.BasicKeyChain"
          parameters:
          - name: "crypter"
            value:
              sapientType: "UNKNOWN"
              suggestedContent: !<unknown_object>
                target: "org.bitcoinj.crypto.KeyCrypter"
                onlyPojoFunctions: false
                builderPattern: false
              valueType: "org.bitcoinj.crypto.KeyCrypter"
              uuid: "<init>_keyCrypter1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: false
        valueType: "org.bitcoinj.wallet.BasicKeyChain"
        uuid: "target"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    - type: "INPUT"
      name: "password"
      modelFingerprint: "13CE2B1AB287FE187136AB1B7713AAF1"
      index: 2
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "BASIC"
        content: !<regular>
          value: "toDecrypted_charSequence1"
        suggestedContent: !<regular>
          value: "toDecrypted_charSequence1"
        valueType: "java.lang.String"
        uuid: "toDecrypted_charSequence1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    - type: "STATIC"
      name: "Threading"
      modelFingerprint: "931BDCE1DF6454A48EA195CE5432B664"
      index: 3
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "REAL"
        valueType: "org.bitcoinj.utils.Threading"
        uuid: "org.bitcoinj.utils.Threading"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "org.bitcoinj.utils.Threading"
        name: "lock"
        parameters:
        - name: "clazz"
          value:
            sapientType: "CLASS"
            content: !<regular>
              value: "org.bitcoinj.wallet.BasicKeyChain"
            valueType: "java.lang.Class"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "lock(Class): ReentrantLock"
        returnValue:
          sapientType: "OBJECT"
          content: !<static_method_return>
            target: "org.bitcoinj.utils.Threading"
            method: "lock"
            methodParameters:
            - value:
                sapientType: "CLASS"
                content: !<regular>
                  value: "org.bitcoinj.wallet.BasicKeyChain"
                valueType: "java.lang.Class"
                fixed: true
                equalsMethodPresent: false
                explicitCastNeeded: false
          suggestedContent: !<static_method_return>
            target: "org.bitcoinj.utils.Threading"
            method: "lock"
            methodParameters:
            - value:
                sapientType: "CLASS"
                content: !<regular>
                  value: "org.bitcoinj.wallet.BasicKeyChain"
                valueType: "java.lang.Class"
                fixed: true
                equalsMethodPresent: false
                explicitCastNeeded: false
          valueType: "java.util.concurrent.locks.ReentrantLock"
          uuid: "<init>_reentrantLock1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 9
      staticReadMethodForField: false
      filledByUser: false
    - type: "FIELD"
      name: "keyCrypter"
      modelFingerprint: "D6A5EA93FE5A7F513E0E24D268BAC0D4"
      index: 4
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        suggestedContent: !<unknown_object>
          target: "org.bitcoinj.crypto.KeyCrypter"
          onlyPojoFunctions: false
          builderPattern: false
        valueType: "org.bitcoinj.crypto.KeyCrypter"
        uuid: "<init>_keyCrypter1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "this.keyCrypter"
        name: "deriveKey"
        parameters:
        - name: "arg0"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "toDecrypted_charSequence1"
            suggestedContent: !<regular>
              value: "toDecrypted_charSequence1"
            valueType: "java.lang.String"
            uuid: "toDecrypted_charSequence1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        throwsExceptions:
        - "org.bitcoinj.crypto.KeyCrypterException"
        signature: "deriveKey(CharSequence): AesKey throws org.bitcoinj.crypto.KeyCrypterException"
        returnValue:
          sapientType: "MOCK"
          valueType: "org.bitcoinj.crypto.AesKey"
          uuid: "toDecrypted_aesKey1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 1025
      staticReadMethodForField: false
      filledByUser: false
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "63AC6DDD5BF11519B8C27D6BB87AFE29"
      index: 5
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      methodExercised:
        target: "target"
        name: "toDecrypted"
        parameters:
        - name: "aesKey"
          value:
            sapientType: "MOCK"
            valueType: "org.bitcoinj.crypto.AesKey"
            uuid: "toDecrypted_aesKey1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "toDecrypted(AesKey): BasicKeyChain"
        returnValue:
          sapientType: "MOCK"
          valueType: "org.bitcoinj.wallet.BasicKeyChain"
          uuid: "toDecrypted_basicKeyChain1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 1
      staticReadMethodForField: false
      filledByUser: false
    - type: "RESULT"
      name: "result"
      modelFingerprint: "46A5B5B791B8D26716E51CA245D9F41E"
      index: 6
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        valueType: "org.bitcoinj.wallet.BasicKeyChain"
        uuid: "toDecrypted_basicKeyChain1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    uuid: "1bdb17bb-1002-3203-937c-75660bb17455"
    deleted: false
    disabled: false
    ignoredBySystem: false
    prover: "DEFAULT"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
- method:
    name: "toDecrypted"
    returnType: "org.bitcoinj.wallet.BasicKeyChain"
    signature: "toDecrypted(org.bitcoinj.crypto.AesKey) : org.bitcoinj.wallet.BasicKeyChain"
    tryCatchBlocks:
    - idExternalInstruction: 0
      id: 1
      catchExceptions:
      - "org.bitcoinj.crypto.KeyCrypterException"
    instructionFingerprint: "E85BEA4DDB6C3F3A66E2FEDE6F1F376E"
    parametersTypes:
    - "org.bitcoinj.crypto.AesKey"
  paths:
  - pathId: "path1"
    pathIdForUser: "path1"
    testPathName: "toDecrypted1WhenKeyCrypterIsNotNullThrowsIllegalStateException"
    nameDefinedByUser: false
    constructorSignature: "<init>(org.bitcoinj.crypto.KeyCrypter) : void"
    priorityDefinedByUser: false
    filledByUser: false
    priority: "LOW"
    modelFingerprint: "F479115CF2E44802B6F9695C7ADB52E1"
    problemWasSolvedByProver: true
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "35099553EB48D2AEC42E2A9279A21C51"
      index: 1
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "OBJECT"
        content: !<new>
          target: "org.bitcoinj.wallet.BasicKeyChain"
          parameters:
          - name: "crypter"
            value:
              sapientType: "MOCK"
              valueType: "org.bitcoinj.crypto.KeyCrypter"
              uuid: "<init>_keyCrypter1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: false
        suggestedContent: !<new>
          target: "org.bitcoinj.wallet.BasicKeyChain"
          parameters:
          - name: "crypter"
            value:
              sapientType: "UNKNOWN"
              valueType: "org.bitcoinj.crypto.KeyCrypter"
              uuid: "<init>_keyCrypter1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: false
        valueType: "org.bitcoinj.wallet.BasicKeyChain"
        uuid: "target"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    - type: "INPUT"
      name: "aesKey"
      modelFingerprint: "DCA4AEF5E8DED66D0B002FF53D6204FF"
      index: 2
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        valueType: "org.bitcoinj.crypto.AesKey"
        uuid: "toDecrypted_aesKey1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    - type: "STATIC"
      name: "Threading"
      modelFingerprint: "931BDCE1DF6454A48EA195CE5432B664"
      index: 3
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "REAL"
        valueType: "org.bitcoinj.utils.Threading"
        uuid: "org.bitcoinj.utils.Threading"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "org.bitcoinj.utils.Threading"
        name: "lock"
        parameters:
        - name: "clazz"
          value:
            sapientType: "CLASS"
            content: !<regular>
              value: "org.bitcoinj.wallet.BasicKeyChain"
            valueType: "java.lang.Class"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "lock(Class): ReentrantLock"
        returnValue:
          sapientType: "OBJECT"
          content: !<static_method_return>
            target: "org.bitcoinj.utils.Threading"
            method: "lock"
            methodParameters:
            - value:
                sapientType: "CLASS"
                content: !<regular>
                  value: "org.bitcoinj.wallet.BasicKeyChain"
                valueType: "java.lang.Class"
                fixed: true
                equalsMethodPresent: false
                explicitCastNeeded: false
          suggestedContent: !<static_method_return>
            target: "org.bitcoinj.utils.Threading"
            method: "lock"
            methodParameters:
            - value:
                sapientType: "CLASS"
                content: !<regular>
                  value: "org.bitcoinj.wallet.BasicKeyChain"
                valueType: "java.lang.Class"
                fixed: true
                equalsMethodPresent: false
                explicitCastNeeded: false
          valueType: "java.util.concurrent.locks.ReentrantLock"
          uuid: "<init>_reentrantLock1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 9
      staticReadMethodForField: false
      filledByUser: false
    - type: "STATIC"
      name: "Preconditions"
      modelFingerprint: "54C4D53CCD04B53C1A47AA185AEE8B06"
      index: 4
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        valueType: "org.bitcoinj.base.internal.Preconditions"
        uuid: "org.bitcoinj.base.internal.Preconditions"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "org.bitcoinj.base.internal.Preconditions"
        name: "checkState"
        parameters:
        - name: "expression"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: false
            valueType: "boolean"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "messageSupplier"
          value:
            sapientType: "PRIVATE_INNER_CLASS_OR_LAMBDA"
            valueType: "java.util.function.Supplier"
            genericValueType: "java.lang.String"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "checkState(boolean,Supplier): void"
        returnValue:
          sapientType: "EXCEPTION"
          content: !<new>
            target: "java.lang.IllegalStateException"
            parameters: []
            privateConstructor: false
            createdByTargetCode: false
          suggestedContent: !<new>
            target: "java.lang.IllegalStateException"
            parameters: []
            privateConstructor: false
            createdByTargetCode: false
          valueType: "java.lang.IllegalStateException"
          fixed: true
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 9
      staticReadMethodForField: false
      filledByUser: false
    - type: "RESULT"
      name: "result"
      modelFingerprint: "C9C68C9339F812BC8DEC7C1D6145A135"
      index: 5
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "EXCEPTION"
        content: !<new>
          target: "java.lang.IllegalStateException"
          parameters: []
          privateConstructor: false
          createdByTargetCode: false
        suggestedContent: !<new>
          target: "java.lang.IllegalStateException"
          parameters: []
          privateConstructor: false
          createdByTargetCode: false
        valueType: "java.lang.IllegalStateException"
        fixed: true
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    uuid: "5d4d52f4-ec68-383f-872e-646113fbe3c6"
    deleted: false
    disabled: true
    ignoredBySystem: false
    prover: "DEFAULT"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: true
- method:
    name: "checkPassword"
    returnType: "boolean"
    signature: "checkPassword(java.lang.CharSequence) : boolean"
    tryCatchBlocks:
    - idExternalInstruction: 0
      id: 1
      catchExceptions:
      - "org.bitcoinj.crypto.KeyCrypterException"
    instructionFingerprint: "5EDB835A81B920E8ACC87540F7BB6A4D"
    parametersTypes:
    - "java.lang.CharSequence"
  paths:
  - pathId: "path1"
    pathIdForUser: "path1"
    testPathName: "checkPasswordWhenKeyCrypterIsNotNullThrowsIllegalStateException"
    nameDefinedByUser: false
    constructorSignature: "<init>(org.bitcoinj.crypto.KeyCrypter) : void"
    priorityDefinedByUser: false
    filledByUser: false
    priority: "LOW"
    modelFingerprint: "8C1D8BB8E3237CE0025F01D1220FFC10"
    problemWasSolvedByProver: true
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "35099553EB48D2AEC42E2A9279A21C51"
      index: 1
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "OBJECT"
        content: !<new>
          target: "org.bitcoinj.wallet.BasicKeyChain"
          parameters:
          - name: "crypter"
            value:
              sapientType: "MOCK"
              valueType: "org.bitcoinj.crypto.KeyCrypter"
              uuid: "<init>_keyCrypter1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: false
        suggestedContent: !<new>
          target: "org.bitcoinj.wallet.BasicKeyChain"
          parameters:
          - name: "crypter"
            value:
              sapientType: "UNKNOWN"
              valueType: "org.bitcoinj.crypto.KeyCrypter"
              uuid: "<init>_keyCrypter1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: false
        valueType: "org.bitcoinj.wallet.BasicKeyChain"
        uuid: "target"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    - type: "INPUT"
      name: "password"
      modelFingerprint: "13CE2B1AB287FE187136AB1B7713AAF1"
      index: 2
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "BASIC"
        content: !<regular>
          value: "checkPassword_charSequence1"
        suggestedContent: !<regular>
          value: "checkPassword_charSequence1"
        valueType: "java.lang.String"
        uuid: "checkPassword_charSequence1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    - type: "STATIC"
      name: "Threading"
      modelFingerprint: "931BDCE1DF6454A48EA195CE5432B664"
      index: 3
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "REAL"
        valueType: "org.bitcoinj.utils.Threading"
        uuid: "org.bitcoinj.utils.Threading"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "org.bitcoinj.utils.Threading"
        name: "lock"
        parameters:
        - name: "clazz"
          value:
            sapientType: "CLASS"
            content: !<regular>
              value: "org.bitcoinj.wallet.BasicKeyChain"
            valueType: "java.lang.Class"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "lock(Class): ReentrantLock"
        returnValue:
          sapientType: "OBJECT"
          content: !<static_method_return>
            target: "org.bitcoinj.utils.Threading"
            method: "lock"
            methodParameters:
            - value:
                sapientType: "CLASS"
                content: !<regular>
                  value: "org.bitcoinj.wallet.BasicKeyChain"
                valueType: "java.lang.Class"
                fixed: true
                equalsMethodPresent: false
                explicitCastNeeded: false
          suggestedContent: !<static_method_return>
            target: "org.bitcoinj.utils.Threading"
            method: "lock"
            methodParameters:
            - value:
                sapientType: "CLASS"
                content: !<regular>
                  value: "org.bitcoinj.wallet.BasicKeyChain"
                valueType: "java.lang.Class"
                fixed: true
                equalsMethodPresent: false
                explicitCastNeeded: false
          valueType: "java.util.concurrent.locks.ReentrantLock"
          uuid: "<init>_reentrantLock1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 9
      staticReadMethodForField: false
      filledByUser: false
    - type: "STATIC"
      name: "Preconditions"
      modelFingerprint: "54C4D53CCD04B53C1A47AA185AEE8B06"
      index: 4
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        valueType: "org.bitcoinj.base.internal.Preconditions"
        uuid: "org.bitcoinj.base.internal.Preconditions"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "org.bitcoinj.base.internal.Preconditions"
        name: "checkState"
        parameters:
        - name: "expression"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: false
            valueType: "boolean"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "messageSupplier"
          value:
            sapientType: "PRIVATE_INNER_CLASS_OR_LAMBDA"
            valueType: "java.util.function.Supplier"
            genericValueType: "java.lang.String"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "checkState(boolean,Supplier): void"
        returnValue:
          sapientType: "EXCEPTION"
          content: !<new>
            target: "java.lang.IllegalStateException"
            parameters: []
            privateConstructor: false
            createdByTargetCode: false
          suggestedContent: !<new>
            target: "java.lang.IllegalStateException"
            parameters: []
            privateConstructor: false
            createdByTargetCode: false
          valueType: "java.lang.IllegalStateException"
          fixed: true
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 9
      staticReadMethodForField: false
      filledByUser: false
    - type: "RESULT"
      name: "result"
      modelFingerprint: "C9C68C9339F812BC8DEC7C1D6145A135"
      index: 5
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "EXCEPTION"
        content: !<new>
          target: "java.lang.IllegalStateException"
          parameters: []
          privateConstructor: false
          createdByTargetCode: false
        suggestedContent: !<new>
          target: "java.lang.IllegalStateException"
          parameters: []
          privateConstructor: false
          createdByTargetCode: false
        valueType: "java.lang.IllegalStateException"
        fixed: true
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    uuid: "2571c489-32ab-35c1-bd4a-d0b0f5d4d34d"
    deleted: false
    disabled: true
    ignoredBySystem: false
    prover: "DEFAULT"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: true
- method:
    name: "checkAESKey"
    returnType: "boolean"
    signature: "checkAESKey(org.bitcoinj.crypto.AesKey) : boolean"
    tryCatchBlocks:
    - idExternalInstruction: 0
      id: 1
      catchExceptions:
      - "org.bitcoinj.crypto.KeyCrypterException"
    instructionFingerprint: "ED30091A3171664BA3BD6A93102388C1"
    parametersTypes:
    - "org.bitcoinj.crypto.AesKey"
  paths:
  - pathId: "path1"
    pathIdForUser: "path1"
    testPathName: "checkAESKeyWhenHashToKeysIsEmpty"
    nameDefinedByUser: false
    constructorSignature: "<init>(org.bitcoinj.crypto.KeyCrypter) : void"
    priorityDefinedByUser: false
    filledByUser: false
    priority: "LOW"
    modelFingerprint: "0D021FD54D5DA5005822B3F44A9A797D"
    problemWasSolvedByProver: true
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "35099553EB48D2AEC42E2A9279A21C51"
      index: 1
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "OBJECT"
        content: !<new>
          target: "org.bitcoinj.wallet.BasicKeyChain"
          parameters:
          - name: "crypter"
            value:
              sapientType: "MOCK"
              valueType: "org.bitcoinj.crypto.KeyCrypter"
              uuid: "<init>_keyCrypter1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: false
        suggestedContent: !<new>
          target: "org.bitcoinj.wallet.BasicKeyChain"
          parameters:
          - name: "crypter"
            value:
              sapientType: "UNKNOWN"
              valueType: "org.bitcoinj.crypto.KeyCrypter"
              uuid: "<init>_keyCrypter1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: false
        valueType: "org.bitcoinj.wallet.BasicKeyChain"
        uuid: "target"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    - type: "INPUT"
      name: "aesKey"
      modelFingerprint: "DCA4AEF5E8DED66D0B002FF53D6204FF"
      index: 2
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        valueType: "org.bitcoinj.crypto.AesKey"
        uuid: "checkAESKey_aesKey1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    - type: "STATIC"
      name: "Threading"
      modelFingerprint: "931BDCE1DF6454A48EA195CE5432B664"
      index: 3
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "REAL"
        valueType: "org.bitcoinj.utils.Threading"
        uuid: "org.bitcoinj.utils.Threading"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "org.bitcoinj.utils.Threading"
        name: "lock"
        parameters:
        - name: "clazz"
          value:
            sapientType: "CLASS"
            content: !<regular>
              value: "org.bitcoinj.wallet.BasicKeyChain"
            valueType: "java.lang.Class"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "lock(Class): ReentrantLock"
        returnValue:
          sapientType: "OBJECT"
          content: !<static_method_return>
            target: "org.bitcoinj.utils.Threading"
            method: "lock"
            methodParameters:
            - value:
                sapientType: "CLASS"
                content: !<regular>
                  value: "org.bitcoinj.wallet.BasicKeyChain"
                valueType: "java.lang.Class"
                fixed: true
                equalsMethodPresent: false
                explicitCastNeeded: false
          suggestedContent: !<static_method_return>
            target: "org.bitcoinj.utils.Threading"
            method: "lock"
            methodParameters:
            - value:
                sapientType: "CLASS"
                content: !<regular>
                  value: "org.bitcoinj.wallet.BasicKeyChain"
                valueType: "java.lang.Class"
                fixed: true
                equalsMethodPresent: false
                explicitCastNeeded: false
          valueType: "java.util.concurrent.locks.ReentrantLock"
          uuid: "<init>_reentrantLock1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 9
      staticReadMethodForField: false
      filledByUser: false
    - type: "RESULT"
      name: "result"
      modelFingerprint: "3A21543F56248AC92654D6E439128AED"
      index: 4
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "BASIC"
        content: !<regular>
          value: false
        valueType: "boolean"
        uuid: "checkAESKey_int1"
        fixed: true
        equalsMethodPresent: true
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    uuid: "92a561ff-2e7a-3f34-99c1-4f10c9a5739d"
    deleted: false
    disabled: false
    ignoredBySystem: false
    prover: "DEFAULT"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
- method:
    name: "getFilter"
    returnType: "org.bitcoinj.core.BloomFilter"
    signature: "getFilter(int,double,int) : org.bitcoinj.core.BloomFilter"
    instructionFingerprint: "692CD5C53B96F4DE17897A385A56579F"
    parametersTypes:
    - "int"
    - "double"
    - "int"
  paths:
  - pathId: "path1"
    pathIdForUser: "path1"
    testPathName: "getFilterWhenHashToKeysValuesIsEmpty"
    nameDefinedByUser: false
    constructorSignature: "<init>(org.bitcoinj.crypto.KeyCrypter) : void"
    priorityDefinedByUser: false
    filledByUser: false
    priority: "LOW"
    modelFingerprint: "7EB9EFBE2E0B07ECE50AC0E858B3CD1C"
    problemWasSolvedByProver: true
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "35099553EB48D2AEC42E2A9279A21C51"
      index: 1
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "OBJECT"
        content: !<new>
          target: "org.bitcoinj.wallet.BasicKeyChain"
          parameters:
          - name: "crypter"
            value:
              sapientType: "MOCK"
              valueType: "org.bitcoinj.crypto.KeyCrypter"
              uuid: "<init>_keyCrypter1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: false
        suggestedContent: !<new>
          target: "org.bitcoinj.wallet.BasicKeyChain"
          parameters:
          - name: "crypter"
            value:
              sapientType: "UNKNOWN"
              valueType: "org.bitcoinj.crypto.KeyCrypter"
              uuid: "<init>_keyCrypter1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: false
        valueType: "org.bitcoinj.wallet.BasicKeyChain"
        uuid: "target"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    - type: "INPUT"
      name: "size"
      modelFingerprint: "E0D22A3D8F44DD2A8E9FC7B9FFA7B5E4"
      index: 2
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "BASIC"
        content: !<regular>
          value: 0
        valueType: "int"
        uuid: "getFilter_int1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    - type: "INPUT"
      name: "falsePositiveRate"
      modelFingerprint: "2AF87CA22B4ABB90F43294D8F85267CB"
      index: 3
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "BASIC"
        content: !<regular>
          value: 0.0
        valueType: "double"
        uuid: "getFilter_double1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    - type: "INPUT"
      name: "tweak"
      modelFingerprint: "5301D2BD58F7DCA131D68FF92DC628B3"
      index: 4
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "BASIC"
        content: !<regular>
          value: 0
        valueType: "int"
        uuid: "getFilter_int2"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    - type: "STATIC"
      name: "Threading"
      modelFingerprint: "931BDCE1DF6454A48EA195CE5432B664"
      index: 5
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "REAL"
        valueType: "org.bitcoinj.utils.Threading"
        uuid: "org.bitcoinj.utils.Threading"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "org.bitcoinj.utils.Threading"
        name: "lock"
        parameters:
        - name: "clazz"
          value:
            sapientType: "CLASS"
            content: !<regular>
              value: "org.bitcoinj.wallet.BasicKeyChain"
            valueType: "java.lang.Class"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "lock(Class): ReentrantLock"
        returnValue:
          sapientType: "OBJECT"
          content: !<static_method_return>
            target: "org.bitcoinj.utils.Threading"
            method: "lock"
            methodParameters:
            - value:
                sapientType: "CLASS"
                content: !<regular>
                  value: "org.bitcoinj.wallet.BasicKeyChain"
                valueType: "java.lang.Class"
                fixed: true
                equalsMethodPresent: false
                explicitCastNeeded: false
          suggestedContent: !<static_method_return>
            target: "org.bitcoinj.utils.Threading"
            method: "lock"
            methodParameters:
            - value:
                sapientType: "CLASS"
                content: !<regular>
                  value: "org.bitcoinj.wallet.BasicKeyChain"
                valueType: "java.lang.Class"
                fixed: true
                equalsMethodPresent: false
                explicitCastNeeded: false
          valueType: "java.util.concurrent.locks.ReentrantLock"
          uuid: "<init>_reentrantLock1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 9
      staticReadMethodForField: false
      filledByUser: false
    - type: "RESULT"
      name: "result"
      modelFingerprint: "1C1CD3E8F5FB22BCB58D41BB6418426C"
      index: 6
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "OBJECT"
        content: !<new>
          target: "org.bitcoinj.core.BloomFilter"
          parameters:
          - name: "elements"
            value:
              sapientType: "BASIC"
              content: !<regular>
                value: 0
              valueType: "int"
              uuid: "getFilter_int1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          - name: "falsePositiveRate"
            value:
              sapientType: "BASIC"
              content: !<regular>
                value: 0.0
              valueType: "double"
              uuid: "getFilter_double1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          - name: "arg2"
            value:
              sapientType: "BASIC"
              content: !<regular>
                value: 0
              valueType: "int"
              uuid: "getFilter_int2"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: true
        suggestedContent: !<new>
          target: "org.bitcoinj.core.BloomFilter"
          parameters:
          - name: "elements"
            value:
              sapientType: "BASIC"
              valueType: "int"
              uuid: "getFilter_int1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          - name: "falsePositiveRate"
            value:
              sapientType: "BASIC"
              valueType: "double"
              uuid: "getFilter_double1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          - name: "arg2"
            value:
              sapientType: "BASIC"
              valueType: "int"
              uuid: "getFilter_int2"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: true
        valueType: "org.bitcoinj.core.BloomFilter"
        uuid: "getFilter_bloomFilter1"
        fixed: true
        equalsMethodPresent: true
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    uuid: "9266e2a3-866e-38e5-be88-a823742ce3e0"
    deleted: false
    disabled: false
    ignoredBySystem: false
    prover: "DEFAULT"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
- method:
    name: "numBloomFilterEntries"
    returnType: "int"
    signature: "numBloomFilterEntries() : int"
    instructionFingerprint: "4D3CAACE83B5BC254A0F083E43F7E2C2"
    parametersTypes: []
  paths:
  - pathId: "path1"
    pathIdForUser: "path1"
    testPathName: "numBloomFilterEntriesTest"
    nameDefinedByUser: false
    constructorSignature: "<init>(org.bitcoinj.crypto.KeyCrypter) : void"
    priorityDefinedByUser: false
    filledByUser: false
    priority: "LOW"
    modelFingerprint: "73230E961C8C77F3E9A3D0A5A71ADE85"
    problemWasSolvedByProver: true
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "35099553EB48D2AEC42E2A9279A21C51"
      index: 1
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "OBJECT"
        content: !<new>
          target: "org.bitcoinj.wallet.BasicKeyChain"
          parameters:
          - name: "crypter"
            value:
              sapientType: "MOCK"
              valueType: "org.bitcoinj.crypto.KeyCrypter"
              uuid: "<init>_keyCrypter1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: false
        suggestedContent: !<new>
          target: "org.bitcoinj.wallet.BasicKeyChain"
          parameters:
          - name: "crypter"
            value:
              sapientType: "UNKNOWN"
              valueType: "org.bitcoinj.crypto.KeyCrypter"
              uuid: "<init>_keyCrypter1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: false
        valueType: "org.bitcoinj.wallet.BasicKeyChain"
        uuid: "target"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    - type: "STATIC"
      name: "Threading"
      modelFingerprint: "931BDCE1DF6454A48EA195CE5432B664"
      index: 2
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "REAL"
        valueType: "org.bitcoinj.utils.Threading"
        uuid: "org.bitcoinj.utils.Threading"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "org.bitcoinj.utils.Threading"
        name: "lock"
        parameters:
        - name: "clazz"
          value:
            sapientType: "CLASS"
            content: !<regular>
              value: "org.bitcoinj.wallet.BasicKeyChain"
            valueType: "java.lang.Class"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "lock(Class): ReentrantLock"
        returnValue:
          sapientType: "OBJECT"
          content: !<static_method_return>
            target: "org.bitcoinj.utils.Threading"
            method: "lock"
            methodParameters:
            - value:
                sapientType: "CLASS"
                content: !<regular>
                  value: "org.bitcoinj.wallet.BasicKeyChain"
                valueType: "java.lang.Class"
                fixed: true
                equalsMethodPresent: false
                explicitCastNeeded: false
          suggestedContent: !<static_method_return>
            target: "org.bitcoinj.utils.Threading"
            method: "lock"
            methodParameters:
            - value:
                sapientType: "CLASS"
                content: !<regular>
                  value: "org.bitcoinj.wallet.BasicKeyChain"
                valueType: "java.lang.Class"
                fixed: true
                equalsMethodPresent: false
                explicitCastNeeded: false
          valueType: "java.util.concurrent.locks.ReentrantLock"
          uuid: "<init>_reentrantLock1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 9
      staticReadMethodForField: false
      filledByUser: false
    - type: "RESULT"
      name: "result"
      modelFingerprint: "158A76FAE4C1E5741587C22A6148B6F0"
      index: 3
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "BASIC"
        content: !<regular>
          value: 0
        valueType: "int"
        fixed: true
        equalsMethodPresent: true
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    uuid: "bce340de-c9e7-3b09-ae2c-d943d6a73f89"
    deleted: false
    disabled: false
    ignoredBySystem: false
    prover: "DEFAULT"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
- method:
    name: "findOldestKeyAfter"
    returnType: "java.util.Optional"
    signature: "findOldestKeyAfter(java.time.Instant) : java.util.Optional<org.bitcoinj.crypto.ECKey>"
    instructionFingerprint: "01A50F117A9B552B84695FC668D77265"
    parametersTypes:
    - "java.time.Instant"
  paths:
  - pathId: "path1"
    pathIdForUser: "path1"
    testPathName: "findOldestKeyAfterWhenHashToKeysValuesIsEmpty"
    nameDefinedByUser: false
    constructorSignature: "<init>(org.bitcoinj.crypto.KeyCrypter) : void"
    priorityDefinedByUser: false
    filledByUser: false
    priority: "LOW"
    modelFingerprint: "3A5B417879B68EBA346D13BA2B31FE53"
    problemWasSolvedByProver: true
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "35099553EB48D2AEC42E2A9279A21C51"
      index: 1
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "OBJECT"
        content: !<new>
          target: "org.bitcoinj.wallet.BasicKeyChain"
          parameters:
          - name: "crypter"
            value:
              sapientType: "MOCK"
              valueType: "org.bitcoinj.crypto.KeyCrypter"
              uuid: "<init>_keyCrypter1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: false
        suggestedContent: !<new>
          target: "org.bitcoinj.wallet.BasicKeyChain"
          parameters:
          - name: "crypter"
            value:
              sapientType: "UNKNOWN"
              valueType: "org.bitcoinj.crypto.KeyCrypter"
              uuid: "<init>_keyCrypter1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: false
        valueType: "org.bitcoinj.wallet.BasicKeyChain"
        uuid: "target"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    - type: "INPUT"
      name: "time"
      modelFingerprint: "CD0A60B6E657A20C7EC71113B6EC0232"
      index: 2
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "OBJECT"
        content: !<static_method_return>
          target: "java.time.Instant"
          method: "now"
          methodParameters: []
        suggestedContent: !<static_method_return>
          target: "java.time.Instant"
          method: "now"
          methodParameters: []
        valueType: "java.time.Instant"
        uuid: "findOldestKeyAfter_instant1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    - type: "STATIC"
      name: "Threading"
      modelFingerprint: "931BDCE1DF6454A48EA195CE5432B664"
      index: 3
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "REAL"
        valueType: "org.bitcoinj.utils.Threading"
        uuid: "org.bitcoinj.utils.Threading"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "org.bitcoinj.utils.Threading"
        name: "lock"
        parameters:
        - name: "clazz"
          value:
            sapientType: "CLASS"
            content: !<regular>
              value: "org.bitcoinj.wallet.BasicKeyChain"
            valueType: "java.lang.Class"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "lock(Class): ReentrantLock"
        returnValue:
          sapientType: "OBJECT"
          content: !<static_method_return>
            target: "org.bitcoinj.utils.Threading"
            method: "lock"
            methodParameters:
            - value:
                sapientType: "CLASS"
                content: !<regular>
                  value: "org.bitcoinj.wallet.BasicKeyChain"
                valueType: "java.lang.Class"
                fixed: true
                equalsMethodPresent: false
                explicitCastNeeded: false
          suggestedContent: !<static_method_return>
            target: "org.bitcoinj.utils.Threading"
            method: "lock"
            methodParameters:
            - value:
                sapientType: "CLASS"
                content: !<regular>
                  value: "org.bitcoinj.wallet.BasicKeyChain"
                valueType: "java.lang.Class"
                fixed: true
                equalsMethodPresent: false
                explicitCastNeeded: false
          valueType: "java.util.concurrent.locks.ReentrantLock"
          uuid: "<init>_reentrantLock1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 9
      staticReadMethodForField: false
      filledByUser: false
    - type: "RESULT"
      name: "result"
      modelFingerprint: "22834AE7403127A3D9C50BF0BADF382A"
      index: 4
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "OPTIONAL"
        content: !<optional>
          value:
            sapientType: "NULL"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          target: "java.util.Optional"
        valueType: "java.util.Optional"
        genericValueType: "org.bitcoinj.crypto.ECKey"
        uuid: "findOldestKeyAfter_optional1"
        fixed: false
        equalsMethodPresent: true
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    uuid: "92d970e1-425c-316a-b84d-dd818fccb15d"
    deleted: false
    disabled: false
    ignoredBySystem: false
    prover: "DEFAULT"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
- method:
    name: "findOldestKeyAfter"
    returnType: "org.bitcoinj.crypto.ECKey"
    signature: "findOldestKeyAfter(long) : org.bitcoinj.crypto.ECKey"
    instructionFingerprint: "38521614C53952D65336A28F84AE2FAF"
    parametersTypes:
    - "long"
  paths:
  - pathId: "path1"
    pathIdForUser: "path1"
    testPathName: "findOldestKeyAfter1Test"
    nameDefinedByUser: false
    constructorSignature: "<init>(org.bitcoinj.crypto.KeyCrypter) : void"
    priorityDefinedByUser: false
    filledByUser: false
    priority: "LOW"
    modelFingerprint: "99723D9B0FB8DB06E4CFE7E4381A99ED"
    problemWasSolvedByProver: true
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "35099553EB48D2AEC42E2A9279A21C51"
      index: 1
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "OBJECT"
        content: !<new>
          target: "org.bitcoinj.wallet.BasicKeyChain"
          parameters:
          - name: "crypter"
            value:
              sapientType: "MOCK"
              valueType: "org.bitcoinj.crypto.KeyCrypter"
              uuid: "<init>_keyCrypter1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: false
        suggestedContent: !<new>
          target: "org.bitcoinj.wallet.BasicKeyChain"
          parameters:
          - name: "crypter"
            value:
              sapientType: "UNKNOWN"
              valueType: "org.bitcoinj.crypto.KeyCrypter"
              uuid: "<init>_keyCrypter1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: false
        valueType: "org.bitcoinj.wallet.BasicKeyChain"
        uuid: "target"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    - type: "INPUT"
      name: "timeSecs"
      modelFingerprint: "DF74AB8094E9E52096AA0F42AFB26C7C"
      index: 2
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "BASIC"
        content: !<regular>
          value: 1
        suggestedContent: !<regular>
          value: 1
        valueType: "long"
        uuid: "findOldestKeyAfter_long1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    - type: "STATIC"
      name: "Threading"
      modelFingerprint: "931BDCE1DF6454A48EA195CE5432B664"
      index: 3
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "REAL"
        valueType: "org.bitcoinj.utils.Threading"
        uuid: "org.bitcoinj.utils.Threading"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "org.bitcoinj.utils.Threading"
        name: "lock"
        parameters:
        - name: "clazz"
          value:
            sapientType: "CLASS"
            content: !<regular>
              value: "org.bitcoinj.wallet.BasicKeyChain"
            valueType: "java.lang.Class"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "lock(Class): ReentrantLock"
        returnValue:
          sapientType: "OBJECT"
          content: !<static_method_return>
            target: "org.bitcoinj.utils.Threading"
            method: "lock"
            methodParameters:
            - value:
                sapientType: "CLASS"
                content: !<regular>
                  value: "org.bitcoinj.wallet.BasicKeyChain"
                valueType: "java.lang.Class"
                fixed: true
                equalsMethodPresent: false
                explicitCastNeeded: false
          suggestedContent: !<static_method_return>
            target: "org.bitcoinj.utils.Threading"
            method: "lock"
            methodParameters:
            - value:
                sapientType: "CLASS"
                content: !<regular>
                  value: "org.bitcoinj.wallet.BasicKeyChain"
                valueType: "java.lang.Class"
                fixed: true
                equalsMethodPresent: false
                explicitCastNeeded: false
          valueType: "java.util.concurrent.locks.ReentrantLock"
          uuid: "<init>_reentrantLock1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 9
      staticReadMethodForField: false
      filledByUser: false
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "4CBA46D5FEB4C360C060060481567438"
      index: 4
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      methodExercised:
        target: "target"
        name: "findOldestKeyAfter"
        parameters:
        - name: "time"
          value:
            sapientType: "OBJECT"
            content: !<static_method_return>
              target: "java.time.Instant"
              method: "ofEpochSecond"
              methodParameters:
              - value:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: 1
                  valueType: "long"
                  uuid: "findOldestKeyAfter_long1"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
            suggestedContent: !<static_method_return>
              target: "java.time.Instant"
              method: "ofEpochSecond"
              methodParameters:
              - value:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: 1
                  valueType: "long"
                  uuid: "findOldestKeyAfter_long1"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
            valueType: "java.time.Instant"
            uuid: "findOldestKeyAfter_instant1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "findOldestKeyAfter(Instant): Optional"
        returnValue:
          sapientType: "OPTIONAL"
          content: !<optional>
            value:
              sapientType: "NULL"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
            target: "java.util.Optional"
          valueType: "java.util.Optional"
          genericValueType: "org.bitcoinj.crypto.ECKey"
          uuid: "findOldestKeyAfter_optional1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 1
      staticReadMethodForField: false
      filledByUser: false
    - type: "RESULT"
      name: "result"
      modelFingerprint: "08890B6BF3164EA84B2BFA20C164B778"
      index: 5
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "NULL"
        valueType: "org.bitcoinj.crypto.ECKey"
        fixed: false
        equalsMethodPresent: true
        explicitCastNeeded: true
      staticReadMethodForField: false
      filledByUser: false
    uuid: "f86a5b47-e867-37c3-8872-383eb8f89aac"
    deleted: false
    disabled: false
    ignoredBySystem: false
    prover: "DEFAULT"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
- method:
    name: "findKeysBefore"
    returnType: "java.util.List"
    signature: "findKeysBefore(java.time.Instant) : java.util.List<org.bitcoinj.crypto.ECKey>"
    instructionFingerprint: "0B497172E397DA6BA9CCA8E3399B6253"
    parametersTypes:
    - "java.time.Instant"
  paths:
  - pathId: "path1"
    pathIdForUser: "path1"
    testPathName: "findKeysBeforeWhenHashToKeysValuesIsEmpty"
    nameDefinedByUser: false
    constructorSignature: "<init>(org.bitcoinj.crypto.KeyCrypter) : void"
    priorityDefinedByUser: false
    filledByUser: false
    priority: "LOW"
    modelFingerprint: "6370081DC085502E6470DF7BC9B5FE95"
    problemWasSolvedByProver: true
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "35099553EB48D2AEC42E2A9279A21C51"
      index: 1
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "OBJECT"
        content: !<new>
          target: "org.bitcoinj.wallet.BasicKeyChain"
          parameters:
          - name: "crypter"
            value:
              sapientType: "MOCK"
              valueType: "org.bitcoinj.crypto.KeyCrypter"
              uuid: "<init>_keyCrypter1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: false
        suggestedContent: !<new>
          target: "org.bitcoinj.wallet.BasicKeyChain"
          parameters:
          - name: "crypter"
            value:
              sapientType: "UNKNOWN"
              valueType: "org.bitcoinj.crypto.KeyCrypter"
              uuid: "<init>_keyCrypter1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: false
        valueType: "org.bitcoinj.wallet.BasicKeyChain"
        uuid: "target"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    - type: "INPUT"
      name: "time"
      modelFingerprint: "CD0A60B6E657A20C7EC71113B6EC0232"
      index: 2
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "OBJECT"
        content: !<static_method_return>
          target: "java.time.Instant"
          method: "now"
          methodParameters: []
        suggestedContent: !<static_method_return>
          target: "java.time.Instant"
          method: "now"
          methodParameters: []
        valueType: "java.time.Instant"
        uuid: "findKeysBefore_instant1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    - type: "STATIC"
      name: "Threading"
      modelFingerprint: "931BDCE1DF6454A48EA195CE5432B664"
      index: 3
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "REAL"
        valueType: "org.bitcoinj.utils.Threading"
        uuid: "org.bitcoinj.utils.Threading"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "org.bitcoinj.utils.Threading"
        name: "lock"
        parameters:
        - name: "clazz"
          value:
            sapientType: "CLASS"
            content: !<regular>
              value: "org.bitcoinj.wallet.BasicKeyChain"
            valueType: "java.lang.Class"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "lock(Class): ReentrantLock"
        returnValue:
          sapientType: "OBJECT"
          content: !<static_method_return>
            target: "org.bitcoinj.utils.Threading"
            method: "lock"
            methodParameters:
            - value:
                sapientType: "CLASS"
                content: !<regular>
                  value: "org.bitcoinj.wallet.BasicKeyChain"
                valueType: "java.lang.Class"
                fixed: true
                equalsMethodPresent: false
                explicitCastNeeded: false
          suggestedContent: !<static_method_return>
            target: "org.bitcoinj.utils.Threading"
            method: "lock"
            methodParameters:
            - value:
                sapientType: "CLASS"
                content: !<regular>
                  value: "org.bitcoinj.wallet.BasicKeyChain"
                valueType: "java.lang.Class"
                fixed: true
                equalsMethodPresent: false
                explicitCastNeeded: false
          valueType: "java.util.concurrent.locks.ReentrantLock"
          uuid: "<init>_reentrantLock1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 9
      staticReadMethodForField: false
      filledByUser: false
    - type: "RESULT"
      name: "result"
      modelFingerprint: "5F5C60B0AADBAA7A9ED99F5DEE47026A"
      index: 4
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "COLLECTION"
        content: !<collection>
          collectionClass: "java.util.LinkedList"
          parameters: []
          values: []
        suggestedContent: !<collection>
          collectionClass: "java.util.LinkedList"
          parameters: []
          values: []
        valueType: "java.util.List"
        genericValueType: "org.bitcoinj.crypto.ECKey"
        uuid: "findKeysBefore_linkedList1"
        fixed: false
        equalsMethodPresent: true
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    uuid: "b76a6220-3783-3356-ae38-5dddbf5dead9"
    deleted: false
    disabled: false
    ignoredBySystem: false
    prover: "DEFAULT"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
- method:
    name: "findKeysBefore"
    returnType: "java.util.List"
    signature: "findKeysBefore(long) : java.util.List<org.bitcoinj.crypto.ECKey>"
    instructionFingerprint: "8CC2FC0F4DB1CF7F86A5C3329BB2E698"
    parametersTypes:
    - "long"
  paths:
  - pathId: "path1"
    pathIdForUser: "path1"
    testPathName: "findKeysBefore1Test"
    nameDefinedByUser: false
    constructorSignature: "<init>(org.bitcoinj.crypto.KeyCrypter) : void"
    priorityDefinedByUser: false
    filledByUser: false
    priority: "LOW"
    modelFingerprint: "B691C321F82327A9C7348B2C1461EE61"
    problemWasSolvedByProver: true
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "35099553EB48D2AEC42E2A9279A21C51"
      index: 1
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "OBJECT"
        content: !<new>
          target: "org.bitcoinj.wallet.BasicKeyChain"
          parameters:
          - name: "crypter"
            value:
              sapientType: "MOCK"
              valueType: "org.bitcoinj.crypto.KeyCrypter"
              uuid: "<init>_keyCrypter1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: false
        suggestedContent: !<new>
          target: "org.bitcoinj.wallet.BasicKeyChain"
          parameters:
          - name: "crypter"
            value:
              sapientType: "UNKNOWN"
              valueType: "org.bitcoinj.crypto.KeyCrypter"
              uuid: "<init>_keyCrypter1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: false
        valueType: "org.bitcoinj.wallet.BasicKeyChain"
        uuid: "target"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    - type: "INPUT"
      name: "timeSecs"
      modelFingerprint: "DF74AB8094E9E52096AA0F42AFB26C7C"
      index: 2
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "BASIC"
        content: !<regular>
          value: 1
        suggestedContent: !<regular>
          value: 1
        valueType: "long"
        uuid: "findKeysBefore_long1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    - type: "STATIC"
      name: "Threading"
      modelFingerprint: "931BDCE1DF6454A48EA195CE5432B664"
      index: 3
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "REAL"
        valueType: "org.bitcoinj.utils.Threading"
        uuid: "org.bitcoinj.utils.Threading"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "org.bitcoinj.utils.Threading"
        name: "lock"
        parameters:
        - name: "clazz"
          value:
            sapientType: "CLASS"
            content: !<regular>
              value: "org.bitcoinj.wallet.BasicKeyChain"
            valueType: "java.lang.Class"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "lock(Class): ReentrantLock"
        returnValue:
          sapientType: "OBJECT"
          content: !<static_method_return>
            target: "org.bitcoinj.utils.Threading"
            method: "lock"
            methodParameters:
            - value:
                sapientType: "CLASS"
                content: !<regular>
                  value: "org.bitcoinj.wallet.BasicKeyChain"
                valueType: "java.lang.Class"
                fixed: true
                equalsMethodPresent: false
                explicitCastNeeded: false
          suggestedContent: !<static_method_return>
            target: "org.bitcoinj.utils.Threading"
            method: "lock"
            methodParameters:
            - value:
                sapientType: "CLASS"
                content: !<regular>
                  value: "org.bitcoinj.wallet.BasicKeyChain"
                valueType: "java.lang.Class"
                fixed: true
                equalsMethodPresent: false
                explicitCastNeeded: false
          valueType: "java.util.concurrent.locks.ReentrantLock"
          uuid: "<init>_reentrantLock1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 9
      staticReadMethodForField: false
      filledByUser: false
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "36EE1E1371C6561E67FAB66A21E0F9E6"
      index: 4
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      methodExercised:
        target: "target"
        name: "findKeysBefore"
        parameters:
        - name: "time"
          value:
            sapientType: "OBJECT"
            content: !<static_method_return>
              target: "java.time.Instant"
              method: "ofEpochSecond"
              methodParameters:
              - value:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: 1
                  valueType: "long"
                  uuid: "findKeysBefore_long1"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
            suggestedContent: !<static_method_return>
              target: "java.time.Instant"
              method: "ofEpochSecond"
              methodParameters:
              - value:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: 1
                  valueType: "long"
                  uuid: "findKeysBefore_long1"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
            valueType: "java.time.Instant"
            uuid: "findKeysBefore_instant1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "findKeysBefore(Instant): List"
        returnValue:
          sapientType: "COLLECTION"
          content: !<collection>
            parameters: []
            values: []
          suggestedContent: !<collection>
            parameters: []
            values: []
          valueType: "java.util.List"
          genericValueType: "org.bitcoinj.crypto.ECKey"
          uuid: "findKeysBefore_list1"
          fixed: false
          equalsMethodPresent: true
          explicitCastNeeded: false
        access: 1
      staticReadMethodForField: false
      filledByUser: false
    - type: "RESULT"
      name: "result"
      modelFingerprint: "6DF45785DA4A51B7AE28D5F0F20F6DB8"
      index: 5
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "COLLECTION"
        content: !<collection>
          parameters: []
          values: []
        suggestedContent: !<collection>
          parameters: []
          values: []
        valueType: "java.util.List"
        genericValueType: "org.bitcoinj.crypto.ECKey"
        uuid: "findKeysBefore_list1"
        fixed: false
        equalsMethodPresent: true
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    uuid: "5cba9991-a1d7-3cf6-b24a-e46b4bae8418"
    deleted: false
    disabled: false
    ignoredBySystem: false
    prover: "DEFAULT"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
- method:
    name: "toString"
    returnType: "java.lang.String"
    signature: "toString(boolean,org.bitcoinj.crypto.AesKey,org.bitcoinj.base.Network)\
      \ : java.lang.String"
    instructionFingerprint: "836E761E78A54B5B16C0A900F0D22334"
    parametersTypes:
    - "boolean"
    - "org.bitcoinj.crypto.AesKey"
    - "org.bitcoinj.base.Network"
  paths:
  - pathId: "path1"
    pathIdForUser: "path1"
    testPathName: "toStringWhenKeysIsNotEmpty"
    nameDefinedByUser: false
    constructorSignature: "<init>(org.bitcoinj.crypto.KeyCrypter) : void"
    priorityDefinedByUser: false
    filledByUser: false
    priority: "LOW"
    modelFingerprint: "94DDF89221224BA9DEEF2EB2EFBDCC75"
    problemWasSolvedByProver: false
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "5A578F42BFEB4203A6C7966A20EF0CCB"
      index: 1
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "OBJECT"
        content: !<new>
          target: "org.bitcoinj.wallet.BasicKeyChain"
          parameters:
          - name: "crypter"
            value:
              sapientType: "MOCK"
              suggestedContent: !<unknown_object>
                target: "org.bitcoinj.crypto.KeyCrypter"
                onlyPojoFunctions: false
                builderPattern: false
              valueType: "org.bitcoinj.crypto.KeyCrypter"
              uuid: "<init>_keyCrypter1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: false
        suggestedContent: !<new>
          target: "org.bitcoinj.wallet.BasicKeyChain"
          parameters:
          - name: "crypter"
            value:
              sapientType: "MOCK"
              suggestedContent: !<unknown_object>
                target: "org.bitcoinj.crypto.KeyCrypter"
                onlyPojoFunctions: false
                builderPattern: false
              valueType: "org.bitcoinj.crypto.KeyCrypter"
              uuid: "<init>_keyCrypter1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: false
        valueType: "org.bitcoinj.wallet.BasicKeyChain"
        uuid: "target"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    - type: "INPUT"
      name: "includePrivateKeys"
      modelFingerprint: "98252565939A2C2E475AAFECD4F3A62E"
      index: 2
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "BASIC"
        content: !<regular>
          value: true
        suggestedContent: !<regular>
          value: true
        valueType: "boolean"
        uuid: "toString_boolean1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    - type: "INPUT"
      name: "aesKey"
      modelFingerprint: "D550212424731722C9F8E50604D34710"
      index: 3
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        suggestedContent: !<unknown_object>
          target: "org.bitcoinj.crypto.AesKey"
          onlyPojoFunctions: false
          builderPattern: false
        valueType: "org.bitcoinj.crypto.AesKey"
        uuid: "toString_aesKey1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    - type: "INPUT"
      name: "network"
      modelFingerprint: "62D36D9D71CD6C8C1AEBB21D1EB5E1D6"
      index: 4
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        suggestedContent: !<unknown_object>
          target: "org.bitcoinj.base.Network"
          onlyPojoFunctions: false
          builderPattern: false
        valueType: "org.bitcoinj.base.Network"
        uuid: "toString_network1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    - type: "STATIC"
      name: "Threading"
      modelFingerprint: "0D4103179D909C67DEE8A906C8C7511A"
      index: 5
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        valueType: "org.bitcoinj.utils.Threading"
        uuid: "org.bitcoinj.utils.Threading"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "org.bitcoinj.utils.Threading"
        name: "lock"
        parameters:
        - name: "clazz"
          value:
            sapientType: "CLASS"
            content: !<regular>
              value: "org.bitcoinj.wallet.BasicKeyChain"
            valueType: "java.lang.Class"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "lock(Class): ReentrantLock"
        returnValue:
          sapientType: "OBJECT"
          content: !<static_method_return>
            target: "org.bitcoinj.utils.Threading"
            method: "lock"
            methodParameters:
            - value:
                sapientType: "CLASS"
                content: !<regular>
                  value: "org.bitcoinj.wallet.BasicKeyChain"
                valueType: "java.lang.Class"
                fixed: true
                equalsMethodPresent: false
                explicitCastNeeded: false
          suggestedContent: !<static_method_return>
            target: "org.bitcoinj.utils.Threading"
            method: "lock"
            methodParameters:
            - value:
                sapientType: "CLASS"
                content: !<regular>
                  value: "org.bitcoinj.wallet.BasicKeyChain"
                valueType: "java.lang.Class"
                fixed: true
                equalsMethodPresent: false
                explicitCastNeeded: false
          valueType: "java.util.concurrent.locks.ReentrantLock"
          uuid: "<init>_reentrantLock1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 9
      staticReadMethodForField: false
      filledByUser: false
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "12CB27CBF7A483F2A7CFA91BFC3ABAD7"
      index: 6
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      methodExercised:
        target: "target"
        name: "getKeys"
        parameters: []
        signature: "getKeys(): List"
        returnValue:
          sapientType: "COLLECTION"
          content: !<collection>
            collectionClass: "java.util.ArrayList"
            parameters: []
            values:
            - sapientType: "MOCK"
              suggestedContent: !<unknown_object>
                target: "org.bitcoinj.crypto.ECKey"
                onlyPojoFunctions: false
                builderPattern: false
              valueType: "org.bitcoinj.crypto.ECKey"
              uuid: "toString_object1"
              fixed: false
              collectionUuid: "toString_list1"
              equalsMethodPresent: false
              explicitCastNeeded: false
          suggestedContent: !<collection>
            collectionClass: "java.util.ArrayList"
            parameters: []
            values:
            - sapientType: "MOCK"
              suggestedContent: !<unknown_object>
                target: "org.bitcoinj.crypto.ECKey"
                onlyPojoFunctions: false
                builderPattern: false
              valueType: "org.bitcoinj.crypto.ECKey"
              uuid: "toString_object1"
              fixed: false
              collectionUuid: "toString_list1"
              equalsMethodPresent: false
              explicitCastNeeded: false
          valueType: "java.util.List"
          genericValueType: "org.bitcoinj.crypto.ECKey"
          uuid: "toString_list1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 1
      staticReadMethodForField: false
      filledByUser: false
    - type: "LOCAL_VARIABLE"
      name: "key"
      modelFingerprint: "C0290A21BF10CC5FCAB30887AA49E2A9"
      index: 7
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        suggestedContent: !<unknown_object>
          target: "org.bitcoinj.crypto.ECKey"
          onlyPojoFunctions: false
          builderPattern: false
        valueType: "org.bitcoinj.crypto.ECKey"
        uuid: "toString_object1"
        fixed: false
        collectionUuid: "toString_list1"
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "key"
        name: "formatKeyWithAddress"
        parameters:
        - name: "includePrivateKeys"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: true
            suggestedContent: !<regular>
              value: true
            valueType: "boolean"
            uuid: "toString_boolean1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "aesKey"
          value:
            sapientType: "MOCK"
            suggestedContent: !<unknown_object>
              target: "org.bitcoinj.crypto.AesKey"
              onlyPojoFunctions: false
              builderPattern: false
            valueType: "org.bitcoinj.crypto.AesKey"
            uuid: "toString_aesKey1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "builder"
          value:
            sapientType: "STRING_BUILDER"
            content: !<string-builder>
              values: []
              initValues: []
            valueType: "java.lang.StringBuilder"
            uuid: "toString_stringBuilder1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "network"
          value:
            sapientType: "MOCK"
            suggestedContent: !<unknown_object>
              target: "org.bitcoinj.base.Network"
              onlyPojoFunctions: false
              builderPattern: false
            valueType: "org.bitcoinj.base.Network"
            uuid: "toString_network1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "outputScriptType"
          value:
            sapientType: "NULL"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "comment"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "imported"
            valueType: "java.lang.String"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "formatKeyWithAddress(boolean,AesKey,StringBuilder,Network,not-detected,String):\
          \ void"
        returnValue:
          sapientType: "VOID"
          valueType: "void"
          uuid: "toString_void2"
          fixed: true
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 1
      staticReadMethodForField: false
      filledByUser: false
    - type: "RESULT"
      name: "result"
      modelFingerprint: "D1F433D4EB9F8805FF391E82DAB508AB"
      index: 8
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "BASIC"
        content: !<regular>
          value: ""
        suggestedContent: !<regular>
          value: ""
        valueType: "java.lang.String"
        uuid: "toString_string1"
        fixed: false
        equalsMethodPresent: true
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    uuid: "2f338cc5-4f2a-30e5-87d8-039bec302a04"
    deleted: false
    disabled: true
    ignoredBySystem: false
    prover: "LLM"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: true
  - pathId: "path2"
    pathIdForUser: "path2"
    testPathName: "toStringWhenKeysIsEmpty"
    nameDefinedByUser: false
    constructorSignature: "<init>(org.bitcoinj.crypto.KeyCrypter) : void"
    priorityDefinedByUser: false
    filledByUser: false
    priority: "LOW"
    modelFingerprint: "B3053C544E6035FF85E4C402C7406B61"
    problemWasSolvedByProver: false
    truncated: true
    inputParameters: []
    uuid: "67e90694-8ad8-38de-a1bf-7bbecc663c22"
    deleted: true
    disabled: false
    ignoredBySystem: true
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
- method:
    name: "toString"
    returnType: "java.lang.String"
    signature: "toString(boolean,org.bitcoinj.crypto.AesKey,org.bitcoinj.core.NetworkParameters)\
      \ : java.lang.String"
    instructionFingerprint: "0CDD785E1E34CD6736C2435AD856DA1B"
    parametersTypes:
    - "boolean"
    - "org.bitcoinj.crypto.AesKey"
    - "org.bitcoinj.core.NetworkParameters"
  paths:
  - pathId: "path1"
    pathIdForUser: "path1"
    testPathName: "toString1Test"
    nameDefinedByUser: false
    constructorSignature: "<init>(org.bitcoinj.crypto.KeyCrypter) : void"
    priorityDefinedByUser: false
    filledByUser: false
    priority: "LOW"
    modelFingerprint: "58F0440C2417F6374444BBD7D7EB9610"
    problemWasSolvedByProver: true
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "35099553EB48D2AEC42E2A9279A21C51"
      index: 1
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "OBJECT"
        content: !<new>
          target: "org.bitcoinj.wallet.BasicKeyChain"
          parameters:
          - name: "crypter"
            value:
              sapientType: "MOCK"
              valueType: "org.bitcoinj.crypto.KeyCrypter"
              uuid: "<init>_keyCrypter1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: false
        suggestedContent: !<new>
          target: "org.bitcoinj.wallet.BasicKeyChain"
          parameters:
          - name: "crypter"
            value:
              sapientType: "UNKNOWN"
              valueType: "org.bitcoinj.crypto.KeyCrypter"
              uuid: "<init>_keyCrypter1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          privateConstructor: false
          createdByTargetCode: false
        valueType: "org.bitcoinj.wallet.BasicKeyChain"
        uuid: "target"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    - type: "INPUT"
      name: "includePrivateKeys"
      modelFingerprint: "E5B35BC2A050FDF3A36DB54EB387B4AE"
      index: 2
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "BASIC"
        content: !<regular>
          value: false
        valueType: "boolean"
        uuid: "toString_boolean1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    - type: "INPUT"
      name: "aesKey"
      modelFingerprint: "DCA4AEF5E8DED66D0B002FF53D6204FF"
      index: 3
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        valueType: "org.bitcoinj.crypto.AesKey"
        uuid: "toString_aesKey1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    - type: "INPUT"
      name: "params"
      modelFingerprint: "00E8B0A409051C389A8EA4BD13728A98"
      index: 4
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        suggestedContent: !<unknown_object>
          target: "org.bitcoinj.core.NetworkParameters"
          onlyPojoFunctions: false
          builderPattern: false
        valueType: "org.bitcoinj.core.NetworkParameters"
        uuid: "toString_networkParameters1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    - type: "STATIC"
      name: "Threading"
      modelFingerprint: "931BDCE1DF6454A48EA195CE5432B664"
      index: 5
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "REAL"
        valueType: "org.bitcoinj.utils.Threading"
        uuid: "org.bitcoinj.utils.Threading"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "org.bitcoinj.utils.Threading"
        name: "lock"
        parameters:
        - name: "clazz"
          value:
            sapientType: "CLASS"
            content: !<regular>
              value: "org.bitcoinj.wallet.BasicKeyChain"
            valueType: "java.lang.Class"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "lock(Class): ReentrantLock"
        returnValue:
          sapientType: "OBJECT"
          content: !<static_method_return>
            target: "org.bitcoinj.utils.Threading"
            method: "lock"
            methodParameters:
            - value:
                sapientType: "CLASS"
                content: !<regular>
                  value: "org.bitcoinj.wallet.BasicKeyChain"
                valueType: "java.lang.Class"
                fixed: true
                equalsMethodPresent: false
                explicitCastNeeded: false
          suggestedContent: !<static_method_return>
            target: "org.bitcoinj.utils.Threading"
            method: "lock"
            methodParameters:
            - value:
                sapientType: "CLASS"
                content: !<regular>
                  value: "org.bitcoinj.wallet.BasicKeyChain"
                valueType: "java.lang.Class"
                fixed: true
                equalsMethodPresent: false
                explicitCastNeeded: false
          valueType: "java.util.concurrent.locks.ReentrantLock"
          uuid: "<init>_reentrantLock1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 9
      staticReadMethodForField: false
      filledByUser: false
    - type: "LOCAL_VARIABLE"
      name: "params"
      modelFingerprint: "D3F477F2203E38AED3675605B36AEDBC"
      index: 6
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        suggestedContent: !<unknown_object>
          target: "org.bitcoinj.core.NetworkParameters"
          onlyPojoFunctions: false
          builderPattern: false
        valueType: "org.bitcoinj.core.NetworkParameters"
        uuid: "toString_networkParameters1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "params"
        name: "network"
        parameters: []
        signature: "network(): Network"
        returnValue:
          sapientType: "MOCK"
          valueType: "org.bitcoinj.base.Network"
          uuid: "toString_network1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 1
      staticReadMethodForField: false
      filledByUser: false
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "A686B69EA07CD4E19D1353C1D15E7C74"
      index: 7
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      methodExercised:
        target: "target"
        name: "toString"
        parameters:
        - name: "includePrivateKeys"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: false
            valueType: "boolean"
            uuid: "toString_boolean1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "aesKey"
          value:
            sapientType: "MOCK"
            valueType: "org.bitcoinj.crypto.AesKey"
            uuid: "toString_aesKey1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "network"
          value:
            sapientType: "MOCK"
            valueType: "org.bitcoinj.base.Network"
            uuid: "toString_network1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "toString(boolean,AesKey,Network): String"
        returnValue:
          sapientType: "BASIC"
          content: !<regular>
            value: "return_of_toString1"
          valueType: "java.lang.String"
          uuid: "toString_string1"
          fixed: false
          equalsMethodPresent: true
          explicitCastNeeded: false
        access: 1
      staticReadMethodForField: false
      filledByUser: false
    - type: "RESULT"
      name: "result"
      modelFingerprint: "D1F433D4EB9F8805FF391E82DAB508AB"
      index: 8
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "BASIC"
        content: !<regular>
          value: "return_of_toString1"
        valueType: "java.lang.String"
        uuid: "toString_string1"
        fixed: false
        equalsMethodPresent: true
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    uuid: "cabd8b84-4f2d-339c-9d46-60cffe26dac3"
    deleted: false
    disabled: false
    ignoredBySystem: false
    prover: "DEFAULT"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
