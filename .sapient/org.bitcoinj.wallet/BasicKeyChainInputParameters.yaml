---
modelFingerprint: "31906387EF53CFDB683BF7693B20FA2C"
methods:
- method:
    name: "getKeyCrypter"
    signature: "getKeyCrypter() : org.bitcoinj.crypto.KeyCrypter"
    sourceCodeSignature: "KeyCrypter getKeyCrypter()"
    instructionFingerprint: "100E49750E38E7B3DC2258B68A7FEA4B"
  paths:
  - pathId: "path1"
    testPathName: "getKeyCrypterTest"
    constructorSignature: "<init>(org.bitcoinj.crypto.KeyCrypter) : void"
    modelFingerprint: "DD965566354E53964B11AF23E434BE9D"
    problemWasSolvedByProver: true
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "35099553EB48D2AEC42E2A9279A21C51"
      index: 1
      valueUuid: "target"
    - type: "STATIC"
      name: "Threading"
      modelFingerprint: "F7EA5C46482BE836BD810E3E7E297587"
      index: 2
      valueUuid: "uuid2"
      methodExercised:
        target: "org.bitcoinj.utils.Threading"
        name: "lock"
        parameters:
        - name: "clazz"
          valueUuid: "uuid1"
        signature: "lock(Class): ReentrantLock"
        returnValueUuid: "<init>_reentrantLock1"
        access: 9
    - type: "RESULT"
      name: "result"
      modelFingerprint: "E597BFB0BA3F8892A5D21EDD457E7A07"
      index: 3
      valueUuid: "<init>_keyCrypter1"
    uuid: "5263e1c8-6ee4-3528-9e17-7641d8067bcf"
    deleted: false
    disabled: false
    ignoredBySystem: false
    prover: "DEFAULT"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.bitcoinj.wallet.BasicKeyChain"
        parameters:
        - name: "crypter"
          value:
            sapientType: "MOCK"
            valueType: "org.bitcoinj.crypto.KeyCrypter"
            uuid: "<init>_keyCrypter1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      valueType: "org.bitcoinj.wallet.BasicKeyChain"
      uuid: "target"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "REAL"
      valueType: "org.bitcoinj.utils.Threading"
      uuid: "uuid2"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.bitcoinj.utils.Threading"
        method: "lock"
        methodParameters:
        - value:
            sapientType: "CLASS"
            content: !<regular>
              value: "org.bitcoinj.wallet.BasicKeyChain"
            valueType: "java.lang.Class"
            genericValueType: "org.bitcoinj.wallet.BasicKeyChain"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
      valueType: "java.util.concurrent.locks.ReentrantLock"
      uuid: "<init>_reentrantLock1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.bitcoinj.wallet.BasicKeyChain"
      valueType: "java.lang.Class"
      genericValueType: "org.bitcoinj.wallet.BasicKeyChain"
      uuid: "uuid1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.bitcoinj.crypto.KeyCrypter"
      uuid: "<init>_keyCrypter1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
- method:
    name: "getKey"
    signature: "getKey(org.bitcoinj.wallet.KeyChain$KeyPurpose) : org.bitcoinj.crypto.ECKey"
    sourceCodeSignature: "ECKey getKey(@Nullable KeyPurpose ignored)"
    instructionFingerprint: "3B7A71F781D9FEAD4B178E014DC774CF"
  paths:
  - pathId: "path2"
    testPathName: "getKeyWhenKeyCrypterIsNotNullThrowsIllegalStateException"
    constructorSignature: "<init>(org.bitcoinj.crypto.KeyCrypter) : void"
    modelFingerprint: "F94F2515FABEE656A4A5F0DA0DC05439"
    problemWasSolvedByProver: true
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "35099553EB48D2AEC42E2A9279A21C51"
      index: 1
      valueUuid: "target"
    - type: "INPUT"
      name: "ignored"
      modelFingerprint: "051CAD88FDA4E3DB1AF2F6A820E9B2EE"
      index: 2
      valueUuid: "getKey_keyChain.KeyPurpose1"
    - type: "STATIC"
      name: "Threading"
      modelFingerprint: "F7EA5C46482BE836BD810E3E7E297587"
      index: 3
      valueUuid: "uuid4"
      methodExercised:
        target: "org.bitcoinj.utils.Threading"
        name: "lock"
        parameters:
        - name: "clazz"
          valueUuid: "uuid3"
        signature: "lock(Class): ReentrantLock"
        returnValueUuid: "<init>_reentrantLock1"
        access: 9
    - type: "STATIC"
      name: "Preconditions"
      modelFingerprint: "5D1C76B3909AD28BDDC21FFF70362CB1"
      index: 4
      valueUuid: "uuid7"
      methodExercised:
        target: "org.bitcoinj.base.internal.Preconditions"
        name: "checkState"
        parameters:
        - name: "expression"
          valueUuid: "uuid5"
        signature: "checkState(boolean): void"
        returnValueUuid: "uuid6"
        access: 9
    - type: "RESULT"
      name: "result"
      modelFingerprint: "C9C68C9339F812BC8DEC7C1D6145A135"
      index: 5
      valueUuid: "uuid8"
    uuid: "b3aabb5a-13d7-3113-8205-37e1e5c5b342"
    deleted: false
    disabled: false
    ignoredBySystem: false
    prover: "DEFAULT"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.bitcoinj.wallet.BasicKeyChain"
        parameters:
        - name: "crypter"
          value:
            sapientType: "MOCK"
            valueType: "org.bitcoinj.crypto.KeyCrypter"
            uuid: "<init>_keyCrypter1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      valueType: "org.bitcoinj.wallet.BasicKeyChain"
      uuid: "target"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "ENUM"
      content: !<regular>
        value: "RECEIVE_FUNDS"
      valueType: "org.bitcoinj.wallet.KeyChain$KeyPurpose"
      uuid: "getKey_keyChain.KeyPurpose1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "REAL"
      valueType: "org.bitcoinj.utils.Threading"
      uuid: "uuid4"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.bitcoinj.utils.Threading"
        method: "lock"
        methodParameters:
        - value:
            sapientType: "CLASS"
            content: !<regular>
              value: "org.bitcoinj.wallet.BasicKeyChain"
            valueType: "java.lang.Class"
            genericValueType: "org.bitcoinj.wallet.BasicKeyChain"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
      valueType: "java.util.concurrent.locks.ReentrantLock"
      uuid: "<init>_reentrantLock1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.bitcoinj.wallet.BasicKeyChain"
      valueType: "java.lang.Class"
      genericValueType: "org.bitcoinj.wallet.BasicKeyChain"
      uuid: "uuid3"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "REAL"
      valueType: "org.bitcoinj.base.internal.Preconditions"
      uuid: "uuid7"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "EXCEPTION"
      content: !<new>
        target: "java.lang.IllegalStateException"
        parameters: []
        privateConstructor: false
        createdByTargetCode: false
      valueType: "java.lang.IllegalStateException"
      uuid: "uuid6"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "uuid5"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "EXCEPTION"
      content: !<new>
        target: "java.lang.IllegalStateException"
        parameters: []
        privateConstructor: false
        createdByTargetCode: false
      valueType: "java.lang.IllegalStateException"
      uuid: "uuid8"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
  - pathId: "path1"
    testPathName: "getKeyWhenPreviousKeyIsNullThrowsIllegalStateException"
    constructorSignature: "<init>(org.bitcoinj.crypto.KeyCrypter) : void"
    modelFingerprint: "70A1E652C7DDBFEF05D566D22003352F"
    problemWasSolvedByProver: false
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "AC70298FA93F6048125F94F6464F3643"
      index: 1
      valueUuid: "target"
    - type: "INPUT"
      name: "ignored"
      modelFingerprint: "051CAD88FDA4E3DB1AF2F6A820E9B2EE"
      index: 2
      valueUuid: "getKey_keyChain.KeyPurpose1"
    - type: "STATIC"
      name: "Threading"
      modelFingerprint: "F7EA5C46482BE836BD810E3E7E297587"
      index: 3
      valueUuid: "uuid10"
      methodExercised:
        target: "org.bitcoinj.utils.Threading"
        name: "lock"
        parameters:
        - name: "clazz"
          valueUuid: "uuid9"
        signature: "lock(Class): ReentrantLock"
        returnValueUuid: "<init>_reentrantLock1"
        access: 9
    - type: "STATIC"
      name: "Preconditions"
      modelFingerprint: "ACF07FFCA3E2E1576E0B7D7733EEEFF8"
      index: 4
      valueUuid: "uuid12"
      methodExercised:
        target: "org.bitcoinj.base.internal.Preconditions"
        name: "checkState"
        parameters:
        - name: "expression"
          valueUuid: "uuid11"
        signature: "checkState(boolean): void"
        returnValueUuid: "getKey_void2"
        access: 9
    - type: "LOCAL_VARIABLE"
      name: "key"
      modelFingerprint: "F3D83E38C83208A30267772DB87E20BA"
      index: 5
      valueUuid: "getKey_eCKey1"
      methodExercised:
        target: "key"
        name: "isWatching"
        parameters: []
        signature: "isWatching(): boolean"
        returnValueUuid: "importKeyLocked_boolean2"
        access: 1
    - type: "LOCAL_VARIABLE"
      name: "key"
      modelFingerprint: "5CC15FE28CEEBB51CCC000AF98583DAC"
      index: 6
      valueUuid: "getKey_eCKey1"
      methodExercised:
        target: "key"
        name: "getPubKey"
        parameters: []
        signature: "getPubKey(): byte[]"
        returnValueUuid: "importKeyLocked_byte[]1"
        access: 1
    - type: "STATIC"
      name: "ByteString"
      modelFingerprint: "9D8D6EBC0F1BD0B104F1AB8AD710E174"
      index: 7
      valueUuid: "uuid13"
      methodExercised:
        target: "com.google.protobuf.ByteString"
        name: "copyFrom"
        parameters:
        - name: "bytes"
          valueUuid: "importKeyLocked_byte[]1"
        signature: "copyFrom(byte[]): ByteString"
        returnValueUuid: "importKeyLocked_byteString1"
        access: 9
    - type: "LOCAL_VARIABLE"
      name: "key"
      modelFingerprint: "E191382EE57C9A833360C995AE97ED38"
      index: 8
      valueUuid: "getKey_eCKey1"
      methodExercised:
        target: "key"
        name: "getPubKeyHash"
        parameters: []
        signature: "getPubKeyHash(): byte[]"
        returnValueUuid: "importKeyLocked_byte[]2"
        access: 1
    - type: "STATIC"
      name: "ByteString"
      modelFingerprint: "BAFE86163B9A5F67DFE767AC263F50DD"
      index: 9
      valueUuid: "uuid14"
      methodExercised:
        target: "com.google.protobuf.ByteString"
        name: "copyFrom"
        parameters:
        - name: "bytes"
          valueUuid: "importKeyLocked_byte[]2"
        signature: "copyFrom(byte[]): ByteString"
        returnValueUuid: "importKeyLocked_byteString2"
        access: 9
    - type: "STATIC"
      name: "Preconditions"
      modelFingerprint: "ACF07FFCA3E2E1576E0B7D7733EEEFF8"
      index: 10
      valueUuid: "uuid16"
      methodExercised:
        target: "org.bitcoinj.base.internal.Preconditions"
        name: "checkState"
        parameters:
        - name: "expression"
          valueUuid: "uuid15"
        signature: "checkState(boolean): void"
        returnValueUuid: "importKeyLocked_void1"
        access: 9
    - type: "STATIC"
      name: "Preconditions"
      modelFingerprint: "8E65D47E3C0602D60B2F22B827CB011E"
      index: 11
      valueUuid: "uuid18"
      methodExercised:
        target: "org.bitcoinj.base.internal.Preconditions"
        name: "checkState"
        parameters:
        - name: "expression"
          valueUuid: "queueOnKeysAdded_boolean1"
        signature: "checkState(boolean): void"
        returnValueUuid: "uuid17"
        access: 9
    - type: "RESULT"
      name: "result"
      modelFingerprint: "C9C68C9339F812BC8DEC7C1D6145A135"
      index: 12
      valueUuid: "uuid19"
    uuid: "6ca88477-f407-3d5d-a5d6-4b911490bffc"
    deleted: false
    disabled: true
    ignoredBySystem: false
    failureReason:
      reason: "UNKNOWN_REASON"
    prover: "DEFAULT"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: true
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.bitcoinj.wallet.BasicKeyChain"
        parameters:
        - name: "crypter"
          value:
            sapientType: "NULL"
            valueType: "org.bitcoinj.crypto.KeyCrypter"
            uuid: "<init>_keyCrypter1"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      valueType: "org.bitcoinj.wallet.BasicKeyChain"
      uuid: "target"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "ENUM"
      content: !<regular>
        value: "RECEIVE_FUNDS"
      valueType: "org.bitcoinj.wallet.KeyChain$KeyPurpose"
      uuid: "getKey_keyChain.KeyPurpose1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "REAL"
      valueType: "org.bitcoinj.utils.Threading"
      uuid: "uuid10"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.bitcoinj.utils.Threading"
        method: "lock"
        methodParameters:
        - value:
            sapientType: "CLASS"
            content: !<regular>
              value: "org.bitcoinj.wallet.BasicKeyChain"
            valueType: "java.lang.Class"
            genericValueType: "org.bitcoinj.wallet.BasicKeyChain"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
      valueType: "java.util.concurrent.locks.ReentrantLock"
      uuid: "<init>_reentrantLock1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.bitcoinj.wallet.BasicKeyChain"
      valueType: "java.lang.Class"
      genericValueType: "org.bitcoinj.wallet.BasicKeyChain"
      uuid: "uuid9"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "REAL"
      valueType: "org.bitcoinj.base.internal.Preconditions"
      uuid: "uuid12"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      valueType: "void"
      uuid: "getKey_void2"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "uuid11"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.bitcoinj.crypto.ECKey"
        parameters: []
        privateConstructor: false
        createdByTargetCode: true
      valueType: "org.bitcoinj.crypto.ECKey"
      uuid: "getKey_eCKey1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "importKeyLocked_boolean2"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.bitcoinj.crypto.ECKey"
        parameters: []
        privateConstructor: false
        createdByTargetCode: true
      valueType: "org.bitcoinj.crypto.ECKey"
      uuid: "getKey_eCKey1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "ARRAY"
      content: !<array>
        values:
          0:
            sapientType: "BASIC"
            content: !<regular>
              value: 3
            valueType: "byte"
            uuid: "importKeyLocked_byte[]1-item0"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          1:
            sapientType: "BASIC"
            content: !<regular>
              value: -20
            valueType: "byte"
            uuid: "importKeyLocked_byte[]1-item1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          2:
            sapientType: "BASIC"
            content: !<regular>
              value: 91
            valueType: "byte"
            uuid: "importKeyLocked_byte[]1-item2"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          3:
            sapientType: "BASIC"
            content: !<regular>
              value: 108
            valueType: "byte"
            uuid: "importKeyLocked_byte[]1-item3"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          4:
            sapientType: "BASIC"
            content: !<regular>
              value: -87
            valueType: "byte"
            uuid: "importKeyLocked_byte[]1-item4"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          5:
            sapientType: "BASIC"
            content: !<regular>
              value: 59
            valueType: "byte"
            uuid: "importKeyLocked_byte[]1-item5"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          6:
            sapientType: "BASIC"
            content: !<regular>
              value: -81
            valueType: "byte"
            uuid: "importKeyLocked_byte[]1-item6"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          7:
            sapientType: "BASIC"
            content: !<regular>
              value: 118
            valueType: "byte"
            uuid: "importKeyLocked_byte[]1-item7"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          8:
            sapientType: "BASIC"
            content: !<regular>
              value: 118
            valueType: "byte"
            uuid: "importKeyLocked_byte[]1-item8"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          9:
            sapientType: "BASIC"
            content: !<regular>
              value: -83
            valueType: "byte"
            uuid: "importKeyLocked_byte[]1-item9"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          10:
            sapientType: "BASIC"
            content: !<regular>
              value: -121
            valueType: "byte"
            uuid: "importKeyLocked_byte[]1-item10"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          11:
            sapientType: "BASIC"
            content: !<regular>
              value: 1
            valueType: "byte"
            uuid: "importKeyLocked_byte[]1-item11"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          12:
            sapientType: "BASIC"
            content: !<regular>
              value: 119
            valueType: "byte"
            uuid: "importKeyLocked_byte[]1-item12"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          13:
            sapientType: "BASIC"
            content: !<regular>
              value: -64
            valueType: "byte"
            uuid: "importKeyLocked_byte[]1-item13"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          14:
            sapientType: "BASIC"
            content: !<regular>
              value: 115
            valueType: "byte"
            uuid: "importKeyLocked_byte[]1-item14"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          15:
            sapientType: "BASIC"
            content: !<regular>
              value: 17
            valueType: "byte"
            uuid: "importKeyLocked_byte[]1-item15"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          16:
            sapientType: "BASIC"
            content: !<regular>
              value: -6
            valueType: "byte"
            uuid: "importKeyLocked_byte[]1-item16"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          17:
            sapientType: "BASIC"
            content: !<regular>
              value: -26
            valueType: "byte"
            uuid: "importKeyLocked_byte[]1-item17"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          18:
            sapientType: "BASIC"
            content: !<regular>
              value: 31
            valueType: "byte"
            uuid: "importKeyLocked_byte[]1-item18"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          19:
            sapientType: "BASIC"
            content: !<regular>
              value: 104
            valueType: "byte"
            uuid: "importKeyLocked_byte[]1-item19"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          20:
            sapientType: "BASIC"
            content: !<regular>
              value: 81
            valueType: "byte"
            uuid: "importKeyLocked_byte[]1-item20"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          21:
            sapientType: "BASIC"
            content: !<regular>
              value: -2
            valueType: "byte"
            uuid: "importKeyLocked_byte[]1-item21"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          22:
            sapientType: "BASIC"
            content: !<regular>
              value: 28
            valueType: "byte"
            uuid: "importKeyLocked_byte[]1-item22"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          23:
            sapientType: "BASIC"
            content: !<regular>
              value: 1
            valueType: "byte"
            uuid: "importKeyLocked_byte[]1-item23"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          24:
            sapientType: "BASIC"
            content: !<regular>
              value: -88
            valueType: "byte"
            uuid: "importKeyLocked_byte[]1-item24"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          25:
            sapientType: "BASIC"
            content: !<regular>
              value: 76
            valueType: "byte"
            uuid: "importKeyLocked_byte[]1-item25"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          26:
            sapientType: "BASIC"
            content: !<regular>
              value: -84
            valueType: "byte"
            uuid: "importKeyLocked_byte[]1-item26"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          27:
            sapientType: "BASIC"
            content: !<regular>
              value: 16
            valueType: "byte"
            uuid: "importKeyLocked_byte[]1-item27"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          28:
            sapientType: "BASIC"
            content: !<regular>
              value: -74
            valueType: "byte"
            uuid: "importKeyLocked_byte[]1-item28"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          29:
            sapientType: "BASIC"
            content: !<regular>
              value: 68
            valueType: "byte"
            uuid: "importKeyLocked_byte[]1-item29"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          30:
            sapientType: "BASIC"
            content: !<regular>
              value: 59
            valueType: "byte"
            uuid: "importKeyLocked_byte[]1-item30"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          31:
            sapientType: "BASIC"
            content: !<regular>
              value: 41
            valueType: "byte"
            uuid: "importKeyLocked_byte[]1-item31"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          32:
            sapientType: "BASIC"
            content: !<regular>
              value: 122
            valueType: "byte"
            uuid: "importKeyLocked_byte[]1-item32"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
      valueType: "byte[]"
      uuid: "importKeyLocked_byte[]1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "REAL"
      valueType: "com.google.protobuf.ByteString"
      uuid: "uuid13"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "com.google.protobuf.ByteString"
        method: "copyFrom"
        methodParameters:
        - value:
            sapientType: "ARRAY"
            content: !<array>
              values:
                0:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: 3
                  valueType: "byte"
                  uuid: "importKeyLocked_byte[]1-item0"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                1:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: -20
                  valueType: "byte"
                  uuid: "importKeyLocked_byte[]1-item1"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                2:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: 91
                  valueType: "byte"
                  uuid: "importKeyLocked_byte[]1-item2"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                3:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: 108
                  valueType: "byte"
                  uuid: "importKeyLocked_byte[]1-item3"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                4:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: -87
                  valueType: "byte"
                  uuid: "importKeyLocked_byte[]1-item4"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                5:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: 59
                  valueType: "byte"
                  uuid: "importKeyLocked_byte[]1-item5"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                6:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: -81
                  valueType: "byte"
                  uuid: "importKeyLocked_byte[]1-item6"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                7:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: 118
                  valueType: "byte"
                  uuid: "importKeyLocked_byte[]1-item7"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                8:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: 118
                  valueType: "byte"
                  uuid: "importKeyLocked_byte[]1-item8"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                9:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: -83
                  valueType: "byte"
                  uuid: "importKeyLocked_byte[]1-item9"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                10:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: -121
                  valueType: "byte"
                  uuid: "importKeyLocked_byte[]1-item10"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                11:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: 1
                  valueType: "byte"
                  uuid: "importKeyLocked_byte[]1-item11"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                12:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: 119
                  valueType: "byte"
                  uuid: "importKeyLocked_byte[]1-item12"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                13:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: -64
                  valueType: "byte"
                  uuid: "importKeyLocked_byte[]1-item13"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                14:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: 115
                  valueType: "byte"
                  uuid: "importKeyLocked_byte[]1-item14"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                15:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: 17
                  valueType: "byte"
                  uuid: "importKeyLocked_byte[]1-item15"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                16:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: -6
                  valueType: "byte"
                  uuid: "importKeyLocked_byte[]1-item16"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                17:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: -26
                  valueType: "byte"
                  uuid: "importKeyLocked_byte[]1-item17"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                18:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: 31
                  valueType: "byte"
                  uuid: "importKeyLocked_byte[]1-item18"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                19:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: 104
                  valueType: "byte"
                  uuid: "importKeyLocked_byte[]1-item19"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                20:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: 81
                  valueType: "byte"
                  uuid: "importKeyLocked_byte[]1-item20"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                21:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: -2
                  valueType: "byte"
                  uuid: "importKeyLocked_byte[]1-item21"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                22:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: 28
                  valueType: "byte"
                  uuid: "importKeyLocked_byte[]1-item22"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                23:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: 1
                  valueType: "byte"
                  uuid: "importKeyLocked_byte[]1-item23"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                24:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: -88
                  valueType: "byte"
                  uuid: "importKeyLocked_byte[]1-item24"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                25:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: 76
                  valueType: "byte"
                  uuid: "importKeyLocked_byte[]1-item25"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                26:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: -84
                  valueType: "byte"
                  uuid: "importKeyLocked_byte[]1-item26"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                27:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: 16
                  valueType: "byte"
                  uuid: "importKeyLocked_byte[]1-item27"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                28:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: -74
                  valueType: "byte"
                  uuid: "importKeyLocked_byte[]1-item28"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                29:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: 68
                  valueType: "byte"
                  uuid: "importKeyLocked_byte[]1-item29"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                30:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: 59
                  valueType: "byte"
                  uuid: "importKeyLocked_byte[]1-item30"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                31:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: 41
                  valueType: "byte"
                  uuid: "importKeyLocked_byte[]1-item31"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                32:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: 122
                  valueType: "byte"
                  uuid: "importKeyLocked_byte[]1-item32"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
            valueType: "byte[]"
            uuid: "importKeyLocked_byte[]1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
      valueType: "com.google.protobuf.ByteString"
      uuid: "importKeyLocked_byteString1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "ARRAY"
      content: !<array>
        values:
          0:
            sapientType: "BASIC"
            content: !<regular>
              value: 3
            valueType: "byte"
            uuid: "importKeyLocked_byte[]1-item0"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          1:
            sapientType: "BASIC"
            content: !<regular>
              value: -20
            valueType: "byte"
            uuid: "importKeyLocked_byte[]1-item1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          2:
            sapientType: "BASIC"
            content: !<regular>
              value: 91
            valueType: "byte"
            uuid: "importKeyLocked_byte[]1-item2"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          3:
            sapientType: "BASIC"
            content: !<regular>
              value: 108
            valueType: "byte"
            uuid: "importKeyLocked_byte[]1-item3"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          4:
            sapientType: "BASIC"
            content: !<regular>
              value: -87
            valueType: "byte"
            uuid: "importKeyLocked_byte[]1-item4"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          5:
            sapientType: "BASIC"
            content: !<regular>
              value: 59
            valueType: "byte"
            uuid: "importKeyLocked_byte[]1-item5"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          6:
            sapientType: "BASIC"
            content: !<regular>
              value: -81
            valueType: "byte"
            uuid: "importKeyLocked_byte[]1-item6"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          7:
            sapientType: "BASIC"
            content: !<regular>
              value: 118
            valueType: "byte"
            uuid: "importKeyLocked_byte[]1-item7"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          8:
            sapientType: "BASIC"
            content: !<regular>
              value: 118
            valueType: "byte"
            uuid: "importKeyLocked_byte[]1-item8"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          9:
            sapientType: "BASIC"
            content: !<regular>
              value: -83
            valueType: "byte"
            uuid: "importKeyLocked_byte[]1-item9"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          10:
            sapientType: "BASIC"
            content: !<regular>
              value: -121
            valueType: "byte"
            uuid: "importKeyLocked_byte[]1-item10"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          11:
            sapientType: "BASIC"
            content: !<regular>
              value: 1
            valueType: "byte"
            uuid: "importKeyLocked_byte[]1-item11"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          12:
            sapientType: "BASIC"
            content: !<regular>
              value: 119
            valueType: "byte"
            uuid: "importKeyLocked_byte[]1-item12"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          13:
            sapientType: "BASIC"
            content: !<regular>
              value: -64
            valueType: "byte"
            uuid: "importKeyLocked_byte[]1-item13"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          14:
            sapientType: "BASIC"
            content: !<regular>
              value: 115
            valueType: "byte"
            uuid: "importKeyLocked_byte[]1-item14"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          15:
            sapientType: "BASIC"
            content: !<regular>
              value: 17
            valueType: "byte"
            uuid: "importKeyLocked_byte[]1-item15"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          16:
            sapientType: "BASIC"
            content: !<regular>
              value: -6
            valueType: "byte"
            uuid: "importKeyLocked_byte[]1-item16"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          17:
            sapientType: "BASIC"
            content: !<regular>
              value: -26
            valueType: "byte"
            uuid: "importKeyLocked_byte[]1-item17"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          18:
            sapientType: "BASIC"
            content: !<regular>
              value: 31
            valueType: "byte"
            uuid: "importKeyLocked_byte[]1-item18"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          19:
            sapientType: "BASIC"
            content: !<regular>
              value: 104
            valueType: "byte"
            uuid: "importKeyLocked_byte[]1-item19"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          20:
            sapientType: "BASIC"
            content: !<regular>
              value: 81
            valueType: "byte"
            uuid: "importKeyLocked_byte[]1-item20"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          21:
            sapientType: "BASIC"
            content: !<regular>
              value: -2
            valueType: "byte"
            uuid: "importKeyLocked_byte[]1-item21"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          22:
            sapientType: "BASIC"
            content: !<regular>
              value: 28
            valueType: "byte"
            uuid: "importKeyLocked_byte[]1-item22"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          23:
            sapientType: "BASIC"
            content: !<regular>
              value: 1
            valueType: "byte"
            uuid: "importKeyLocked_byte[]1-item23"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          24:
            sapientType: "BASIC"
            content: !<regular>
              value: -88
            valueType: "byte"
            uuid: "importKeyLocked_byte[]1-item24"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          25:
            sapientType: "BASIC"
            content: !<regular>
              value: 76
            valueType: "byte"
            uuid: "importKeyLocked_byte[]1-item25"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          26:
            sapientType: "BASIC"
            content: !<regular>
              value: -84
            valueType: "byte"
            uuid: "importKeyLocked_byte[]1-item26"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          27:
            sapientType: "BASIC"
            content: !<regular>
              value: 16
            valueType: "byte"
            uuid: "importKeyLocked_byte[]1-item27"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          28:
            sapientType: "BASIC"
            content: !<regular>
              value: -74
            valueType: "byte"
            uuid: "importKeyLocked_byte[]1-item28"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          29:
            sapientType: "BASIC"
            content: !<regular>
              value: 68
            valueType: "byte"
            uuid: "importKeyLocked_byte[]1-item29"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          30:
            sapientType: "BASIC"
            content: !<regular>
              value: 59
            valueType: "byte"
            uuid: "importKeyLocked_byte[]1-item30"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          31:
            sapientType: "BASIC"
            content: !<regular>
              value: 41
            valueType: "byte"
            uuid: "importKeyLocked_byte[]1-item31"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          32:
            sapientType: "BASIC"
            content: !<regular>
              value: 122
            valueType: "byte"
            uuid: "importKeyLocked_byte[]1-item32"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
      valueType: "byte[]"
      uuid: "importKeyLocked_byte[]1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.bitcoinj.crypto.ECKey"
        parameters: []
        privateConstructor: false
        createdByTargetCode: true
      valueType: "org.bitcoinj.crypto.ECKey"
      uuid: "getKey_eCKey1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "ARRAY"
      content: !<array>
        values:
          0:
            sapientType: "BASIC"
            content: !<regular>
              value: 82
            valueType: "byte"
            uuid: "importKeyLocked_byte[]2-item0"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          1:
            sapientType: "BASIC"
            content: !<regular>
              value: -46
            valueType: "byte"
            uuid: "importKeyLocked_byte[]2-item1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          2:
            sapientType: "BASIC"
            content: !<regular>
              value: 19
            valueType: "byte"
            uuid: "importKeyLocked_byte[]2-item2"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          3:
            sapientType: "BASIC"
            content: !<regular>
              value: 44
            valueType: "byte"
            uuid: "importKeyLocked_byte[]2-item3"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          4:
            sapientType: "BASIC"
            content: !<regular>
              value: -105
            valueType: "byte"
            uuid: "importKeyLocked_byte[]2-item4"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          5:
            sapientType: "BASIC"
            content: !<regular>
              value: -35
            valueType: "byte"
            uuid: "importKeyLocked_byte[]2-item5"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          6:
            sapientType: "BASIC"
            content: !<regular>
              value: 8
            valueType: "byte"
            uuid: "importKeyLocked_byte[]2-item6"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          7:
            sapientType: "BASIC"
            content: !<regular>
              value: -126
            valueType: "byte"
            uuid: "importKeyLocked_byte[]2-item7"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          8:
            sapientType: "BASIC"
            content: !<regular>
              value: 46
            valueType: "byte"
            uuid: "importKeyLocked_byte[]2-item8"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          9:
            sapientType: "BASIC"
            content: !<regular>
              value: 126
            valueType: "byte"
            uuid: "importKeyLocked_byte[]2-item9"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          10:
            sapientType: "BASIC"
            content: !<regular>
              value: 12
            valueType: "byte"
            uuid: "importKeyLocked_byte[]2-item10"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          11:
            sapientType: "BASIC"
            content: !<regular>
              value: -86
            valueType: "byte"
            uuid: "importKeyLocked_byte[]2-item11"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          12:
            sapientType: "BASIC"
            content: !<regular>
              value: -8
            valueType: "byte"
            uuid: "importKeyLocked_byte[]2-item12"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          13:
            sapientType: "BASIC"
            content: !<regular>
              value: -92
            valueType: "byte"
            uuid: "importKeyLocked_byte[]2-item13"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          14:
            sapientType: "BASIC"
            content: !<regular>
              value: 33
            valueType: "byte"
            uuid: "importKeyLocked_byte[]2-item14"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          15:
            sapientType: "BASIC"
            content: !<regular>
              value: -91
            valueType: "byte"
            uuid: "importKeyLocked_byte[]2-item15"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          16:
            sapientType: "BASIC"
            content: !<regular>
              value: -5
            valueType: "byte"
            uuid: "importKeyLocked_byte[]2-item16"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          17:
            sapientType: "BASIC"
            content: !<regular>
              value: 102
            valueType: "byte"
            uuid: "importKeyLocked_byte[]2-item17"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          18:
            sapientType: "BASIC"
            content: !<regular>
              value: 33
            valueType: "byte"
            uuid: "importKeyLocked_byte[]2-item18"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          19:
            sapientType: "BASIC"
            content: !<regular>
              value: -22
            valueType: "byte"
            uuid: "importKeyLocked_byte[]2-item19"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
      valueType: "byte[]"
      uuid: "importKeyLocked_byte[]2"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "REAL"
      valueType: "com.google.protobuf.ByteString"
      uuid: "uuid14"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "com.google.protobuf.ByteString"
        method: "copyFrom"
        methodParameters:
        - value:
            sapientType: "ARRAY"
            content: !<array>
              values:
                0:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: 82
                  valueType: "byte"
                  uuid: "importKeyLocked_byte[]2-item0"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                1:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: -46
                  valueType: "byte"
                  uuid: "importKeyLocked_byte[]2-item1"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                2:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: 19
                  valueType: "byte"
                  uuid: "importKeyLocked_byte[]2-item2"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                3:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: 44
                  valueType: "byte"
                  uuid: "importKeyLocked_byte[]2-item3"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                4:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: -105
                  valueType: "byte"
                  uuid: "importKeyLocked_byte[]2-item4"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                5:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: -35
                  valueType: "byte"
                  uuid: "importKeyLocked_byte[]2-item5"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                6:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: 8
                  valueType: "byte"
                  uuid: "importKeyLocked_byte[]2-item6"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                7:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: -126
                  valueType: "byte"
                  uuid: "importKeyLocked_byte[]2-item7"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                8:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: 46
                  valueType: "byte"
                  uuid: "importKeyLocked_byte[]2-item8"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                9:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: 126
                  valueType: "byte"
                  uuid: "importKeyLocked_byte[]2-item9"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                10:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: 12
                  valueType: "byte"
                  uuid: "importKeyLocked_byte[]2-item10"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                11:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: -86
                  valueType: "byte"
                  uuid: "importKeyLocked_byte[]2-item11"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                12:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: -8
                  valueType: "byte"
                  uuid: "importKeyLocked_byte[]2-item12"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                13:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: -92
                  valueType: "byte"
                  uuid: "importKeyLocked_byte[]2-item13"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                14:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: 33
                  valueType: "byte"
                  uuid: "importKeyLocked_byte[]2-item14"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                15:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: -91
                  valueType: "byte"
                  uuid: "importKeyLocked_byte[]2-item15"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                16:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: -5
                  valueType: "byte"
                  uuid: "importKeyLocked_byte[]2-item16"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                17:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: 102
                  valueType: "byte"
                  uuid: "importKeyLocked_byte[]2-item17"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                18:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: 33
                  valueType: "byte"
                  uuid: "importKeyLocked_byte[]2-item18"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                19:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: -22
                  valueType: "byte"
                  uuid: "importKeyLocked_byte[]2-item19"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
            valueType: "byte[]"
            uuid: "importKeyLocked_byte[]2"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
      valueType: "com.google.protobuf.ByteString"
      uuid: "importKeyLocked_byteString2"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "ARRAY"
      content: !<array>
        values:
          0:
            sapientType: "BASIC"
            content: !<regular>
              value: 82
            valueType: "byte"
            uuid: "importKeyLocked_byte[]2-item0"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          1:
            sapientType: "BASIC"
            content: !<regular>
              value: -46
            valueType: "byte"
            uuid: "importKeyLocked_byte[]2-item1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          2:
            sapientType: "BASIC"
            content: !<regular>
              value: 19
            valueType: "byte"
            uuid: "importKeyLocked_byte[]2-item2"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          3:
            sapientType: "BASIC"
            content: !<regular>
              value: 44
            valueType: "byte"
            uuid: "importKeyLocked_byte[]2-item3"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          4:
            sapientType: "BASIC"
            content: !<regular>
              value: -105
            valueType: "byte"
            uuid: "importKeyLocked_byte[]2-item4"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          5:
            sapientType: "BASIC"
            content: !<regular>
              value: -35
            valueType: "byte"
            uuid: "importKeyLocked_byte[]2-item5"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          6:
            sapientType: "BASIC"
            content: !<regular>
              value: 8
            valueType: "byte"
            uuid: "importKeyLocked_byte[]2-item6"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          7:
            sapientType: "BASIC"
            content: !<regular>
              value: -126
            valueType: "byte"
            uuid: "importKeyLocked_byte[]2-item7"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          8:
            sapientType: "BASIC"
            content: !<regular>
              value: 46
            valueType: "byte"
            uuid: "importKeyLocked_byte[]2-item8"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          9:
            sapientType: "BASIC"
            content: !<regular>
              value: 126
            valueType: "byte"
            uuid: "importKeyLocked_byte[]2-item9"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          10:
            sapientType: "BASIC"
            content: !<regular>
              value: 12
            valueType: "byte"
            uuid: "importKeyLocked_byte[]2-item10"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          11:
            sapientType: "BASIC"
            content: !<regular>
              value: -86
            valueType: "byte"
            uuid: "importKeyLocked_byte[]2-item11"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          12:
            sapientType: "BASIC"
            content: !<regular>
              value: -8
            valueType: "byte"
            uuid: "importKeyLocked_byte[]2-item12"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          13:
            sapientType: "BASIC"
            content: !<regular>
              value: -92
            valueType: "byte"
            uuid: "importKeyLocked_byte[]2-item13"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          14:
            sapientType: "BASIC"
            content: !<regular>
              value: 33
            valueType: "byte"
            uuid: "importKeyLocked_byte[]2-item14"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          15:
            sapientType: "BASIC"
            content: !<regular>
              value: -91
            valueType: "byte"
            uuid: "importKeyLocked_byte[]2-item15"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          16:
            sapientType: "BASIC"
            content: !<regular>
              value: -5
            valueType: "byte"
            uuid: "importKeyLocked_byte[]2-item16"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          17:
            sapientType: "BASIC"
            content: !<regular>
              value: 102
            valueType: "byte"
            uuid: "importKeyLocked_byte[]2-item17"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          18:
            sapientType: "BASIC"
            content: !<regular>
              value: 33
            valueType: "byte"
            uuid: "importKeyLocked_byte[]2-item18"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          19:
            sapientType: "BASIC"
            content: !<regular>
              value: -22
            valueType: "byte"
            uuid: "importKeyLocked_byte[]2-item19"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
      valueType: "byte[]"
      uuid: "importKeyLocked_byte[]2"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "REAL"
      valueType: "org.bitcoinj.base.internal.Preconditions"
      uuid: "uuid16"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      valueType: "void"
      uuid: "importKeyLocked_void1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "uuid15"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "REAL"
      valueType: "org.bitcoinj.base.internal.Preconditions"
      uuid: "uuid18"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "EXCEPTION"
      content: !<new>
        target: "java.lang.IllegalStateException"
        parameters: []
        privateConstructor: false
        createdByTargetCode: false
      valueType: "java.lang.IllegalStateException"
      uuid: "uuid17"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "queueOnKeysAdded_boolean1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "EXCEPTION"
      content: !<new>
        target: "java.lang.IllegalStateException"
        parameters: []
        privateConstructor: false
        createdByTargetCode: false
      valueType: "java.lang.IllegalStateException"
      uuid: "uuid19"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
- method:
    name: "getKeys"
    signature: "getKeys(org.bitcoinj.wallet.KeyChain$KeyPurpose,int) : java.util.List<org.bitcoinj.crypto.ECKey>"
    sourceCodeSignature: "List<ECKey> getKeys(@Nullable KeyPurpose purpose, int numberOfKeys)"
    instructionFingerprint: "4F6304CD3CCFC078A00B9C6E38702FFB"
  paths:
  - pathId: "path5"
    testPathName: "getKeysWhenNumberOfKeysNotGreaterThan0ThrowsIllegalArgumentException"
    constructorSignature: "<init>(org.bitcoinj.crypto.KeyCrypter) : void"
    modelFingerprint: "5AA016B7A9A5616A55488CD00AADD175"
    problemWasSolvedByProver: true
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "35099553EB48D2AEC42E2A9279A21C51"
      index: 1
      valueUuid: "target"
    - type: "INPUT"
      name: "purpose"
      modelFingerprint: "73A485DEF62F8F8DB3A849DDC926598C"
      index: 2
      valueUuid: "getKeys_keyChain.KeyPurpose1"
    - type: "INPUT"
      name: "numberOfKeys"
      modelFingerprint: "4B60BE48F6242CC2C43E1F5DD973D895"
      index: 3
      valueUuid: "getKeys_int1"
    - type: "STATIC"
      name: "Threading"
      modelFingerprint: "F7EA5C46482BE836BD810E3E7E297587"
      index: 4
      valueUuid: "uuid21"
      methodExercised:
        target: "org.bitcoinj.utils.Threading"
        name: "lock"
        parameters:
        - name: "clazz"
          valueUuid: "uuid20"
        signature: "lock(Class): ReentrantLock"
        returnValueUuid: "<init>_reentrantLock1"
        access: 9
    - type: "STATIC"
      name: "Preconditions"
      modelFingerprint: "0EDE48F21AC2F1945BA699E11FE35975"
      index: 5
      valueUuid: "uuid24"
      methodExercised:
        target: "org.bitcoinj.base.internal.Preconditions"
        name: "checkArgument"
        parameters:
        - name: "expression"
          valueUuid: "uuid22"
        signature: "checkArgument(boolean): void"
        returnValueUuid: "uuid23"
        access: 9
    - type: "RESULT"
      name: "result"
      modelFingerprint: "3E9C76AB51311DE97AE9C2294CD5E1D6"
      index: 6
      valueUuid: "uuid25"
    uuid: "ed78756d-e1b2-31f5-b607-45b6371067af"
    deleted: false
    disabled: false
    ignoredBySystem: false
    prover: "DEFAULT"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.bitcoinj.wallet.BasicKeyChain"
        parameters:
        - name: "crypter"
          value:
            sapientType: "MOCK"
            valueType: "org.bitcoinj.crypto.KeyCrypter"
            uuid: "<init>_keyCrypter1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      valueType: "org.bitcoinj.wallet.BasicKeyChain"
      uuid: "target"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "ENUM"
      content: !<regular>
        value: "RECEIVE_FUNDS"
      valueType: "org.bitcoinj.wallet.KeyChain$KeyPurpose"
      uuid: "getKeys_keyChain.KeyPurpose1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: -1
      valueType: "int"
      uuid: "getKeys_int1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "REAL"
      valueType: "org.bitcoinj.utils.Threading"
      uuid: "uuid21"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.bitcoinj.utils.Threading"
        method: "lock"
        methodParameters:
        - value:
            sapientType: "CLASS"
            content: !<regular>
              value: "org.bitcoinj.wallet.BasicKeyChain"
            valueType: "java.lang.Class"
            genericValueType: "org.bitcoinj.wallet.BasicKeyChain"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
      valueType: "java.util.concurrent.locks.ReentrantLock"
      uuid: "<init>_reentrantLock1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.bitcoinj.wallet.BasicKeyChain"
      valueType: "java.lang.Class"
      genericValueType: "org.bitcoinj.wallet.BasicKeyChain"
      uuid: "uuid20"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "REAL"
      valueType: "org.bitcoinj.base.internal.Preconditions"
      uuid: "uuid24"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "EXCEPTION"
      content: !<new>
        target: "java.lang.IllegalArgumentException"
        parameters: []
        privateConstructor: false
        createdByTargetCode: false
      valueType: "java.lang.IllegalArgumentException"
      uuid: "uuid23"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "uuid22"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "EXCEPTION"
      content: !<new>
        target: "java.lang.IllegalArgumentException"
        parameters: []
        privateConstructor: false
        createdByTargetCode: false
      valueType: "java.lang.IllegalArgumentException"
      uuid: "uuid25"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
  - pathId: "path3"
    testPathName: "getKeysWhenKeyCrypterIsNotNullThrowsIllegalStateException"
    constructorSignature: "<init>(org.bitcoinj.crypto.KeyCrypter) : void"
    modelFingerprint: "73BEC8C38E11183CBD2B46AE7F3E22CD"
    problemWasSolvedByProver: true
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "35099553EB48D2AEC42E2A9279A21C51"
      index: 1
      valueUuid: "target"
    - type: "INPUT"
      name: "purpose"
      modelFingerprint: "73A485DEF62F8F8DB3A849DDC926598C"
      index: 2
      valueUuid: "getKeys_keyChain.KeyPurpose1"
    - type: "INPUT"
      name: "numberOfKeys"
      modelFingerprint: "2DA1F46B8B1FFA2671A89E2C8C1DC18A"
      index: 3
      valueUuid: "getKeys_int1"
    - type: "STATIC"
      name: "Threading"
      modelFingerprint: "F7EA5C46482BE836BD810E3E7E297587"
      index: 4
      valueUuid: "uuid27"
      methodExercised:
        target: "org.bitcoinj.utils.Threading"
        name: "lock"
        parameters:
        - name: "clazz"
          valueUuid: "uuid26"
        signature: "lock(Class): ReentrantLock"
        returnValueUuid: "<init>_reentrantLock1"
        access: 9
    - type: "STATIC"
      name: "Preconditions"
      modelFingerprint: "60A6CF81A4B62FC26CAD9062FF6E1448"
      index: 5
      valueUuid: "uuid29"
      methodExercised:
        target: "org.bitcoinj.base.internal.Preconditions"
        name: "checkArgument"
        parameters:
        - name: "expression"
          valueUuid: "uuid28"
        signature: "checkArgument(boolean): void"
        returnValueUuid: "getKeys_void1"
        access: 9
    - type: "STATIC"
      name: "Preconditions"
      modelFingerprint: "5D1C76B3909AD28BDDC21FFF70362CB1"
      index: 6
      valueUuid: "uuid32"
      methodExercised:
        target: "org.bitcoinj.base.internal.Preconditions"
        name: "checkState"
        parameters:
        - name: "expression"
          valueUuid: "uuid30"
        signature: "checkState(boolean): void"
        returnValueUuid: "uuid31"
        access: 9
    - type: "RESULT"
      name: "result"
      modelFingerprint: "C9C68C9339F812BC8DEC7C1D6145A135"
      index: 7
      valueUuid: "uuid33"
    uuid: "5e2c1d6a-fa7a-31aa-89a4-55c7b4f4b9f6"
    deleted: false
    disabled: false
    ignoredBySystem: false
    prover: "DEFAULT"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.bitcoinj.wallet.BasicKeyChain"
        parameters:
        - name: "crypter"
          value:
            sapientType: "MOCK"
            valueType: "org.bitcoinj.crypto.KeyCrypter"
            uuid: "<init>_keyCrypter1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      valueType: "org.bitcoinj.wallet.BasicKeyChain"
      uuid: "target"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "ENUM"
      content: !<regular>
        value: "RECEIVE_FUNDS"
      valueType: "org.bitcoinj.wallet.KeyChain$KeyPurpose"
      uuid: "getKeys_keyChain.KeyPurpose1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: 1
      valueType: "int"
      uuid: "getKeys_int1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "REAL"
      valueType: "org.bitcoinj.utils.Threading"
      uuid: "uuid27"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.bitcoinj.utils.Threading"
        method: "lock"
        methodParameters:
        - value:
            sapientType: "CLASS"
            content: !<regular>
              value: "org.bitcoinj.wallet.BasicKeyChain"
            valueType: "java.lang.Class"
            genericValueType: "org.bitcoinj.wallet.BasicKeyChain"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
      valueType: "java.util.concurrent.locks.ReentrantLock"
      uuid: "<init>_reentrantLock1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.bitcoinj.wallet.BasicKeyChain"
      valueType: "java.lang.Class"
      genericValueType: "org.bitcoinj.wallet.BasicKeyChain"
      uuid: "uuid26"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "REAL"
      valueType: "org.bitcoinj.base.internal.Preconditions"
      uuid: "uuid29"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      valueType: "void"
      uuid: "getKeys_void1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "uuid28"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "REAL"
      valueType: "org.bitcoinj.base.internal.Preconditions"
      uuid: "uuid32"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "EXCEPTION"
      content: !<new>
        target: "java.lang.IllegalStateException"
        parameters: []
        privateConstructor: false
        createdByTargetCode: false
      valueType: "java.lang.IllegalStateException"
      uuid: "uuid31"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "uuid30"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "EXCEPTION"
      content: !<new>
        target: "java.lang.IllegalStateException"
        parameters: []
        privateConstructor: false
        createdByTargetCode: false
      valueType: "java.lang.IllegalStateException"
      uuid: "uuid33"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
  - pathId: "path2"
    testPathName: "getKeysWhenKeysIsEmptyThrowsIllegalStateException"
    constructorSignature: "<init>(org.bitcoinj.crypto.KeyCrypter) : void"
    modelFingerprint: "4836A4129891F03FE049261398D27A93"
    problemWasSolvedByProver: false
    truncated: true
    inputParameters: []
    uuid: "92840171-5bbe-3be1-8a1a-10ae9238bf8f"
    deleted: true
    disabled: false
    ignoredBySystem: true
    failureReason:
      reason: "PROVER_COULD_NOT_SOLVE_THE_PROBLEM"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues: []
  - pathId: "path1"
    testPathName: "getKeysWhenPreviousKeyIsNullThrowsIllegalStateException"
    constructorSignature: "<init>(org.bitcoinj.crypto.KeyCrypter) : void"
    modelFingerprint: "7FC28E08CD3C95588AD1A3CEEE3A6399"
    problemWasSolvedByProver: false
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "AC70298FA93F6048125F94F6464F3643"
      index: 1
      valueUuid: "target"
    - type: "INPUT"
      name: "purpose"
      modelFingerprint: "ECAA1C50B76A93360BF29B721FDECD53"
      index: 2
      valueUuid: "getKeys_keyChain.KeyPurpose1"
    - type: "INPUT"
      name: "numberOfKeys"
      modelFingerprint: "F7E5054A22C3DB21C9323ECA4D79363A"
      index: 3
      valueUuid: "getKeys_int1"
    - type: "STATIC"
      name: "Threading"
      modelFingerprint: "F7EA5C46482BE836BD810E3E7E297587"
      index: 4
      valueUuid: "uuid2"
      methodExercised:
        target: "org.bitcoinj.utils.Threading"
        name: "lock"
        parameters:
        - name: "clazz"
          valueUuid: "uuid1"
        signature: "lock(Class): ReentrantLock"
        returnValueUuid: "<init>_reentrantLock1"
        access: 9
    - type: "STATIC"
      name: "Preconditions"
      modelFingerprint: "60A6CF81A4B62FC26CAD9062FF6E1448"
      index: 5
      valueUuid: "uuid4"
      methodExercised:
        target: "org.bitcoinj.base.internal.Preconditions"
        name: "checkArgument"
        parameters:
        - name: "expression"
          valueUuid: "uuid3"
        signature: "checkArgument(boolean): void"
        returnValueUuid: "getKeys_void1"
        access: 9
    - type: "STATIC"
      name: "Preconditions"
      modelFingerprint: "ACF07FFCA3E2E1576E0B7D7733EEEFF8"
      index: 6
      valueUuid: "uuid6"
      methodExercised:
        target: "org.bitcoinj.base.internal.Preconditions"
        name: "checkState"
        parameters:
        - name: "expression"
          valueUuid: "uuid5"
        signature: "checkState(boolean): void"
        returnValueUuid: "getKeys_void3"
        access: 9
    - type: "LOCAL_VARIABLE"
      name: "key"
      modelFingerprint: "9AD58535CF007F4A1B16F6206A86E867"
      index: 7
      valueUuid: "getKeys_eCKey1"
      methodExercised:
        target: "key"
        name: "isWatching"
        parameters: []
        signature: "isWatching(): boolean"
        returnValueUuid: "importKeyLocked_boolean2"
        access: 1
    - type: "LOCAL_VARIABLE"
      name: "key"
      modelFingerprint: "1D3D77B2735BA082DFFD762184DAB255"
      index: 8
      valueUuid: "getKeys_eCKey1"
      methodExercised:
        target: "key"
        name: "getPubKey"
        parameters: []
        signature: "getPubKey(): byte[]"
        returnValueUuid: "importKeyLocked_byte[]1"
        access: 1
    - type: "STATIC"
      name: "ByteString"
      modelFingerprint: "78CCF85BFAE4E4B46C6CF3E99EE10DBB"
      index: 9
      valueUuid: "uuid7"
      methodExercised:
        target: "com.google.protobuf.ByteString"
        name: "copyFrom"
        parameters:
        - name: "bytes"
          valueUuid: "importKeyLocked_byte[]1"
        signature: "copyFrom(byte[]): ByteString"
        returnValueUuid: "importKeyLocked_byteString1"
        access: 9
    - type: "LOCAL_VARIABLE"
      name: "key"
      modelFingerprint: "6227C4A8424E90265D2F504B053BE296"
      index: 10
      valueUuid: "getKeys_eCKey1"
      methodExercised:
        target: "key"
        name: "getPubKeyHash"
        parameters: []
        signature: "getPubKeyHash(): byte[]"
        returnValueUuid: "importKeyLocked_byte[]2"
        access: 1
    - type: "STATIC"
      name: "ByteString"
      modelFingerprint: "E5C8054A786E6E8B14B3D2C9DB8D7CB2"
      index: 11
      valueUuid: "uuid8"
      methodExercised:
        target: "com.google.protobuf.ByteString"
        name: "copyFrom"
        parameters:
        - name: "bytes"
          valueUuid: "importKeyLocked_byte[]2"
        signature: "copyFrom(byte[]): ByteString"
        returnValueUuid: "importKeyLocked_byteString2"
        access: 9
    - type: "STATIC"
      name: "Preconditions"
      modelFingerprint: "ACF07FFCA3E2E1576E0B7D7733EEEFF8"
      index: 12
      valueUuid: "uuid10"
      methodExercised:
        target: "org.bitcoinj.base.internal.Preconditions"
        name: "checkState"
        parameters:
        - name: "expression"
          valueUuid: "uuid9"
        signature: "checkState(boolean): void"
        returnValueUuid: "importKeyLocked_void1"
        access: 9
    - type: "STATIC"
      name: "Preconditions"
      modelFingerprint: "8E65D47E3C0602D60B2F22B827CB011E"
      index: 13
      valueUuid: "uuid12"
      methodExercised:
        target: "org.bitcoinj.base.internal.Preconditions"
        name: "checkState"
        parameters:
        - name: "expression"
          valueUuid: "queueOnKeysAdded_boolean1"
        signature: "checkState(boolean): void"
        returnValueUuid: "uuid11"
        access: 9
    - type: "RESULT"
      name: "result"
      modelFingerprint: "C9C68C9339F812BC8DEC7C1D6145A135"
      index: 14
      valueUuid: "uuid13"
    uuid: "60ce3b48-6ab0-35db-9e0d-7284cf8f074b"
    deleted: false
    disabled: true
    ignoredBySystem: false
    failureReason:
      reason: "UNKNOWN_REASON"
    prover: "DEFAULT"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: true
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.bitcoinj.wallet.BasicKeyChain"
        parameters:
        - name: "crypter"
          value:
            sapientType: "NULL"
            valueType: "org.bitcoinj.crypto.KeyCrypter"
            uuid: "<init>_keyCrypter1"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      valueType: "org.bitcoinj.wallet.BasicKeyChain"
      uuid: "target"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "ENUM"
      content: !<regular>
        value: "RECEIVE_FUNDS"
      valueType: "org.bitcoinj.wallet.KeyChain$KeyPurpose"
      uuid: "getKeys_keyChain.KeyPurpose1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: 1
      valueType: "int"
      uuid: "getKeys_int1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "REAL"
      valueType: "org.bitcoinj.utils.Threading"
      uuid: "uuid2"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.bitcoinj.utils.Threading"
        method: "lock"
        methodParameters:
        - value:
            sapientType: "CLASS"
            content: !<regular>
              value: "org.bitcoinj.wallet.BasicKeyChain"
            valueType: "java.lang.Class"
            genericValueType: "org.bitcoinj.wallet.BasicKeyChain"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
      valueType: "java.util.concurrent.locks.ReentrantLock"
      uuid: "<init>_reentrantLock1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.bitcoinj.wallet.BasicKeyChain"
      valueType: "java.lang.Class"
      genericValueType: "org.bitcoinj.wallet.BasicKeyChain"
      uuid: "uuid1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "REAL"
      valueType: "org.bitcoinj.base.internal.Preconditions"
      uuid: "uuid4"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      valueType: "void"
      uuid: "getKeys_void1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "uuid3"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "REAL"
      valueType: "org.bitcoinj.base.internal.Preconditions"
      uuid: "uuid6"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      valueType: "void"
      uuid: "getKeys_void3"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "uuid5"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.bitcoinj.crypto.ECKey"
        parameters: []
        privateConstructor: false
        createdByTargetCode: true
      valueType: "org.bitcoinj.crypto.ECKey"
      uuid: "getKeys_eCKey1"
      fixed: false
      collectionUuid: "getKeys_list1"
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "importKeyLocked_boolean2"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.bitcoinj.crypto.ECKey"
        parameters: []
        privateConstructor: false
        createdByTargetCode: true
      valueType: "org.bitcoinj.crypto.ECKey"
      uuid: "getKeys_eCKey1"
      fixed: false
      collectionUuid: "getKeys_list1"
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "ARRAY"
      content: !<array>
        values:
          0:
            sapientType: "BASIC"
            content: !<regular>
              value: 2
            valueType: "byte"
            uuid: "importKeyLocked_byte[]1-item0"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          1:
            sapientType: "BASIC"
            content: !<regular>
              value: 20
            valueType: "byte"
            uuid: "importKeyLocked_byte[]1-item1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          2:
            sapientType: "BASIC"
            content: !<regular>
              value: 59
            valueType: "byte"
            uuid: "importKeyLocked_byte[]1-item2"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          3:
            sapientType: "BASIC"
            content: !<regular>
              value: 105
            valueType: "byte"
            uuid: "importKeyLocked_byte[]1-item3"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          4:
            sapientType: "BASIC"
            content: !<regular>
              value: -76
            valueType: "byte"
            uuid: "importKeyLocked_byte[]1-item4"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          5:
            sapientType: "BASIC"
            content: !<regular>
              value: 39
            valueType: "byte"
            uuid: "importKeyLocked_byte[]1-item5"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          6:
            sapientType: "BASIC"
            content: !<regular>
              value: 91
            valueType: "byte"
            uuid: "importKeyLocked_byte[]1-item6"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          7:
            sapientType: "BASIC"
            content: !<regular>
              value: -48
            valueType: "byte"
            uuid: "importKeyLocked_byte[]1-item7"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          8:
            sapientType: "BASIC"
            content: !<regular>
              value: -48
            valueType: "byte"
            uuid: "importKeyLocked_byte[]1-item8"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          9:
            sapientType: "BASIC"
            content: !<regular>
              value: -99
            valueType: "byte"
            uuid: "importKeyLocked_byte[]1-item9"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          10:
            sapientType: "BASIC"
            content: !<regular>
              value: -96
            valueType: "byte"
            uuid: "importKeyLocked_byte[]1-item10"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          11:
            sapientType: "BASIC"
            content: !<regular>
              value: 65
            valueType: "byte"
            uuid: "importKeyLocked_byte[]1-item11"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          12:
            sapientType: "BASIC"
            content: !<regular>
              value: 27
            valueType: "byte"
            uuid: "importKeyLocked_byte[]1-item12"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          13:
            sapientType: "BASIC"
            content: !<regular>
              value: -127
            valueType: "byte"
            uuid: "importKeyLocked_byte[]1-item13"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          14:
            sapientType: "BASIC"
            content: !<regular>
              value: 104
            valueType: "byte"
            uuid: "importKeyLocked_byte[]1-item14"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          15:
            sapientType: "BASIC"
            content: !<regular>
              value: -106
            valueType: "byte"
            uuid: "importKeyLocked_byte[]1-item15"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          16:
            sapientType: "BASIC"
            content: !<regular>
              value: -105
            valueType: "byte"
            uuid: "importKeyLocked_byte[]1-item16"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          17:
            sapientType: "BASIC"
            content: !<regular>
              value: -46
            valueType: "byte"
            uuid: "importKeyLocked_byte[]1-item17"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          18:
            sapientType: "BASIC"
            content: !<regular>
              value: 124
            valueType: "byte"
            uuid: "importKeyLocked_byte[]1-item18"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          19:
            sapientType: "BASIC"
            content: !<regular>
              value: 15
            valueType: "byte"
            uuid: "importKeyLocked_byte[]1-item19"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          20:
            sapientType: "BASIC"
            content: !<regular>
              value: 18
            valueType: "byte"
            uuid: "importKeyLocked_byte[]1-item20"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          21:
            sapientType: "BASIC"
            content: !<regular>
              value: -31
            valueType: "byte"
            uuid: "importKeyLocked_byte[]1-item21"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          22:
            sapientType: "BASIC"
            content: !<regular>
              value: -75
            valueType: "byte"
            uuid: "importKeyLocked_byte[]1-item22"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          23:
            sapientType: "BASIC"
            content: !<regular>
              value: 1
            valueType: "byte"
            uuid: "importKeyLocked_byte[]1-item23"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          24:
            sapientType: "BASIC"
            content: !<regular>
              value: 115
            valueType: "byte"
            uuid: "importKeyLocked_byte[]1-item24"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          25:
            sapientType: "BASIC"
            content: !<regular>
              value: 51
            valueType: "byte"
            uuid: "importKeyLocked_byte[]1-item25"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          26:
            sapientType: "BASIC"
            content: !<regular>
              value: -85
            valueType: "byte"
            uuid: "importKeyLocked_byte[]1-item26"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          27:
            sapientType: "BASIC"
            content: !<regular>
              value: -28
            valueType: "byte"
            uuid: "importKeyLocked_byte[]1-item27"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          28:
            sapientType: "BASIC"
            content: !<regular>
              value: 119
            valueType: "byte"
            uuid: "importKeyLocked_byte[]1-item28"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          29:
            sapientType: "BASIC"
            content: !<regular>
              value: -22
            valueType: "byte"
            uuid: "importKeyLocked_byte[]1-item29"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          30:
            sapientType: "BASIC"
            content: !<regular>
              value: -105
            valueType: "byte"
            uuid: "importKeyLocked_byte[]1-item30"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          31:
            sapientType: "BASIC"
            content: !<regular>
              value: -71
            valueType: "byte"
            uuid: "importKeyLocked_byte[]1-item31"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          32:
            sapientType: "BASIC"
            content: !<regular>
              value: 68
            valueType: "byte"
            uuid: "importKeyLocked_byte[]1-item32"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
      valueType: "byte[]"
      uuid: "importKeyLocked_byte[]1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "REAL"
      valueType: "com.google.protobuf.ByteString"
      uuid: "uuid7"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "com.google.protobuf.ByteString"
        method: "copyFrom"
        methodParameters:
        - value:
            sapientType: "ARRAY"
            content: !<array>
              values:
                0:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: 2
                  valueType: "byte"
                  uuid: "importKeyLocked_byte[]1-item0"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                1:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: 20
                  valueType: "byte"
                  uuid: "importKeyLocked_byte[]1-item1"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                2:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: 59
                  valueType: "byte"
                  uuid: "importKeyLocked_byte[]1-item2"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                3:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: 105
                  valueType: "byte"
                  uuid: "importKeyLocked_byte[]1-item3"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                4:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: -76
                  valueType: "byte"
                  uuid: "importKeyLocked_byte[]1-item4"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                5:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: 39
                  valueType: "byte"
                  uuid: "importKeyLocked_byte[]1-item5"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                6:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: 91
                  valueType: "byte"
                  uuid: "importKeyLocked_byte[]1-item6"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                7:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: -48
                  valueType: "byte"
                  uuid: "importKeyLocked_byte[]1-item7"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                8:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: -48
                  valueType: "byte"
                  uuid: "importKeyLocked_byte[]1-item8"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                9:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: -99
                  valueType: "byte"
                  uuid: "importKeyLocked_byte[]1-item9"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                10:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: -96
                  valueType: "byte"
                  uuid: "importKeyLocked_byte[]1-item10"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                11:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: 65
                  valueType: "byte"
                  uuid: "importKeyLocked_byte[]1-item11"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                12:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: 27
                  valueType: "byte"
                  uuid: "importKeyLocked_byte[]1-item12"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                13:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: -127
                  valueType: "byte"
                  uuid: "importKeyLocked_byte[]1-item13"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                14:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: 104
                  valueType: "byte"
                  uuid: "importKeyLocked_byte[]1-item14"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                15:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: -106
                  valueType: "byte"
                  uuid: "importKeyLocked_byte[]1-item15"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                16:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: -105
                  valueType: "byte"
                  uuid: "importKeyLocked_byte[]1-item16"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                17:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: -46
                  valueType: "byte"
                  uuid: "importKeyLocked_byte[]1-item17"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                18:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: 124
                  valueType: "byte"
                  uuid: "importKeyLocked_byte[]1-item18"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                19:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: 15
                  valueType: "byte"
                  uuid: "importKeyLocked_byte[]1-item19"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                20:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: 18
                  valueType: "byte"
                  uuid: "importKeyLocked_byte[]1-item20"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                21:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: -31
                  valueType: "byte"
                  uuid: "importKeyLocked_byte[]1-item21"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                22:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: -75
                  valueType: "byte"
                  uuid: "importKeyLocked_byte[]1-item22"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                23:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: 1
                  valueType: "byte"
                  uuid: "importKeyLocked_byte[]1-item23"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                24:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: 115
                  valueType: "byte"
                  uuid: "importKeyLocked_byte[]1-item24"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                25:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: 51
                  valueType: "byte"
                  uuid: "importKeyLocked_byte[]1-item25"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                26:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: -85
                  valueType: "byte"
                  uuid: "importKeyLocked_byte[]1-item26"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                27:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: -28
                  valueType: "byte"
                  uuid: "importKeyLocked_byte[]1-item27"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                28:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: 119
                  valueType: "byte"
                  uuid: "importKeyLocked_byte[]1-item28"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                29:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: -22
                  valueType: "byte"
                  uuid: "importKeyLocked_byte[]1-item29"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                30:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: -105
                  valueType: "byte"
                  uuid: "importKeyLocked_byte[]1-item30"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                31:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: -71
                  valueType: "byte"
                  uuid: "importKeyLocked_byte[]1-item31"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                32:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: 68
                  valueType: "byte"
                  uuid: "importKeyLocked_byte[]1-item32"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
            valueType: "byte[]"
            uuid: "importKeyLocked_byte[]1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
      valueType: "com.google.protobuf.ByteString"
      uuid: "importKeyLocked_byteString1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "ARRAY"
      content: !<array>
        values:
          0:
            sapientType: "BASIC"
            content: !<regular>
              value: 2
            valueType: "byte"
            uuid: "importKeyLocked_byte[]1-item0"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          1:
            sapientType: "BASIC"
            content: !<regular>
              value: 20
            valueType: "byte"
            uuid: "importKeyLocked_byte[]1-item1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          2:
            sapientType: "BASIC"
            content: !<regular>
              value: 59
            valueType: "byte"
            uuid: "importKeyLocked_byte[]1-item2"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          3:
            sapientType: "BASIC"
            content: !<regular>
              value: 105
            valueType: "byte"
            uuid: "importKeyLocked_byte[]1-item3"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          4:
            sapientType: "BASIC"
            content: !<regular>
              value: -76
            valueType: "byte"
            uuid: "importKeyLocked_byte[]1-item4"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          5:
            sapientType: "BASIC"
            content: !<regular>
              value: 39
            valueType: "byte"
            uuid: "importKeyLocked_byte[]1-item5"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          6:
            sapientType: "BASIC"
            content: !<regular>
              value: 91
            valueType: "byte"
            uuid: "importKeyLocked_byte[]1-item6"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          7:
            sapientType: "BASIC"
            content: !<regular>
              value: -48
            valueType: "byte"
            uuid: "importKeyLocked_byte[]1-item7"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          8:
            sapientType: "BASIC"
            content: !<regular>
              value: -48
            valueType: "byte"
            uuid: "importKeyLocked_byte[]1-item8"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          9:
            sapientType: "BASIC"
            content: !<regular>
              value: -99
            valueType: "byte"
            uuid: "importKeyLocked_byte[]1-item9"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          10:
            sapientType: "BASIC"
            content: !<regular>
              value: -96
            valueType: "byte"
            uuid: "importKeyLocked_byte[]1-item10"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          11:
            sapientType: "BASIC"
            content: !<regular>
              value: 65
            valueType: "byte"
            uuid: "importKeyLocked_byte[]1-item11"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          12:
            sapientType: "BASIC"
            content: !<regular>
              value: 27
            valueType: "byte"
            uuid: "importKeyLocked_byte[]1-item12"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          13:
            sapientType: "BASIC"
            content: !<regular>
              value: -127
            valueType: "byte"
            uuid: "importKeyLocked_byte[]1-item13"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          14:
            sapientType: "BASIC"
            content: !<regular>
              value: 104
            valueType: "byte"
            uuid: "importKeyLocked_byte[]1-item14"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          15:
            sapientType: "BASIC"
            content: !<regular>
              value: -106
            valueType: "byte"
            uuid: "importKeyLocked_byte[]1-item15"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          16:
            sapientType: "BASIC"
            content: !<regular>
              value: -105
            valueType: "byte"
            uuid: "importKeyLocked_byte[]1-item16"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          17:
            sapientType: "BASIC"
            content: !<regular>
              value: -46
            valueType: "byte"
            uuid: "importKeyLocked_byte[]1-item17"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          18:
            sapientType: "BASIC"
            content: !<regular>
              value: 124
            valueType: "byte"
            uuid: "importKeyLocked_byte[]1-item18"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          19:
            sapientType: "BASIC"
            content: !<regular>
              value: 15
            valueType: "byte"
            uuid: "importKeyLocked_byte[]1-item19"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          20:
            sapientType: "BASIC"
            content: !<regular>
              value: 18
            valueType: "byte"
            uuid: "importKeyLocked_byte[]1-item20"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          21:
            sapientType: "BASIC"
            content: !<regular>
              value: -31
            valueType: "byte"
            uuid: "importKeyLocked_byte[]1-item21"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          22:
            sapientType: "BASIC"
            content: !<regular>
              value: -75
            valueType: "byte"
            uuid: "importKeyLocked_byte[]1-item22"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          23:
            sapientType: "BASIC"
            content: !<regular>
              value: 1
            valueType: "byte"
            uuid: "importKeyLocked_byte[]1-item23"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          24:
            sapientType: "BASIC"
            content: !<regular>
              value: 115
            valueType: "byte"
            uuid: "importKeyLocked_byte[]1-item24"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          25:
            sapientType: "BASIC"
            content: !<regular>
              value: 51
            valueType: "byte"
            uuid: "importKeyLocked_byte[]1-item25"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          26:
            sapientType: "BASIC"
            content: !<regular>
              value: -85
            valueType: "byte"
            uuid: "importKeyLocked_byte[]1-item26"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          27:
            sapientType: "BASIC"
            content: !<regular>
              value: -28
            valueType: "byte"
            uuid: "importKeyLocked_byte[]1-item27"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          28:
            sapientType: "BASIC"
            content: !<regular>
              value: 119
            valueType: "byte"
            uuid: "importKeyLocked_byte[]1-item28"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          29:
            sapientType: "BASIC"
            content: !<regular>
              value: -22
            valueType: "byte"
            uuid: "importKeyLocked_byte[]1-item29"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          30:
            sapientType: "BASIC"
            content: !<regular>
              value: -105
            valueType: "byte"
            uuid: "importKeyLocked_byte[]1-item30"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          31:
            sapientType: "BASIC"
            content: !<regular>
              value: -71
            valueType: "byte"
            uuid: "importKeyLocked_byte[]1-item31"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          32:
            sapientType: "BASIC"
            content: !<regular>
              value: 68
            valueType: "byte"
            uuid: "importKeyLocked_byte[]1-item32"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
      valueType: "byte[]"
      uuid: "importKeyLocked_byte[]1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.bitcoinj.crypto.ECKey"
        parameters: []
        privateConstructor: false
        createdByTargetCode: true
      valueType: "org.bitcoinj.crypto.ECKey"
      uuid: "getKeys_eCKey1"
      fixed: false
      collectionUuid: "getKeys_list1"
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "ARRAY"
      content: !<array>
        values:
          0:
            sapientType: "BASIC"
            content: !<regular>
              value: 101
            valueType: "byte"
            uuid: "importKeyLocked_byte[]2-item0"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          1:
            sapientType: "BASIC"
            content: !<regular>
              value: 86
            valueType: "byte"
            uuid: "importKeyLocked_byte[]2-item1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          2:
            sapientType: "BASIC"
            content: !<regular>
              value: -69
            valueType: "byte"
            uuid: "importKeyLocked_byte[]2-item2"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          3:
            sapientType: "BASIC"
            content: !<regular>
              value: 85
            valueType: "byte"
            uuid: "importKeyLocked_byte[]2-item3"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          4:
            sapientType: "BASIC"
            content: !<regular>
              value: -102
            valueType: "byte"
            uuid: "importKeyLocked_byte[]2-item4"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          5:
            sapientType: "BASIC"
            content: !<regular>
              value: 59
            valueType: "byte"
            uuid: "importKeyLocked_byte[]2-item5"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          6:
            sapientType: "BASIC"
            content: !<regular>
              value: 60
            valueType: "byte"
            uuid: "importKeyLocked_byte[]2-item6"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          7:
            sapientType: "BASIC"
            content: !<regular>
              value: 121
            valueType: "byte"
            uuid: "importKeyLocked_byte[]2-item7"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          8:
            sapientType: "BASIC"
            content: !<regular>
              value: -98
            valueType: "byte"
            uuid: "importKeyLocked_byte[]2-item8"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          9:
            sapientType: "BASIC"
            content: !<regular>
              value: 118
            valueType: "byte"
            uuid: "importKeyLocked_byte[]2-item9"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          10:
            sapientType: "BASIC"
            content: !<regular>
              value: 78
            valueType: "byte"
            uuid: "importKeyLocked_byte[]2-item10"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          11:
            sapientType: "BASIC"
            content: !<regular>
              value: -26
            valueType: "byte"
            uuid: "importKeyLocked_byte[]2-item11"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          12:
            sapientType: "BASIC"
            content: !<regular>
              value: -115
            valueType: "byte"
            uuid: "importKeyLocked_byte[]2-item12"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          13:
            sapientType: "BASIC"
            content: !<regular>
              value: -62
            valueType: "byte"
            uuid: "importKeyLocked_byte[]2-item13"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          14:
            sapientType: "BASIC"
            content: !<regular>
              value: -124
            valueType: "byte"
            uuid: "importKeyLocked_byte[]2-item14"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          15:
            sapientType: "BASIC"
            content: !<regular>
              value: 9
            valueType: "byte"
            uuid: "importKeyLocked_byte[]2-item15"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          16:
            sapientType: "BASIC"
            content: !<regular>
              value: -115
            valueType: "byte"
            uuid: "importKeyLocked_byte[]2-item16"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          17:
            sapientType: "BASIC"
            content: !<regular>
              value: -9
            valueType: "byte"
            uuid: "importKeyLocked_byte[]2-item17"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          18:
            sapientType: "BASIC"
            content: !<regular>
              value: 41
            valueType: "byte"
            uuid: "importKeyLocked_byte[]2-item18"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          19:
            sapientType: "BASIC"
            content: !<regular>
              value: -6
            valueType: "byte"
            uuid: "importKeyLocked_byte[]2-item19"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
      valueType: "byte[]"
      uuid: "importKeyLocked_byte[]2"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "REAL"
      valueType: "com.google.protobuf.ByteString"
      uuid: "uuid8"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "com.google.protobuf.ByteString"
        method: "copyFrom"
        methodParameters:
        - value:
            sapientType: "ARRAY"
            content: !<array>
              values:
                0:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: 101
                  valueType: "byte"
                  uuid: "importKeyLocked_byte[]2-item0"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                1:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: 86
                  valueType: "byte"
                  uuid: "importKeyLocked_byte[]2-item1"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                2:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: -69
                  valueType: "byte"
                  uuid: "importKeyLocked_byte[]2-item2"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                3:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: 85
                  valueType: "byte"
                  uuid: "importKeyLocked_byte[]2-item3"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                4:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: -102
                  valueType: "byte"
                  uuid: "importKeyLocked_byte[]2-item4"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                5:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: 59
                  valueType: "byte"
                  uuid: "importKeyLocked_byte[]2-item5"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                6:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: 60
                  valueType: "byte"
                  uuid: "importKeyLocked_byte[]2-item6"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                7:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: 121
                  valueType: "byte"
                  uuid: "importKeyLocked_byte[]2-item7"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                8:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: -98
                  valueType: "byte"
                  uuid: "importKeyLocked_byte[]2-item8"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                9:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: 118
                  valueType: "byte"
                  uuid: "importKeyLocked_byte[]2-item9"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                10:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: 78
                  valueType: "byte"
                  uuid: "importKeyLocked_byte[]2-item10"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                11:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: -26
                  valueType: "byte"
                  uuid: "importKeyLocked_byte[]2-item11"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                12:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: -115
                  valueType: "byte"
                  uuid: "importKeyLocked_byte[]2-item12"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                13:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: -62
                  valueType: "byte"
                  uuid: "importKeyLocked_byte[]2-item13"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                14:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: -124
                  valueType: "byte"
                  uuid: "importKeyLocked_byte[]2-item14"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                15:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: 9
                  valueType: "byte"
                  uuid: "importKeyLocked_byte[]2-item15"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                16:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: -115
                  valueType: "byte"
                  uuid: "importKeyLocked_byte[]2-item16"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                17:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: -9
                  valueType: "byte"
                  uuid: "importKeyLocked_byte[]2-item17"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                18:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: 41
                  valueType: "byte"
                  uuid: "importKeyLocked_byte[]2-item18"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                19:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: -6
                  valueType: "byte"
                  uuid: "importKeyLocked_byte[]2-item19"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
            valueType: "byte[]"
            uuid: "importKeyLocked_byte[]2"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
      valueType: "com.google.protobuf.ByteString"
      uuid: "importKeyLocked_byteString2"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "ARRAY"
      content: !<array>
        values:
          0:
            sapientType: "BASIC"
            content: !<regular>
              value: 101
            valueType: "byte"
            uuid: "importKeyLocked_byte[]2-item0"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          1:
            sapientType: "BASIC"
            content: !<regular>
              value: 86
            valueType: "byte"
            uuid: "importKeyLocked_byte[]2-item1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          2:
            sapientType: "BASIC"
            content: !<regular>
              value: -69
            valueType: "byte"
            uuid: "importKeyLocked_byte[]2-item2"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          3:
            sapientType: "BASIC"
            content: !<regular>
              value: 85
            valueType: "byte"
            uuid: "importKeyLocked_byte[]2-item3"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          4:
            sapientType: "BASIC"
            content: !<regular>
              value: -102
            valueType: "byte"
            uuid: "importKeyLocked_byte[]2-item4"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          5:
            sapientType: "BASIC"
            content: !<regular>
              value: 59
            valueType: "byte"
            uuid: "importKeyLocked_byte[]2-item5"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          6:
            sapientType: "BASIC"
            content: !<regular>
              value: 60
            valueType: "byte"
            uuid: "importKeyLocked_byte[]2-item6"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          7:
            sapientType: "BASIC"
            content: !<regular>
              value: 121
            valueType: "byte"
            uuid: "importKeyLocked_byte[]2-item7"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          8:
            sapientType: "BASIC"
            content: !<regular>
              value: -98
            valueType: "byte"
            uuid: "importKeyLocked_byte[]2-item8"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          9:
            sapientType: "BASIC"
            content: !<regular>
              value: 118
            valueType: "byte"
            uuid: "importKeyLocked_byte[]2-item9"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          10:
            sapientType: "BASIC"
            content: !<regular>
              value: 78
            valueType: "byte"
            uuid: "importKeyLocked_byte[]2-item10"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          11:
            sapientType: "BASIC"
            content: !<regular>
              value: -26
            valueType: "byte"
            uuid: "importKeyLocked_byte[]2-item11"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          12:
            sapientType: "BASIC"
            content: !<regular>
              value: -115
            valueType: "byte"
            uuid: "importKeyLocked_byte[]2-item12"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          13:
            sapientType: "BASIC"
            content: !<regular>
              value: -62
            valueType: "byte"
            uuid: "importKeyLocked_byte[]2-item13"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          14:
            sapientType: "BASIC"
            content: !<regular>
              value: -124
            valueType: "byte"
            uuid: "importKeyLocked_byte[]2-item14"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          15:
            sapientType: "BASIC"
            content: !<regular>
              value: 9
            valueType: "byte"
            uuid: "importKeyLocked_byte[]2-item15"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          16:
            sapientType: "BASIC"
            content: !<regular>
              value: -115
            valueType: "byte"
            uuid: "importKeyLocked_byte[]2-item16"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          17:
            sapientType: "BASIC"
            content: !<regular>
              value: -9
            valueType: "byte"
            uuid: "importKeyLocked_byte[]2-item17"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          18:
            sapientType: "BASIC"
            content: !<regular>
              value: 41
            valueType: "byte"
            uuid: "importKeyLocked_byte[]2-item18"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          19:
            sapientType: "BASIC"
            content: !<regular>
              value: -6
            valueType: "byte"
            uuid: "importKeyLocked_byte[]2-item19"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
      valueType: "byte[]"
      uuid: "importKeyLocked_byte[]2"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "REAL"
      valueType: "org.bitcoinj.base.internal.Preconditions"
      uuid: "uuid10"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      valueType: "void"
      uuid: "importKeyLocked_void1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "uuid9"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "REAL"
      valueType: "org.bitcoinj.base.internal.Preconditions"
      uuid: "uuid12"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "EXCEPTION"
      content: !<new>
        target: "java.lang.IllegalStateException"
        parameters: []
        privateConstructor: false
        createdByTargetCode: false
      valueType: "java.lang.IllegalStateException"
      uuid: "uuid11"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "queueOnKeysAdded_boolean1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "EXCEPTION"
      content: !<new>
        target: "java.lang.IllegalStateException"
        parameters: []
        privateConstructor: false
        createdByTargetCode: false
      valueType: "java.lang.IllegalStateException"
      uuid: "uuid13"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
  - pathId: "path4"
    testPathName: "getKeysWhenHashToKeysIsEmptyAndPreviousKeyIsNullThrowsIllegalStateException"
    constructorSignature: "<init>(org.bitcoinj.crypto.KeyCrypter) : void"
    modelFingerprint: "F62FF450CA14542D5E5E7E9BB77485B4"
    problemWasSolvedByProver: true
    truncated: true
    inputParameters: []
    uuid: "3dae82f1-6c1d-38c7-874b-d933aa05dec4"
    deleted: true
    disabled: false
    ignoredBySystem: true
    prover: "DEFAULT"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues: []
- method:
    name: "getKeys"
    signature: "getKeys() : java.util.List<org.bitcoinj.crypto.ECKey>"
    sourceCodeSignature: "List<ECKey> getKeys()"
    instructionFingerprint: "03816A02CAB31DAA5ABD9A0CC8BE21D1"
  paths:
  - pathId: "path1"
    testPathName: "getKeys1Test"
    constructorSignature: "<init>(org.bitcoinj.crypto.KeyCrypter) : void"
    modelFingerprint: "41704FB001FA811E64A6C4725CEEA665"
    problemWasSolvedByProver: true
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "35099553EB48D2AEC42E2A9279A21C51"
      index: 1
      valueUuid: "target"
    - type: "STATIC"
      name: "Threading"
      modelFingerprint: "F7EA5C46482BE836BD810E3E7E297587"
      index: 2
      valueUuid: "uuid70"
      methodExercised:
        target: "org.bitcoinj.utils.Threading"
        name: "lock"
        parameters:
        - name: "clazz"
          valueUuid: "uuid69"
        signature: "lock(Class): ReentrantLock"
        returnValueUuid: "<init>_reentrantLock1"
        access: 9
    - type: "RESULT"
      name: "result"
      modelFingerprint: "5824C7B1DA601864DDB84981F0C57EC0"
      index: 3
      valueUuid: "getKeys_arrayList1"
    uuid: "cc8c439a-b662-33f9-9f35-96d83f8e34c4"
    deleted: false
    disabled: false
    ignoredBySystem: false
    prover: "DEFAULT"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.bitcoinj.wallet.BasicKeyChain"
        parameters:
        - name: "crypter"
          value:
            sapientType: "MOCK"
            valueType: "org.bitcoinj.crypto.KeyCrypter"
            uuid: "<init>_keyCrypter1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      valueType: "org.bitcoinj.wallet.BasicKeyChain"
      uuid: "target"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "REAL"
      valueType: "org.bitcoinj.utils.Threading"
      uuid: "uuid70"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.bitcoinj.utils.Threading"
        method: "lock"
        methodParameters:
        - value:
            sapientType: "CLASS"
            content: !<regular>
              value: "org.bitcoinj.wallet.BasicKeyChain"
            valueType: "java.lang.Class"
            genericValueType: "org.bitcoinj.wallet.BasicKeyChain"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
      valueType: "java.util.concurrent.locks.ReentrantLock"
      uuid: "<init>_reentrantLock1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.bitcoinj.wallet.BasicKeyChain"
      valueType: "java.lang.Class"
      genericValueType: "org.bitcoinj.wallet.BasicKeyChain"
      uuid: "uuid69"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.ArrayList"
        parameters:
        - name: "c"
          value:
            sapientType: "COLLECTION"
            content: !<collection>
              parameters: []
              values: []
            valueType: "java.util.Collection"
            uuid: "getKeys_collection1"
            fixed: false
            collectionUuid: "<init>_linkedHashMap1"
            equalsMethodPresent: false
            explicitCastNeeded: false
        values: []
      valueType: "java.util.List"
      uuid: "getKeys_arrayList1"
      fixed: false
      equalsMethodPresent: true
      explicitCastNeeded: false
- method:
    name: "importKeys"
    signature: "importKeys(org.bitcoinj.crypto.ECKey[]) : int"
    sourceCodeSignature: "int importKeys(ECKey... keys)"
    instructionFingerprint: "C7B0AADE4A25351979F21365FD866C2A"
  paths:
  - pathId: "path1"
    testPathName: "importKeysTest"
    constructorSignature: "<init>(org.bitcoinj.crypto.KeyCrypter) : void"
    modelFingerprint: "0DACD7F410471E937A6629E59244F973"
    problemWasSolvedByProver: true
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "35099553EB48D2AEC42E2A9279A21C51"
      index: 1
      valueUuid: "target"
    - type: "INPUT"
      name: "keys"
      modelFingerprint: "63A563EC8ABFCA25F6FBC5FFA07602F3"
      index: 2
      valueUuid: "importKeys_eCKey[]1"
    - type: "STATIC"
      name: "Threading"
      modelFingerprint: "F7EA5C46482BE836BD810E3E7E297587"
      index: 3
      valueUuid: "uuid72"
      methodExercised:
        target: "org.bitcoinj.utils.Threading"
        name: "lock"
        parameters:
        - name: "clazz"
          valueUuid: "uuid71"
        signature: "lock(Class): ReentrantLock"
        returnValueUuid: "<init>_reentrantLock1"
        access: 9
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "4408543012970008D589D59EC967FF13"
      index: 4
      methodExercised:
        target: "target"
        name: "importKeys"
        parameters:
        - name: "keys"
          valueUuid: "importKeys_list2"
        signature: "importKeys(List): int"
        returnValueUuid: "importKeys_int1"
        access: 1
    - type: "RESULT"
      name: "result"
      modelFingerprint: "ACBCF6744C1A4F89BFBA83521C7CE3BD"
      index: 5
      valueUuid: "importKeys_int1"
    uuid: "3e4f80e0-78f4-3998-b2c2-bf3e665bc4b6"
    deleted: false
    disabled: false
    ignoredBySystem: false
    prover: "DEFAULT"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.bitcoinj.wallet.BasicKeyChain"
        parameters:
        - name: "crypter"
          value:
            sapientType: "MOCK"
            valueType: "org.bitcoinj.crypto.KeyCrypter"
            uuid: "<init>_keyCrypter1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      valueType: "org.bitcoinj.wallet.BasicKeyChain"
      uuid: "target"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "org.bitcoinj.crypto.ECKey[]"
      uuid: "importKeys_eCKey[]1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "REAL"
      valueType: "org.bitcoinj.utils.Threading"
      uuid: "uuid72"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.bitcoinj.utils.Threading"
        method: "lock"
        methodParameters:
        - value:
            sapientType: "CLASS"
            content: !<regular>
              value: "org.bitcoinj.wallet.BasicKeyChain"
            valueType: "java.lang.Class"
            genericValueType: "org.bitcoinj.wallet.BasicKeyChain"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
      valueType: "java.util.concurrent.locks.ReentrantLock"
      uuid: "<init>_reentrantLock1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.bitcoinj.wallet.BasicKeyChain"
      valueType: "java.lang.Class"
      genericValueType: "org.bitcoinj.wallet.BasicKeyChain"
      uuid: "uuid71"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: 0
      valueType: "int"
      uuid: "importKeys_int1"
      fixed: false
      equalsMethodPresent: true
      explicitCastNeeded: false
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.List"
      genericValueType: "org.bitcoinj.crypto.ECKey"
      uuid: "importKeys_list2"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: 0
      valueType: "int"
      uuid: "importKeys_int1"
      fixed: false
      equalsMethodPresent: true
      explicitCastNeeded: false
- method:
    name: "importKeys"
    signature: "importKeys(java.util.List<? extends org.bitcoinj.crypto.ECKey>) :\
      \ int"
    sourceCodeSignature: "int importKeys(List<? extends ECKey> keys)"
    instructionFingerprint: "9FE2C4E0004A3A766C7A637E1083264C"
  paths:
  - pathId: "path1"
    testPathName: "importKeys1WhenKeyIsEncryptedThrowsKeyCrypterException"
    constructorSignature: "<init>(org.bitcoinj.crypto.KeyCrypter) : void"
    modelFingerprint: "66B8CDEEDF675BC01DC84BF070A818E6"
    problemWasSolvedByProver: true
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "AC70298FA93F6048125F94F6464F3643"
      index: 1
      valueUuid: "target"
    - type: "INPUT"
      name: "keys"
      modelFingerprint: "199E5F6370CC28AADD0C78F98EF383B5"
      index: 2
      valueUuid: "importKeys_list1"
    - type: "STATIC"
      name: "Threading"
      modelFingerprint: "F7EA5C46482BE836BD810E3E7E297587"
      index: 3
      valueUuid: "uuid74"
      methodExercised:
        target: "org.bitcoinj.utils.Threading"
        name: "lock"
        parameters:
        - name: "clazz"
          valueUuid: "uuid73"
        signature: "lock(Class): ReentrantLock"
        returnValueUuid: "<init>_reentrantLock1"
        access: 9
    - type: "LOCAL_VARIABLE"
      name: "key"
      modelFingerprint: "610E8DB7B91193C0CE2593494B7F9AB5"
      index: 4
      valueUuid: "importKeys_object1"
      methodExercised:
        target: "key"
        name: "isEncrypted"
        parameters: []
        signature: "isEncrypted(): boolean"
        returnValueUuid: "checkKeyEncryptionStateMatches_boolean1"
        access: 1
    - type: "RESULT"
      name: "result"
      modelFingerprint: "E4BB238DA9F58E7767D759F8B6D4B53A"
      index: 5
      valueUuid: "checkKeyEncryptionStateMatches_keyCrypterException1"
    uuid: "9c16092d-1bdb-30f4-9dd4-f705c844ea84"
    deleted: false
    disabled: false
    ignoredBySystem: false
    prover: "DEFAULT"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.bitcoinj.wallet.BasicKeyChain"
        parameters:
        - name: "crypter"
          value:
            sapientType: "NULL"
            valueType: "org.bitcoinj.crypto.KeyCrypter"
            uuid: "<init>_keyCrypter1"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      valueType: "org.bitcoinj.wallet.BasicKeyChain"
      uuid: "target"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.ArrayList"
        parameters: []
        values:
        - sapientType: "MOCK"
          valueType: "org.bitcoinj.crypto.ECKey"
          uuid: "importKeys_object1"
          fixed: false
          collectionUuid: "importKeys_list1"
          equalsMethodPresent: false
          explicitCastNeeded: false
      valueType: "java.util.List"
      genericValueType: "? extends org.bitcoinj.crypto.ECKey"
      uuid: "importKeys_list1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "REAL"
      valueType: "org.bitcoinj.utils.Threading"
      uuid: "uuid74"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.bitcoinj.utils.Threading"
        method: "lock"
        methodParameters:
        - value:
            sapientType: "CLASS"
            content: !<regular>
              value: "org.bitcoinj.wallet.BasicKeyChain"
            valueType: "java.lang.Class"
            genericValueType: "org.bitcoinj.wallet.BasicKeyChain"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
      valueType: "java.util.concurrent.locks.ReentrantLock"
      uuid: "<init>_reentrantLock1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.bitcoinj.wallet.BasicKeyChain"
      valueType: "java.lang.Class"
      genericValueType: "org.bitcoinj.wallet.BasicKeyChain"
      uuid: "uuid73"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.bitcoinj.crypto.ECKey"
      uuid: "importKeys_object1"
      fixed: false
      collectionUuid: "importKeys_list1"
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "checkKeyEncryptionStateMatches_boolean1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "EXCEPTION"
      content: !<new>
        target: "org.bitcoinj.crypto.KeyCrypterException"
        parameters:
        - name: "message"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "Key is encrypted but chain is not"
            valueType: "java.lang.String"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: true
      valueType: "org.bitcoinj.crypto.KeyCrypterException"
      uuid: "checkKeyEncryptionStateMatches_keyCrypterException1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
  - pathId: "path9"
    testPathName: "importKeys1WhenActuallyAddedSizeNotGreaterThan0"
    constructorSignature: "<init>(org.bitcoinj.crypto.KeyCrypter) : void"
    modelFingerprint: "12489542FE742D5DABCDF93E71511579"
    problemWasSolvedByProver: true
    truncated: true
    inputParameters: []
    uuid: "a6256186-c500-302d-aa70-9c6eb7d6b714"
    deleted: true
    disabled: false
    ignoredBySystem: true
    prover: "DEFAULT"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues: []
  - pathId: "path4"
    testPathName: "importKeys1WhenKeyNotIsEncryptedThrowsKeyCrypterException"
    constructorSignature: "<init>(org.bitcoinj.crypto.KeyCrypter) : void"
    modelFingerprint: "32995F7A9662914B42539B51C9DF547A"
    problemWasSolvedByProver: true
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "35099553EB48D2AEC42E2A9279A21C51"
      index: 1
      valueUuid: "target"
    - type: "INPUT"
      name: "keys"
      modelFingerprint: "199E5F6370CC28AADD0C78F98EF383B5"
      index: 2
      valueUuid: "importKeys_list1"
    - type: "STATIC"
      name: "Threading"
      modelFingerprint: "F7EA5C46482BE836BD810E3E7E297587"
      index: 3
      valueUuid: "uuid78"
      methodExercised:
        target: "org.bitcoinj.utils.Threading"
        name: "lock"
        parameters:
        - name: "clazz"
          valueUuid: "uuid77"
        signature: "lock(Class): ReentrantLock"
        returnValueUuid: "<init>_reentrantLock1"
        access: 9
    - type: "LOCAL_VARIABLE"
      name: "key"
      modelFingerprint: "1D1C45787C63F8F3BC5DBD38CF4E01A5"
      index: 4
      valueUuid: "importKeys_object1"
      methodExercised:
        target: "key"
        name: "isEncrypted"
        parameters: []
        signature: "isEncrypted(): boolean"
        returnValueUuid: "checkKeyEncryptionStateMatches_boolean1"
        access: 1
    - type: "RESULT"
      name: "result"
      modelFingerprint: "3686C3B93B681249C8B0AE2C12EC9D77"
      index: 5
      valueUuid: "checkKeyEncryptionStateMatches_keyCrypterException1"
    uuid: "9b885d56-7164-33c1-9974-e0be328a75bc"
    deleted: false
    disabled: false
    ignoredBySystem: false
    prover: "DEFAULT"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.bitcoinj.wallet.BasicKeyChain"
        parameters:
        - name: "crypter"
          value:
            sapientType: "MOCK"
            valueType: "org.bitcoinj.crypto.KeyCrypter"
            uuid: "<init>_keyCrypter1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      valueType: "org.bitcoinj.wallet.BasicKeyChain"
      uuid: "target"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.ArrayList"
        parameters: []
        values:
        - sapientType: "MOCK"
          valueType: "org.bitcoinj.crypto.ECKey"
          uuid: "importKeys_object1"
          fixed: false
          collectionUuid: "importKeys_list1"
          equalsMethodPresent: false
          explicitCastNeeded: false
      valueType: "java.util.List"
      genericValueType: "? extends org.bitcoinj.crypto.ECKey"
      uuid: "importKeys_list1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "REAL"
      valueType: "org.bitcoinj.utils.Threading"
      uuid: "uuid78"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.bitcoinj.utils.Threading"
        method: "lock"
        methodParameters:
        - value:
            sapientType: "CLASS"
            content: !<regular>
              value: "org.bitcoinj.wallet.BasicKeyChain"
            valueType: "java.lang.Class"
            genericValueType: "org.bitcoinj.wallet.BasicKeyChain"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
      valueType: "java.util.concurrent.locks.ReentrantLock"
      uuid: "<init>_reentrantLock1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.bitcoinj.wallet.BasicKeyChain"
      valueType: "java.lang.Class"
      genericValueType: "org.bitcoinj.wallet.BasicKeyChain"
      uuid: "uuid77"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.bitcoinj.crypto.ECKey"
      uuid: "importKeys_object1"
      fixed: false
      collectionUuid: "importKeys_list1"
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "checkKeyEncryptionStateMatches_boolean1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "EXCEPTION"
      content: !<new>
        target: "org.bitcoinj.crypto.KeyCrypterException"
        parameters:
        - name: "message"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "Key is not encrypted but chain is"
            valueType: "java.lang.String"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: true
      valueType: "org.bitcoinj.crypto.KeyCrypterException"
      uuid: "checkKeyEncryptionStateMatches_keyCrypterException1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
  - pathId: "path8"
    testPathName: "importKeys1WhenActuallyAddedSizeGreaterThan0ThrowsIllegalStateException"
    constructorSignature: "<init>(org.bitcoinj.crypto.KeyCrypter) : void"
    modelFingerprint: "BF7C196DEA712935B386DF233304E59F"
    problemWasSolvedByProver: false
    truncated: true
    inputParameters: []
    uuid: "af17af29-63ce-3244-8362-e31013e5be8d"
    deleted: true
    disabled: false
    ignoredBySystem: true
    failureReason:
      reason: "PROVER_COULD_NOT_SOLVE_THE_PROBLEM"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues: []
  - pathId: "path3"
    testPathName: "importKeys1WhenKeysIsEmptyAndActuallyAddedSizeNotGreaterThan0"
    constructorSignature: "<init>(org.bitcoinj.crypto.KeyCrypter) : void"
    modelFingerprint: "D9B501A9E2AC8D17BF2798887B3AD7D1"
    problemWasSolvedByProver: false
    truncated: true
    inputParameters: []
    uuid: "a510a511-9348-3911-afa9-7f679a2dd542"
    deleted: true
    disabled: false
    ignoredBySystem: true
    failureReason:
      reason: "PROVER_COULD_NOT_SOLVE_THE_PROBLEM"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues: []
  - pathId: "path5"
    testPathName: "importKeys1WhenKeyGetKeyCrypterNotEqualsKeyCrypterThrowsKeyCrypterException"
    constructorSignature: "<init>(org.bitcoinj.crypto.KeyCrypter) : void"
    modelFingerprint: "6FD840CD218DD4F9236AE81FF699CEB6"
    problemWasSolvedByProver: true
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "35099553EB48D2AEC42E2A9279A21C51"
      index: 1
      valueUuid: "target"
    - type: "INPUT"
      name: "keys"
      modelFingerprint: "199E5F6370CC28AADD0C78F98EF383B5"
      index: 2
      valueUuid: "importKeys_list1"
    - type: "STATIC"
      name: "Threading"
      modelFingerprint: "F7EA5C46482BE836BD810E3E7E297587"
      index: 3
      valueUuid: "uuid91"
      methodExercised:
        target: "org.bitcoinj.utils.Threading"
        name: "lock"
        parameters:
        - name: "clazz"
          valueUuid: "uuid90"
        signature: "lock(Class): ReentrantLock"
        returnValueUuid: "<init>_reentrantLock1"
        access: 9
    - type: "LOCAL_VARIABLE"
      name: "key"
      modelFingerprint: "610E8DB7B91193C0CE2593494B7F9AB5"
      index: 4
      valueUuid: "importKeys_object1"
      methodExercised:
        target: "key"
        name: "isEncrypted"
        parameters: []
        signature: "isEncrypted(): boolean"
        returnValueUuid: "checkKeyEncryptionStateMatches_boolean1"
        access: 1
    - type: "LOCAL_VARIABLE"
      name: "key"
      modelFingerprint: "16CA7834E981C659F91490E3E9EE49CE"
      index: 5
      valueUuid: "importKeys_object1"
      methodExercised:
        target: "key"
        name: "getKeyCrypter"
        parameters: []
        signature: "getKeyCrypter(): KeyCrypter"
        returnValueUuid: "checkKeyEncryptionStateMatches_keyCrypter1"
        access: 1
    - type: "LOCAL_VARIABLE"
      name: "key"
      modelFingerprint: "94A7FD921B53D572F1ADFE35C8FB6188"
      index: 6
      valueUuid: "importKeys_object1"
      methodExercised:
        target: "key"
        name: "getKeyCrypter"
        parameters: []
        signature: "getKeyCrypter(): KeyCrypter"
        returnValueUuid: "checkKeyEncryptionStateMatches_keyCrypter2"
        access: 1
    - type: "RESULT"
      name: "result"
      modelFingerprint: "DF2970BE6D55A511C0E254AEBD95BE55"
      index: 7
      valueUuid: "checkKeyEncryptionStateMatches_keyCrypterException1"
    uuid: "cc49f4c0-eb5d-33b0-a1c9-0aeeb8ad7dd5"
    deleted: false
    disabled: false
    ignoredBySystem: false
    prover: "DEFAULT"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.bitcoinj.wallet.BasicKeyChain"
        parameters:
        - name: "crypter"
          value:
            sapientType: "MOCK"
            valueType: "org.bitcoinj.crypto.KeyCrypter"
            uuid: "<init>_keyCrypter1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      valueType: "org.bitcoinj.wallet.BasicKeyChain"
      uuid: "target"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.ArrayList"
        parameters: []
        values:
        - sapientType: "MOCK"
          valueType: "org.bitcoinj.crypto.ECKey"
          uuid: "importKeys_object1"
          fixed: false
          collectionUuid: "importKeys_list1"
          equalsMethodPresent: false
          explicitCastNeeded: false
      valueType: "java.util.List"
      genericValueType: "? extends org.bitcoinj.crypto.ECKey"
      uuid: "importKeys_list1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "REAL"
      valueType: "org.bitcoinj.utils.Threading"
      uuid: "uuid91"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.bitcoinj.utils.Threading"
        method: "lock"
        methodParameters:
        - value:
            sapientType: "CLASS"
            content: !<regular>
              value: "org.bitcoinj.wallet.BasicKeyChain"
            valueType: "java.lang.Class"
            genericValueType: "org.bitcoinj.wallet.BasicKeyChain"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
      valueType: "java.util.concurrent.locks.ReentrantLock"
      uuid: "<init>_reentrantLock1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.bitcoinj.wallet.BasicKeyChain"
      valueType: "java.lang.Class"
      genericValueType: "org.bitcoinj.wallet.BasicKeyChain"
      uuid: "uuid90"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.bitcoinj.crypto.ECKey"
      uuid: "importKeys_object1"
      fixed: false
      collectionUuid: "importKeys_list1"
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "checkKeyEncryptionStateMatches_boolean1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.bitcoinj.crypto.ECKey"
      uuid: "importKeys_object1"
      fixed: false
      collectionUuid: "importKeys_list1"
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.bitcoinj.crypto.KeyCrypter"
      uuid: "checkKeyEncryptionStateMatches_keyCrypter1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.bitcoinj.crypto.ECKey"
      uuid: "importKeys_object1"
      fixed: false
      collectionUuid: "importKeys_list1"
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.bitcoinj.crypto.KeyCrypter"
      uuid: "checkKeyEncryptionStateMatches_keyCrypter2"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "EXCEPTION"
      content: !<new>
        target: "org.bitcoinj.crypto.KeyCrypterException"
        parameters:
        - name: "message"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "Key encrypted under different parameters to chain"
            valueType: "java.lang.String"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: true
      valueType: "org.bitcoinj.crypto.KeyCrypterException"
      uuid: "checkKeyEncryptionStateMatches_keyCrypterException1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
  - pathId: "path7"
    testPathName: "importKeys1WhenKeyGetKeyCrypterIsNullAndKeysIsEmptyAndActuallyAddedSizeNotGreaterThan0"
    constructorSignature: "<init>(org.bitcoinj.crypto.KeyCrypter) : void"
    modelFingerprint: "64FF59E8FB890B668C6CEB4BF31B47CC"
    problemWasSolvedByProver: false
    truncated: true
    inputParameters: []
    uuid: "b716ad54-ebd4-3b7f-a1ba-91c08f2737e5"
    deleted: true
    disabled: false
    ignoredBySystem: true
    failureReason:
      reason: "PROVER_COULD_NOT_SOLVE_THE_PROBLEM"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues: []
  - pathId: "path6"
    testPathName: "importKeys1WhenKeyGetKeyCrypterEqualsKeyCrypterAndKeysIsEmptyAndActuallyAddedSizeNotGreaterThan0"
    constructorSignature: "<init>(org.bitcoinj.crypto.KeyCrypter) : void"
    modelFingerprint: "CA1DB4A9EFCCC3E1A87558FCC497CA74"
    problemWasSolvedByProver: false
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "92723DCF3172E2A06000C2981F8D18F8"
      index: 1
      valueUuid: "target"
    - type: "INPUT"
      name: "keys"
      modelFingerprint: "58F930A56B48B0432044DC6622B44FF3"
      index: 2
      valueUuid: "importKeys_list1"
    - type: "STATIC"
      name: "Threading"
      modelFingerprint: "F7EA5C46482BE836BD810E3E7E297587"
      index: 3
      valueUuid: "uuid95"
      methodExercised:
        target: "org.bitcoinj.utils.Threading"
        name: "lock"
        parameters:
        - name: "clazz"
          valueUuid: "uuid94"
        signature: "lock(Class): ReentrantLock"
        returnValueUuid: "<init>_reentrantLock1"
        access: 9
    - type: "LOCAL_VARIABLE"
      name: "key"
      modelFingerprint: "FE858582DC969FE21B67774341F74FF5"
      index: 4
      valueUuid: "importKeys_object1"
      methodExercised:
        target: "key"
        name: "isEncrypted"
        parameters: []
        signature: "isEncrypted(): boolean"
        returnValueUuid: "checkKeyEncryptionStateMatches_boolean1"
        access: 1
    - type: "LOCAL_VARIABLE"
      name: "key"
      modelFingerprint: "16CA7834E981C659F91490E3E9EE49CE"
      index: 5
      valueUuid: "importKeys_object1"
      methodExercised:
        target: "key"
        name: "getKeyCrypter"
        parameters: []
        signature: "getKeyCrypter(): KeyCrypter"
        returnValueUuid: "checkKeyEncryptionStateMatches_keyCrypter1"
        access: 1
    - type: "LOCAL_VARIABLE"
      name: "key"
      modelFingerprint: "94A7FD921B53D572F1ADFE35C8FB6188"
      index: 6
      valueUuid: "importKeys_object1"
      methodExercised:
        target: "key"
        name: "getKeyCrypter"
        parameters: []
        signature: "getKeyCrypter(): KeyCrypter"
        returnValueUuid: "checkKeyEncryptionStateMatches_keyCrypter2"
        access: 1
    - type: "RESULT"
      name: "result"
      modelFingerprint: "8E4E4A3F04320A5F313F9B77CB2C7276"
      index: 7
      valueUuid: "importKeys_int3"
    uuid: "dcd34d84-29ec-38ba-b13e-8865c6ba9b3c"
    deleted: false
    disabled: false
    ignoredBySystem: false
    failureReason:
      reason: "PROVER_COULD_NOT_SOLVE_THE_PROBLEM"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.bitcoinj.wallet.BasicKeyChain"
        parameters:
        - name: "crypter"
          value:
            sapientType: "MOCK"
            valueType: "org.bitcoinj.crypto.KeyCrypter"
            uuid: "checkKeyEncryptionStateMatches_keyCrypter2"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      valueType: "org.bitcoinj.wallet.BasicKeyChain"
      uuid: "target"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.List"
      genericValueType: "? extends org.bitcoinj.crypto.ECKey"
      uuid: "importKeys_list1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "REAL"
      valueType: "org.bitcoinj.utils.Threading"
      uuid: "uuid95"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.bitcoinj.utils.Threading"
        method: "lock"
        methodParameters:
        - value:
            sapientType: "CLASS"
            content: !<regular>
              value: "org.bitcoinj.wallet.BasicKeyChain"
            valueType: "java.lang.Class"
            genericValueType: "org.bitcoinj.wallet.BasicKeyChain"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
      valueType: "java.util.concurrent.locks.ReentrantLock"
      uuid: "<init>_reentrantLock1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.bitcoinj.wallet.BasicKeyChain"
      valueType: "java.lang.Class"
      genericValueType: "org.bitcoinj.wallet.BasicKeyChain"
      uuid: "uuid94"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.bitcoinj.crypto.ECKey"
      uuid: "importKeys_object1"
      fixed: false
      collectionUuid: "importKeys_list1"
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "checkKeyEncryptionStateMatches_boolean1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.bitcoinj.crypto.ECKey"
      uuid: "importKeys_object1"
      fixed: false
      collectionUuid: "importKeys_list1"
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.bitcoinj.crypto.KeyCrypter"
      uuid: "checkKeyEncryptionStateMatches_keyCrypter1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.bitcoinj.crypto.ECKey"
      uuid: "importKeys_object1"
      fixed: false
      collectionUuid: "importKeys_list1"
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.bitcoinj.crypto.KeyCrypter"
      uuid: "checkKeyEncryptionStateMatches_keyCrypter2"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: 0
      valueType: "int"
      uuid: "importKeys_int3"
      fixed: false
      collectionUuid: "importKeys_arrayList1"
      equalsMethodPresent: true
      explicitCastNeeded: false
  - pathId: "path2"
    testPathName: "importKeys1WhenPreviousKeyIsNullAndActuallyAddedSizeGreaterThan0ThrowsIllegalStateException"
    constructorSignature: "<init>(org.bitcoinj.crypto.KeyCrypter) : void"
    modelFingerprint: "74E443CDD5A63C82DAF0A7577796E2B8"
    problemWasSolvedByProver: false
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "AC70298FA93F6048125F94F6464F3643"
      index: 1
      valueUuid: "target"
    - type: "INPUT"
      name: "keys"
      modelFingerprint: "58F930A56B48B0432044DC6622B44FF3"
      index: 2
      valueUuid: "importKeys_list1"
    - type: "STATIC"
      name: "Threading"
      modelFingerprint: "F7EA5C46482BE836BD810E3E7E297587"
      index: 3
      valueUuid: "uuid97"
      methodExercised:
        target: "org.bitcoinj.utils.Threading"
        name: "lock"
        parameters:
        - name: "clazz"
          valueUuid: "uuid96"
        signature: "lock(Class): ReentrantLock"
        returnValueUuid: "<init>_reentrantLock1"
        access: 9
    - type: "LOCAL_VARIABLE"
      name: "key"
      modelFingerprint: "FE858582DC969FE21B67774341F74FF5"
      index: 4
      valueUuid: "importKeys_object1"
      methodExercised:
        target: "key"
        name: "isEncrypted"
        parameters: []
        signature: "isEncrypted(): boolean"
        returnValueUuid: "checkKeyEncryptionStateMatches_boolean1"
        access: 1
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "37F0032F77D1882AA9EC8E45A29DAA0C"
      index: 5
      methodExercised:
        target: "target"
        name: "hasKey"
        parameters:
        - name: "key"
          valueUuid: "importKeys_object2"
        signature: "hasKey(ECKey): boolean"
        returnValueUuid: "importKeys_boolean4"
        access: 1
    - type: "LOCAL_VARIABLE"
      name: "key"
      modelFingerprint: "D50F6365A097CA852613BD95CD4F1D90"
      index: 6
      valueUuid: "importKeys_object2"
      methodExercised:
        target: "key"
        name: "isWatching"
        parameters: []
        signature: "isWatching(): boolean"
        returnValueUuid: "importKeyLocked_boolean2"
        access: 1
    - type: "LOCAL_VARIABLE"
      name: "key"
      modelFingerprint: "E8CC71C57D5FE22B7EA34F376F4790D1"
      index: 7
      valueUuid: "importKeys_object2"
      methodExercised:
        target: "key"
        name: "getPubKey"
        parameters: []
        signature: "getPubKey(): byte[]"
        returnValueUuid: "importKeyLocked_byte[]1"
        access: 1
    - type: "STATIC"
      name: "ByteString"
      modelFingerprint: "2684DE1377B0A6D3657E2DDFE316973F"
      index: 8
      valueUuid: "uuid98"
      methodExercised:
        target: "com.google.protobuf.ByteString"
        name: "copyFrom"
        parameters:
        - name: "bytes"
          valueUuid: "importKeyLocked_byte[]1"
        signature: "copyFrom(byte[]): ByteString"
        returnValueUuid: "importKeyLocked_byteString1"
        access: 9
    - type: "LOCAL_VARIABLE"
      name: "key"
      modelFingerprint: "7A975842CF2A4EB984A817D751464DE2"
      index: 9
      valueUuid: "importKeys_object2"
      methodExercised:
        target: "key"
        name: "getPubKeyHash"
        parameters: []
        signature: "getPubKeyHash(): byte[]"
        returnValueUuid: "importKeyLocked_byte[]2"
        access: 1
    - type: "STATIC"
      name: "ByteString"
      modelFingerprint: "2684DE1377B0A6D3657E2DDFE316973F"
      index: 10
      valueUuid: "uuid99"
      methodExercised:
        target: "com.google.protobuf.ByteString"
        name: "copyFrom"
        parameters:
        - name: "bytes"
          valueUuid: "importKeyLocked_byte[]2"
        signature: "copyFrom(byte[]): ByteString"
        returnValueUuid: "importKeyLocked_byteString2"
        access: 9
    - type: "STATIC"
      name: "Preconditions"
      modelFingerprint: "ACF07FFCA3E2E1576E0B7D7733EEEFF8"
      index: 11
      valueUuid: "uuid101"
      methodExercised:
        target: "org.bitcoinj.base.internal.Preconditions"
        name: "checkState"
        parameters:
        - name: "expression"
          valueUuid: "uuid100"
        signature: "checkState(boolean): void"
        returnValueUuid: "importKeyLocked_void1"
        access: 9
    - type: "STATIC"
      name: "Preconditions"
      modelFingerprint: "8E65D47E3C0602D60B2F22B827CB011E"
      index: 12
      valueUuid: "uuid103"
      methodExercised:
        target: "org.bitcoinj.base.internal.Preconditions"
        name: "checkState"
        parameters:
        - name: "expression"
          valueUuid: "queueOnKeysAdded_boolean1"
        signature: "checkState(boolean): void"
        returnValueUuid: "uuid102"
        access: 9
    - type: "RESULT"
      name: "result"
      modelFingerprint: "C9C68C9339F812BC8DEC7C1D6145A135"
      index: 13
      valueUuid: "uuid104"
    uuid: "776a82d2-14fa-3913-869b-5fd3b1919580"
    deleted: false
    disabled: true
    ignoredBySystem: false
    failureReason:
      reason: "PROVER_COULD_NOT_SOLVE_THE_PROBLEM"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: true
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.bitcoinj.wallet.BasicKeyChain"
        parameters:
        - name: "crypter"
          value:
            sapientType: "NULL"
            valueType: "org.bitcoinj.crypto.KeyCrypter"
            uuid: "<init>_keyCrypter1"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      valueType: "org.bitcoinj.wallet.BasicKeyChain"
      uuid: "target"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.List"
      genericValueType: "? extends org.bitcoinj.crypto.ECKey"
      uuid: "importKeys_list1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "REAL"
      valueType: "org.bitcoinj.utils.Threading"
      uuid: "uuid97"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.bitcoinj.utils.Threading"
        method: "lock"
        methodParameters:
        - value:
            sapientType: "CLASS"
            content: !<regular>
              value: "org.bitcoinj.wallet.BasicKeyChain"
            valueType: "java.lang.Class"
            genericValueType: "org.bitcoinj.wallet.BasicKeyChain"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
      valueType: "java.util.concurrent.locks.ReentrantLock"
      uuid: "<init>_reentrantLock1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.bitcoinj.wallet.BasicKeyChain"
      valueType: "java.lang.Class"
      genericValueType: "org.bitcoinj.wallet.BasicKeyChain"
      uuid: "uuid96"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.bitcoinj.crypto.ECKey"
      uuid: "importKeys_object1"
      fixed: false
      collectionUuid: "importKeys_list1"
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "checkKeyEncryptionStateMatches_boolean1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "importKeys_boolean4"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.bitcoinj.crypto.ECKey"
      uuid: "importKeys_object2"
      fixed: false
      collectionUuid: "importKeys_list1"
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.bitcoinj.crypto.ECKey"
      uuid: "importKeys_object2"
      fixed: false
      collectionUuid: "importKeys_list1"
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "importKeyLocked_boolean2"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.bitcoinj.crypto.ECKey"
      uuid: "importKeys_object2"
      fixed: false
      collectionUuid: "importKeys_list1"
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "byte[]"
      uuid: "importKeyLocked_byte[]1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "com.google.protobuf.ByteString"
      uuid: "uuid98"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "com.google.protobuf.ByteString"
      uuid: "importKeyLocked_byteString1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "byte[]"
      uuid: "importKeyLocked_byte[]1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.bitcoinj.crypto.ECKey"
      uuid: "importKeys_object2"
      fixed: false
      collectionUuid: "importKeys_list1"
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "byte[]"
      uuid: "importKeyLocked_byte[]2"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "com.google.protobuf.ByteString"
      uuid: "uuid99"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "com.google.protobuf.ByteString"
      uuid: "importKeyLocked_byteString2"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "byte[]"
      uuid: "importKeyLocked_byte[]2"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "REAL"
      valueType: "org.bitcoinj.base.internal.Preconditions"
      uuid: "uuid101"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      valueType: "void"
      uuid: "importKeyLocked_void1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "uuid100"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "REAL"
      valueType: "org.bitcoinj.base.internal.Preconditions"
      uuid: "uuid103"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "EXCEPTION"
      content: !<new>
        target: "java.lang.IllegalStateException"
        parameters: []
        privateConstructor: false
        createdByTargetCode: false
      valueType: "java.lang.IllegalStateException"
      uuid: "uuid102"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "queueOnKeysAdded_boolean1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "EXCEPTION"
      content: !<new>
        target: "java.lang.IllegalStateException"
        parameters: []
        privateConstructor: false
        createdByTargetCode: false
      valueType: "java.lang.IllegalStateException"
      uuid: "uuid104"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
- method:
    name: "importKey"
    signature: "importKey(org.bitcoinj.crypto.ECKey) : void"
    sourceCodeSignature: "void importKey(ECKey key)"
    instructionFingerprint: "92576A5337105755AE88090E7B4F9C45"
  paths:
  - pathId: "path1"
    testPathName: "importKeyWhenKeyIsEncryptedThrowsKeyCrypterException"
    constructorSignature: "<init>(org.bitcoinj.crypto.KeyCrypter) : void"
    modelFingerprint: "0ED3B3BFCA852EA8314ECEC360BE3684"
    problemWasSolvedByProver: true
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "AC70298FA93F6048125F94F6464F3643"
      index: 1
      valueUuid: "target"
    - type: "INPUT"
      name: "key"
      modelFingerprint: "C1A18A41926BD71E225A702884E0335F"
      index: 2
      valueUuid: "importKey_eCKey1"
    - type: "STATIC"
      name: "Threading"
      modelFingerprint: "F7EA5C46482BE836BD810E3E7E297587"
      index: 3
      valueUuid: "uuid106"
      methodExercised:
        target: "org.bitcoinj.utils.Threading"
        name: "lock"
        parameters:
        - name: "clazz"
          valueUuid: "uuid105"
        signature: "lock(Class): ReentrantLock"
        returnValueUuid: "<init>_reentrantLock1"
        access: 9
    - type: "LOCAL_VARIABLE"
      name: "key"
      modelFingerprint: "610E8DB7B91193C0CE2593494B7F9AB5"
      index: 4
      valueUuid: "importKey_eCKey1"
      methodExercised:
        target: "key"
        name: "isEncrypted"
        parameters: []
        signature: "isEncrypted(): boolean"
        returnValueUuid: "checkKeyEncryptionStateMatches_boolean1"
        access: 1
    - type: "RESULT"
      name: "result"
      modelFingerprint: "E4BB238DA9F58E7767D759F8B6D4B53A"
      index: 5
      valueUuid: "checkKeyEncryptionStateMatches_keyCrypterException1"
    uuid: "6226c405-f308-3af3-acd5-15b1f8649e8a"
    deleted: false
    disabled: false
    ignoredBySystem: false
    prover: "DEFAULT"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.bitcoinj.wallet.BasicKeyChain"
        parameters:
        - name: "crypter"
          value:
            sapientType: "NULL"
            valueType: "org.bitcoinj.crypto.KeyCrypter"
            uuid: "<init>_keyCrypter1"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      valueType: "org.bitcoinj.wallet.BasicKeyChain"
      uuid: "target"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.bitcoinj.crypto.ECKey"
      uuid: "importKey_eCKey1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "REAL"
      valueType: "org.bitcoinj.utils.Threading"
      uuid: "uuid106"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.bitcoinj.utils.Threading"
        method: "lock"
        methodParameters:
        - value:
            sapientType: "CLASS"
            content: !<regular>
              value: "org.bitcoinj.wallet.BasicKeyChain"
            valueType: "java.lang.Class"
            genericValueType: "org.bitcoinj.wallet.BasicKeyChain"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
      valueType: "java.util.concurrent.locks.ReentrantLock"
      uuid: "<init>_reentrantLock1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.bitcoinj.wallet.BasicKeyChain"
      valueType: "java.lang.Class"
      genericValueType: "org.bitcoinj.wallet.BasicKeyChain"
      uuid: "uuid105"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.bitcoinj.crypto.ECKey"
      uuid: "importKey_eCKey1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "checkKeyEncryptionStateMatches_boolean1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "EXCEPTION"
      content: !<new>
        target: "org.bitcoinj.crypto.KeyCrypterException"
        parameters:
        - name: "message"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "Key is encrypted but chain is not"
            valueType: "java.lang.String"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: true
      valueType: "org.bitcoinj.crypto.KeyCrypterException"
      uuid: "checkKeyEncryptionStateMatches_keyCrypterException1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
  - pathId: "path4"
    testPathName: "importKeyWhenKeyNotIsEncryptedThrowsKeyCrypterException"
    constructorSignature: "<init>(org.bitcoinj.crypto.KeyCrypter) : void"
    modelFingerprint: "F5D4ACEBD533190C61BFEF466DFC16BF"
    problemWasSolvedByProver: true
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "35099553EB48D2AEC42E2A9279A21C51"
      index: 1
      valueUuid: "target"
    - type: "INPUT"
      name: "key"
      modelFingerprint: "C1A18A41926BD71E225A702884E0335F"
      index: 2
      valueUuid: "importKey_eCKey1"
    - type: "STATIC"
      name: "Threading"
      modelFingerprint: "F7EA5C46482BE836BD810E3E7E297587"
      index: 3
      valueUuid: "uuid108"
      methodExercised:
        target: "org.bitcoinj.utils.Threading"
        name: "lock"
        parameters:
        - name: "clazz"
          valueUuid: "uuid107"
        signature: "lock(Class): ReentrantLock"
        returnValueUuid: "<init>_reentrantLock1"
        access: 9
    - type: "LOCAL_VARIABLE"
      name: "key"
      modelFingerprint: "1D1C45787C63F8F3BC5DBD38CF4E01A5"
      index: 4
      valueUuid: "importKey_eCKey1"
      methodExercised:
        target: "key"
        name: "isEncrypted"
        parameters: []
        signature: "isEncrypted(): boolean"
        returnValueUuid: "checkKeyEncryptionStateMatches_boolean1"
        access: 1
    - type: "RESULT"
      name: "result"
      modelFingerprint: "3686C3B93B681249C8B0AE2C12EC9D77"
      index: 5
      valueUuid: "checkKeyEncryptionStateMatches_keyCrypterException1"
    uuid: "8b8091a7-bea8-38f5-8299-055174796a9a"
    deleted: false
    disabled: false
    ignoredBySystem: false
    prover: "DEFAULT"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.bitcoinj.wallet.BasicKeyChain"
        parameters:
        - name: "crypter"
          value:
            sapientType: "MOCK"
            valueType: "org.bitcoinj.crypto.KeyCrypter"
            uuid: "<init>_keyCrypter1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      valueType: "org.bitcoinj.wallet.BasicKeyChain"
      uuid: "target"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.bitcoinj.crypto.ECKey"
      uuid: "importKey_eCKey1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "REAL"
      valueType: "org.bitcoinj.utils.Threading"
      uuid: "uuid108"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.bitcoinj.utils.Threading"
        method: "lock"
        methodParameters:
        - value:
            sapientType: "CLASS"
            content: !<regular>
              value: "org.bitcoinj.wallet.BasicKeyChain"
            valueType: "java.lang.Class"
            genericValueType: "org.bitcoinj.wallet.BasicKeyChain"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
      valueType: "java.util.concurrent.locks.ReentrantLock"
      uuid: "<init>_reentrantLock1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.bitcoinj.wallet.BasicKeyChain"
      valueType: "java.lang.Class"
      genericValueType: "org.bitcoinj.wallet.BasicKeyChain"
      uuid: "uuid107"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.bitcoinj.crypto.ECKey"
      uuid: "importKey_eCKey1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "checkKeyEncryptionStateMatches_boolean1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "EXCEPTION"
      content: !<new>
        target: "org.bitcoinj.crypto.KeyCrypterException"
        parameters:
        - name: "message"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "Key is not encrypted but chain is"
            valueType: "java.lang.String"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: true
      valueType: "org.bitcoinj.crypto.KeyCrypterException"
      uuid: "checkKeyEncryptionStateMatches_keyCrypterException1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
  - pathId: "path2"
    testPathName: "importKeyWhenHasKeyKey"
    constructorSignature: "<init>(org.bitcoinj.crypto.KeyCrypter) : void"
    modelFingerprint: "E95829AEEE0CE5EE6A58451F03F5168C"
    problemWasSolvedByProver: true
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "AC70298FA93F6048125F94F6464F3643"
      index: 1
      valueUuid: "target"
    - type: "INPUT"
      name: "key"
      modelFingerprint: "C1A18A41926BD71E225A702884E0335F"
      index: 2
      valueUuid: "importKey_eCKey1"
    - type: "STATIC"
      name: "Threading"
      modelFingerprint: "F7EA5C46482BE836BD810E3E7E297587"
      index: 3
      valueUuid: "uuid110"
      methodExercised:
        target: "org.bitcoinj.utils.Threading"
        name: "lock"
        parameters:
        - name: "clazz"
          valueUuid: "uuid109"
        signature: "lock(Class): ReentrantLock"
        returnValueUuid: "<init>_reentrantLock1"
        access: 9
    - type: "LOCAL_VARIABLE"
      name: "key"
      modelFingerprint: "1D1C45787C63F8F3BC5DBD38CF4E01A5"
      index: 4
      valueUuid: "importKey_eCKey1"
      methodExercised:
        target: "key"
        name: "isEncrypted"
        parameters: []
        signature: "isEncrypted(): boolean"
        returnValueUuid: "checkKeyEncryptionStateMatches_boolean1"
        access: 1
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "B99FEDAB47DE509C3844C640181E7418"
      index: 5
      methodExercised:
        target: "target"
        name: "hasKey"
        parameters:
        - name: "key"
          valueUuid: "importKey_eCKey1"
        signature: "hasKey(ECKey): boolean"
        returnValueUuid: "importKey_boolean1"
        access: 1
    - type: "RESULT"
      name: "result"
      modelFingerprint: "68041019986276EDF5D420282D883A57"
      index: 6
      valueUuid: "uuid111"
    uuid: "14e95dcb-c9d8-32d7-a36c-ce7c73b8d07c"
    deleted: false
    disabled: false
    ignoredBySystem: false
    prover: "DEFAULT"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.bitcoinj.wallet.BasicKeyChain"
        parameters:
        - name: "crypter"
          value:
            sapientType: "NULL"
            valueType: "org.bitcoinj.crypto.KeyCrypter"
            uuid: "<init>_keyCrypter1"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      valueType: "org.bitcoinj.wallet.BasicKeyChain"
      uuid: "target"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.bitcoinj.crypto.ECKey"
      uuid: "importKey_eCKey1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "REAL"
      valueType: "org.bitcoinj.utils.Threading"
      uuid: "uuid110"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.bitcoinj.utils.Threading"
        method: "lock"
        methodParameters:
        - value:
            sapientType: "CLASS"
            content: !<regular>
              value: "org.bitcoinj.wallet.BasicKeyChain"
            valueType: "java.lang.Class"
            genericValueType: "org.bitcoinj.wallet.BasicKeyChain"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
      valueType: "java.util.concurrent.locks.ReentrantLock"
      uuid: "<init>_reentrantLock1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.bitcoinj.wallet.BasicKeyChain"
      valueType: "java.lang.Class"
      genericValueType: "org.bitcoinj.wallet.BasicKeyChain"
      uuid: "uuid109"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.bitcoinj.crypto.ECKey"
      uuid: "importKey_eCKey1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "checkKeyEncryptionStateMatches_boolean1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "importKey_boolean1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.bitcoinj.crypto.ECKey"
      uuid: "importKey_eCKey1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      uuid: "uuid111"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
  - pathId: "path5"
    testPathName: "importKeyWhenKeyGetKeyCrypterNotEqualsKeyCrypterThrowsKeyCrypterException"
    constructorSignature: "<init>(org.bitcoinj.crypto.KeyCrypter) : void"
    modelFingerprint: "20E5F0C9CC8C4F02EA0AC176E2AFF754"
    problemWasSolvedByProver: true
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "35099553EB48D2AEC42E2A9279A21C51"
      index: 1
      valueUuid: "target"
    - type: "INPUT"
      name: "key"
      modelFingerprint: "C1A18A41926BD71E225A702884E0335F"
      index: 2
      valueUuid: "importKey_eCKey1"
    - type: "STATIC"
      name: "Threading"
      modelFingerprint: "F7EA5C46482BE836BD810E3E7E297587"
      index: 3
      valueUuid: "uuid113"
      methodExercised:
        target: "org.bitcoinj.utils.Threading"
        name: "lock"
        parameters:
        - name: "clazz"
          valueUuid: "uuid112"
        signature: "lock(Class): ReentrantLock"
        returnValueUuid: "<init>_reentrantLock1"
        access: 9
    - type: "LOCAL_VARIABLE"
      name: "key"
      modelFingerprint: "610E8DB7B91193C0CE2593494B7F9AB5"
      index: 4
      valueUuid: "importKey_eCKey1"
      methodExercised:
        target: "key"
        name: "isEncrypted"
        parameters: []
        signature: "isEncrypted(): boolean"
        returnValueUuid: "checkKeyEncryptionStateMatches_boolean1"
        access: 1
    - type: "LOCAL_VARIABLE"
      name: "key"
      modelFingerprint: "16CA7834E981C659F91490E3E9EE49CE"
      index: 5
      valueUuid: "importKey_eCKey1"
      methodExercised:
        target: "key"
        name: "getKeyCrypter"
        parameters: []
        signature: "getKeyCrypter(): KeyCrypter"
        returnValueUuid: "checkKeyEncryptionStateMatches_keyCrypter1"
        access: 1
    - type: "LOCAL_VARIABLE"
      name: "key"
      modelFingerprint: "94A7FD921B53D572F1ADFE35C8FB6188"
      index: 6
      valueUuid: "importKey_eCKey1"
      methodExercised:
        target: "key"
        name: "getKeyCrypter"
        parameters: []
        signature: "getKeyCrypter(): KeyCrypter"
        returnValueUuid: "checkKeyEncryptionStateMatches_keyCrypter2"
        access: 1
    - type: "RESULT"
      name: "result"
      modelFingerprint: "DF2970BE6D55A511C0E254AEBD95BE55"
      index: 7
      valueUuid: "checkKeyEncryptionStateMatches_keyCrypterException1"
    uuid: "0fbbb6c0-e5fc-3b42-a92f-f76272295ca1"
    deleted: false
    disabled: false
    ignoredBySystem: false
    prover: "DEFAULT"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.bitcoinj.wallet.BasicKeyChain"
        parameters:
        - name: "crypter"
          value:
            sapientType: "MOCK"
            valueType: "org.bitcoinj.crypto.KeyCrypter"
            uuid: "<init>_keyCrypter1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      valueType: "org.bitcoinj.wallet.BasicKeyChain"
      uuid: "target"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.bitcoinj.crypto.ECKey"
      uuid: "importKey_eCKey1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "REAL"
      valueType: "org.bitcoinj.utils.Threading"
      uuid: "uuid113"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.bitcoinj.utils.Threading"
        method: "lock"
        methodParameters:
        - value:
            sapientType: "CLASS"
            content: !<regular>
              value: "org.bitcoinj.wallet.BasicKeyChain"
            valueType: "java.lang.Class"
            genericValueType: "org.bitcoinj.wallet.BasicKeyChain"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
      valueType: "java.util.concurrent.locks.ReentrantLock"
      uuid: "<init>_reentrantLock1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.bitcoinj.wallet.BasicKeyChain"
      valueType: "java.lang.Class"
      genericValueType: "org.bitcoinj.wallet.BasicKeyChain"
      uuid: "uuid112"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.bitcoinj.crypto.ECKey"
      uuid: "importKey_eCKey1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "checkKeyEncryptionStateMatches_boolean1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.bitcoinj.crypto.ECKey"
      uuid: "importKey_eCKey1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.bitcoinj.crypto.KeyCrypter"
      uuid: "checkKeyEncryptionStateMatches_keyCrypter1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.bitcoinj.crypto.ECKey"
      uuid: "importKey_eCKey1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.bitcoinj.crypto.KeyCrypter"
      uuid: "checkKeyEncryptionStateMatches_keyCrypter2"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "EXCEPTION"
      content: !<new>
        target: "org.bitcoinj.crypto.KeyCrypterException"
        parameters:
        - name: "message"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "Key encrypted under different parameters to chain"
            valueType: "java.lang.String"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: true
      valueType: "org.bitcoinj.crypto.KeyCrypterException"
      uuid: "checkKeyEncryptionStateMatches_keyCrypterException1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
  - pathId: "path3"
    testPathName: "importKeyWhenPreviousKeyIsNullThrowsIllegalStateException"
    constructorSignature: "<init>(org.bitcoinj.crypto.KeyCrypter) : void"
    modelFingerprint: "1F2C66405E9D1A03DCB1809FD37AADC2"
    problemWasSolvedByProver: true
    truncated: true
    inputParameters: []
    uuid: "1dd6b4c6-04ae-383e-8147-2027eb910d35"
    deleted: true
    disabled: false
    ignoredBySystem: true
    prover: "DEFAULT"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues: []
  - pathId: "path7"
    testPathName: "importKeyWhenHashToKeysIsEmptyAndPreviousKeyIsNullThrowsIllegalStateException"
    constructorSignature: "<init>(org.bitcoinj.crypto.KeyCrypter) : void"
    modelFingerprint: "C5D61388FC45BC115E72CCBB58B33D7D"
    problemWasSolvedByProver: true
    truncated: true
    inputParameters: []
    uuid: "b5b6e7ca-74ac-3af1-997c-6a8b5c68ce27"
    deleted: true
    disabled: false
    ignoredBySystem: true
    prover: "DEFAULT"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues: []
  - pathId: "path6"
    testPathName: "importKeyWhenHasKeyNotKeyAndHashToKeysIsEmptyAndPreviousKeyIsNullThrowsIllegalStateException"
    constructorSignature: "<init>(org.bitcoinj.crypto.KeyCrypter) : void"
    modelFingerprint: "440270773E9DD2B3D36DD35EF939F3D6"
    problemWasSolvedByProver: false
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "92723DCF3172E2A06000C2981F8D18F8"
      index: 1
      valueUuid: "target"
    - type: "INPUT"
      name: "key"
      modelFingerprint: "C1A18A41926BD71E225A702884E0335F"
      index: 2
      valueUuid: "importKey_eCKey1"
    - type: "STATIC"
      name: "Threading"
      modelFingerprint: "F7EA5C46482BE836BD810E3E7E297587"
      index: 3
      valueUuid: "uuid133"
      methodExercised:
        target: "org.bitcoinj.utils.Threading"
        name: "lock"
        parameters:
        - name: "clazz"
          valueUuid: "uuid132"
        signature: "lock(Class): ReentrantLock"
        returnValueUuid: "<init>_reentrantLock1"
        access: 9
    - type: "LOCAL_VARIABLE"
      name: "key"
      modelFingerprint: "610E8DB7B91193C0CE2593494B7F9AB5"
      index: 4
      valueUuid: "importKey_eCKey1"
      methodExercised:
        target: "key"
        name: "isEncrypted"
        parameters: []
        signature: "isEncrypted(): boolean"
        returnValueUuid: "checkKeyEncryptionStateMatches_boolean1"
        access: 1
    - type: "LOCAL_VARIABLE"
      name: "key"
      modelFingerprint: "16CA7834E981C659F91490E3E9EE49CE"
      index: 5
      valueUuid: "importKey_eCKey1"
      methodExercised:
        target: "key"
        name: "getKeyCrypter"
        parameters: []
        signature: "getKeyCrypter(): KeyCrypter"
        returnValueUuid: "checkKeyEncryptionStateMatches_keyCrypter1"
        access: 1
    - type: "LOCAL_VARIABLE"
      name: "key"
      modelFingerprint: "94A7FD921B53D572F1ADFE35C8FB6188"
      index: 6
      valueUuid: "importKey_eCKey1"
      methodExercised:
        target: "key"
        name: "getKeyCrypter"
        parameters: []
        signature: "getKeyCrypter(): KeyCrypter"
        returnValueUuid: "checkKeyEncryptionStateMatches_keyCrypter2"
        access: 1
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "42AC741528825A46A7F2C43548629266"
      index: 7
      methodExercised:
        target: "target"
        name: "hasKey"
        parameters:
        - name: "key"
          valueUuid: "importKey_eCKey1"
        signature: "hasKey(ECKey): boolean"
        returnValueUuid: "importKey_boolean1"
        access: 1
    - type: "LOCAL_VARIABLE"
      name: "key"
      modelFingerprint: "D50F6365A097CA852613BD95CD4F1D90"
      index: 8
      valueUuid: "importKey_eCKey1"
      methodExercised:
        target: "key"
        name: "isWatching"
        parameters: []
        signature: "isWatching(): boolean"
        returnValueUuid: "importKeyLocked_boolean2"
        access: 1
    - type: "LOCAL_VARIABLE"
      name: "key"
      modelFingerprint: "E8CC71C57D5FE22B7EA34F376F4790D1"
      index: 9
      valueUuid: "importKey_eCKey1"
      methodExercised:
        target: "key"
        name: "getPubKey"
        parameters: []
        signature: "getPubKey(): byte[]"
        returnValueUuid: "importKeyLocked_byte[]1"
        access: 1
    - type: "STATIC"
      name: "ByteString"
      modelFingerprint: "2684DE1377B0A6D3657E2DDFE316973F"
      index: 10
      valueUuid: "uuid134"
      methodExercised:
        target: "com.google.protobuf.ByteString"
        name: "copyFrom"
        parameters:
        - name: "bytes"
          valueUuid: "importKeyLocked_byte[]1"
        signature: "copyFrom(byte[]): ByteString"
        returnValueUuid: "importKeyLocked_byteString1"
        access: 9
    - type: "LOCAL_VARIABLE"
      name: "key"
      modelFingerprint: "7A975842CF2A4EB984A817D751464DE2"
      index: 11
      valueUuid: "importKey_eCKey1"
      methodExercised:
        target: "key"
        name: "getPubKeyHash"
        parameters: []
        signature: "getPubKeyHash(): byte[]"
        returnValueUuid: "importKeyLocked_byte[]2"
        access: 1
    - type: "STATIC"
      name: "ByteString"
      modelFingerprint: "2684DE1377B0A6D3657E2DDFE316973F"
      index: 12
      valueUuid: "uuid135"
      methodExercised:
        target: "com.google.protobuf.ByteString"
        name: "copyFrom"
        parameters:
        - name: "bytes"
          valueUuid: "importKeyLocked_byte[]2"
        signature: "copyFrom(byte[]): ByteString"
        returnValueUuid: "importKeyLocked_byteString2"
        access: 9
    - type: "STATIC"
      name: "Preconditions"
      modelFingerprint: "ACF07FFCA3E2E1576E0B7D7733EEEFF8"
      index: 13
      valueUuid: "uuid137"
      methodExercised:
        target: "org.bitcoinj.base.internal.Preconditions"
        name: "checkState"
        parameters:
        - name: "expression"
          valueUuid: "uuid136"
        signature: "checkState(boolean): void"
        returnValueUuid: "importKeyLocked_void1"
        access: 9
    - type: "STATIC"
      name: "Preconditions"
      modelFingerprint: "8E65D47E3C0602D60B2F22B827CB011E"
      index: 14
      valueUuid: "uuid139"
      methodExercised:
        target: "org.bitcoinj.base.internal.Preconditions"
        name: "checkState"
        parameters:
        - name: "expression"
          valueUuid: "queueOnKeysAdded_boolean1"
        signature: "checkState(boolean): void"
        returnValueUuid: "uuid138"
        access: 9
    - type: "RESULT"
      name: "result"
      modelFingerprint: "C9C68C9339F812BC8DEC7C1D6145A135"
      index: 15
      valueUuid: "uuid140"
    uuid: "6a3a37d2-6642-3ccd-a791-ddfc4cd06bef"
    deleted: false
    disabled: true
    ignoredBySystem: false
    failureReason:
      reason: "UNKNOWN_REASON"
    prover: "DEFAULT"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: true
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.bitcoinj.wallet.BasicKeyChain"
        parameters:
        - name: "crypter"
          value:
            sapientType: "MOCK"
            valueType: "org.bitcoinj.crypto.KeyCrypter"
            uuid: "checkKeyEncryptionStateMatches_keyCrypter2"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      valueType: "org.bitcoinj.wallet.BasicKeyChain"
      uuid: "target"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.bitcoinj.crypto.ECKey"
      uuid: "importKey_eCKey1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "REAL"
      valueType: "org.bitcoinj.utils.Threading"
      uuid: "uuid133"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.bitcoinj.utils.Threading"
        method: "lock"
        methodParameters:
        - value:
            sapientType: "CLASS"
            content: !<regular>
              value: "org.bitcoinj.wallet.BasicKeyChain"
            valueType: "java.lang.Class"
            genericValueType: "org.bitcoinj.wallet.BasicKeyChain"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
      valueType: "java.util.concurrent.locks.ReentrantLock"
      uuid: "<init>_reentrantLock1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.bitcoinj.wallet.BasicKeyChain"
      valueType: "java.lang.Class"
      genericValueType: "org.bitcoinj.wallet.BasicKeyChain"
      uuid: "uuid132"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.bitcoinj.crypto.ECKey"
      uuid: "importKey_eCKey1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "checkKeyEncryptionStateMatches_boolean1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.bitcoinj.crypto.ECKey"
      uuid: "importKey_eCKey1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.bitcoinj.crypto.KeyCrypter"
      uuid: "checkKeyEncryptionStateMatches_keyCrypter1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.bitcoinj.crypto.ECKey"
      uuid: "importKey_eCKey1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.bitcoinj.crypto.KeyCrypter"
      uuid: "checkKeyEncryptionStateMatches_keyCrypter2"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "importKey_boolean1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.bitcoinj.crypto.ECKey"
      uuid: "importKey_eCKey1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.bitcoinj.crypto.ECKey"
      uuid: "importKey_eCKey1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "importKeyLocked_boolean2"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.bitcoinj.crypto.ECKey"
      uuid: "importKey_eCKey1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "byte[]"
      uuid: "importKeyLocked_byte[]1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "com.google.protobuf.ByteString"
      uuid: "uuid134"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "com.google.protobuf.ByteString"
      uuid: "importKeyLocked_byteString1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "byte[]"
      uuid: "importKeyLocked_byte[]1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.bitcoinj.crypto.ECKey"
      uuid: "importKey_eCKey1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "byte[]"
      uuid: "importKeyLocked_byte[]2"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "com.google.protobuf.ByteString"
      uuid: "uuid135"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "com.google.protobuf.ByteString"
      uuid: "importKeyLocked_byteString2"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "byte[]"
      uuid: "importKeyLocked_byte[]2"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "REAL"
      valueType: "org.bitcoinj.base.internal.Preconditions"
      uuid: "uuid137"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      valueType: "void"
      uuid: "importKeyLocked_void1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "uuid136"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "REAL"
      valueType: "org.bitcoinj.base.internal.Preconditions"
      uuid: "uuid139"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "EXCEPTION"
      content: !<new>
        target: "java.lang.IllegalStateException"
        parameters: []
        privateConstructor: false
        createdByTargetCode: false
      valueType: "java.lang.IllegalStateException"
      uuid: "uuid138"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "queueOnKeysAdded_boolean1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "EXCEPTION"
      content: !<new>
        target: "java.lang.IllegalStateException"
        parameters: []
        privateConstructor: false
        createdByTargetCode: false
      valueType: "java.lang.IllegalStateException"
      uuid: "uuid140"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
- method:
    name: "findKeyFromPubHash"
    signature: "findKeyFromPubHash(byte[]) : org.bitcoinj.crypto.ECKey"
    sourceCodeSignature: "ECKey findKeyFromPubHash(byte[] pubKeyHash)"
    instructionFingerprint: "9D12143A4FD54F2637EF5542C4BC0FB6"
  paths:
  - pathId: "path1"
    testPathName: "findKeyFromPubHashTest"
    constructorSignature: "<init>(org.bitcoinj.crypto.KeyCrypter) : void"
    modelFingerprint: "2936F075656B2F3165CC79C32945CB45"
    problemWasSolvedByProver: true
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "35099553EB48D2AEC42E2A9279A21C51"
      index: 1
      valueUuid: "target"
    - type: "INPUT"
      name: "pubKeyHash"
      modelFingerprint: "E93ACF48A2476635AC21AD157B987CAF"
      index: 2
      valueUuid: "findKeyFromPubHash_byte[]1"
    - type: "STATIC"
      name: "Threading"
      modelFingerprint: "F7EA5C46482BE836BD810E3E7E297587"
      index: 3
      valueUuid: "uuid142"
      methodExercised:
        target: "org.bitcoinj.utils.Threading"
        name: "lock"
        parameters:
        - name: "clazz"
          valueUuid: "uuid141"
        signature: "lock(Class): ReentrantLock"
        returnValueUuid: "<init>_reentrantLock1"
        access: 9
    - type: "STATIC"
      name: "ByteString"
      modelFingerprint: "2684DE1377B0A6D3657E2DDFE316973F"
      index: 4
      valueUuid: "uuid143"
      methodExercised:
        target: "com.google.protobuf.ByteString"
        name: "copyFrom"
        parameters:
        - name: "bytes"
          valueUuid: "findKeyFromPubHash_byte[]1"
        signature: "copyFrom(byte[]): ByteString"
        returnValueUuid: "findKeyFromPubHash_byteString1"
        access: 9
    - type: "RESULT"
      name: "result"
      modelFingerprint: "08890B6BF3164EA84B2BFA20C164B778"
      index: 5
      valueUuid: "findKeyFromPubHash_eCKey1"
    uuid: "44fa91be-011c-3f0c-ba05-2ff6bddb0b80"
    deleted: false
    disabled: false
    ignoredBySystem: false
    prover: "DEFAULT"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.bitcoinj.wallet.BasicKeyChain"
        parameters:
        - name: "crypter"
          value:
            sapientType: "MOCK"
            valueType: "org.bitcoinj.crypto.KeyCrypter"
            uuid: "<init>_keyCrypter1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      valueType: "org.bitcoinj.wallet.BasicKeyChain"
      uuid: "target"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "byte[]"
      uuid: "findKeyFromPubHash_byte[]1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "REAL"
      valueType: "org.bitcoinj.utils.Threading"
      uuid: "uuid142"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.bitcoinj.utils.Threading"
        method: "lock"
        methodParameters:
        - value:
            sapientType: "CLASS"
            content: !<regular>
              value: "org.bitcoinj.wallet.BasicKeyChain"
            valueType: "java.lang.Class"
            genericValueType: "org.bitcoinj.wallet.BasicKeyChain"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
      valueType: "java.util.concurrent.locks.ReentrantLock"
      uuid: "<init>_reentrantLock1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.bitcoinj.wallet.BasicKeyChain"
      valueType: "java.lang.Class"
      genericValueType: "org.bitcoinj.wallet.BasicKeyChain"
      uuid: "uuid141"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "com.google.protobuf.ByteString"
      uuid: "uuid143"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "com.google.protobuf.ByteString"
      uuid: "findKeyFromPubHash_byteString1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "byte[]"
      uuid: "findKeyFromPubHash_byte[]1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "NULL"
      valueType: "org.bitcoinj.crypto.ECKey"
      uuid: "findKeyFromPubHash_eCKey1"
      fixed: false
      collectionUuid: "<init>_linkedHashMap1"
      equalsMethodPresent: true
      explicitCastNeeded: false
- method:
    name: "findKeyFromPubKey"
    signature: "findKeyFromPubKey(byte[]) : org.bitcoinj.crypto.ECKey"
    sourceCodeSignature: "ECKey findKeyFromPubKey(byte[] pubKey)"
    instructionFingerprint: "312F8153EA5A1518C1A4A800C602013E"
  paths:
  - pathId: "path1"
    testPathName: "findKeyFromPubKeyTest"
    constructorSignature: "<init>(org.bitcoinj.crypto.KeyCrypter) : void"
    modelFingerprint: "355516809F1807E11C9E6D49AA7F2948"
    problemWasSolvedByProver: true
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "35099553EB48D2AEC42E2A9279A21C51"
      index: 1
      valueUuid: "target"
    - type: "INPUT"
      name: "pubKey"
      modelFingerprint: "4896771F3F9CB9E845DE91D546DE6AB8"
      index: 2
      valueUuid: "findKeyFromPubKey_byte[]1"
    - type: "STATIC"
      name: "Threading"
      modelFingerprint: "F7EA5C46482BE836BD810E3E7E297587"
      index: 3
      valueUuid: "uuid145"
      methodExercised:
        target: "org.bitcoinj.utils.Threading"
        name: "lock"
        parameters:
        - name: "clazz"
          valueUuid: "uuid144"
        signature: "lock(Class): ReentrantLock"
        returnValueUuid: "<init>_reentrantLock1"
        access: 9
    - type: "STATIC"
      name: "ByteString"
      modelFingerprint: "2684DE1377B0A6D3657E2DDFE316973F"
      index: 4
      valueUuid: "uuid146"
      methodExercised:
        target: "com.google.protobuf.ByteString"
        name: "copyFrom"
        parameters:
        - name: "bytes"
          valueUuid: "findKeyFromPubKey_byte[]1"
        signature: "copyFrom(byte[]): ByteString"
        returnValueUuid: "findKeyFromPubKey_byteString1"
        access: 9
    - type: "RESULT"
      name: "result"
      modelFingerprint: "08890B6BF3164EA84B2BFA20C164B778"
      index: 5
      valueUuid: "findKeyFromPubKey_eCKey1"
    uuid: "f3262d68-f653-32db-9e91-cc2045869e94"
    deleted: false
    disabled: false
    ignoredBySystem: false
    prover: "DEFAULT"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.bitcoinj.wallet.BasicKeyChain"
        parameters:
        - name: "crypter"
          value:
            sapientType: "MOCK"
            valueType: "org.bitcoinj.crypto.KeyCrypter"
            uuid: "<init>_keyCrypter1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      valueType: "org.bitcoinj.wallet.BasicKeyChain"
      uuid: "target"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "byte[]"
      uuid: "findKeyFromPubKey_byte[]1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "REAL"
      valueType: "org.bitcoinj.utils.Threading"
      uuid: "uuid145"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.bitcoinj.utils.Threading"
        method: "lock"
        methodParameters:
        - value:
            sapientType: "CLASS"
            content: !<regular>
              value: "org.bitcoinj.wallet.BasicKeyChain"
            valueType: "java.lang.Class"
            genericValueType: "org.bitcoinj.wallet.BasicKeyChain"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
      valueType: "java.util.concurrent.locks.ReentrantLock"
      uuid: "<init>_reentrantLock1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.bitcoinj.wallet.BasicKeyChain"
      valueType: "java.lang.Class"
      genericValueType: "org.bitcoinj.wallet.BasicKeyChain"
      uuid: "uuid144"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "com.google.protobuf.ByteString"
      uuid: "uuid146"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "com.google.protobuf.ByteString"
      uuid: "findKeyFromPubKey_byteString1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "byte[]"
      uuid: "findKeyFromPubKey_byte[]1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "NULL"
      valueType: "org.bitcoinj.crypto.ECKey"
      uuid: "findKeyFromPubKey_eCKey1"
      fixed: false
      collectionUuid: "<init>_linkedHashMap2"
      equalsMethodPresent: true
      explicitCastNeeded: false
- method:
    name: "hasKey"
    signature: "hasKey(org.bitcoinj.crypto.ECKey) : boolean"
    sourceCodeSignature: "boolean hasKey(ECKey key)"
    instructionFingerprint: "CBA33B7F99967A32A5244FE3D0D5F274"
  paths:
  - pathId: "path1"
    testPathName: "hasKeyWhenFindKeyFromPubKeyKeyGetPubKeyIsNull"
    constructorSignature: "<init>(org.bitcoinj.crypto.KeyCrypter) : void"
    modelFingerprint: "46198AC67A0D9DA04C89210B8EB85D90"
    problemWasSolvedByProver: true
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "35099553EB48D2AEC42E2A9279A21C51"
      index: 1
      valueUuid: "target"
    - type: "INPUT"
      name: "key"
      modelFingerprint: "C1A18A41926BD71E225A702884E0335F"
      index: 2
      valueUuid: "hasKey_eCKey1"
    - type: "STATIC"
      name: "Threading"
      modelFingerprint: "F7EA5C46482BE836BD810E3E7E297587"
      index: 3
      valueUuid: "uuid148"
      methodExercised:
        target: "org.bitcoinj.utils.Threading"
        name: "lock"
        parameters:
        - name: "clazz"
          valueUuid: "uuid147"
        signature: "lock(Class): ReentrantLock"
        returnValueUuid: "<init>_reentrantLock1"
        access: 9
    - type: "LOCAL_VARIABLE"
      name: "key"
      modelFingerprint: "E8CC71C57D5FE22B7EA34F376F4790D1"
      index: 4
      valueUuid: "hasKey_eCKey1"
      methodExercised:
        target: "key"
        name: "getPubKey"
        parameters: []
        signature: "getPubKey(): byte[]"
        returnValueUuid: "hasKey_byte[]1"
        access: 1
    - type: "STATIC"
      name: "ByteString"
      modelFingerprint: "2684DE1377B0A6D3657E2DDFE316973F"
      index: 5
      valueUuid: "uuid149"
      methodExercised:
        target: "com.google.protobuf.ByteString"
        name: "copyFrom"
        parameters:
        - name: "bytes"
          valueUuid: "hasKey_byte[]1"
        signature: "copyFrom(byte[]): ByteString"
        returnValueUuid: "findKeyFromPubKey_byteString1"
        access: 9
    - type: "RESULT"
      name: "result"
      modelFingerprint: "3A21543F56248AC92654D6E439128AED"
      index: 6
      valueUuid: "uuid150"
    uuid: "218c8a6e-bdce-36d0-a1a9-db8aea87747a"
    deleted: false
    disabled: false
    ignoredBySystem: false
    prover: "DEFAULT"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.bitcoinj.wallet.BasicKeyChain"
        parameters:
        - name: "crypter"
          value:
            sapientType: "MOCK"
            valueType: "org.bitcoinj.crypto.KeyCrypter"
            uuid: "<init>_keyCrypter1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      valueType: "org.bitcoinj.wallet.BasicKeyChain"
      uuid: "target"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.bitcoinj.crypto.ECKey"
      uuid: "hasKey_eCKey1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "REAL"
      valueType: "org.bitcoinj.utils.Threading"
      uuid: "uuid148"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.bitcoinj.utils.Threading"
        method: "lock"
        methodParameters:
        - value:
            sapientType: "CLASS"
            content: !<regular>
              value: "org.bitcoinj.wallet.BasicKeyChain"
            valueType: "java.lang.Class"
            genericValueType: "org.bitcoinj.wallet.BasicKeyChain"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
      valueType: "java.util.concurrent.locks.ReentrantLock"
      uuid: "<init>_reentrantLock1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.bitcoinj.wallet.BasicKeyChain"
      valueType: "java.lang.Class"
      genericValueType: "org.bitcoinj.wallet.BasicKeyChain"
      uuid: "uuid147"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.bitcoinj.crypto.ECKey"
      uuid: "hasKey_eCKey1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "byte[]"
      uuid: "hasKey_byte[]1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "com.google.protobuf.ByteString"
      uuid: "uuid149"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "com.google.protobuf.ByteString"
      uuid: "findKeyFromPubKey_byteString1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "byte[]"
      uuid: "hasKey_byte[]1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "uuid150"
      fixed: true
      equalsMethodPresent: true
      explicitCastNeeded: false
- method:
    name: "numKeys"
    signature: "numKeys() : int"
    sourceCodeSignature: "int numKeys()"
    instructionFingerprint: "AA8473FB05E22EB061A793FC8F72B162"
  paths:
  - pathId: "path1"
    testPathName: "numKeysTest"
    constructorSignature: "<init>(org.bitcoinj.crypto.KeyCrypter) : void"
    modelFingerprint: "3C93F2187C2BCFDAFA3279D67C2CE471"
    problemWasSolvedByProver: true
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "35099553EB48D2AEC42E2A9279A21C51"
      index: 1
      valueUuid: "target"
    - type: "STATIC"
      name: "Threading"
      modelFingerprint: "F7EA5C46482BE836BD810E3E7E297587"
      index: 2
      valueUuid: "uuid152"
      methodExercised:
        target: "org.bitcoinj.utils.Threading"
        name: "lock"
        parameters:
        - name: "clazz"
          valueUuid: "uuid151"
        signature: "lock(Class): ReentrantLock"
        returnValueUuid: "<init>_reentrantLock1"
        access: 9
    - type: "RESULT"
      name: "result"
      modelFingerprint: "8E4E4A3F04320A5F313F9B77CB2C7276"
      index: 3
      valueUuid: "numKeys_int1"
    uuid: "76299944-2002-360a-8bb8-28994d8ad5a4"
    deleted: false
    disabled: false
    ignoredBySystem: false
    prover: "DEFAULT"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.bitcoinj.wallet.BasicKeyChain"
        parameters:
        - name: "crypter"
          value:
            sapientType: "MOCK"
            valueType: "org.bitcoinj.crypto.KeyCrypter"
            uuid: "<init>_keyCrypter1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      valueType: "org.bitcoinj.wallet.BasicKeyChain"
      uuid: "target"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "REAL"
      valueType: "org.bitcoinj.utils.Threading"
      uuid: "uuid152"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.bitcoinj.utils.Threading"
        method: "lock"
        methodParameters:
        - value:
            sapientType: "CLASS"
            content: !<regular>
              value: "org.bitcoinj.wallet.BasicKeyChain"
            valueType: "java.lang.Class"
            genericValueType: "org.bitcoinj.wallet.BasicKeyChain"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
      valueType: "java.util.concurrent.locks.ReentrantLock"
      uuid: "<init>_reentrantLock1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.bitcoinj.wallet.BasicKeyChain"
      valueType: "java.lang.Class"
      genericValueType: "org.bitcoinj.wallet.BasicKeyChain"
      uuid: "uuid151"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: 0
      valueType: "int"
      uuid: "numKeys_int1"
      fixed: false
      collectionUuid: "<init>_linkedHashMap2"
      equalsMethodPresent: true
      explicitCastNeeded: false
- method:
    name: "isWatching"
    signature: "isWatching() : org.bitcoinj.wallet.BasicKeyChain$State"
    sourceCodeSignature: "State isWatching()"
    instructionFingerprint: "38E5E1F290996683FEAC4EDFB8A8F150"
  paths:
  - pathId: "path1"
    testPathName: "isWatchingWhenHashToKeysIsEmpty"
    constructorSignature: "<init>(org.bitcoinj.crypto.KeyCrypter) : void"
    modelFingerprint: "D62EB39DB6F4643CCD09CF0F8AF5EADB"
    problemWasSolvedByProver: true
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "35099553EB48D2AEC42E2A9279A21C51"
      index: 1
      valueUuid: "target"
    - type: "STATIC"
      name: "Threading"
      modelFingerprint: "F7EA5C46482BE836BD810E3E7E297587"
      index: 2
      valueUuid: "uuid154"
      methodExercised:
        target: "org.bitcoinj.utils.Threading"
        name: "lock"
        parameters:
        - name: "clazz"
          valueUuid: "uuid153"
        signature: "lock(Class): ReentrantLock"
        returnValueUuid: "<init>_reentrantLock1"
        access: 9
    - type: "RESULT"
      name: "result"
      modelFingerprint: "9A8BF8457F1B97690ECA5441F49E4F48"
      index: 3
      valueUuid: "Enum-org.bitcoinj.wallet.BasicKeyChain$State-EMPTY"
    uuid: "8b7e17ce-2d02-314f-bb8f-e71b83aa7f47"
    deleted: false
    disabled: false
    ignoredBySystem: false
    prover: "DEFAULT"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.bitcoinj.wallet.BasicKeyChain"
        parameters:
        - name: "crypter"
          value:
            sapientType: "MOCK"
            valueType: "org.bitcoinj.crypto.KeyCrypter"
            uuid: "<init>_keyCrypter1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      valueType: "org.bitcoinj.wallet.BasicKeyChain"
      uuid: "target"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "REAL"
      valueType: "org.bitcoinj.utils.Threading"
      uuid: "uuid154"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.bitcoinj.utils.Threading"
        method: "lock"
        methodParameters:
        - value:
            sapientType: "CLASS"
            content: !<regular>
              value: "org.bitcoinj.wallet.BasicKeyChain"
            valueType: "java.lang.Class"
            genericValueType: "org.bitcoinj.wallet.BasicKeyChain"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
      valueType: "java.util.concurrent.locks.ReentrantLock"
      uuid: "<init>_reentrantLock1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.bitcoinj.wallet.BasicKeyChain"
      valueType: "java.lang.Class"
      genericValueType: "org.bitcoinj.wallet.BasicKeyChain"
      uuid: "uuid153"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "ENUM"
      content: !<regular>
        value: "EMPTY"
      valueType: "org.bitcoinj.wallet.BasicKeyChain$State"
      uuid: "Enum-org.bitcoinj.wallet.BasicKeyChain$State-EMPTY"
      fixed: true
      equalsMethodPresent: true
      explicitCastNeeded: false
- method:
    name: "removeKey"
    signature: "removeKey(org.bitcoinj.crypto.ECKey) : boolean"
    sourceCodeSignature: "boolean removeKey(ECKey key)"
    instructionFingerprint: "109A10D9AF302BBB0B0B1C501F897E65"
  paths:
  - pathId: "path1"
    testPathName: "removeKeyWhenAEqualsB"
    constructorSignature: "<init>(org.bitcoinj.crypto.KeyCrypter) : void"
    modelFingerprint: "53C5A66AA7B59DEAE8C7EB6F71CCDCC9"
    problemWasSolvedByProver: true
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "35099553EB48D2AEC42E2A9279A21C51"
      index: 1
      valueUuid: "target"
    - type: "INPUT"
      name: "key"
      modelFingerprint: "C1A18A41926BD71E225A702884E0335F"
      index: 2
      valueUuid: "removeKey_eCKey1"
    - type: "STATIC"
      name: "Threading"
      modelFingerprint: "F7EA5C46482BE836BD810E3E7E297587"
      index: 3
      valueUuid: "uuid156"
      methodExercised:
        target: "org.bitcoinj.utils.Threading"
        name: "lock"
        parameters:
        - name: "clazz"
          valueUuid: "uuid155"
        signature: "lock(Class): ReentrantLock"
        returnValueUuid: "<init>_reentrantLock1"
        access: 9
    - type: "LOCAL_VARIABLE"
      name: "key"
      modelFingerprint: "7A975842CF2A4EB984A817D751464DE2"
      index: 4
      valueUuid: "removeKey_eCKey1"
      methodExercised:
        target: "key"
        name: "getPubKeyHash"
        parameters: []
        signature: "getPubKeyHash(): byte[]"
        returnValueUuid: "removeKey_byte[]1"
        access: 1
    - type: "STATIC"
      name: "ByteString"
      modelFingerprint: "2684DE1377B0A6D3657E2DDFE316973F"
      index: 5
      valueUuid: "uuid157"
      methodExercised:
        target: "com.google.protobuf.ByteString"
        name: "copyFrom"
        parameters:
        - name: "bytes"
          valueUuid: "removeKey_byte[]1"
        signature: "copyFrom(byte[]): ByteString"
        returnValueUuid: "removeKey_byteString1"
        access: 9
    - type: "LOCAL_VARIABLE"
      name: "key"
      modelFingerprint: "E8CC71C57D5FE22B7EA34F376F4790D1"
      index: 6
      valueUuid: "removeKey_eCKey1"
      methodExercised:
        target: "key"
        name: "getPubKey"
        parameters: []
        signature: "getPubKey(): byte[]"
        returnValueUuid: "removeKey_byte[]2"
        access: 1
    - type: "STATIC"
      name: "ByteString"
      modelFingerprint: "2684DE1377B0A6D3657E2DDFE316973F"
      index: 7
      valueUuid: "uuid158"
      methodExercised:
        target: "com.google.protobuf.ByteString"
        name: "copyFrom"
        parameters:
        - name: "bytes"
          valueUuid: "removeKey_byte[]2"
        signature: "copyFrom(byte[]): ByteString"
        returnValueUuid: "removeKey_byteString2"
        access: 9
    - type: "STATIC"
      name: "Preconditions"
      modelFingerprint: "ACF07FFCA3E2E1576E0B7D7733EEEFF8"
      index: 8
      valueUuid: "uuid160"
      methodExercised:
        target: "org.bitcoinj.base.internal.Preconditions"
        name: "checkState"
        parameters:
        - name: "expression"
          valueUuid: "uuid159"
        signature: "checkState(boolean): void"
        returnValueUuid: "removeKey_void2"
        access: 9
    - type: "RESULT"
      name: "result"
      modelFingerprint: "3A21543F56248AC92654D6E439128AED"
      index: 9
      valueUuid: "removeKey_int1"
    uuid: "1c1f74e0-e925-3619-a83e-4e5986e3aeed"
    deleted: false
    disabled: false
    ignoredBySystem: false
    prover: "DEFAULT"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.bitcoinj.wallet.BasicKeyChain"
        parameters:
        - name: "crypter"
          value:
            sapientType: "MOCK"
            valueType: "org.bitcoinj.crypto.KeyCrypter"
            uuid: "<init>_keyCrypter1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      valueType: "org.bitcoinj.wallet.BasicKeyChain"
      uuid: "target"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.bitcoinj.crypto.ECKey"
      uuid: "removeKey_eCKey1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "REAL"
      valueType: "org.bitcoinj.utils.Threading"
      uuid: "uuid156"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.bitcoinj.utils.Threading"
        method: "lock"
        methodParameters:
        - value:
            sapientType: "CLASS"
            content: !<regular>
              value: "org.bitcoinj.wallet.BasicKeyChain"
            valueType: "java.lang.Class"
            genericValueType: "org.bitcoinj.wallet.BasicKeyChain"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
      valueType: "java.util.concurrent.locks.ReentrantLock"
      uuid: "<init>_reentrantLock1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.bitcoinj.wallet.BasicKeyChain"
      valueType: "java.lang.Class"
      genericValueType: "org.bitcoinj.wallet.BasicKeyChain"
      uuid: "uuid155"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.bitcoinj.crypto.ECKey"
      uuid: "removeKey_eCKey1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "byte[]"
      uuid: "removeKey_byte[]1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "com.google.protobuf.ByteString"
      uuid: "uuid157"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "com.google.protobuf.ByteString"
      uuid: "removeKey_byteString1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "byte[]"
      uuid: "removeKey_byte[]1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.bitcoinj.crypto.ECKey"
      uuid: "removeKey_eCKey1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "byte[]"
      uuid: "removeKey_byte[]2"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "com.google.protobuf.ByteString"
      uuid: "uuid158"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "com.google.protobuf.ByteString"
      uuid: "removeKey_byteString2"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "byte[]"
      uuid: "removeKey_byte[]2"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "REAL"
      valueType: "org.bitcoinj.base.internal.Preconditions"
      uuid: "uuid160"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      valueType: "void"
      uuid: "removeKey_void2"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "uuid159"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "removeKey_int1"
      fixed: true
      equalsMethodPresent: true
      explicitCastNeeded: false
- method:
    name: "earliestKeyCreationTime"
    signature: "earliestKeyCreationTime() : java.time.Instant"
    sourceCodeSignature: "Instant earliestKeyCreationTime()"
    instructionFingerprint: "1D1963EC57292F3C8CE7446CA0038D78"
  paths:
  - pathId: "path1"
    testPathName: "earliestKeyCreationTimeTest"
    constructorSignature: "<init>(org.bitcoinj.crypto.KeyCrypter) : void"
    modelFingerprint: "F611E8AC8A648652BEB068315B0A041B"
    problemWasSolvedByProver: true
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "35099553EB48D2AEC42E2A9279A21C51"
      index: 1
      valueUuid: "target"
    - type: "STATIC"
      name: "Threading"
      modelFingerprint: "F7EA5C46482BE836BD810E3E7E297587"
      index: 2
      valueUuid: "uuid162"
      methodExercised:
        target: "org.bitcoinj.utils.Threading"
        name: "lock"
        parameters:
        - name: "clazz"
          valueUuid: "uuid161"
        signature: "lock(Class): ReentrantLock"
        returnValueUuid: "<init>_reentrantLock1"
        access: 9
    - type: "RESULT"
      name: "result"
      modelFingerprint: "72669FA3DE1BBB43E2FDD327F3E0C21F"
      index: 3
      valueUuid: "earliestKeyCreationTime_object1"
    uuid: "a206f8de-38c4-3d61-a8c3-413f43400cc2"
    deleted: false
    disabled: false
    ignoredBySystem: false
    prover: "DEFAULT"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.bitcoinj.wallet.BasicKeyChain"
        parameters:
        - name: "crypter"
          value:
            sapientType: "MOCK"
            valueType: "org.bitcoinj.crypto.KeyCrypter"
            uuid: "<init>_keyCrypter1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      valueType: "org.bitcoinj.wallet.BasicKeyChain"
      uuid: "target"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "REAL"
      valueType: "org.bitcoinj.utils.Threading"
      uuid: "uuid162"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.bitcoinj.utils.Threading"
        method: "lock"
        methodParameters:
        - value:
            sapientType: "CLASS"
            content: !<regular>
              value: "org.bitcoinj.wallet.BasicKeyChain"
            valueType: "java.lang.Class"
            genericValueType: "org.bitcoinj.wallet.BasicKeyChain"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
      valueType: "java.util.concurrent.locks.ReentrantLock"
      uuid: "<init>_reentrantLock1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.bitcoinj.wallet.BasicKeyChain"
      valueType: "java.lang.Class"
      genericValueType: "org.bitcoinj.wallet.BasicKeyChain"
      uuid: "uuid161"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "java.lang.Object"
        localVariableValue:
          sapientType: "OPTIONAL"
          content: !<optional>
            value:
              sapientType: "NULL"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
            target: "java.util.Optional"
          valueType: "java.util.Optional"
          uuid: "earliestKeyCreationTime_optional1"
          fixed: false
          collectionUuid: "earliestKeyCreationTime_list1"
          equalsMethodPresent: false
          explicitCastNeeded: false
        methodParameters:
        - value:
            sapientType: "OBJECT"
            content: !<static_field_return>
              target: "java.time.Instant"
              fieldName: "MAX"
            valueType: "java.time.Instant"
            uuid: "earliestKeyCreationTime_instant1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        methodName: "orElse"
      valueType: "java.time.Instant"
      uuid: "earliestKeyCreationTime_object1"
      fixed: false
      equalsMethodPresent: true
      explicitCastNeeded: true
- method:
    name: "getListeners"
    signature: "getListeners() : java.util.List<org.bitcoinj.utils.ListenerRegistration<org.bitcoinj.wallet.listeners.KeyChainEventListener>>"
    sourceCodeSignature: "List<ListenerRegistration<KeyChainEventListener>> getListeners()"
    instructionFingerprint: "DD34737913577DB40E42ABADE4AA3340"
  paths:
  - pathId: "path1"
    testPathName: "getListenersTest"
    constructorSignature: "<init>(org.bitcoinj.crypto.KeyCrypter) : void"
    modelFingerprint: "EE52DBF8CD1DD5B169D0BD7AD5EEFEB4"
    problemWasSolvedByProver: true
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "35099553EB48D2AEC42E2A9279A21C51"
      index: 1
      valueUuid: "target"
    - type: "STATIC"
      name: "Threading"
      modelFingerprint: "F7EA5C46482BE836BD810E3E7E297587"
      index: 2
      valueUuid: "uuid164"
      methodExercised:
        target: "org.bitcoinj.utils.Threading"
        name: "lock"
        parameters:
        - name: "clazz"
          valueUuid: "uuid163"
        signature: "lock(Class): ReentrantLock"
        returnValueUuid: "<init>_reentrantLock1"
        access: 9
    - type: "RESULT"
      name: "result"
      modelFingerprint: "42ECED6A843B5FBD0966379CD73B036E"
      index: 3
      valueUuid: "getListeners_arrayList1"
    uuid: "b1c37231-1147-3ac0-8762-d7c1e4be3220"
    deleted: false
    disabled: false
    ignoredBySystem: false
    prover: "DEFAULT"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.bitcoinj.wallet.BasicKeyChain"
        parameters:
        - name: "crypter"
          value:
            sapientType: "MOCK"
            valueType: "org.bitcoinj.crypto.KeyCrypter"
            uuid: "<init>_keyCrypter1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      valueType: "org.bitcoinj.wallet.BasicKeyChain"
      uuid: "target"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "REAL"
      valueType: "org.bitcoinj.utils.Threading"
      uuid: "uuid164"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.bitcoinj.utils.Threading"
        method: "lock"
        methodParameters:
        - value:
            sapientType: "CLASS"
            content: !<regular>
              value: "org.bitcoinj.wallet.BasicKeyChain"
            valueType: "java.lang.Class"
            genericValueType: "org.bitcoinj.wallet.BasicKeyChain"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
      valueType: "java.util.concurrent.locks.ReentrantLock"
      uuid: "<init>_reentrantLock1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.bitcoinj.wallet.BasicKeyChain"
      valueType: "java.lang.Class"
      genericValueType: "org.bitcoinj.wallet.BasicKeyChain"
      uuid: "uuid163"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.ArrayList"
        parameters:
        - name: "c"
          value:
            sapientType: "COLLECTION"
            content: !<collection>
              collectionClass: "java.util.concurrent.CopyOnWriteArrayList"
              parameters: []
              values: []
            valueType: "java.util.concurrent.CopyOnWriteArrayList"
            genericValueType: "org.bitcoinj.utils.ListenerRegistration<org.bitcoinj.wallet.listeners.KeyChainEventListener>"
            uuid: "<init>_copyOnWriteArrayList1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        values: []
      valueType: "java.util.List"
      genericValueType: "org.bitcoinj.utils.ListenerRegistration<org.bitcoinj.wallet.listeners.KeyChainEventListener>"
      uuid: "getListeners_arrayList1"
      fixed: false
      equalsMethodPresent: true
      explicitCastNeeded: false
- method:
    name: "serializeToEditableProtobufs"
    signature: "serializeToEditableProtobufs() : java.util.Map<org.bitcoinj.crypto.ECKey,org.bitcoinj.protobuf.wallet.Protos$Key$Builder>"
    sourceCodeSignature: "Map<ECKey, Protos.Key.Builder> serializeToEditableProtobufs()"
    instructionFingerprint: "502EC9AE33653857C71151016BE40037"
  paths:
  - pathId: "path1"
    testPathName: "serializeToEditableProtobufsTest"
    constructorSignature: "<init>(org.bitcoinj.crypto.KeyCrypter) : void"
    modelFingerprint: "A3B50A11CFA32B66898284EA7F2E5706"
    problemWasSolvedByProver: true
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "35099553EB48D2AEC42E2A9279A21C51"
      index: 1
      valueUuid: "target"
    - type: "STATIC"
      name: "Threading"
      modelFingerprint: "F7EA5C46482BE836BD810E3E7E297587"
      index: 2
      valueUuid: "uuid166"
      methodExercised:
        target: "org.bitcoinj.utils.Threading"
        name: "lock"
        parameters:
        - name: "clazz"
          valueUuid: "uuid165"
        signature: "lock(Class): ReentrantLock"
        returnValueUuid: "<init>_reentrantLock1"
        access: 9
    - type: "RESULT"
      name: "result"
      modelFingerprint: "B2AAEC188427CA2AA1B486760C57B760"
      index: 3
      valueUuid: "serializeToEditableProtobufs_object1"
    uuid: "82f6de5e-6051-37f1-a097-7ec711cdfed2"
    deleted: false
    disabled: false
    ignoredBySystem: false
    prover: "DEFAULT"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.bitcoinj.wallet.BasicKeyChain"
        parameters:
        - name: "crypter"
          value:
            sapientType: "MOCK"
            valueType: "org.bitcoinj.crypto.KeyCrypter"
            uuid: "<init>_keyCrypter1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      valueType: "org.bitcoinj.wallet.BasicKeyChain"
      uuid: "target"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "REAL"
      valueType: "org.bitcoinj.utils.Threading"
      uuid: "uuid166"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.bitcoinj.utils.Threading"
        method: "lock"
        methodParameters:
        - value:
            sapientType: "CLASS"
            content: !<regular>
              value: "org.bitcoinj.wallet.BasicKeyChain"
            valueType: "java.lang.Class"
            genericValueType: "org.bitcoinj.wallet.BasicKeyChain"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
      valueType: "java.util.concurrent.locks.ReentrantLock"
      uuid: "<init>_reentrantLock1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.bitcoinj.wallet.BasicKeyChain"
      valueType: "java.lang.Class"
      genericValueType: "org.bitcoinj.wallet.BasicKeyChain"
      uuid: "uuid165"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.Map"
      genericValueType: "org.bitcoinj.crypto.ECKey,org.bitcoinj.protobuf.wallet.Protos$Key$Builder"
      uuid: "serializeToEditableProtobufs_object1"
      fixed: false
      collectionUuid: "serializeToEditableProtobufs_collection1"
      equalsMethodPresent: true
      explicitCastNeeded: false
- method:
    name: "serializeToProtobuf"
    signature: "serializeToProtobuf() : java.util.List<org.bitcoinj.protobuf.wallet.Protos$Key>"
    sourceCodeSignature: "List<Protos.Key> serializeToProtobuf()"
    instructionFingerprint: "71D8EEBBB8B38E018182FB049F271951"
  paths:
  - pathId: "path1"
    testPathName: "serializeToProtobufTest"
    constructorSignature: "<init>(org.bitcoinj.crypto.KeyCrypter) : void"
    modelFingerprint: "8B3798067286BECCE09932F31CFE83D1"
    problemWasSolvedByProver: true
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "35099553EB48D2AEC42E2A9279A21C51"
      index: 1
      valueUuid: "target"
    - type: "STATIC"
      name: "Threading"
      modelFingerprint: "F7EA5C46482BE836BD810E3E7E297587"
      index: 2
      valueUuid: "uuid168"
      methodExercised:
        target: "org.bitcoinj.utils.Threading"
        name: "lock"
        parameters:
        - name: "clazz"
          valueUuid: "uuid167"
        signature: "lock(Class): ReentrantLock"
        returnValueUuid: "<init>_reentrantLock1"
        access: 9
    - type: "RESULT"
      name: "result"
      modelFingerprint: "B8FF3061E4DFBC866D0128BE2E1522BC"
      index: 3
      valueUuid: "serializeToProtobuf_object1"
    uuid: "16b1754a-bfdb-3aa3-bb73-83575a15fdd0"
    deleted: false
    disabled: false
    ignoredBySystem: false
    prover: "DEFAULT"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.bitcoinj.wallet.BasicKeyChain"
        parameters:
        - name: "crypter"
          value:
            sapientType: "MOCK"
            valueType: "org.bitcoinj.crypto.KeyCrypter"
            uuid: "<init>_keyCrypter1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      valueType: "org.bitcoinj.wallet.BasicKeyChain"
      uuid: "target"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "REAL"
      valueType: "org.bitcoinj.utils.Threading"
      uuid: "uuid168"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.bitcoinj.utils.Threading"
        method: "lock"
        methodParameters:
        - value:
            sapientType: "CLASS"
            content: !<regular>
              value: "org.bitcoinj.wallet.BasicKeyChain"
            valueType: "java.lang.Class"
            genericValueType: "org.bitcoinj.wallet.BasicKeyChain"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
      valueType: "java.util.concurrent.locks.ReentrantLock"
      uuid: "<init>_reentrantLock1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.bitcoinj.wallet.BasicKeyChain"
      valueType: "java.lang.Class"
      genericValueType: "org.bitcoinj.wallet.BasicKeyChain"
      uuid: "uuid167"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.List"
      genericValueType: "org.bitcoinj.protobuf.wallet.Protos$Key"
      uuid: "serializeToProtobuf_object1"
      fixed: false
      collectionUuid: "serializeToProtobuf_list1"
      equalsMethodPresent: true
      explicitCastNeeded: false
- method:
    name: "serializeEncryptableItem"
    signature: "serializeEncryptableItem(org.bitcoinj.crypto.EncryptableItem) : org.bitcoinj.protobuf.wallet.Protos$Key$Builder"
    sourceCodeSignature: "Protos.Key.Builder serializeEncryptableItem(EncryptableItem\
      \ item)"
    instructionFingerprint: "BC961D6940F0E83DB094AB863F4A38F7"
  paths:
  - pathId: "path5"
    testPathName: "serializeEncryptableItemWhenSecretIsNotNull"
    modelFingerprint: "FA157983256EEC565D84AF491E56F950"
    problemWasSolvedByProver: false
    truncated: true
    inputParameters: []
    uuid: "97552314-8345-3bb3-850e-2e1ff688ee97"
    deleted: true
    disabled: false
    ignoredBySystem: true
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: java.time.Instant.toEpochMilli() : long"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues: []
  - pathId: "path6"
    testPathName: "serializeEncryptableItemWhenSecretIsNull"
    modelFingerprint: "EDA3F35925170598F65A09D472D3C385"
    problemWasSolvedByProver: false
    truncated: true
    inputParameters: []
    uuid: "3dc1e04e-04d8-3d01-af81-f546e776794a"
    deleted: true
    disabled: false
    ignoredBySystem: true
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: java.time.Instant.toEpochMilli() : long"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues: []
  - pathId: "path1"
    testPathName: "serializeEncryptableItemWhenItemGetEncryptionTypeEqualsProtosWalletEncryptionTypeENCRYPTED_SCRYPT_AES"
    modelFingerprint: "9DBE43B763124F9B345E8CE07836AA70"
    problemWasSolvedByProver: false
    truncated: false
    inputParameters:
    - type: "INPUT"
      name: "item"
      modelFingerprint: "19323B1799704EB16F004E5E6A9F91CD"
      index: 1
      valueUuid: "serializeEncryptableItem_encryptableItem1"
    - type: "STATIC"
      name: "Protos.Key"
      modelFingerprint: "B0714D7BFE8D8CD6E9CF1DBC22EAF9CF"
      index: 2
      valueUuid: "uuid1"
      methodExercised:
        target: "org.bitcoinj.protobuf.wallet.Protos$Key"
        name: "newBuilder"
        parameters: []
        signature: "newBuilder(): Protos$Key$Builder"
        returnValueUuid: "serializeEncryptableItem_protos.Key.Builder1"
        access: 9
    - type: "LOCAL_VARIABLE"
      name: "item"
      modelFingerprint: "FE437D9D79DE4C27EFC0F01D8CA3F71D"
      index: 3
      valueUuid: "serializeEncryptableItem_encryptableItem1"
      methodExercised:
        target: "item"
        name: "creationTime"
        parameters: []
        signature: "creationTime(): Optional"
        returnValueUuid: "serializeEncryptableItem_optional1"
        access: 1025
    - type: "LOCAL_VARIABLE"
      name: "proto"
      modelFingerprint: "6B011EFA30A1BF978B08CCBAF480F3BF"
      index: 4
      valueUuid: "serializeEncryptableItem_protos.Key.Builder1"
      methodExercised:
        target: "proto"
        name: "setCreationTimestamp"
        parameters:
        - name: "value"
          valueUuid: "lambda$serializeEncryptableItem$4_long1"
        signature: "setCreationTimestamp(long): Protos$Key$Builder"
        returnValueUuid: "lambda$serializeEncryptableItem$4_protos.Key.Builder1"
        access: 1
    - type: "LOCAL_VARIABLE"
      name: "item"
      modelFingerprint: "E909BD29EC183007DF53F26B80D1CF04"
      index: 5
      valueUuid: "serializeEncryptableItem_encryptableItem1"
      methodExercised:
        target: "item"
        name: "isEncrypted"
        parameters: []
        signature: "isEncrypted(): boolean"
        returnValueUuid: "serializeEncryptableItem_boolean1"
        access: 1025
    - type: "LOCAL_VARIABLE"
      name: "item"
      modelFingerprint: "9173A59352D145437BEFFC26335EA104"
      index: 6
      valueUuid: "serializeEncryptableItem_encryptableItem1"
      methodExercised:
        target: "item"
        name: "getEncryptedData"
        parameters: []
        signature: "getEncryptedData(): EncryptedData"
        returnValueUuid: "serializeEncryptableItem_encryptedData1"
        access: 1025
    - type: "LOCAL_VARIABLE"
      name: "item"
      modelFingerprint: "278D24B167994BEC6BE5C91AC0275192"
      index: 7
      valueUuid: "serializeEncryptableItem_encryptableItem1"
      methodExercised:
        target: "item"
        name: "getEncryptedData"
        parameters: []
        signature: "getEncryptedData(): EncryptedData"
        returnValueUuid: "serializeEncryptableItem_encryptedData2"
        access: 1025
    - type: "LOCAL_VARIABLE"
      name: "proto"
      modelFingerprint: "3793F2CB4A9FB990BF3F30F51DEEC455"
      index: 8
      valueUuid: "serializeEncryptableItem_protos.Key.Builder1"
      methodExercised:
        target: "proto"
        name: "getEncryptedData"
        parameters: []
        signature: "getEncryptedData(): Protos$EncryptedData"
        returnValueUuid: "serializeEncryptableItem_protos.EncryptedData1"
        access: 1
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "090274F59BB9D7D8D8ABE1DCA9AC30B6"
      index: 9
      valueUuid: "serializeEncryptableItem_protos.EncryptedData1"
      methodExercised:
        target: "org.bitcoinj.protobuf.wallet.Protos$EncryptedData"
        name: "toBuilder"
        parameters: []
        signature: "toBuilder(): GeneratedMessageLite$Builder"
        returnValueUuid: "serializeEncryptableItem_generatedMessageLite.Builder1"
        access: 17
    - type: "STATIC"
      name: "ByteString"
      modelFingerprint: "2684DE1377B0A6D3657E2DDFE316973F"
      index: 10
      valueUuid: "uuid2"
      methodExercised:
        target: "com.google.protobuf.ByteString"
        name: "copyFrom"
        parameters:
        - name: "bytes"
          valueUuid: "serializeEncryptableItem_byte[]3"
        signature: "copyFrom(byte[]): ByteString"
        returnValueUuid: "serializeEncryptableItem_byteString1"
        access: 9
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "8787BD161B10241E0CE6758247A2DC52"
      index: 11
      valueUuid: "serializeEncryptableItem_generatedMessageLite.Builder1"
      methodExercised:
        target: "org.bitcoinj.protobuf.wallet.Protos$EncryptedData$Builder"
        name: "setEncryptedPrivateKey"
        parameters:
        - name: "value"
          valueUuid: "serializeEncryptableItem_byteString1"
        signature: "setEncryptedPrivateKey(ByteString): Protos$EncryptedData$Builder"
        returnValueUuid: "serializeEncryptableItem_protos.EncryptedData.Builder1"
        access: 1
    - type: "STATIC"
      name: "ByteString"
      modelFingerprint: "553D823E2290C11F95A5032292F4F40D"
      index: 12
      valueUuid: "uuid3"
      methodExercised:
        target: "com.google.protobuf.ByteString"
        name: "copyFrom"
        parameters:
        - name: "bytes"
          valueUuid: "serializeEncryptableItem_byte[]6"
        signature: "copyFrom(byte[]): ByteString"
        returnValueUuid: "serializeEncryptableItem_byteString2"
        access: 9
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "1EB79A2B811C7DA94180F196F9610CFB"
      index: 13
      valueUuid: "serializeEncryptableItem_protos.EncryptedData.Builder1"
      methodExercised:
        target: "org.bitcoinj.protobuf.wallet.Protos$EncryptedData$Builder"
        name: "setInitialisationVector"
        parameters:
        - name: "value"
          valueUuid: "serializeEncryptableItem_byteString2"
        signature: "setInitialisationVector(ByteString): Protos$EncryptedData$Builder"
        returnValueUuid: "serializeEncryptableItem_protos.EncryptedData.Builder2"
        access: 1
    - type: "LOCAL_VARIABLE"
      name: "proto"
      modelFingerprint: "6784B58828DCDA5F55ADF91A180249DA"
      index: 14
      valueUuid: "serializeEncryptableItem_protos.Key.Builder1"
      methodExercised:
        target: "proto"
        name: "setEncryptedData"
        parameters:
        - name: "builderForValue"
          valueUuid: "serializeEncryptableItem_protos.EncryptedData.Builder2"
        signature: "setEncryptedData(Protos$EncryptedData$Builder): Protos$Key$Builder"
        returnValueUuid: "serializeEncryptableItem_protos.Key.Builder2"
        access: 1
    - type: "LOCAL_VARIABLE"
      name: "item"
      modelFingerprint: "63FEC0780A8DDA5E2725D978C6D54694"
      index: 15
      valueUuid: "serializeEncryptableItem_encryptableItem1"
      methodExercised:
        target: "item"
        name: "getEncryptionType"
        parameters: []
        signature: "getEncryptionType(): Protos$Wallet$EncryptionType"
        returnValueUuid: "serializeEncryptableItem_protos.Wallet.EncryptionType1"
        access: 1025
    - type: "STATIC"
      name: "Preconditions"
      modelFingerprint: "ACF07FFCA3E2E1576E0B7D7733EEEFF8"
      index: 16
      valueUuid: "uuid5"
      methodExercised:
        target: "org.bitcoinj.base.internal.Preconditions"
        name: "checkState"
        parameters:
        - name: "expression"
          valueUuid: "uuid4"
        signature: "checkState(boolean): void"
        returnValueUuid: "serializeEncryptableItem_void2"
        access: 9
    - type: "LOCAL_VARIABLE"
      name: "proto"
      modelFingerprint: "CCCBB88C5370FDEC24DB3F7EAC4EF930"
      index: 17
      valueUuid: "serializeEncryptableItem_protos.Key.Builder1"
      methodExercised:
        target: "proto"
        name: "setType"
        parameters:
        - name: "value"
          valueUuid: "Enum-org.bitcoinj.protobuf.wallet.Protos$Key$Type-ENCRYPTED_SCRYPT_AES"
        signature: "setType(Protos$Key$Type): Protos$Key$Builder"
        returnValueUuid: "serializeEncryptableItem_protos.Key.Builder3"
        access: 1
    - type: "RESULT"
      name: "result"
      modelFingerprint: "8D05A119DDBC0A23CECC78A3291F4D5F"
      index: 18
      valueUuid: "serializeEncryptableItem_protos.Key.Builder1"
    uuid: "b5252992-9729-3995-9a93-ad56de200d2e"
    deleted: false
    disabled: true
    ignoredBySystem: false
    variablesCouldNotBeIsolated: "object of type Protos.EncryptedData.Builder"
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: ".setEncryptedPrivateKey(ByteString.copyFrom(data.encryptedBytes))"
      lineNumber: 360
      details: "A variable could not be isolated or mocked when calling a method -\
        \ Variable name: object of type Protos.EncryptedData.Builder - Method: setEncryptedPrivateKey"
    prover: "LLM"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: true
    allValues:
    - sapientType: "MOCK"
      valueType: "org.bitcoinj.crypto.EncryptableItem"
      uuid: "serializeEncryptableItem_encryptableItem1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.bitcoinj.protobuf.wallet.Protos$Key"
      uuid: "uuid1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.bitcoinj.protobuf.wallet.Protos$Key$Builder"
      uuid: "serializeEncryptableItem_protos.Key.Builder1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.bitcoinj.crypto.EncryptableItem"
      uuid: "serializeEncryptableItem_encryptableItem1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OPTIONAL"
      content: !<optional>
        value:
          sapientType: "OBJECT"
          content: !<static_method_return>
            target: "java.time.Instant"
            method: "now"
            methodParameters: []
          valueType: "java.time.Instant"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        target: "java.util.Optional"
      valueType: "java.util.Optional"
      genericValueType: "java.time.Instant"
      uuid: "serializeEncryptableItem_optional1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.bitcoinj.protobuf.wallet.Protos$Key$Builder"
      uuid: "serializeEncryptableItem_protos.Key.Builder1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "org.bitcoinj.protobuf.wallet.Protos$Key$Builder"
        localVariableValue:
          sapientType: "MOCK"
          valueType: "org.bitcoinj.protobuf.wallet.Protos$Key$Builder"
          uuid: "serializeEncryptableItem_protos.Key.Builder1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        methodParameters:
        - name: "value"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 1
            valueType: "long"
            uuid: "lambda$serializeEncryptableItem$4_long1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        methodName: "setCreationTimestamp"
      valueType: "org.bitcoinj.protobuf.wallet.Protos$Key$Builder"
      uuid: "lambda$serializeEncryptableItem$4_protos.Key.Builder1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: 1712214274925
      valueType: "long"
      uuid: "lambda$serializeEncryptableItem$4_long1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.bitcoinj.crypto.EncryptableItem"
      uuid: "serializeEncryptableItem_encryptableItem1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "serializeEncryptableItem_boolean1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.bitcoinj.crypto.EncryptableItem"
      uuid: "serializeEncryptableItem_encryptableItem1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.bitcoinj.crypto.EncryptedData"
      uuid: "serializeEncryptableItem_encryptedData1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.bitcoinj.crypto.EncryptableItem"
      uuid: "serializeEncryptableItem_encryptableItem1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.bitcoinj.crypto.EncryptedData"
        parameters:
        - name: "initialisationVector"
          value:
            sapientType: "ARRAY"
            content: !<array>
              values: {}
            valueType: "byte[]"
            uuid: "serializeEncryptableItem_byte[]6"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "encryptedBytes"
          value:
            sapientType: "ARRAY"
            content: !<array>
              values: {}
            valueType: "byte[]"
            uuid: "serializeEncryptableItem_byte[]3"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      valueType: "org.bitcoinj.crypto.EncryptedData"
      uuid: "serializeEncryptableItem_encryptedData2"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.bitcoinj.protobuf.wallet.Protos$Key$Builder"
      uuid: "serializeEncryptableItem_protos.Key.Builder1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "org.bitcoinj.protobuf.wallet.Protos$EncryptedData"
        localVariableValue:
          sapientType: "MOCK"
          valueType: "org.bitcoinj.protobuf.wallet.Protos$Key$Builder"
          uuid: "serializeEncryptableItem_protos.Key.Builder1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        methodParameters: []
        methodName: "getEncryptedData"
      valueType: "org.bitcoinj.protobuf.wallet.Protos$EncryptedData"
      uuid: "serializeEncryptableItem_protos.EncryptedData1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "org.bitcoinj.protobuf.wallet.Protos$EncryptedData"
        localVariableValue:
          sapientType: "MOCK"
          valueType: "org.bitcoinj.protobuf.wallet.Protos$Key$Builder"
          uuid: "serializeEncryptableItem_protos.Key.Builder1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        methodParameters: []
        methodName: "getEncryptedData"
      valueType: "org.bitcoinj.protobuf.wallet.Protos$EncryptedData"
      uuid: "serializeEncryptableItem_protos.EncryptedData1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "com.google.protobuf.GeneratedMessageLite$Builder"
        localVariableValue:
          sapientType: "OBJECT"
          content: !<method_return_from_value>
            target: "org.bitcoinj.protobuf.wallet.Protos$EncryptedData"
            localVariableValue:
              sapientType: "MOCK"
              valueType: "org.bitcoinj.protobuf.wallet.Protos$Key$Builder"
              uuid: "serializeEncryptableItem_protos.Key.Builder1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
            methodParameters: []
            methodName: "getEncryptedData"
          valueType: "org.bitcoinj.protobuf.wallet.Protos$EncryptedData"
          uuid: "serializeEncryptableItem_protos.EncryptedData1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        methodParameters: []
        methodName: "toBuilder"
      valueType: "org.bitcoinj.protobuf.wallet.Protos$EncryptedData$Builder"
      uuid: "serializeEncryptableItem_generatedMessageLite.Builder1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: true
    - sapientType: "MOCK"
      valueType: "com.google.protobuf.ByteString"
      uuid: "uuid2"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "com.google.protobuf.ByteString"
      uuid: "serializeEncryptableItem_byteString1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "byte[]"
      uuid: "serializeEncryptableItem_byte[]3"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "com.google.protobuf.GeneratedMessageLite$Builder"
        localVariableValue:
          sapientType: "OBJECT"
          content: !<method_return_from_value>
            target: "org.bitcoinj.protobuf.wallet.Protos$EncryptedData"
            localVariableValue:
              sapientType: "MOCK"
              valueType: "org.bitcoinj.protobuf.wallet.Protos$Key$Builder"
              uuid: "serializeEncryptableItem_protos.Key.Builder1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
            methodParameters: []
            methodName: "getEncryptedData"
          valueType: "org.bitcoinj.protobuf.wallet.Protos$EncryptedData"
          uuid: "serializeEncryptableItem_protos.EncryptedData1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        methodParameters: []
        methodName: "toBuilder"
      valueType: "org.bitcoinj.protobuf.wallet.Protos$EncryptedData$Builder"
      uuid: "serializeEncryptableItem_generatedMessageLite.Builder1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: true
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "org.bitcoinj.protobuf.wallet.Protos$EncryptedData$Builder"
        localVariableValue:
          sapientType: "OBJECT"
          content: !<method_return_from_value>
            target: "com.google.protobuf.GeneratedMessageLite$Builder"
            localVariableValue:
              sapientType: "OBJECT"
              content: !<method_return_from_value>
                target: "org.bitcoinj.protobuf.wallet.Protos$EncryptedData"
                localVariableValue:
                  sapientType: "MOCK"
                  valueType: "org.bitcoinj.protobuf.wallet.Protos$Key$Builder"
                  uuid: "serializeEncryptableItem_protos.Key.Builder1"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                methodParameters: []
                methodName: "getEncryptedData"
              valueType: "org.bitcoinj.protobuf.wallet.Protos$EncryptedData"
              uuid: "serializeEncryptableItem_protos.EncryptedData1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
            methodParameters: []
            methodName: "toBuilder"
          valueType: "org.bitcoinj.protobuf.wallet.Protos$EncryptedData$Builder"
          uuid: "serializeEncryptableItem_generatedMessageLite.Builder1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: true
        methodParameters:
        - name: "value"
          value:
            sapientType: "MOCK"
            valueType: "com.google.protobuf.ByteString"
            uuid: "serializeEncryptableItem_byteString1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        methodName: "setEncryptedPrivateKey"
      valueType: "org.bitcoinj.protobuf.wallet.Protos$EncryptedData$Builder"
      uuid: "serializeEncryptableItem_protos.EncryptedData.Builder1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "com.google.protobuf.ByteString"
      uuid: "serializeEncryptableItem_byteString1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "com.google.protobuf.ByteString"
      uuid: "uuid3"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "com.google.protobuf.ByteString"
      uuid: "serializeEncryptableItem_byteString2"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "byte[]"
      uuid: "serializeEncryptableItem_byte[]6"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "org.bitcoinj.protobuf.wallet.Protos$EncryptedData$Builder"
        localVariableValue:
          sapientType: "OBJECT"
          content: !<method_return_from_value>
            target: "com.google.protobuf.GeneratedMessageLite$Builder"
            localVariableValue:
              sapientType: "OBJECT"
              content: !<method_return_from_value>
                target: "org.bitcoinj.protobuf.wallet.Protos$EncryptedData"
                localVariableValue:
                  sapientType: "MOCK"
                  valueType: "org.bitcoinj.protobuf.wallet.Protos$Key$Builder"
                  uuid: "serializeEncryptableItem_protos.Key.Builder1"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                methodParameters: []
                methodName: "getEncryptedData"
              valueType: "org.bitcoinj.protobuf.wallet.Protos$EncryptedData"
              uuid: "serializeEncryptableItem_protos.EncryptedData1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
            methodParameters: []
            methodName: "toBuilder"
          valueType: "org.bitcoinj.protobuf.wallet.Protos$EncryptedData$Builder"
          uuid: "serializeEncryptableItem_generatedMessageLite.Builder1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: true
        methodParameters:
        - name: "value"
          value:
            sapientType: "MOCK"
            valueType: "com.google.protobuf.ByteString"
            uuid: "serializeEncryptableItem_byteString1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        methodName: "setEncryptedPrivateKey"
      valueType: "org.bitcoinj.protobuf.wallet.Protos$EncryptedData$Builder"
      uuid: "serializeEncryptableItem_protos.EncryptedData.Builder1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.bitcoinj.protobuf.wallet.Protos$EncryptedData$Builder"
      uuid: "serializeEncryptableItem_protos.EncryptedData.Builder2"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "com.google.protobuf.ByteString"
      uuid: "serializeEncryptableItem_byteString2"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.bitcoinj.protobuf.wallet.Protos$Key$Builder"
      uuid: "serializeEncryptableItem_protos.Key.Builder1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.bitcoinj.protobuf.wallet.Protos$Key$Builder"
      uuid: "serializeEncryptableItem_protos.Key.Builder2"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.bitcoinj.protobuf.wallet.Protos$EncryptedData$Builder"
      uuid: "serializeEncryptableItem_protos.EncryptedData.Builder2"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.bitcoinj.crypto.EncryptableItem"
      uuid: "serializeEncryptableItem_encryptableItem1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "ENUM"
      content: !<regular>
        value: "ENCRYPTED_SCRYPT_AES"
      valueType: "org.bitcoinj.protobuf.wallet.Protos$Wallet$EncryptionType"
      uuid: "serializeEncryptableItem_protos.Wallet.EncryptionType1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "REAL"
      valueType: "org.bitcoinj.base.internal.Preconditions"
      uuid: "uuid5"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      valueType: "void"
      uuid: "serializeEncryptableItem_void2"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "uuid4"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.bitcoinj.protobuf.wallet.Protos$Key$Builder"
      uuid: "serializeEncryptableItem_protos.Key.Builder1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.bitcoinj.protobuf.wallet.Protos$Key$Builder"
      uuid: "serializeEncryptableItem_protos.Key.Builder3"
      fixed: false
      nameForMock: "ENCRYPTED_SCRYPT_AES"
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "ENUM"
      content: !<regular>
        value: "ENCRYPTED_SCRYPT_AES"
      valueType: "org.bitcoinj.protobuf.wallet.Protos$Key$Type"
      uuid: "Enum-org.bitcoinj.protobuf.wallet.Protos$Key$Type-ENCRYPTED_SCRYPT_AES"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.bitcoinj.protobuf.wallet.Protos$Key$Builder"
      uuid: "serializeEncryptableItem_protos.Key.Builder1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
  - pathId: "path2"
    testPathName: "serializeEncryptableItemWhenItemGetEncryptionTypeNotEqualsProtosWalletEncryptionTypeENCRYPTEThrowsIllegalStateException"
    modelFingerprint: "5B8670242C124F3CDA9CBFCC53D2A8D9"
    problemWasSolvedByProver: false
    truncated: false
    inputParameters:
    - type: "INPUT"
      name: "item"
      modelFingerprint: "20E5B084B47385EB01C8824C98CE7286"
      index: 1
      valueUuid: "serializeEncryptableItem_encryptableItem1"
    - type: "STATIC"
      name: "Protos.Key"
      modelFingerprint: "9C475E01DA6111C45DEC0BE3E8CF99B9"
      index: 2
      valueUuid: "uuid177"
      methodExercised:
        target: "org.bitcoinj.protobuf.wallet.Protos$Key"
        name: "newBuilder"
        parameters: []
        signature: "newBuilder(): Protos$Key$Builder"
        returnValueUuid: "serializeEncryptableItem_protos.Key.Builder1"
        access: 9
    - type: "LOCAL_VARIABLE"
      name: "item"
      modelFingerprint: "F90FC66F0977ADF660AAFBFA9FC3C81F"
      index: 3
      valueUuid: "serializeEncryptableItem_encryptableItem1"
      methodExercised:
        target: "item"
        name: "creationTime"
        parameters: []
        signature: "creationTime(): Optional"
        returnValueUuid: "serializeEncryptableItem_optional1"
        access: 1025
    - type: "LOCAL_VARIABLE"
      name: "proto"
      modelFingerprint: "1FF6C957231698BBBA9DADCFC793101E"
      index: 4
      valueUuid: "serializeEncryptableItem_protos.Key.Builder1"
      methodExercised:
        target: "proto"
        name: "setCreationTimestamp"
        parameters:
        - name: "value"
          valueUuid: "lambda$serializeEncryptableItem$4_long1"
        signature: "setCreationTimestamp(long): Protos$Key$Builder"
        returnValueUuid: "lambda$serializeEncryptableItem$4_protos.Key.Builder1"
        access: 1
    - type: "LOCAL_VARIABLE"
      name: "item"
      modelFingerprint: "418EBBB113BAF5A1E5E4DBDA2EBFF303"
      index: 5
      valueUuid: "serializeEncryptableItem_encryptableItem1"
      methodExercised:
        target: "item"
        name: "isEncrypted"
        parameters: []
        signature: "isEncrypted(): boolean"
        returnValueUuid: "serializeEncryptableItem_boolean1"
        access: 1025
    - type: "LOCAL_VARIABLE"
      name: "item"
      modelFingerprint: "74B095349FCE09E30A420255003C1035"
      index: 6
      valueUuid: "serializeEncryptableItem_encryptableItem1"
      methodExercised:
        target: "item"
        name: "getEncryptedData"
        parameters: []
        signature: "getEncryptedData(): EncryptedData"
        returnValueUuid: "serializeEncryptableItem_encryptedData1"
        access: 1025
    - type: "LOCAL_VARIABLE"
      name: "item"
      modelFingerprint: "907DDA52E2725ED81BD580D68BD7525E"
      index: 7
      valueUuid: "serializeEncryptableItem_encryptableItem1"
      methodExercised:
        target: "item"
        name: "getEncryptedData"
        parameters: []
        signature: "getEncryptedData(): EncryptedData"
        returnValueUuid: "serializeEncryptableItem_encryptedData2"
        access: 1025
    - type: "LOCAL_VARIABLE"
      name: "proto"
      modelFingerprint: "4910655E472093FA4A4BE2413EC96655"
      index: 8
      valueUuid: "serializeEncryptableItem_protos.Key.Builder1"
      methodExercised:
        target: "proto"
        name: "getEncryptedData"
        parameters: []
        signature: "getEncryptedData(): Protos$EncryptedData"
        returnValueUuid: "serializeEncryptableItem_protos.EncryptedData1"
        access: 1
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "034DEBEC7612FF4F304ED7A77AAFB298"
      index: 9
      valueUuid: "serializeEncryptableItem_protos.EncryptedData1"
      methodExercised:
        target: "org.bitcoinj.protobuf.wallet.Protos$EncryptedData"
        name: "toBuilder"
        parameters: []
        signature: "toBuilder(): GeneratedMessageLite$Builder"
        returnValueUuid: "serializeEncryptableItem_generatedMessageLite.Builder1"
        access: 17
    - type: "STATIC"
      name: "ByteString"
      modelFingerprint: "2684DE1377B0A6D3657E2DDFE316973F"
      index: 10
      valueUuid: "uuid178"
      methodExercised:
        target: "com.google.protobuf.ByteString"
        name: "copyFrom"
        parameters:
        - name: "bytes"
          valueUuid: "serializeEncryptableItem_byte[]3"
        signature: "copyFrom(byte[]): ByteString"
        returnValueUuid: "serializeEncryptableItem_byteString1"
        access: 9
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "52816BCEE69BCD9B21AB0652AD53E740"
      index: 11
      valueUuid: "serializeEncryptableItem_generatedMessageLite.Builder1"
      methodExercised:
        target: "org.bitcoinj.protobuf.wallet.Protos$EncryptedData$Builder"
        name: "setEncryptedPrivateKey"
        parameters:
        - name: "value"
          valueUuid: "serializeEncryptableItem_byteString1"
        signature: "setEncryptedPrivateKey(ByteString): Protos$EncryptedData$Builder"
        returnValueUuid: "serializeEncryptableItem_protos.EncryptedData.Builder1"
        access: 1
    - type: "STATIC"
      name: "ByteString"
      modelFingerprint: "2684DE1377B0A6D3657E2DDFE316973F"
      index: 12
      valueUuid: "uuid179"
      methodExercised:
        target: "com.google.protobuf.ByteString"
        name: "copyFrom"
        parameters:
        - name: "bytes"
          valueUuid: "serializeEncryptableItem_byte[]6"
        signature: "copyFrom(byte[]): ByteString"
        returnValueUuid: "serializeEncryptableItem_byteString2"
        access: 9
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "A64BC13EEE9680F500C791FC809E0FF4"
      index: 13
      valueUuid: "serializeEncryptableItem_protos.EncryptedData.Builder1"
      methodExercised:
        target: "org.bitcoinj.protobuf.wallet.Protos$EncryptedData$Builder"
        name: "setInitialisationVector"
        parameters:
        - name: "value"
          valueUuid: "serializeEncryptableItem_byteString2"
        signature: "setInitialisationVector(ByteString): Protos$EncryptedData$Builder"
        returnValueUuid: "serializeEncryptableItem_protos.EncryptedData.Builder2"
        access: 1
    - type: "LOCAL_VARIABLE"
      name: "proto"
      modelFingerprint: "7C2D35982FF15B19F06C3175F6BF43A9"
      index: 14
      valueUuid: "serializeEncryptableItem_protos.Key.Builder1"
      methodExercised:
        target: "proto"
        name: "setEncryptedData"
        parameters:
        - name: "builderForValue"
          valueUuid: "serializeEncryptableItem_protos.EncryptedData.Builder2"
        signature: "setEncryptedData(Protos$EncryptedData$Builder): Protos$Key$Builder"
        returnValueUuid: "serializeEncryptableItem_protos.Key.Builder2"
        access: 1
    - type: "LOCAL_VARIABLE"
      name: "item"
      modelFingerprint: "EAC4B1C6FC4A95D86A5D0DBD95FEECA0"
      index: 15
      valueUuid: "serializeEncryptableItem_encryptableItem1"
      methodExercised:
        target: "item"
        name: "getEncryptionType"
        parameters: []
        signature: "getEncryptionType(): Protos$Wallet$EncryptionType"
        returnValueUuid: "serializeEncryptableItem_protos.Wallet.EncryptionType1"
        access: 1025
    - type: "STATIC"
      name: "Preconditions"
      modelFingerprint: "5D1C76B3909AD28BDDC21FFF70362CB1"
      index: 16
      valueUuid: "uuid182"
      methodExercised:
        target: "org.bitcoinj.base.internal.Preconditions"
        name: "checkState"
        parameters:
        - name: "expression"
          valueUuid: "uuid180"
        signature: "checkState(boolean): void"
        returnValueUuid: "uuid181"
        access: 9
    - type: "RESULT"
      name: "result"
      modelFingerprint: "C9C68C9339F812BC8DEC7C1D6145A135"
      index: 17
      valueUuid: "uuid183"
    uuid: "5d7f5fe0-fed9-38a5-8021-edd5adc6a17e"
    deleted: false
    disabled: true
    ignoredBySystem: false
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: java.time.Instant.toEpochMilli() : long"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: true
    allValues:
    - sapientType: "MOCK"
      valueType: "org.bitcoinj.crypto.EncryptableItem"
      uuid: "serializeEncryptableItem_encryptableItem1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.bitcoinj.protobuf.wallet.Protos$Key"
      uuid: "uuid177"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.bitcoinj.protobuf.wallet.Protos$Key$Builder"
      uuid: "serializeEncryptableItem_protos.Key.Builder1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.bitcoinj.crypto.EncryptableItem"
      uuid: "serializeEncryptableItem_encryptableItem1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OPTIONAL"
      content: !<optional>
        value:
          sapientType: "OBJECT"
          content: !<static_method_return>
            target: "java.time.Instant"
            method: "ofEpochSecond"
            methodParameters:
            - name: "epochSecond"
              value:
                sapientType: "BASIC"
                content: !<regular>
                  value: 1700000000
                valueType: "int"
                fixed: true
                equalsMethodPresent: false
                explicitCastNeeded: false
          valueType: "java.time.Instant"
          uuid: "serializeEncryptableItem_instant1"
          fixed: false
          collectionUuid: "serializeEncryptableItem_optional1"
          equalsMethodPresent: false
          explicitCastNeeded: false
        target: "java.util.Optional"
      valueType: "java.util.Optional"
      genericValueType: "java.time.Instant"
      uuid: "serializeEncryptableItem_optional1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.bitcoinj.protobuf.wallet.Protos$Key$Builder"
      uuid: "serializeEncryptableItem_protos.Key.Builder1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "org.bitcoinj.protobuf.wallet.Protos$Key$Builder"
        localVariableValue:
          sapientType: "MOCK"
          valueType: "org.bitcoinj.protobuf.wallet.Protos$Key$Builder"
          uuid: "serializeEncryptableItem_protos.Key.Builder1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        methodParameters:
        - name: "value"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 1
            valueType: "long"
            uuid: "lambda$serializeEncryptableItem$4_long1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        methodName: "setCreationTimestamp"
      valueType: "org.bitcoinj.protobuf.wallet.Protos$Key$Builder"
      uuid: "lambda$serializeEncryptableItem$4_protos.Key.Builder1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: 1
      valueType: "long"
      uuid: "lambda$serializeEncryptableItem$4_long1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.bitcoinj.crypto.EncryptableItem"
      uuid: "serializeEncryptableItem_encryptableItem1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "serializeEncryptableItem_boolean1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.bitcoinj.crypto.EncryptableItem"
      uuid: "serializeEncryptableItem_encryptableItem1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.bitcoinj.crypto.EncryptedData"
      uuid: "serializeEncryptableItem_encryptedData1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.bitcoinj.crypto.EncryptableItem"
      uuid: "serializeEncryptableItem_encryptableItem1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.bitcoinj.crypto.EncryptedData"
        parameters:
        - name: "initialisationVector"
          value:
            sapientType: "ARRAY"
            content: !<array>
              values: {}
            valueType: "byte[]"
            uuid: "serializeEncryptableItem_byte[]6"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "encryptedBytes"
          value:
            sapientType: "ARRAY"
            content: !<array>
              values: {}
            valueType: "byte[]"
            uuid: "serializeEncryptableItem_byte[]3"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      valueType: "org.bitcoinj.crypto.EncryptedData"
      uuid: "serializeEncryptableItem_encryptedData2"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.bitcoinj.protobuf.wallet.Protos$Key$Builder"
      uuid: "serializeEncryptableItem_protos.Key.Builder1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "org.bitcoinj.protobuf.wallet.Protos$EncryptedData"
        localVariableValue:
          sapientType: "MOCK"
          valueType: "org.bitcoinj.protobuf.wallet.Protos$Key$Builder"
          uuid: "serializeEncryptableItem_protos.Key.Builder1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        methodParameters: []
        methodName: "getEncryptedData"
      valueType: "org.bitcoinj.protobuf.wallet.Protos$EncryptedData"
      uuid: "serializeEncryptableItem_protos.EncryptedData1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "org.bitcoinj.protobuf.wallet.Protos$EncryptedData"
        localVariableValue:
          sapientType: "MOCK"
          valueType: "org.bitcoinj.protobuf.wallet.Protos$Key$Builder"
          uuid: "serializeEncryptableItem_protos.Key.Builder1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        methodParameters: []
        methodName: "getEncryptedData"
      valueType: "org.bitcoinj.protobuf.wallet.Protos$EncryptedData"
      uuid: "serializeEncryptableItem_protos.EncryptedData1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "org.bitcoinj.protobuf.wallet.Protos$EncryptedData$Builder"
        localVariableValue:
          sapientType: "OBJECT"
          content: !<method_return_from_value>
            target: "org.bitcoinj.protobuf.wallet.Protos$EncryptedData"
            localVariableValue:
              sapientType: "MOCK"
              valueType: "org.bitcoinj.protobuf.wallet.Protos$Key$Builder"
              uuid: "serializeEncryptableItem_protos.Key.Builder1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
            methodParameters: []
            methodName: "getEncryptedData"
          valueType: "org.bitcoinj.protobuf.wallet.Protos$EncryptedData"
          uuid: "serializeEncryptableItem_protos.EncryptedData1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        methodParameters: []
        methodName: "toBuilder"
      valueType: "org.bitcoinj.protobuf.wallet.Protos$EncryptedData$Builder"
      uuid: "serializeEncryptableItem_generatedMessageLite.Builder1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: true
    - sapientType: "MOCK"
      valueType: "com.google.protobuf.ByteString"
      uuid: "uuid178"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "com.google.protobuf.ByteString"
      uuid: "serializeEncryptableItem_byteString1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "byte[]"
      uuid: "serializeEncryptableItem_byte[]3"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "org.bitcoinj.protobuf.wallet.Protos$EncryptedData$Builder"
        localVariableValue:
          sapientType: "OBJECT"
          content: !<method_return_from_value>
            target: "org.bitcoinj.protobuf.wallet.Protos$EncryptedData"
            localVariableValue:
              sapientType: "MOCK"
              valueType: "org.bitcoinj.protobuf.wallet.Protos$Key$Builder"
              uuid: "serializeEncryptableItem_protos.Key.Builder1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
            methodParameters: []
            methodName: "getEncryptedData"
          valueType: "org.bitcoinj.protobuf.wallet.Protos$EncryptedData"
          uuid: "serializeEncryptableItem_protos.EncryptedData1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        methodParameters: []
        methodName: "toBuilder"
      valueType: "org.bitcoinj.protobuf.wallet.Protos$EncryptedData$Builder"
      uuid: "serializeEncryptableItem_generatedMessageLite.Builder1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: true
    - sapientType: "MOCK"
      valueType: "org.bitcoinj.protobuf.wallet.Protos$EncryptedData$Builder"
      uuid: "serializeEncryptableItem_protos.EncryptedData.Builder1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "com.google.protobuf.ByteString"
      uuid: "serializeEncryptableItem_byteString1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "com.google.protobuf.ByteString"
      uuid: "uuid179"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "com.google.protobuf.ByteString"
      uuid: "serializeEncryptableItem_byteString2"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "byte[]"
      uuid: "serializeEncryptableItem_byte[]6"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.bitcoinj.protobuf.wallet.Protos$EncryptedData$Builder"
      uuid: "serializeEncryptableItem_protos.EncryptedData.Builder1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.bitcoinj.protobuf.wallet.Protos$EncryptedData$Builder"
      uuid: "serializeEncryptableItem_protos.EncryptedData.Builder2"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "com.google.protobuf.ByteString"
      uuid: "serializeEncryptableItem_byteString2"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.bitcoinj.protobuf.wallet.Protos$Key$Builder"
      uuid: "serializeEncryptableItem_protos.Key.Builder1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.bitcoinj.protobuf.wallet.Protos$Key$Builder"
      uuid: "serializeEncryptableItem_protos.Key.Builder2"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.bitcoinj.protobuf.wallet.Protos$EncryptedData$Builder"
      uuid: "serializeEncryptableItem_protos.EncryptedData.Builder2"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.bitcoinj.crypto.EncryptableItem"
      uuid: "serializeEncryptableItem_encryptableItem1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "ENUM"
      content: !<regular>
        value: "UNENCRYPTED"
      valueType: "org.bitcoinj.protobuf.wallet.Protos$Wallet$EncryptionType"
      uuid: "serializeEncryptableItem_protos.Wallet.EncryptionType1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "REAL"
      valueType: "org.bitcoinj.base.internal.Preconditions"
      uuid: "uuid182"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "EXCEPTION"
      content: !<new>
        target: "java.lang.IllegalStateException"
        parameters: []
        privateConstructor: false
        createdByTargetCode: false
      valueType: "java.lang.IllegalStateException"
      uuid: "uuid181"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "uuid180"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "EXCEPTION"
      content: !<new>
        target: "java.lang.IllegalStateException"
        parameters: []
        privateConstructor: false
        createdByTargetCode: false
      valueType: "java.lang.IllegalStateException"
      uuid: "uuid183"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
  - pathId: "path3"
    testPathName: "serializeEncryptableItemWhenItemGetEncryptedDataIsNullAndSecretIsNotNull"
    modelFingerprint: "AEAC9EEB57AB0C81222B7F180603F520"
    problemWasSolvedByProver: false
    truncated: false
    inputParameters:
    - type: "INPUT"
      name: "item"
      modelFingerprint: "20E5B084B47385EB01C8824C98CE7286"
      index: 1
      valueUuid: "serializeEncryptableItem_encryptableItem1"
    - type: "STATIC"
      name: "Protos.Key"
      modelFingerprint: "9C475E01DA6111C45DEC0BE3E8CF99B9"
      index: 2
      valueUuid: "uuid184"
      methodExercised:
        target: "org.bitcoinj.protobuf.wallet.Protos$Key"
        name: "newBuilder"
        parameters: []
        signature: "newBuilder(): Protos$Key$Builder"
        returnValueUuid: "serializeEncryptableItem_protos.Key.Builder1"
        access: 9
    - type: "LOCAL_VARIABLE"
      name: "item"
      modelFingerprint: "F90FC66F0977ADF660AAFBFA9FC3C81F"
      index: 3
      valueUuid: "serializeEncryptableItem_encryptableItem1"
      methodExercised:
        target: "item"
        name: "creationTime"
        parameters: []
        signature: "creationTime(): Optional"
        returnValueUuid: "serializeEncryptableItem_optional1"
        access: 1025
    - type: "LOCAL_VARIABLE"
      name: "proto"
      modelFingerprint: "1FF6C957231698BBBA9DADCFC793101E"
      index: 4
      valueUuid: "serializeEncryptableItem_protos.Key.Builder1"
      methodExercised:
        target: "proto"
        name: "setCreationTimestamp"
        parameters:
        - name: "value"
          valueUuid: "lambda$serializeEncryptableItem$4_long1"
        signature: "setCreationTimestamp(long): Protos$Key$Builder"
        returnValueUuid: "lambda$serializeEncryptableItem$4_protos.Key.Builder1"
        access: 1
    - type: "LOCAL_VARIABLE"
      name: "item"
      modelFingerprint: "418EBBB113BAF5A1E5E4DBDA2EBFF303"
      index: 5
      valueUuid: "serializeEncryptableItem_encryptableItem1"
      methodExercised:
        target: "item"
        name: "isEncrypted"
        parameters: []
        signature: "isEncrypted(): boolean"
        returnValueUuid: "serializeEncryptableItem_boolean1"
        access: 1025
    - type: "LOCAL_VARIABLE"
      name: "item"
      modelFingerprint: "3C6098B0AB90A0C8DD7ECC0E3E82FD28"
      index: 6
      valueUuid: "serializeEncryptableItem_encryptableItem1"
      methodExercised:
        target: "item"
        name: "getEncryptedData"
        parameters: []
        signature: "getEncryptedData(): EncryptedData"
        returnValueUuid: "serializeEncryptableItem_encryptedData1"
        access: 1025
    - type: "LOCAL_VARIABLE"
      name: "item"
      modelFingerprint: "4CD41B08E53F198D4439DA1FE0C68E74"
      index: 7
      valueUuid: "serializeEncryptableItem_encryptableItem1"
      methodExercised:
        target: "item"
        name: "getSecretBytes"
        parameters: []
        signature: "getSecretBytes(): byte[]"
        returnValueUuid: "serializeEncryptableItem_byte[]1"
        access: 1025
    - type: "STATIC"
      name: "ByteString"
      modelFingerprint: "2684DE1377B0A6D3657E2DDFE316973F"
      index: 8
      valueUuid: "uuid185"
      methodExercised:
        target: "com.google.protobuf.ByteString"
        name: "copyFrom"
        parameters:
        - name: "bytes"
          valueUuid: "serializeEncryptableItem_byte[]1"
        signature: "copyFrom(byte[]): ByteString"
        returnValueUuid: "serializeEncryptableItem_byteString1"
        access: 9
    - type: "LOCAL_VARIABLE"
      name: "proto"
      modelFingerprint: "2F67BD63D07E29BA60BF8DADAF4279B8"
      index: 9
      valueUuid: "serializeEncryptableItem_protos.Key.Builder1"
      methodExercised:
        target: "proto"
        name: "setSecretBytes"
        parameters:
        - name: "value"
          valueUuid: "serializeEncryptableItem_byteString1"
        signature: "setSecretBytes(ByteString): Protos$Key$Builder"
        returnValueUuid: "serializeEncryptableItem_protos.Key.Builder2"
        access: 1
    - type: "LOCAL_VARIABLE"
      name: "proto"
      modelFingerprint: "C7E4E3188AB898650235B14F372AE783"
      index: 10
      valueUuid: "serializeEncryptableItem_protos.Key.Builder1"
      methodExercised:
        target: "proto"
        name: "setType"
        parameters:
        - name: "value"
          valueUuid: "Enum-org.bitcoinj.protobuf.wallet.Protos$Key$Type-ORIGINAL"
        signature: "setType(Protos$Key$Type): Protos$Key$Builder"
        returnValueUuid: "serializeEncryptableItem_protos.Key.Builder3"
        access: 1
    - type: "RESULT"
      name: "result"
      modelFingerprint: "89F7D50976F3E77FE8F29DB1382A9379"
      index: 11
      valueUuid: "serializeEncryptableItem_protos.Key.Builder1"
    uuid: "c57e4a51-6b5c-38f6-af65-31609a3c64a3"
    deleted: false
    disabled: false
    ignoredBySystem: false
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: java.time.Instant.toEpochMilli() : long"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues:
    - sapientType: "MOCK"
      valueType: "org.bitcoinj.crypto.EncryptableItem"
      uuid: "serializeEncryptableItem_encryptableItem1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.bitcoinj.protobuf.wallet.Protos$Key"
      uuid: "uuid184"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.bitcoinj.protobuf.wallet.Protos$Key$Builder"
      uuid: "serializeEncryptableItem_protos.Key.Builder1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.bitcoinj.crypto.EncryptableItem"
      uuid: "serializeEncryptableItem_encryptableItem1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OPTIONAL"
      content: !<optional>
        value:
          sapientType: "OBJECT"
          content: !<static_method_return>
            target: "java.time.Instant"
            method: "ofEpochSecond"
            methodParameters:
            - name: "epochSecond"
              value:
                sapientType: "BASIC"
                content: !<regular>
                  value: 1700000000
                valueType: "int"
                fixed: true
                equalsMethodPresent: false
                explicitCastNeeded: false
          valueType: "java.time.Instant"
          uuid: "serializeEncryptableItem_instant1"
          fixed: false
          collectionUuid: "serializeEncryptableItem_optional1"
          equalsMethodPresent: false
          explicitCastNeeded: false
        target: "java.util.Optional"
      valueType: "java.util.Optional"
      genericValueType: "java.time.Instant"
      uuid: "serializeEncryptableItem_optional1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.bitcoinj.protobuf.wallet.Protos$Key$Builder"
      uuid: "serializeEncryptableItem_protos.Key.Builder1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "org.bitcoinj.protobuf.wallet.Protos$Key$Builder"
        localVariableValue:
          sapientType: "MOCK"
          valueType: "org.bitcoinj.protobuf.wallet.Protos$Key$Builder"
          uuid: "serializeEncryptableItem_protos.Key.Builder1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        methodParameters:
        - name: "value"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 1
            valueType: "long"
            uuid: "lambda$serializeEncryptableItem$4_long1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        methodName: "setCreationTimestamp"
      valueType: "org.bitcoinj.protobuf.wallet.Protos$Key$Builder"
      uuid: "lambda$serializeEncryptableItem$4_protos.Key.Builder1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: 1
      valueType: "long"
      uuid: "lambda$serializeEncryptableItem$4_long1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.bitcoinj.crypto.EncryptableItem"
      uuid: "serializeEncryptableItem_encryptableItem1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "serializeEncryptableItem_boolean1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.bitcoinj.crypto.EncryptableItem"
      uuid: "serializeEncryptableItem_encryptableItem1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "NULL"
      valueType: "org.bitcoinj.crypto.EncryptedData"
      uuid: "serializeEncryptableItem_encryptedData1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.bitcoinj.crypto.EncryptableItem"
      uuid: "serializeEncryptableItem_encryptableItem1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "byte[]"
      uuid: "serializeEncryptableItem_byte[]1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "com.google.protobuf.ByteString"
      uuid: "uuid185"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "com.google.protobuf.ByteString"
      uuid: "serializeEncryptableItem_byteString1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "byte[]"
      uuid: "serializeEncryptableItem_byte[]1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.bitcoinj.protobuf.wallet.Protos$Key$Builder"
      uuid: "serializeEncryptableItem_protos.Key.Builder1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.bitcoinj.protobuf.wallet.Protos$Key$Builder"
      uuid: "serializeEncryptableItem_protos.Key.Builder2"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "com.google.protobuf.ByteString"
      uuid: "serializeEncryptableItem_byteString1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.bitcoinj.protobuf.wallet.Protos$Key$Builder"
      uuid: "serializeEncryptableItem_protos.Key.Builder1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.bitcoinj.protobuf.wallet.Protos$Key$Builder"
      uuid: "serializeEncryptableItem_protos.Key.Builder3"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "ENUM"
      content: !<regular>
        value: "ORIGINAL"
      valueType: "org.bitcoinj.protobuf.wallet.Protos$Key$Type"
      uuid: "Enum-org.bitcoinj.protobuf.wallet.Protos$Key$Type-ORIGINAL"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.bitcoinj.protobuf.wallet.Protos$Key$Builder"
      uuid: "serializeEncryptableItem_protos.Key.Builder1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
  - pathId: "path4"
    testPathName: "serializeEncryptableItemWhenItemGetEncryptedDataIsNullAndSecretIsNull"
    modelFingerprint: "9EF71C136907301BAB3C63A64D217FB3"
    problemWasSolvedByProver: false
    truncated: true
    inputParameters: []
    uuid: "7767b577-1ca4-349a-b642-e5b234c8582b"
    deleted: true
    disabled: false
    ignoredBySystem: true
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: java.time.Instant.toEpochMilli() : long"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues: []
- method:
    name: "fromProtobufUnencrypted"
    signature: "fromProtobufUnencrypted(java.util.List<org.bitcoinj.protobuf.wallet.Protos$Key>)\
      \ : org.bitcoinj.wallet.BasicKeyChain"
    sourceCodeSignature: "BasicKeyChain fromProtobufUnencrypted(List<Protos.Key> keys)"
    instructionFingerprint: "0CCEFF979A219D6959E5469FE82C9394"
  paths:
  - pathId: "path1"
    testPathName: "fromProtobufUnencryptedTest"
    modelFingerprint: "353A62FB4A8FD017A2A08E4A6C76FFA9"
    problemWasSolvedByProver: false
    truncated: false
    inputParameters:
    - type: "INPUT"
      name: "keys"
      modelFingerprint: "963D9B22448852F8CE0C740DAC02FEC2"
      index: 1
      valueUuid: "fromProtobufUnencrypted_list1"
    - type: "STATIC"
      name: "Threading"
      modelFingerprint: "F7EA5C46482BE836BD810E3E7E297587"
      index: 2
      valueUuid: "uuid188"
      methodExercised:
        target: "org.bitcoinj.utils.Threading"
        name: "lock"
        parameters:
        - name: "clazz"
          valueUuid: "uuid187"
        signature: "lock(Class): ReentrantLock"
        returnValueUuid: "<init>_reentrantLock1"
        access: 9
    - type: "LOCAL_VARIABLE"
      name: "chain"
      modelFingerprint: "B4E7D0DFFBEE68E64C45DE1B0E688708"
      index: 3
      valueUuid: "fromProtobufUnencrypted_basicKeyChain1"
      methodExercised:
        target: "chain"
        name: "deserializeFromProtobuf"
        parameters:
        - name: "proto"
          valueUuid: "fromProtobufUnencrypted_list1"
        throwsExceptions:
        - "org.bitcoinj.wallet.UnreadableWalletException"
        signature: "deserializeFromProtobuf(List): void throws org.bitcoinj.wallet.UnreadableWalletException"
        returnValueUuid: "fromProtobufUnencrypted_void1"
        access: 2
    - type: "RESULT"
      name: "result"
      modelFingerprint: "88D58C66A1884AF62C8AB2C09B073734"
      index: 4
      valueUuid: "fromProtobufUnencrypted_basicKeyChain1"
    uuid: "eabd3d02-7d16-38fc-868d-6e8863269a78"
    deleted: false
    disabled: false
    ignoredBySystem: false
    variablesCouldNotBeIsolated: "chain"
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: "chain.deserializeFromProtobuf(keys);"
      lineNumber: 382
      details: "A variable could not be isolated or mocked when calling a method -\
        \ Variable name: chain - Method: deserializeFromProtobuf"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues:
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.List"
      genericValueType: "org.bitcoinj.protobuf.wallet.Protos$Key"
      uuid: "fromProtobufUnencrypted_list1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "REAL"
      valueType: "org.bitcoinj.utils.Threading"
      uuid: "uuid188"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.bitcoinj.utils.Threading"
        method: "lock"
        methodParameters:
        - value:
            sapientType: "CLASS"
            content: !<regular>
              value: "org.bitcoinj.wallet.BasicKeyChain"
            valueType: "java.lang.Class"
            genericValueType: "org.bitcoinj.wallet.BasicKeyChain"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
      valueType: "java.util.concurrent.locks.ReentrantLock"
      uuid: "<init>_reentrantLock1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.bitcoinj.wallet.BasicKeyChain"
      valueType: "java.lang.Class"
      genericValueType: "org.bitcoinj.wallet.BasicKeyChain"
      uuid: "uuid187"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.bitcoinj.wallet.BasicKeyChain"
        parameters: []
        privateConstructor: false
        createdByTargetCode: true
      valueType: "org.bitcoinj.wallet.BasicKeyChain"
      uuid: "fromProtobufUnencrypted_basicKeyChain1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      valueType: "void"
      uuid: "fromProtobufUnencrypted_void1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.List"
      genericValueType: "org.bitcoinj.protobuf.wallet.Protos$Key"
      uuid: "fromProtobufUnencrypted_list1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.bitcoinj.wallet.BasicKeyChain"
        parameters: []
        privateConstructor: false
        createdByTargetCode: true
      valueType: "org.bitcoinj.wallet.BasicKeyChain"
      uuid: "fromProtobufUnencrypted_basicKeyChain1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
- method:
    name: "fromProtobufEncrypted"
    signature: "fromProtobufEncrypted(java.util.List<org.bitcoinj.protobuf.wallet.Protos$Key>,org.bitcoinj.crypto.KeyCrypter)\
      \ : org.bitcoinj.wallet.BasicKeyChain"
    sourceCodeSignature: "BasicKeyChain fromProtobufEncrypted(List<Protos.Key> keys,\
      \ KeyCrypter crypter)"
    instructionFingerprint: "45904EF2FAC26E085F026F1651880731"
  paths:
  - pathId: "path1"
    testPathName: "fromProtobufEncryptedTest"
    modelFingerprint: "77F61009244B0A31F7A5D4B2F48F8357"
    problemWasSolvedByProver: false
    truncated: false
    inputParameters:
    - type: "INPUT"
      name: "keys"
      modelFingerprint: "963D9B22448852F8CE0C740DAC02FEC2"
      index: 1
      valueUuid: "fromProtobufEncrypted_list1"
    - type: "INPUT"
      name: "crypter"
      modelFingerprint: "54D82D350B26481CFBCE9AF2863B26DE"
      index: 2
      valueUuid: "fromProtobufEncrypted_keyCrypter1"
    - type: "STATIC"
      name: "Threading"
      modelFingerprint: "F7EA5C46482BE836BD810E3E7E297587"
      index: 3
      valueUuid: "uuid190"
      methodExercised:
        target: "org.bitcoinj.utils.Threading"
        name: "lock"
        parameters:
        - name: "clazz"
          valueUuid: "uuid189"
        signature: "lock(Class): ReentrantLock"
        returnValueUuid: "<init>_reentrantLock1"
        access: 9
    - type: "LOCAL_VARIABLE"
      name: "chain"
      modelFingerprint: "2E86DF8950938BAAF8DF7A6755AD6AEF"
      index: 4
      valueUuid: "fromProtobufEncrypted_basicKeyChain1"
      methodExercised:
        target: "chain"
        name: "deserializeFromProtobuf"
        parameters:
        - name: "proto"
          valueUuid: "fromProtobufEncrypted_list1"
        throwsExceptions:
        - "org.bitcoinj.wallet.UnreadableWalletException"
        signature: "deserializeFromProtobuf(List): void throws org.bitcoinj.wallet.UnreadableWalletException"
        returnValueUuid: "fromProtobufEncrypted_void1"
        access: 2
    - type: "RESULT"
      name: "result"
      modelFingerprint: "6B79D8F7F381D5437CA7E1E9BE2E745F"
      index: 5
      valueUuid: "fromProtobufEncrypted_basicKeyChain1"
    uuid: "fdf441cb-65fe-3b5c-b115-cf990a61aa5e"
    deleted: false
    disabled: false
    ignoredBySystem: false
    variablesCouldNotBeIsolated: "chain"
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: "chain.deserializeFromProtobuf(keys);"
      lineNumber: 394
      details: "A variable could not be isolated or mocked when calling a method -\
        \ Variable name: chain - Method: deserializeFromProtobuf"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues:
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.List"
      genericValueType: "org.bitcoinj.protobuf.wallet.Protos$Key"
      uuid: "fromProtobufEncrypted_list1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.bitcoinj.crypto.KeyCrypter"
      uuid: "fromProtobufEncrypted_keyCrypter1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "REAL"
      valueType: "org.bitcoinj.utils.Threading"
      uuid: "uuid190"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.bitcoinj.utils.Threading"
        method: "lock"
        methodParameters:
        - value:
            sapientType: "CLASS"
            content: !<regular>
              value: "org.bitcoinj.wallet.BasicKeyChain"
            valueType: "java.lang.Class"
            genericValueType: "org.bitcoinj.wallet.BasicKeyChain"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
      valueType: "java.util.concurrent.locks.ReentrantLock"
      uuid: "<init>_reentrantLock1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.bitcoinj.wallet.BasicKeyChain"
      valueType: "java.lang.Class"
      genericValueType: "org.bitcoinj.wallet.BasicKeyChain"
      uuid: "uuid189"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.bitcoinj.wallet.BasicKeyChain"
        parameters:
        - name: "crypter"
          value:
            sapientType: "MOCK"
            valueType: "org.bitcoinj.crypto.KeyCrypter"
            uuid: "fromProtobufEncrypted_keyCrypter1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: true
      valueType: "org.bitcoinj.wallet.BasicKeyChain"
      uuid: "fromProtobufEncrypted_basicKeyChain1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      valueType: "void"
      uuid: "fromProtobufEncrypted_void1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.List"
      genericValueType: "org.bitcoinj.protobuf.wallet.Protos$Key"
      uuid: "fromProtobufEncrypted_list1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.bitcoinj.wallet.BasicKeyChain"
        parameters:
        - name: "crypter"
          value:
            sapientType: "MOCK"
            valueType: "org.bitcoinj.crypto.KeyCrypter"
            uuid: "fromProtobufEncrypted_keyCrypter1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: true
      valueType: "org.bitcoinj.wallet.BasicKeyChain"
      uuid: "fromProtobufEncrypted_basicKeyChain1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
- method:
    name: "addEventListener"
    signature: "addEventListener(org.bitcoinj.wallet.listeners.KeyChainEventListener)\
      \ : void"
    sourceCodeSignature: "void addEventListener(KeyChainEventListener listener)"
    instructionFingerprint: "3109EF994CC57651D6354429F17001FA"
  paths:
  - pathId: "path1"
    testPathName: "addEventListenerTest"
    constructorSignature: "<init>(org.bitcoinj.crypto.KeyCrypter) : void"
    modelFingerprint: "666E68CD801EFCBB31968A408F579A74"
    problemWasSolvedByProver: false
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "35099553EB48D2AEC42E2A9279A21C51"
      index: 1
      valueUuid: "target"
    - type: "INPUT"
      name: "listener"
      modelFingerprint: "471320B8B0C8D874D42F1BA714E65624"
      index: 2
      valueUuid: "addEventListener_keyChainEventListener1"
    - type: "STATIC"
      name: "Threading"
      modelFingerprint: "F7EA5C46482BE836BD810E3E7E297587"
      index: 3
      valueUuid: "uuid192"
      methodExercised:
        target: "org.bitcoinj.utils.Threading"
        name: "lock"
        parameters:
        - name: "clazz"
          valueUuid: "uuid191"
        signature: "lock(Class): ReentrantLock"
        returnValueUuid: "<init>_reentrantLock1"
        access: 9
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "9D406344E910A5F2B8639294F6F839B5"
      index: 4
      methodExercised:
        target: "target"
        name: "addEventListener"
        parameters:
        - name: "listener"
          valueUuid: "addEventListener_keyChainEventListener1"
        - name: "executor"
          valueUuid: "addEventListener_executor1"
        signature: "addEventListener(KeyChainEventListener,Executor): void"
        returnValueUuid: "addEventListener_void1"
        access: 1
    - type: "RESULT"
      name: "result"
      modelFingerprint: "68041019986276EDF5D420282D883A57"
      index: 5
      valueUuid: "uuid193"
    uuid: "0b160154-951e-3a14-95bd-e6793a7bce96"
    deleted: false
    disabled: true
    ignoredBySystem: false
    failureReason:
      reason: "UNKNOWN_REASON"
    prover: "DEFAULT"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: true
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.bitcoinj.wallet.BasicKeyChain"
        parameters:
        - name: "crypter"
          value:
            sapientType: "MOCK"
            valueType: "org.bitcoinj.crypto.KeyCrypter"
            uuid: "<init>_keyCrypter1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      valueType: "org.bitcoinj.wallet.BasicKeyChain"
      uuid: "target"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.bitcoinj.wallet.listeners.KeyChainEventListener"
      uuid: "addEventListener_keyChainEventListener1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "REAL"
      valueType: "org.bitcoinj.utils.Threading"
      uuid: "uuid192"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.bitcoinj.utils.Threading"
        method: "lock"
        methodParameters:
        - value:
            sapientType: "CLASS"
            content: !<regular>
              value: "org.bitcoinj.wallet.BasicKeyChain"
            valueType: "java.lang.Class"
            genericValueType: "org.bitcoinj.wallet.BasicKeyChain"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
      valueType: "java.util.concurrent.locks.ReentrantLock"
      uuid: "<init>_reentrantLock1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.bitcoinj.wallet.BasicKeyChain"
      valueType: "java.lang.Class"
      genericValueType: "org.bitcoinj.wallet.BasicKeyChain"
      uuid: "uuid191"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      valueType: "void"
      uuid: "addEventListener_void1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.bitcoinj.wallet.listeners.KeyChainEventListener"
      uuid: "addEventListener_keyChainEventListener1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "java.util.concurrent.Executor"
      uuid: "addEventListener_executor1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      uuid: "uuid193"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
- method:
    name: "addEventListener"
    signature: "addEventListener(org.bitcoinj.wallet.listeners.KeyChainEventListener,java.util.concurrent.Executor)\
      \ : void"
    sourceCodeSignature: "void addEventListener(KeyChainEventListener listener, Executor\
      \ executor)"
    instructionFingerprint: "0844C071EAA5E0B5396BF5CE0B7B1320"
  paths:
  - pathId: "path1"
    testPathName: "addEventListener1Test"
    constructorSignature: "<init>(org.bitcoinj.crypto.KeyCrypter) : void"
    modelFingerprint: "084D57478E982F6D9BDBE56C70651EFF"
    problemWasSolvedByProver: true
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "35099553EB48D2AEC42E2A9279A21C51"
      index: 1
      valueUuid: "target"
    - type: "INPUT"
      name: "listener"
      modelFingerprint: "471320B8B0C8D874D42F1BA714E65624"
      index: 2
      valueUuid: "addEventListener_keyChainEventListener1"
    - type: "INPUT"
      name: "executor"
      modelFingerprint: "98E456839F40A27F98C7C36BBD1A9805"
      index: 3
      valueUuid: "addEventListener_executor1"
    - type: "STATIC"
      name: "Threading"
      modelFingerprint: "F7EA5C46482BE836BD810E3E7E297587"
      index: 4
      valueUuid: "uuid195"
      methodExercised:
        target: "org.bitcoinj.utils.Threading"
        name: "lock"
        parameters:
        - name: "clazz"
          valueUuid: "uuid194"
        signature: "lock(Class): ReentrantLock"
        returnValueUuid: "<init>_reentrantLock1"
        access: 9
    - type: "RESULT"
      name: "result"
      modelFingerprint: "68041019986276EDF5D420282D883A57"
      index: 5
      valueUuid: "uuid196"
    uuid: "283de23e-4782-3528-be05-a980b30b2663"
    deleted: false
    disabled: false
    ignoredBySystem: false
    prover: "DEFAULT"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.bitcoinj.wallet.BasicKeyChain"
        parameters:
        - name: "crypter"
          value:
            sapientType: "MOCK"
            valueType: "org.bitcoinj.crypto.KeyCrypter"
            uuid: "<init>_keyCrypter1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      valueType: "org.bitcoinj.wallet.BasicKeyChain"
      uuid: "target"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.bitcoinj.wallet.listeners.KeyChainEventListener"
      uuid: "addEventListener_keyChainEventListener1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "java.util.concurrent.Executor"
      uuid: "addEventListener_executor1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "REAL"
      valueType: "org.bitcoinj.utils.Threading"
      uuid: "uuid195"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.bitcoinj.utils.Threading"
        method: "lock"
        methodParameters:
        - value:
            sapientType: "CLASS"
            content: !<regular>
              value: "org.bitcoinj.wallet.BasicKeyChain"
            valueType: "java.lang.Class"
            genericValueType: "org.bitcoinj.wallet.BasicKeyChain"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
      valueType: "java.util.concurrent.locks.ReentrantLock"
      uuid: "<init>_reentrantLock1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.bitcoinj.wallet.BasicKeyChain"
      valueType: "java.lang.Class"
      genericValueType: "org.bitcoinj.wallet.BasicKeyChain"
      uuid: "uuid194"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      uuid: "uuid196"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
- method:
    name: "addEventListener"
    signature: "addEventListener(org.bitcoinj.utils.ListenerRegistration<org.bitcoinj.wallet.listeners.KeyChainEventListener>)\
      \ : void"
    sourceCodeSignature: "void addEventListener(ListenerRegistration<KeyChainEventListener>\
      \ listener)"
    instructionFingerprint: "75F3C74FA4C57A920305CA3533995572"
  paths:
  - pathId: "path1"
    testPathName: "addEventListener2Test"
    constructorSignature: "<init>(org.bitcoinj.crypto.KeyCrypter) : void"
    modelFingerprint: "CACC3CDB64A45B7856B0857F96585B9E"
    problemWasSolvedByProver: true
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "35099553EB48D2AEC42E2A9279A21C51"
      index: 1
      valueUuid: "target"
    - type: "INPUT"
      name: "listener"
      modelFingerprint: "0940818736FC119671F6D28581D127B5"
      index: 2
      valueUuid: "addEventListener_listenerRegistration1"
    - type: "STATIC"
      name: "Threading"
      modelFingerprint: "F7EA5C46482BE836BD810E3E7E297587"
      index: 3
      valueUuid: "uuid198"
      methodExercised:
        target: "org.bitcoinj.utils.Threading"
        name: "lock"
        parameters:
        - name: "clazz"
          valueUuid: "uuid197"
        signature: "lock(Class): ReentrantLock"
        returnValueUuid: "<init>_reentrantLock1"
        access: 9
    - type: "RESULT"
      name: "result"
      modelFingerprint: "68041019986276EDF5D420282D883A57"
      index: 4
      valueUuid: "uuid199"
    uuid: "8fc36a2a-7a2b-30fb-8f9a-ff37f2073d36"
    deleted: false
    disabled: false
    ignoredBySystem: false
    prover: "DEFAULT"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.bitcoinj.wallet.BasicKeyChain"
        parameters:
        - name: "crypter"
          value:
            sapientType: "MOCK"
            valueType: "org.bitcoinj.crypto.KeyCrypter"
            uuid: "<init>_keyCrypter1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      valueType: "org.bitcoinj.wallet.BasicKeyChain"
      uuid: "target"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.bitcoinj.utils.ListenerRegistration"
      genericValueType: "org.bitcoinj.wallet.listeners.KeyChainEventListener"
      uuid: "addEventListener_listenerRegistration1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "REAL"
      valueType: "org.bitcoinj.utils.Threading"
      uuid: "uuid198"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.bitcoinj.utils.Threading"
        method: "lock"
        methodParameters:
        - value:
            sapientType: "CLASS"
            content: !<regular>
              value: "org.bitcoinj.wallet.BasicKeyChain"
            valueType: "java.lang.Class"
            genericValueType: "org.bitcoinj.wallet.BasicKeyChain"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
      valueType: "java.util.concurrent.locks.ReentrantLock"
      uuid: "<init>_reentrantLock1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.bitcoinj.wallet.BasicKeyChain"
      valueType: "java.lang.Class"
      genericValueType: "org.bitcoinj.wallet.BasicKeyChain"
      uuid: "uuid197"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      uuid: "uuid199"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
- method:
    name: "removeEventListener"
    signature: "removeEventListener(org.bitcoinj.wallet.listeners.KeyChainEventListener)\
      \ : boolean"
    sourceCodeSignature: "boolean removeEventListener(KeyChainEventListener listener)"
    instructionFingerprint: "F2C05897187F219E09A2744CFE4F617F"
  paths:
  - pathId: "path1"
    testPathName: "removeEventListenerWhenListenerRegistrationRemoveFromListListenerListeners"
    constructorSignature: "<init>(org.bitcoinj.crypto.KeyCrypter) : void"
    modelFingerprint: "43AE3347EBD973F215475C2B21B169A0"
    problemWasSolvedByProver: true
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "35099553EB48D2AEC42E2A9279A21C51"
      index: 1
      valueUuid: "target"
    - type: "INPUT"
      name: "listener"
      modelFingerprint: "471320B8B0C8D874D42F1BA714E65624"
      index: 2
      valueUuid: "removeEventListener_keyChainEventListener1"
    - type: "STATIC"
      name: "Threading"
      modelFingerprint: "F7EA5C46482BE836BD810E3E7E297587"
      index: 3
      valueUuid: "uuid201"
      methodExercised:
        target: "org.bitcoinj.utils.Threading"
        name: "lock"
        parameters:
        - name: "clazz"
          valueUuid: "uuid200"
        signature: "lock(Class): ReentrantLock"
        returnValueUuid: "<init>_reentrantLock1"
        access: 9
    - type: "STATIC"
      name: "ListenerRegistration"
      modelFingerprint: "197BEA264D2E271243006804D99848DF"
      index: 4
      valueUuid: "uuid202"
      methodExercised:
        target: "org.bitcoinj.utils.ListenerRegistration"
        name: "removeFromList"
        parameters:
        - name: "listener"
          valueUuid: "removeEventListener_keyChainEventListener1"
        - name: "list"
          valueUuid: "<init>_copyOnWriteArrayList1"
        signature: "removeFromList(KeyChainEventListener,CopyOnWriteArrayList): boolean"
        returnValueUuid: "removeEventListener_boolean1"
        access: 9
    - type: "RESULT"
      name: "result"
      modelFingerprint: "753659628F1B3F179A2EF0629F555437"
      index: 5
      valueUuid: "removeEventListener_boolean1"
    uuid: "278547ff-7b2e-3fb2-965f-5808a178e872"
    deleted: false
    disabled: false
    ignoredBySystem: false
    prover: "DEFAULT"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.bitcoinj.wallet.BasicKeyChain"
        parameters:
        - name: "crypter"
          value:
            sapientType: "MOCK"
            valueType: "org.bitcoinj.crypto.KeyCrypter"
            uuid: "<init>_keyCrypter1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      valueType: "org.bitcoinj.wallet.BasicKeyChain"
      uuid: "target"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.bitcoinj.wallet.listeners.KeyChainEventListener"
      uuid: "removeEventListener_keyChainEventListener1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "REAL"
      valueType: "org.bitcoinj.utils.Threading"
      uuid: "uuid201"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.bitcoinj.utils.Threading"
        method: "lock"
        methodParameters:
        - value:
            sapientType: "CLASS"
            content: !<regular>
              value: "org.bitcoinj.wallet.BasicKeyChain"
            valueType: "java.lang.Class"
            genericValueType: "org.bitcoinj.wallet.BasicKeyChain"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
      valueType: "java.util.concurrent.locks.ReentrantLock"
      uuid: "<init>_reentrantLock1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.bitcoinj.wallet.BasicKeyChain"
      valueType: "java.lang.Class"
      genericValueType: "org.bitcoinj.wallet.BasicKeyChain"
      uuid: "uuid200"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.bitcoinj.utils.ListenerRegistration"
      uuid: "uuid202"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "removeEventListener_boolean1"
      fixed: true
      equalsMethodPresent: true
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.bitcoinj.wallet.listeners.KeyChainEventListener"
      uuid: "removeEventListener_keyChainEventListener1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.concurrent.CopyOnWriteArrayList"
        parameters: []
        values: []
      valueType: "java.util.concurrent.CopyOnWriteArrayList"
      genericValueType: "org.bitcoinj.utils.ListenerRegistration<org.bitcoinj.wallet.listeners.KeyChainEventListener>"
      uuid: "<init>_copyOnWriteArrayList1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "removeEventListener_boolean1"
      fixed: true
      equalsMethodPresent: true
      explicitCastNeeded: false
  - pathId: "path2"
    testPathName: "removeEventListenerWhenListenerRegistrationNotRemoveFromListListenerListeners"
    constructorSignature: "<init>(org.bitcoinj.crypto.KeyCrypter) : void"
    modelFingerprint: "F9AE0E2C981415F34D0D310C1F90479B"
    problemWasSolvedByProver: true
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "35099553EB48D2AEC42E2A9279A21C51"
      index: 1
      valueUuid: "target"
    - type: "INPUT"
      name: "listener"
      modelFingerprint: "471320B8B0C8D874D42F1BA714E65624"
      index: 2
      valueUuid: "removeEventListener_keyChainEventListener1"
    - type: "STATIC"
      name: "Threading"
      modelFingerprint: "F7EA5C46482BE836BD810E3E7E297587"
      index: 3
      valueUuid: "uuid204"
      methodExercised:
        target: "org.bitcoinj.utils.Threading"
        name: "lock"
        parameters:
        - name: "clazz"
          valueUuid: "uuid203"
        signature: "lock(Class): ReentrantLock"
        returnValueUuid: "<init>_reentrantLock1"
        access: 9
    - type: "STATIC"
      name: "ListenerRegistration"
      modelFingerprint: "E9AF5456B6B2C1DECB91BDF01AC73B07"
      index: 4
      valueUuid: "uuid205"
      methodExercised:
        target: "org.bitcoinj.utils.ListenerRegistration"
        name: "removeFromList"
        parameters:
        - name: "listener"
          valueUuid: "removeEventListener_keyChainEventListener1"
        - name: "list"
          valueUuid: "<init>_copyOnWriteArrayList1"
        signature: "removeFromList(KeyChainEventListener,CopyOnWriteArrayList): boolean"
        returnValueUuid: "removeEventListener_boolean1"
        access: 9
    - type: "RESULT"
      name: "result"
      modelFingerprint: "3A21543F56248AC92654D6E439128AED"
      index: 5
      valueUuid: "removeEventListener_boolean1"
    uuid: "2729ee32-8492-327e-ba2d-e05b6e9496e8"
    deleted: false
    disabled: false
    ignoredBySystem: false
    prover: "DEFAULT"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.bitcoinj.wallet.BasicKeyChain"
        parameters:
        - name: "crypter"
          value:
            sapientType: "MOCK"
            valueType: "org.bitcoinj.crypto.KeyCrypter"
            uuid: "<init>_keyCrypter1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      valueType: "org.bitcoinj.wallet.BasicKeyChain"
      uuid: "target"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.bitcoinj.wallet.listeners.KeyChainEventListener"
      uuid: "removeEventListener_keyChainEventListener1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "REAL"
      valueType: "org.bitcoinj.utils.Threading"
      uuid: "uuid204"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.bitcoinj.utils.Threading"
        method: "lock"
        methodParameters:
        - value:
            sapientType: "CLASS"
            content: !<regular>
              value: "org.bitcoinj.wallet.BasicKeyChain"
            valueType: "java.lang.Class"
            genericValueType: "org.bitcoinj.wallet.BasicKeyChain"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
      valueType: "java.util.concurrent.locks.ReentrantLock"
      uuid: "<init>_reentrantLock1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.bitcoinj.wallet.BasicKeyChain"
      valueType: "java.lang.Class"
      genericValueType: "org.bitcoinj.wallet.BasicKeyChain"
      uuid: "uuid203"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.bitcoinj.utils.ListenerRegistration"
      uuid: "uuid205"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "removeEventListener_boolean1"
      fixed: true
      equalsMethodPresent: true
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.bitcoinj.wallet.listeners.KeyChainEventListener"
      uuid: "removeEventListener_keyChainEventListener1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.concurrent.CopyOnWriteArrayList"
        parameters: []
        values: []
      valueType: "java.util.concurrent.CopyOnWriteArrayList"
      genericValueType: "org.bitcoinj.utils.ListenerRegistration<org.bitcoinj.wallet.listeners.KeyChainEventListener>"
      uuid: "<init>_copyOnWriteArrayList1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "removeEventListener_boolean1"
      fixed: true
      equalsMethodPresent: true
      explicitCastNeeded: false
- method:
    name: "toEncrypted"
    signature: "toEncrypted(java.lang.CharSequence) : org.bitcoinj.wallet.BasicKeyChain"
    sourceCodeSignature: "BasicKeyChain toEncrypted(CharSequence password)"
    instructionFingerprint: "2680D2DDA7D119165C0E2AF3DA2842BD"
  paths:
  - pathId: "path1"
    testPathName: "toEncryptedWhenPasswordLengthGreaterThan0"
    constructorSignature: "<init>(org.bitcoinj.crypto.KeyCrypter) : void"
    modelFingerprint: "11C769708E67C1B477E33231E0D0F88C"
    problemWasSolvedByProver: true
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "35099553EB48D2AEC42E2A9279A21C51"
      index: 1
      valueUuid: "target"
    - type: "INPUT"
      name: "password"
      modelFingerprint: "79CB6EC3F99A5E69D14C27B4097AF91F"
      index: 2
      valueUuid: "toEncrypted_charSequence1"
    - type: "STATIC"
      name: "Threading"
      modelFingerprint: "F7EA5C46482BE836BD810E3E7E297587"
      index: 3
      valueUuid: "uuid2"
      methodExercised:
        target: "org.bitcoinj.utils.Threading"
        name: "lock"
        parameters:
        - name: "clazz"
          valueUuid: "uuid1"
        signature: "lock(Class): ReentrantLock"
        returnValueUuid: "<init>_reentrantLock1"
        access: 9
    - type: "STATIC"
      name: "Preconditions"
      modelFingerprint: "60A6CF81A4B62FC26CAD9062FF6E1448"
      index: 4
      valueUuid: "uuid4"
      methodExercised:
        target: "org.bitcoinj.base.internal.Preconditions"
        name: "checkArgument"
        parameters:
        - name: "expression"
          valueUuid: "uuid3"
        signature: "checkArgument(boolean): void"
        returnValueUuid: "toEncrypted_void1"
        access: 9
    - type: "LOCAL_VARIABLE"
      name: "scrypt"
      modelFingerprint: "976086F8E3CEE3F0B650972E0180C583"
      index: 5
      valueUuid: "toEncrypted_keyCrypterScrypt1"
      methodExercised:
        target: "scrypt"
        name: "deriveKey"
        parameters:
        - name: "arg0"
          valueUuid: "toEncrypted_charSequence1"
        throwsExceptions:
        - "org.bitcoinj.crypto.KeyCrypterException"
        signature: "deriveKey(String): AesKey throws org.bitcoinj.crypto.KeyCrypterException"
        returnValueUuid: "toEncrypted_aesKey1"
        access: 1025
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "0D6A9A88C4AD11137B25B2EA6381B417"
      index: 6
      methodExercised:
        target: "target"
        name: "toEncrypted"
        parameters:
        - name: "keyCrypter"
          valueUuid: "toEncrypted_keyCrypterScrypt1"
        - name: "aesKey"
          valueUuid: "toEncrypted_aesKey1"
        signature: "toEncrypted(KeyCrypterScrypt,AesKey): BasicKeyChain"
        returnValueUuid: "toEncrypted_basicKeyChain1"
        access: 1
    - type: "RESULT"
      name: "result"
      modelFingerprint: "46A5B5B791B8D26716E51CA245D9F41E"
      index: 7
      valueUuid: "toEncrypted_basicKeyChain1"
    uuid: "69dbc322-e198-3445-b244-24a19e5060ed"
    deleted: false
    disabled: false
    ignoredBySystem: false
    prover: "DEFAULT"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.bitcoinj.wallet.BasicKeyChain"
        parameters:
        - name: "crypter"
          value:
            sapientType: "MOCK"
            valueType: "org.bitcoinj.crypto.KeyCrypter"
            uuid: "<init>_keyCrypter1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      valueType: "org.bitcoinj.wallet.BasicKeyChain"
      uuid: "target"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "toEncrypted_charSequence1"
      valueType: "java.lang.String"
      uuid: "toEncrypted_charSequence1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "REAL"
      valueType: "org.bitcoinj.utils.Threading"
      uuid: "uuid2"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.bitcoinj.utils.Threading"
        method: "lock"
        methodParameters:
        - value:
            sapientType: "CLASS"
            content: !<regular>
              value: "org.bitcoinj.wallet.BasicKeyChain"
            valueType: "java.lang.Class"
            genericValueType: "org.bitcoinj.wallet.BasicKeyChain"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
      valueType: "java.util.concurrent.locks.ReentrantLock"
      uuid: "<init>_reentrantLock1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.bitcoinj.wallet.BasicKeyChain"
      valueType: "java.lang.Class"
      genericValueType: "org.bitcoinj.wallet.BasicKeyChain"
      uuid: "uuid1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "REAL"
      valueType: "org.bitcoinj.base.internal.Preconditions"
      uuid: "uuid4"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      valueType: "void"
      uuid: "toEncrypted_void1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "uuid3"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.bitcoinj.crypto.KeyCrypterScrypt"
        parameters: []
        privateConstructor: false
        createdByTargetCode: true
      valueType: "org.bitcoinj.crypto.KeyCrypterScrypt"
      uuid: "toEncrypted_keyCrypterScrypt1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "org.bitcoinj.crypto.AesKey"
        localVariableValue:
          sapientType: "OBJECT"
          content: !<new>
            target: "org.bitcoinj.crypto.KeyCrypterScrypt"
            parameters: []
            privateConstructor: false
            createdByTargetCode: true
          valueType: "org.bitcoinj.crypto.KeyCrypterScrypt"
          uuid: "toEncrypted_keyCrypterScrypt1"
          fixed: true
          equalsMethodPresent: false
          explicitCastNeeded: false
        methodParameters:
        - name: "arg0"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "toEncrypted_charSequence1"
            valueType: "java.lang.String"
            uuid: "toEncrypted_charSequence1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        methodName: "deriveKey"
      valueType: "org.bitcoinj.crypto.AesKey"
      uuid: "toEncrypted_aesKey1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "toEncrypted_charSequence1"
      valueType: "java.lang.String"
      uuid: "toEncrypted_charSequence1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.bitcoinj.wallet.BasicKeyChain"
      uuid: "toEncrypted_basicKeyChain1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.bitcoinj.crypto.KeyCrypterScrypt"
        parameters: []
        privateConstructor: false
        createdByTargetCode: true
      valueType: "org.bitcoinj.crypto.KeyCrypterScrypt"
      uuid: "toEncrypted_keyCrypterScrypt1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "org.bitcoinj.crypto.AesKey"
        localVariableValue:
          sapientType: "OBJECT"
          content: !<new>
            target: "org.bitcoinj.crypto.KeyCrypterScrypt"
            parameters: []
            privateConstructor: false
            createdByTargetCode: true
          valueType: "org.bitcoinj.crypto.KeyCrypterScrypt"
          uuid: "toEncrypted_keyCrypterScrypt1"
          fixed: true
          equalsMethodPresent: false
          explicitCastNeeded: false
        methodParameters:
        - name: "arg0"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "toEncrypted_charSequence1"
            valueType: "java.lang.String"
            uuid: "toEncrypted_charSequence1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        methodName: "deriveKey"
      valueType: "org.bitcoinj.crypto.AesKey"
      uuid: "toEncrypted_aesKey1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.bitcoinj.wallet.BasicKeyChain"
      uuid: "toEncrypted_basicKeyChain1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
  - pathId: "path2"
    testPathName: "toEncryptedWhenPasswordLengthNotGreaterThan0ThrowsIllegalArgumentException"
    constructorSignature: "<init>(org.bitcoinj.crypto.KeyCrypter) : void"
    modelFingerprint: "989E776B1657457EA8CA04D770556384"
    problemWasSolvedByProver: false
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "35099553EB48D2AEC42E2A9279A21C51"
      index: 1
      valueUuid: "target"
    - type: "INPUT"
      name: "password"
      modelFingerprint: "F0B5044EB154F8D3965FD1D9F9E03D91"
      index: 2
      valueUuid: "toEncrypted_charSequence1"
    - type: "STATIC"
      name: "Threading"
      modelFingerprint: "F7EA5C46482BE836BD810E3E7E297587"
      index: 3
      valueUuid: "uuid211"
      methodExercised:
        target: "org.bitcoinj.utils.Threading"
        name: "lock"
        parameters:
        - name: "clazz"
          valueUuid: "uuid210"
        signature: "lock(Class): ReentrantLock"
        returnValueUuid: "<init>_reentrantLock1"
        access: 9
    - type: "STATIC"
      name: "Preconditions"
      modelFingerprint: "0EDE48F21AC2F1945BA699E11FE35975"
      index: 4
      valueUuid: "uuid214"
      methodExercised:
        target: "org.bitcoinj.base.internal.Preconditions"
        name: "checkArgument"
        parameters:
        - name: "expression"
          valueUuid: "uuid212"
        signature: "checkArgument(boolean): void"
        returnValueUuid: "uuid213"
        access: 9
    - type: "RESULT"
      name: "result"
      modelFingerprint: "3E9C76AB51311DE97AE9C2294CD5E1D6"
      index: 5
      valueUuid: "uuid215"
    uuid: "673767b4-1364-3d7b-b6c6-1badb1541483"
    deleted: false
    disabled: true
    ignoredBySystem: false
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: java.lang.CharSequence.length() : int"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: true
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.bitcoinj.wallet.BasicKeyChain"
        parameters:
        - name: "crypter"
          value:
            sapientType: "MOCK"
            valueType: "org.bitcoinj.crypto.KeyCrypter"
            uuid: "<init>_keyCrypter1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      valueType: "org.bitcoinj.wallet.BasicKeyChain"
      uuid: "target"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "toEncrypted_charSequence1"
      valueType: "java.lang.String"
      uuid: "toEncrypted_charSequence1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "REAL"
      valueType: "org.bitcoinj.utils.Threading"
      uuid: "uuid211"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.bitcoinj.utils.Threading"
        method: "lock"
        methodParameters:
        - value:
            sapientType: "CLASS"
            content: !<regular>
              value: "org.bitcoinj.wallet.BasicKeyChain"
            valueType: "java.lang.Class"
            genericValueType: "org.bitcoinj.wallet.BasicKeyChain"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
      valueType: "java.util.concurrent.locks.ReentrantLock"
      uuid: "<init>_reentrantLock1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.bitcoinj.wallet.BasicKeyChain"
      valueType: "java.lang.Class"
      genericValueType: "org.bitcoinj.wallet.BasicKeyChain"
      uuid: "uuid210"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "REAL"
      valueType: "org.bitcoinj.base.internal.Preconditions"
      uuid: "uuid214"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "EXCEPTION"
      content: !<new>
        target: "java.lang.IllegalArgumentException"
        parameters: []
        privateConstructor: false
        createdByTargetCode: false
      valueType: "java.lang.IllegalArgumentException"
      uuid: "uuid213"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "uuid212"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "EXCEPTION"
      content: !<new>
        target: "java.lang.IllegalArgumentException"
        parameters: []
        privateConstructor: false
        createdByTargetCode: false
      valueType: "java.lang.IllegalArgumentException"
      uuid: "uuid215"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
- method:
    name: "toEncrypted"
    signature: "toEncrypted(org.bitcoinj.crypto.KeyCrypter,org.bitcoinj.crypto.AesKey)\
      \ : org.bitcoinj.wallet.BasicKeyChain"
    sourceCodeSignature: "BasicKeyChain toEncrypted(KeyCrypter keyCrypter, AesKey\
      \ aesKey)"
    instructionFingerprint: "D359525272EE17395FA4406CF8647044"
  paths:
  - pathId: "path2"
    testPathName: "toEncrypted1WhenThisKeyCrypterIsNotNullThrowsIllegalStateException"
    constructorSignature: "<init>(org.bitcoinj.crypto.KeyCrypter) : void"
    modelFingerprint: "B78857F60B5CE8AA68AA57DEDA524E09"
    problemWasSolvedByProver: true
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "35099553EB48D2AEC42E2A9279A21C51"
      index: 1
      valueUuid: "target"
    - type: "INPUT"
      name: "keyCrypter"
      modelFingerprint: "49411EB62D421A468020D743AD1053CC"
      index: 2
      valueUuid: "toEncrypted_keyCrypter1"
    - type: "INPUT"
      name: "aesKey"
      modelFingerprint: "DCA4AEF5E8DED66D0B002FF53D6204FF"
      index: 3
      valueUuid: "toEncrypted_aesKey1"
    - type: "STATIC"
      name: "Threading"
      modelFingerprint: "F7EA5C46482BE836BD810E3E7E297587"
      index: 4
      valueUuid: "uuid217"
      methodExercised:
        target: "org.bitcoinj.utils.Threading"
        name: "lock"
        parameters:
        - name: "clazz"
          valueUuid: "uuid216"
        signature: "lock(Class): ReentrantLock"
        returnValueUuid: "<init>_reentrantLock1"
        access: 9
    - type: "STATIC"
      name: "Preconditions"
      modelFingerprint: "54C4D53CCD04B53C1A47AA185AEE8B06"
      index: 5
      valueUuid: "uuid221"
      methodExercised:
        target: "org.bitcoinj.base.internal.Preconditions"
        name: "checkState"
        parameters:
        - name: "expression"
          valueUuid: "uuid218"
        - name: "messageSupplier"
          valueUuid: "uuid219"
        signature: "checkState(boolean,Supplier): void"
        returnValueUuid: "uuid220"
        access: 9
    - type: "RESULT"
      name: "result"
      modelFingerprint: "C9C68C9339F812BC8DEC7C1D6145A135"
      index: 6
      valueUuid: "uuid222"
    uuid: "a3eb8f1e-1d40-3d0e-8b77-6791480d2a2a"
    deleted: false
    disabled: false
    ignoredBySystem: false
    prover: "DEFAULT"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.bitcoinj.wallet.BasicKeyChain"
        parameters:
        - name: "crypter"
          value:
            sapientType: "MOCK"
            valueType: "org.bitcoinj.crypto.KeyCrypter"
            uuid: "<init>_keyCrypter1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      valueType: "org.bitcoinj.wallet.BasicKeyChain"
      uuid: "target"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.bitcoinj.crypto.KeyCrypter"
      uuid: "toEncrypted_keyCrypter1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.bitcoinj.crypto.AesKey"
      uuid: "toEncrypted_aesKey1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "REAL"
      valueType: "org.bitcoinj.utils.Threading"
      uuid: "uuid217"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.bitcoinj.utils.Threading"
        method: "lock"
        methodParameters:
        - value:
            sapientType: "CLASS"
            content: !<regular>
              value: "org.bitcoinj.wallet.BasicKeyChain"
            valueType: "java.lang.Class"
            genericValueType: "org.bitcoinj.wallet.BasicKeyChain"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
      valueType: "java.util.concurrent.locks.ReentrantLock"
      uuid: "<init>_reentrantLock1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.bitcoinj.wallet.BasicKeyChain"
      valueType: "java.lang.Class"
      genericValueType: "org.bitcoinj.wallet.BasicKeyChain"
      uuid: "uuid216"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "REAL"
      valueType: "org.bitcoinj.base.internal.Preconditions"
      uuid: "uuid221"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "EXCEPTION"
      content: !<new>
        target: "java.lang.IllegalStateException"
        parameters: []
        privateConstructor: false
        createdByTargetCode: false
      valueType: "java.lang.IllegalStateException"
      uuid: "uuid220"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "uuid218"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "PRIVATE_INNER_CLASS_OR_LAMBDA"
      valueType: "java.util.function.Supplier"
      genericValueType: "java.lang.String"
      uuid: "uuid219"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "EXCEPTION"
      content: !<new>
        target: "java.lang.IllegalStateException"
        parameters: []
        privateConstructor: false
        createdByTargetCode: false
      valueType: "java.lang.IllegalStateException"
      uuid: "uuid222"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
  - pathId: "path1"
    testPathName: "toEncrypted1WhenListenersIsEmpty"
    constructorSignature: "<init>(org.bitcoinj.crypto.KeyCrypter) : void"
    modelFingerprint: "C9CD8DB03C6EABE5C9A42F48A3EBCE13"
    problemWasSolvedByProver: true
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "AC70298FA93F6048125F94F6464F3643"
      index: 1
      valueUuid: "target"
    - type: "INPUT"
      name: "keyCrypter"
      modelFingerprint: "49411EB62D421A468020D743AD1053CC"
      index: 2
      valueUuid: "toEncrypted_keyCrypter1"
    - type: "INPUT"
      name: "aesKey"
      modelFingerprint: "DCA4AEF5E8DED66D0B002FF53D6204FF"
      index: 3
      valueUuid: "toEncrypted_aesKey1"
    - type: "STATIC"
      name: "Threading"
      modelFingerprint: "F7EA5C46482BE836BD810E3E7E297587"
      index: 4
      valueUuid: "uuid224"
      methodExercised:
        target: "org.bitcoinj.utils.Threading"
        name: "lock"
        parameters:
        - name: "clazz"
          valueUuid: "uuid223"
        signature: "lock(Class): ReentrantLock"
        returnValueUuid: "<init>_reentrantLock1"
        access: 9
    - type: "STATIC"
      name: "Preconditions"
      modelFingerprint: "1069224700F44090276BB375F2F3A455"
      index: 5
      valueUuid: "uuid227"
      methodExercised:
        target: "org.bitcoinj.base.internal.Preconditions"
        name: "checkState"
        parameters:
        - name: "expression"
          valueUuid: "uuid225"
        - name: "messageSupplier"
          valueUuid: "uuid226"
        signature: "checkState(boolean,Supplier): void"
        returnValueUuid: "toEncrypted_void2"
        access: 9
    - type: "STATIC"
      name: "Threading"
      modelFingerprint: "F7EA5C46482BE836BD810E3E7E297587"
      index: 6
      valueUuid: "uuid229"
      methodExercised:
        target: "org.bitcoinj.utils.Threading"
        name: "lock"
        parameters:
        - name: "clazz"
          valueUuid: "uuid228"
        signature: "lock(Class): ReentrantLock"
        returnValueUuid: "<init>_reentrantLock2"
        access: 9
    - type: "RESULT"
      name: "result"
      modelFingerprint: "6B79D8F7F381D5437CA7E1E9BE2E745F"
      index: 7
      valueUuid: "toEncrypted_basicKeyChain1"
    uuid: "ac556749-882b-361d-8590-988dd8228795"
    deleted: false
    disabled: false
    ignoredBySystem: false
    prover: "DEFAULT"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.bitcoinj.wallet.BasicKeyChain"
        parameters:
        - name: "crypter"
          value:
            sapientType: "NULL"
            valueType: "org.bitcoinj.crypto.KeyCrypter"
            uuid: "<init>_keyCrypter1"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      valueType: "org.bitcoinj.wallet.BasicKeyChain"
      uuid: "target"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.bitcoinj.crypto.KeyCrypter"
      uuid: "toEncrypted_keyCrypter1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.bitcoinj.crypto.AesKey"
      uuid: "toEncrypted_aesKey1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "REAL"
      valueType: "org.bitcoinj.utils.Threading"
      uuid: "uuid224"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.bitcoinj.utils.Threading"
        method: "lock"
        methodParameters:
        - value:
            sapientType: "CLASS"
            content: !<regular>
              value: "org.bitcoinj.wallet.BasicKeyChain"
            valueType: "java.lang.Class"
            genericValueType: "org.bitcoinj.wallet.BasicKeyChain"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
      valueType: "java.util.concurrent.locks.ReentrantLock"
      uuid: "<init>_reentrantLock1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.bitcoinj.wallet.BasicKeyChain"
      valueType: "java.lang.Class"
      genericValueType: "org.bitcoinj.wallet.BasicKeyChain"
      uuid: "uuid223"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "REAL"
      valueType: "org.bitcoinj.base.internal.Preconditions"
      uuid: "uuid227"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      valueType: "void"
      uuid: "toEncrypted_void2"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "uuid225"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "PRIVATE_INNER_CLASS_OR_LAMBDA"
      valueType: "java.util.function.Supplier"
      genericValueType: "java.lang.String"
      uuid: "uuid226"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "REAL"
      valueType: "org.bitcoinj.utils.Threading"
      uuid: "uuid229"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.bitcoinj.utils.Threading"
        method: "lock"
        methodParameters:
        - value:
            sapientType: "CLASS"
            content: !<regular>
              value: "org.bitcoinj.wallet.BasicKeyChain"
            valueType: "java.lang.Class"
            genericValueType: "org.bitcoinj.wallet.BasicKeyChain"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
      valueType: "java.util.concurrent.locks.ReentrantLock"
      uuid: "<init>_reentrantLock2"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.bitcoinj.wallet.BasicKeyChain"
      valueType: "java.lang.Class"
      genericValueType: "org.bitcoinj.wallet.BasicKeyChain"
      uuid: "uuid228"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.bitcoinj.wallet.BasicKeyChain"
        parameters:
        - name: "crypter"
          value:
            sapientType: "MOCK"
            valueType: "org.bitcoinj.crypto.KeyCrypter"
            uuid: "toEncrypted_keyCrypter1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: true
      valueType: "org.bitcoinj.wallet.BasicKeyChain"
      uuid: "toEncrypted_basicKeyChain1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
- method:
    name: "toDecrypted"
    signature: "toDecrypted(java.lang.CharSequence) : org.bitcoinj.wallet.BasicKeyChain"
    sourceCodeSignature: "BasicKeyChain toDecrypted(CharSequence password)"
    tryCatchBlocks:
    - idExternalInstruction: 0
      id: 1
      catchExceptions:
      - "org.bitcoinj.crypto.KeyCrypterException"
    instructionFingerprint: "AC7C0CECD69194AD27C54891603D21A1"
  paths:
  - pathId: "path1"
    testPathName: "toDecryptedTest"
    constructorSignature: "<init>(org.bitcoinj.crypto.KeyCrypter) : void"
    modelFingerprint: "347BD2E66BEAA1FA8437DFD74B92BF6C"
    problemWasSolvedByProver: true
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "92723DCF3172E2A06000C2981F8D18F8"
      index: 1
      valueUuid: "target"
    - type: "INPUT"
      name: "password"
      modelFingerprint: "F0B5044EB154F8D3965FD1D9F9E03D91"
      index: 2
      valueUuid: "toDecrypted_charSequence1"
    - type: "STATIC"
      name: "Threading"
      modelFingerprint: "F7EA5C46482BE836BD810E3E7E297587"
      index: 3
      valueUuid: "uuid231"
      methodExercised:
        target: "org.bitcoinj.utils.Threading"
        name: "lock"
        parameters:
        - name: "clazz"
          valueUuid: "uuid230"
        signature: "lock(Class): ReentrantLock"
        returnValueUuid: "<init>_reentrantLock1"
        access: 9
    - type: "FIELD"
      name: "keyCrypter"
      modelFingerprint: "C0BE49DD3580AC3B536491594ABC9322"
      index: 4
      valueUuid: "<init>_keyCrypter1"
      methodExercised:
        target: "this.keyCrypter"
        name: "deriveKey"
        parameters:
        - name: "arg0"
          valueUuid: "toDecrypted_charSequence1"
        throwsExceptions:
        - "org.bitcoinj.crypto.KeyCrypterException"
        signature: "deriveKey(CharSequence): AesKey throws org.bitcoinj.crypto.KeyCrypterException"
        returnValueUuid: "toDecrypted_aesKey1"
        access: 1025
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "63AC6DDD5BF11519B8C27D6BB87AFE29"
      index: 5
      methodExercised:
        target: "target"
        name: "toDecrypted"
        parameters:
        - name: "aesKey"
          valueUuid: "toDecrypted_aesKey1"
        signature: "toDecrypted(AesKey): BasicKeyChain"
        returnValueUuid: "toDecrypted_basicKeyChain1"
        access: 1
    - type: "RESULT"
      name: "result"
      modelFingerprint: "46A5B5B791B8D26716E51CA245D9F41E"
      index: 6
      valueUuid: "toDecrypted_basicKeyChain1"
    uuid: "1bdb17bb-1002-3203-937c-75660bb17455"
    deleted: false
    disabled: false
    ignoredBySystem: false
    prover: "DEFAULT"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.bitcoinj.wallet.BasicKeyChain"
        parameters:
        - name: "crypter"
          value:
            sapientType: "MOCK"
            valueType: "org.bitcoinj.crypto.KeyCrypter"
            uuid: "<init>_keyCrypter1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      valueType: "org.bitcoinj.wallet.BasicKeyChain"
      uuid: "target"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "toDecrypted_charSequence1"
      valueType: "java.lang.String"
      uuid: "toDecrypted_charSequence1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "REAL"
      valueType: "org.bitcoinj.utils.Threading"
      uuid: "uuid231"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.bitcoinj.utils.Threading"
        method: "lock"
        methodParameters:
        - value:
            sapientType: "CLASS"
            content: !<regular>
              value: "org.bitcoinj.wallet.BasicKeyChain"
            valueType: "java.lang.Class"
            genericValueType: "org.bitcoinj.wallet.BasicKeyChain"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
      valueType: "java.util.concurrent.locks.ReentrantLock"
      uuid: "<init>_reentrantLock1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.bitcoinj.wallet.BasicKeyChain"
      valueType: "java.lang.Class"
      genericValueType: "org.bitcoinj.wallet.BasicKeyChain"
      uuid: "uuid230"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.bitcoinj.crypto.KeyCrypter"
      uuid: "<init>_keyCrypter1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.bitcoinj.crypto.AesKey"
      uuid: "toDecrypted_aesKey1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "toDecrypted_charSequence1"
      valueType: "java.lang.String"
      uuid: "toDecrypted_charSequence1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.bitcoinj.wallet.BasicKeyChain"
      uuid: "toDecrypted_basicKeyChain1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.bitcoinj.crypto.AesKey"
      uuid: "toDecrypted_aesKey1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.bitcoinj.wallet.BasicKeyChain"
      uuid: "toDecrypted_basicKeyChain1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
- method:
    name: "toDecrypted"
    signature: "toDecrypted(org.bitcoinj.crypto.AesKey) : org.bitcoinj.wallet.BasicKeyChain"
    sourceCodeSignature: "BasicKeyChain toDecrypted(AesKey aesKey)"
    tryCatchBlocks:
    - idExternalInstruction: 0
      id: 1
      catchExceptions:
      - "org.bitcoinj.crypto.KeyCrypterException"
    instructionFingerprint: "5572BE1BCAB56892462FDA8DC7B18124"
  paths:
  - pathId: "path2"
    testPathName: "toDecrypted1WhenKeyCrypterIsNullThrowsIllegalStateException"
    constructorSignature: "<init>(org.bitcoinj.crypto.KeyCrypter) : void"
    modelFingerprint: "4D9240AC374C5DC23CE47A6E3B833AD6"
    problemWasSolvedByProver: true
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "AC70298FA93F6048125F94F6464F3643"
      index: 1
      valueUuid: "target"
    - type: "INPUT"
      name: "aesKey"
      modelFingerprint: "DCA4AEF5E8DED66D0B002FF53D6204FF"
      index: 2
      valueUuid: "toDecrypted_aesKey1"
    - type: "STATIC"
      name: "Threading"
      modelFingerprint: "F7EA5C46482BE836BD810E3E7E297587"
      index: 3
      valueUuid: "uuid233"
      methodExercised:
        target: "org.bitcoinj.utils.Threading"
        name: "lock"
        parameters:
        - name: "clazz"
          valueUuid: "uuid232"
        signature: "lock(Class): ReentrantLock"
        returnValueUuid: "<init>_reentrantLock1"
        access: 9
    - type: "STATIC"
      name: "Preconditions"
      modelFingerprint: "54C4D53CCD04B53C1A47AA185AEE8B06"
      index: 4
      valueUuid: "uuid237"
      methodExercised:
        target: "org.bitcoinj.base.internal.Preconditions"
        name: "checkState"
        parameters:
        - name: "expression"
          valueUuid: "uuid234"
        - name: "messageSupplier"
          valueUuid: "uuid235"
        signature: "checkState(boolean,Supplier): void"
        returnValueUuid: "uuid236"
        access: 9
    - type: "RESULT"
      name: "result"
      modelFingerprint: "C9C68C9339F812BC8DEC7C1D6145A135"
      index: 5
      valueUuid: "uuid238"
    uuid: "0569c850-05a6-3b5c-b729-83a13ac0d2d2"
    deleted: false
    disabled: false
    ignoredBySystem: false
    prover: "DEFAULT"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.bitcoinj.wallet.BasicKeyChain"
        parameters:
        - name: "crypter"
          value:
            sapientType: "NULL"
            valueType: "org.bitcoinj.crypto.KeyCrypter"
            uuid: "<init>_keyCrypter1"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      valueType: "org.bitcoinj.wallet.BasicKeyChain"
      uuid: "target"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.bitcoinj.crypto.AesKey"
      uuid: "toDecrypted_aesKey1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "REAL"
      valueType: "org.bitcoinj.utils.Threading"
      uuid: "uuid233"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.bitcoinj.utils.Threading"
        method: "lock"
        methodParameters:
        - value:
            sapientType: "CLASS"
            content: !<regular>
              value: "org.bitcoinj.wallet.BasicKeyChain"
            valueType: "java.lang.Class"
            genericValueType: "org.bitcoinj.wallet.BasicKeyChain"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
      valueType: "java.util.concurrent.locks.ReentrantLock"
      uuid: "<init>_reentrantLock1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.bitcoinj.wallet.BasicKeyChain"
      valueType: "java.lang.Class"
      genericValueType: "org.bitcoinj.wallet.BasicKeyChain"
      uuid: "uuid232"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "REAL"
      valueType: "org.bitcoinj.base.internal.Preconditions"
      uuid: "uuid237"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "EXCEPTION"
      content: !<new>
        target: "java.lang.IllegalStateException"
        parameters: []
        privateConstructor: false
        createdByTargetCode: false
      valueType: "java.lang.IllegalStateException"
      uuid: "uuid236"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "uuid234"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "PRIVATE_INNER_CLASS_OR_LAMBDA"
      valueType: "java.util.function.Supplier"
      genericValueType: "java.lang.String"
      uuid: "uuid235"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "EXCEPTION"
      content: !<new>
        target: "java.lang.IllegalStateException"
        parameters: []
        privateConstructor: false
        createdByTargetCode: false
      valueType: "java.lang.IllegalStateException"
      uuid: "uuid238"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
  - pathId: "path1"
    testPathName: "toDecrypted1WhenListenersIsEmpty"
    constructorSignature: "<init>(org.bitcoinj.crypto.KeyCrypter) : void"
    modelFingerprint: "2018A87DB5AE32B837E5AE8AA0BA99E7"
    problemWasSolvedByProver: true
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "35099553EB48D2AEC42E2A9279A21C51"
      index: 1
      valueUuid: "target"
    - type: "INPUT"
      name: "aesKey"
      modelFingerprint: "DCA4AEF5E8DED66D0B002FF53D6204FF"
      index: 2
      valueUuid: "toDecrypted_aesKey1"
    - type: "STATIC"
      name: "Threading"
      modelFingerprint: "F7EA5C46482BE836BD810E3E7E297587"
      index: 3
      valueUuid: "uuid240"
      methodExercised:
        target: "org.bitcoinj.utils.Threading"
        name: "lock"
        parameters:
        - name: "clazz"
          valueUuid: "uuid239"
        signature: "lock(Class): ReentrantLock"
        returnValueUuid: "<init>_reentrantLock1"
        access: 9
    - type: "STATIC"
      name: "Preconditions"
      modelFingerprint: "1069224700F44090276BB375F2F3A455"
      index: 4
      valueUuid: "uuid243"
      methodExercised:
        target: "org.bitcoinj.base.internal.Preconditions"
        name: "checkState"
        parameters:
        - name: "expression"
          valueUuid: "uuid241"
        - name: "messageSupplier"
          valueUuid: "uuid242"
        signature: "checkState(boolean,Supplier): void"
        returnValueUuid: "toDecrypted_void2"
        access: 9
    - type: "STATIC"
      name: "Threading"
      modelFingerprint: "F7EA5C46482BE836BD810E3E7E297587"
      index: 5
      valueUuid: "uuid245"
      methodExercised:
        target: "org.bitcoinj.utils.Threading"
        name: "lock"
        parameters:
        - name: "clazz"
          valueUuid: "uuid244"
        signature: "lock(Class): ReentrantLock"
        returnValueUuid: "<init>_reentrantLock2"
        access: 9
    - type: "RESULT"
      name: "result"
      modelFingerprint: "88D58C66A1884AF62C8AB2C09B073734"
      index: 6
      valueUuid: "toDecrypted_basicKeyChain1"
    uuid: "6f5f2a4b-3fd8-3dac-8e9e-54b7a090d6d4"
    deleted: false
    disabled: false
    ignoredBySystem: false
    prover: "DEFAULT"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.bitcoinj.wallet.BasicKeyChain"
        parameters:
        - name: "crypter"
          value:
            sapientType: "MOCK"
            valueType: "org.bitcoinj.crypto.KeyCrypter"
            uuid: "<init>_keyCrypter1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      valueType: "org.bitcoinj.wallet.BasicKeyChain"
      uuid: "target"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.bitcoinj.crypto.AesKey"
      uuid: "toDecrypted_aesKey1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "REAL"
      valueType: "org.bitcoinj.utils.Threading"
      uuid: "uuid240"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.bitcoinj.utils.Threading"
        method: "lock"
        methodParameters:
        - value:
            sapientType: "CLASS"
            content: !<regular>
              value: "org.bitcoinj.wallet.BasicKeyChain"
            valueType: "java.lang.Class"
            genericValueType: "org.bitcoinj.wallet.BasicKeyChain"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
      valueType: "java.util.concurrent.locks.ReentrantLock"
      uuid: "<init>_reentrantLock1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.bitcoinj.wallet.BasicKeyChain"
      valueType: "java.lang.Class"
      genericValueType: "org.bitcoinj.wallet.BasicKeyChain"
      uuid: "uuid239"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "REAL"
      valueType: "org.bitcoinj.base.internal.Preconditions"
      uuid: "uuid243"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      valueType: "void"
      uuid: "toDecrypted_void2"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "uuid241"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "PRIVATE_INNER_CLASS_OR_LAMBDA"
      valueType: "java.util.function.Supplier"
      genericValueType: "java.lang.String"
      uuid: "uuid242"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "REAL"
      valueType: "org.bitcoinj.utils.Threading"
      uuid: "uuid245"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.bitcoinj.utils.Threading"
        method: "lock"
        methodParameters:
        - value:
            sapientType: "CLASS"
            content: !<regular>
              value: "org.bitcoinj.wallet.BasicKeyChain"
            valueType: "java.lang.Class"
            genericValueType: "org.bitcoinj.wallet.BasicKeyChain"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
      valueType: "java.util.concurrent.locks.ReentrantLock"
      uuid: "<init>_reentrantLock2"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.bitcoinj.wallet.BasicKeyChain"
      valueType: "java.lang.Class"
      genericValueType: "org.bitcoinj.wallet.BasicKeyChain"
      uuid: "uuid244"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.bitcoinj.wallet.BasicKeyChain"
        parameters: []
        privateConstructor: false
        createdByTargetCode: true
      valueType: "org.bitcoinj.wallet.BasicKeyChain"
      uuid: "toDecrypted_basicKeyChain1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
- method:
    name: "checkPassword"
    signature: "checkPassword(java.lang.CharSequence) : boolean"
    sourceCodeSignature: "boolean checkPassword(CharSequence password)"
    tryCatchBlocks:
    - idExternalInstruction: 0
      id: 1
      catchExceptions:
      - "org.bitcoinj.crypto.KeyCrypterException"
    instructionFingerprint: "786D2B1210915DA6AA3499C6E0F88ED8"
  paths:
  - pathId: "path3"
    testPathName: "checkPasswordWhenKeyCrypterIsNullThrowsIllegalStateException"
    constructorSignature: "<init>(org.bitcoinj.crypto.KeyCrypter) : void"
    modelFingerprint: "C9BDFF1D17BAB8F824C3F73CB3838815"
    problemWasSolvedByProver: true
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "AC70298FA93F6048125F94F6464F3643"
      index: 1
      valueUuid: "target"
    - type: "INPUT"
      name: "password"
      modelFingerprint: "F0B5044EB154F8D3965FD1D9F9E03D91"
      index: 2
      valueUuid: "checkPassword_charSequence1"
    - type: "STATIC"
      name: "Threading"
      modelFingerprint: "F7EA5C46482BE836BD810E3E7E297587"
      index: 3
      valueUuid: "uuid247"
      methodExercised:
        target: "org.bitcoinj.utils.Threading"
        name: "lock"
        parameters:
        - name: "clazz"
          valueUuid: "uuid246"
        signature: "lock(Class): ReentrantLock"
        returnValueUuid: "<init>_reentrantLock1"
        access: 9
    - type: "STATIC"
      name: "Preconditions"
      modelFingerprint: "54C4D53CCD04B53C1A47AA185AEE8B06"
      index: 4
      valueUuid: "uuid251"
      methodExercised:
        target: "org.bitcoinj.base.internal.Preconditions"
        name: "checkState"
        parameters:
        - name: "expression"
          valueUuid: "uuid248"
        - name: "messageSupplier"
          valueUuid: "uuid249"
        signature: "checkState(boolean,Supplier): void"
        returnValueUuid: "uuid250"
        access: 9
    - type: "RESULT"
      name: "result"
      modelFingerprint: "C9C68C9339F812BC8DEC7C1D6145A135"
      index: 5
      valueUuid: "uuid252"
    uuid: "985e8ce0-cd93-3186-a94c-5b1bafe74def"
    deleted: false
    disabled: false
    ignoredBySystem: false
    prover: "DEFAULT"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.bitcoinj.wallet.BasicKeyChain"
        parameters:
        - name: "crypter"
          value:
            sapientType: "NULL"
            valueType: "org.bitcoinj.crypto.KeyCrypter"
            uuid: "<init>_keyCrypter1"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      valueType: "org.bitcoinj.wallet.BasicKeyChain"
      uuid: "target"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "checkPassword_charSequence1"
      valueType: "java.lang.String"
      uuid: "checkPassword_charSequence1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "REAL"
      valueType: "org.bitcoinj.utils.Threading"
      uuid: "uuid247"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.bitcoinj.utils.Threading"
        method: "lock"
        methodParameters:
        - value:
            sapientType: "CLASS"
            content: !<regular>
              value: "org.bitcoinj.wallet.BasicKeyChain"
            valueType: "java.lang.Class"
            genericValueType: "org.bitcoinj.wallet.BasicKeyChain"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
      valueType: "java.util.concurrent.locks.ReentrantLock"
      uuid: "<init>_reentrantLock1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.bitcoinj.wallet.BasicKeyChain"
      valueType: "java.lang.Class"
      genericValueType: "org.bitcoinj.wallet.BasicKeyChain"
      uuid: "uuid246"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "REAL"
      valueType: "org.bitcoinj.base.internal.Preconditions"
      uuid: "uuid251"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "EXCEPTION"
      content: !<new>
        target: "java.lang.IllegalStateException"
        parameters: []
        privateConstructor: false
        createdByTargetCode: false
      valueType: "java.lang.IllegalStateException"
      uuid: "uuid250"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "uuid248"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "PRIVATE_INNER_CLASS_OR_LAMBDA"
      valueType: "java.util.function.Supplier"
      genericValueType: "java.lang.String"
      uuid: "uuid249"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "EXCEPTION"
      content: !<new>
        target: "java.lang.IllegalStateException"
        parameters: []
        privateConstructor: false
        createdByTargetCode: false
      valueType: "java.lang.IllegalStateException"
      uuid: "uuid252"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
  - pathId: "path1"
    testPathName: "checkPasswordWhenCheckAESKeyKeyCrypterDeriveKeyPassword"
    constructorSignature: "<init>(org.bitcoinj.crypto.KeyCrypter) : void"
    modelFingerprint: "1C1AB3DD24A7D6BBFBD514D4313FC24D"
    problemWasSolvedByProver: true
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "92723DCF3172E2A06000C2981F8D18F8"
      index: 1
      valueUuid: "target"
    - type: "INPUT"
      name: "password"
      modelFingerprint: "F0B5044EB154F8D3965FD1D9F9E03D91"
      index: 2
      valueUuid: "checkPassword_charSequence1"
    - type: "STATIC"
      name: "Threading"
      modelFingerprint: "F7EA5C46482BE836BD810E3E7E297587"
      index: 3
      valueUuid: "uuid254"
      methodExercised:
        target: "org.bitcoinj.utils.Threading"
        name: "lock"
        parameters:
        - name: "clazz"
          valueUuid: "uuid253"
        signature: "lock(Class): ReentrantLock"
        returnValueUuid: "<init>_reentrantLock1"
        access: 9
    - type: "STATIC"
      name: "Preconditions"
      modelFingerprint: "1069224700F44090276BB375F2F3A455"
      index: 4
      valueUuid: "uuid257"
      methodExercised:
        target: "org.bitcoinj.base.internal.Preconditions"
        name: "checkState"
        parameters:
        - name: "expression"
          valueUuid: "uuid255"
        - name: "messageSupplier"
          valueUuid: "uuid256"
        signature: "checkState(boolean,Supplier): void"
        returnValueUuid: "checkPassword_void1"
        access: 9
    - type: "FIELD"
      name: "keyCrypter"
      modelFingerprint: "C0BE49DD3580AC3B536491594ABC9322"
      index: 5
      valueUuid: "<init>_keyCrypter1"
      methodExercised:
        target: "this.keyCrypter"
        name: "deriveKey"
        parameters:
        - name: "arg0"
          valueUuid: "checkPassword_charSequence1"
        throwsExceptions:
        - "org.bitcoinj.crypto.KeyCrypterException"
        signature: "deriveKey(CharSequence): AesKey throws org.bitcoinj.crypto.KeyCrypterException"
        returnValueUuid: "checkPassword_aesKey1"
        access: 1025
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "4B111F3F6B07FD8F9CA0DE182DBCFE89"
      index: 6
      methodExercised:
        target: "target"
        name: "checkAESKey"
        parameters:
        - name: "aesKey"
          valueUuid: "checkPassword_aesKey1"
        signature: "checkAESKey(AesKey): boolean"
        returnValueUuid: "checkPassword_boolean1"
        access: 1
    - type: "RESULT"
      name: "result"
      modelFingerprint: "753659628F1B3F179A2EF0629F555437"
      index: 7
      valueUuid: "checkPassword_boolean1"
    uuid: "c4b63472-48c0-3d8a-9b07-60a04d8528ed"
    deleted: false
    disabled: false
    ignoredBySystem: false
    prover: "DEFAULT"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.bitcoinj.wallet.BasicKeyChain"
        parameters:
        - name: "crypter"
          value:
            sapientType: "MOCK"
            valueType: "org.bitcoinj.crypto.KeyCrypter"
            uuid: "<init>_keyCrypter1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      valueType: "org.bitcoinj.wallet.BasicKeyChain"
      uuid: "target"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "checkPassword_charSequence1"
      valueType: "java.lang.String"
      uuid: "checkPassword_charSequence1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "REAL"
      valueType: "org.bitcoinj.utils.Threading"
      uuid: "uuid254"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.bitcoinj.utils.Threading"
        method: "lock"
        methodParameters:
        - value:
            sapientType: "CLASS"
            content: !<regular>
              value: "org.bitcoinj.wallet.BasicKeyChain"
            valueType: "java.lang.Class"
            genericValueType: "org.bitcoinj.wallet.BasicKeyChain"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
      valueType: "java.util.concurrent.locks.ReentrantLock"
      uuid: "<init>_reentrantLock1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.bitcoinj.wallet.BasicKeyChain"
      valueType: "java.lang.Class"
      genericValueType: "org.bitcoinj.wallet.BasicKeyChain"
      uuid: "uuid253"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "REAL"
      valueType: "org.bitcoinj.base.internal.Preconditions"
      uuid: "uuid257"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      valueType: "void"
      uuid: "checkPassword_void1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "uuid255"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "PRIVATE_INNER_CLASS_OR_LAMBDA"
      valueType: "java.util.function.Supplier"
      genericValueType: "java.lang.String"
      uuid: "uuid256"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.bitcoinj.crypto.KeyCrypter"
      uuid: "<init>_keyCrypter1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.bitcoinj.crypto.AesKey"
      uuid: "checkPassword_aesKey1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "checkPassword_charSequence1"
      valueType: "java.lang.String"
      uuid: "checkPassword_charSequence1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "checkPassword_boolean1"
      fixed: true
      equalsMethodPresent: true
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.bitcoinj.crypto.AesKey"
      uuid: "checkPassword_aesKey1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "checkPassword_boolean1"
      fixed: true
      equalsMethodPresent: true
      explicitCastNeeded: false
  - pathId: "path2"
    testPathName: "checkPasswordWhenCheckAESKeyNotKeyCrypterDeriveKeyPassword"
    constructorSignature: "<init>(org.bitcoinj.crypto.KeyCrypter) : void"
    modelFingerprint: "7DD3D82E5AB70FE1D0C95722A36E43F1"
    problemWasSolvedByProver: true
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "92723DCF3172E2A06000C2981F8D18F8"
      index: 1
      valueUuid: "target"
    - type: "INPUT"
      name: "password"
      modelFingerprint: "F0B5044EB154F8D3965FD1D9F9E03D91"
      index: 2
      valueUuid: "checkPassword_charSequence1"
    - type: "STATIC"
      name: "Threading"
      modelFingerprint: "F7EA5C46482BE836BD810E3E7E297587"
      index: 3
      valueUuid: "uuid259"
      methodExercised:
        target: "org.bitcoinj.utils.Threading"
        name: "lock"
        parameters:
        - name: "clazz"
          valueUuid: "uuid258"
        signature: "lock(Class): ReentrantLock"
        returnValueUuid: "<init>_reentrantLock1"
        access: 9
    - type: "STATIC"
      name: "Preconditions"
      modelFingerprint: "1069224700F44090276BB375F2F3A455"
      index: 4
      valueUuid: "uuid262"
      methodExercised:
        target: "org.bitcoinj.base.internal.Preconditions"
        name: "checkState"
        parameters:
        - name: "expression"
          valueUuid: "uuid260"
        - name: "messageSupplier"
          valueUuid: "uuid261"
        signature: "checkState(boolean,Supplier): void"
        returnValueUuid: "checkPassword_void1"
        access: 9
    - type: "FIELD"
      name: "keyCrypter"
      modelFingerprint: "C0BE49DD3580AC3B536491594ABC9322"
      index: 5
      valueUuid: "<init>_keyCrypter1"
      methodExercised:
        target: "this.keyCrypter"
        name: "deriveKey"
        parameters:
        - name: "arg0"
          valueUuid: "checkPassword_charSequence1"
        throwsExceptions:
        - "org.bitcoinj.crypto.KeyCrypterException"
        signature: "deriveKey(CharSequence): AesKey throws org.bitcoinj.crypto.KeyCrypterException"
        returnValueUuid: "checkPassword_aesKey1"
        access: 1025
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "732DACC4C967DF3011ACFD80118A33B3"
      index: 6
      methodExercised:
        target: "target"
        name: "checkAESKey"
        parameters:
        - name: "aesKey"
          valueUuid: "checkPassword_aesKey1"
        signature: "checkAESKey(AesKey): boolean"
        returnValueUuid: "checkPassword_boolean1"
        access: 1
    - type: "RESULT"
      name: "result"
      modelFingerprint: "3A21543F56248AC92654D6E439128AED"
      index: 7
      valueUuid: "checkPassword_boolean1"
    uuid: "452473ca-005e-3b6c-9a22-7487fdbd95e4"
    deleted: false
    disabled: false
    ignoredBySystem: false
    prover: "DEFAULT"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.bitcoinj.wallet.BasicKeyChain"
        parameters:
        - name: "crypter"
          value:
            sapientType: "MOCK"
            valueType: "org.bitcoinj.crypto.KeyCrypter"
            uuid: "<init>_keyCrypter1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      valueType: "org.bitcoinj.wallet.BasicKeyChain"
      uuid: "target"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "checkPassword_charSequence1"
      valueType: "java.lang.String"
      uuid: "checkPassword_charSequence1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "REAL"
      valueType: "org.bitcoinj.utils.Threading"
      uuid: "uuid259"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.bitcoinj.utils.Threading"
        method: "lock"
        methodParameters:
        - value:
            sapientType: "CLASS"
            content: !<regular>
              value: "org.bitcoinj.wallet.BasicKeyChain"
            valueType: "java.lang.Class"
            genericValueType: "org.bitcoinj.wallet.BasicKeyChain"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
      valueType: "java.util.concurrent.locks.ReentrantLock"
      uuid: "<init>_reentrantLock1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.bitcoinj.wallet.BasicKeyChain"
      valueType: "java.lang.Class"
      genericValueType: "org.bitcoinj.wallet.BasicKeyChain"
      uuid: "uuid258"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "REAL"
      valueType: "org.bitcoinj.base.internal.Preconditions"
      uuid: "uuid262"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      valueType: "void"
      uuid: "checkPassword_void1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "uuid260"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "PRIVATE_INNER_CLASS_OR_LAMBDA"
      valueType: "java.util.function.Supplier"
      genericValueType: "java.lang.String"
      uuid: "uuid261"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.bitcoinj.crypto.KeyCrypter"
      uuid: "<init>_keyCrypter1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.bitcoinj.crypto.AesKey"
      uuid: "checkPassword_aesKey1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "checkPassword_charSequence1"
      valueType: "java.lang.String"
      uuid: "checkPassword_charSequence1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "checkPassword_boolean1"
      fixed: true
      equalsMethodPresent: true
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.bitcoinj.crypto.AesKey"
      uuid: "checkPassword_aesKey1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "checkPassword_boolean1"
      fixed: true
      equalsMethodPresent: true
      explicitCastNeeded: false
- method:
    name: "checkAESKey"
    signature: "checkAESKey(org.bitcoinj.crypto.AesKey) : boolean"
    sourceCodeSignature: "boolean checkAESKey(AesKey aesKey)"
    tryCatchBlocks:
    - idExternalInstruction: 0
      id: 1
      catchExceptions:
      - "org.bitcoinj.crypto.KeyCrypterException"
    instructionFingerprint: "9D4FB594E155D4393C293C9F40AE42D3"
  paths:
  - pathId: "path1"
    testPathName: "checkAESKeyWhenHashToKeysIsEmpty"
    constructorSignature: "<init>(org.bitcoinj.crypto.KeyCrypter) : void"
    modelFingerprint: "4FCB2E8C606A186AA4D1F938E8E8BF8F"
    problemWasSolvedByProver: true
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "35099553EB48D2AEC42E2A9279A21C51"
      index: 1
      valueUuid: "target"
    - type: "INPUT"
      name: "aesKey"
      modelFingerprint: "DCA4AEF5E8DED66D0B002FF53D6204FF"
      index: 2
      valueUuid: "checkAESKey_aesKey1"
    - type: "STATIC"
      name: "Threading"
      modelFingerprint: "F7EA5C46482BE836BD810E3E7E297587"
      index: 3
      valueUuid: "uuid264"
      methodExercised:
        target: "org.bitcoinj.utils.Threading"
        name: "lock"
        parameters:
        - name: "clazz"
          valueUuid: "uuid263"
        signature: "lock(Class): ReentrantLock"
        returnValueUuid: "<init>_reentrantLock1"
        access: 9
    - type: "RESULT"
      name: "result"
      modelFingerprint: "3A21543F56248AC92654D6E439128AED"
      index: 4
      valueUuid: "checkAESKey_int1"
    uuid: "92a561ff-2e7a-3f34-99c1-4f10c9a5739d"
    deleted: false
    disabled: false
    ignoredBySystem: false
    prover: "DEFAULT"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.bitcoinj.wallet.BasicKeyChain"
        parameters:
        - name: "crypter"
          value:
            sapientType: "MOCK"
            valueType: "org.bitcoinj.crypto.KeyCrypter"
            uuid: "<init>_keyCrypter1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      valueType: "org.bitcoinj.wallet.BasicKeyChain"
      uuid: "target"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.bitcoinj.crypto.AesKey"
      uuid: "checkAESKey_aesKey1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "REAL"
      valueType: "org.bitcoinj.utils.Threading"
      uuid: "uuid264"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.bitcoinj.utils.Threading"
        method: "lock"
        methodParameters:
        - value:
            sapientType: "CLASS"
            content: !<regular>
              value: "org.bitcoinj.wallet.BasicKeyChain"
            valueType: "java.lang.Class"
            genericValueType: "org.bitcoinj.wallet.BasicKeyChain"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
      valueType: "java.util.concurrent.locks.ReentrantLock"
      uuid: "<init>_reentrantLock1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.bitcoinj.wallet.BasicKeyChain"
      valueType: "java.lang.Class"
      genericValueType: "org.bitcoinj.wallet.BasicKeyChain"
      uuid: "uuid263"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "checkAESKey_int1"
      fixed: true
      equalsMethodPresent: true
      explicitCastNeeded: false
- method:
    name: "getFilter"
    signature: "getFilter(int,double,int) : org.bitcoinj.core.BloomFilter"
    sourceCodeSignature: "BloomFilter getFilter(int size, double falsePositiveRate,\
      \ int tweak)"
    instructionFingerprint: "68739FDD11032B830EE88655757E0570"
  paths:
  - pathId: "path1"
    testPathName: "getFilterWhenHashToKeysValuesIsEmpty"
    constructorSignature: "<init>(org.bitcoinj.crypto.KeyCrypter) : void"
    modelFingerprint: "9A08891E6F586696D24B1F7FB88BCDC2"
    problemWasSolvedByProver: true
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "35099553EB48D2AEC42E2A9279A21C51"
      index: 1
      valueUuid: "target"
    - type: "INPUT"
      name: "size"
      modelFingerprint: "E0D22A3D8F44DD2A8E9FC7B9FFA7B5E4"
      index: 2
      valueUuid: "getFilter_int1"
    - type: "INPUT"
      name: "falsePositiveRate"
      modelFingerprint: "2AF87CA22B4ABB90F43294D8F85267CB"
      index: 3
      valueUuid: "getFilter_double1"
    - type: "INPUT"
      name: "tweak"
      modelFingerprint: "5301D2BD58F7DCA131D68FF92DC628B3"
      index: 4
      valueUuid: "getFilter_int2"
    - type: "STATIC"
      name: "Threading"
      modelFingerprint: "F7EA5C46482BE836BD810E3E7E297587"
      index: 5
      valueUuid: "uuid266"
      methodExercised:
        target: "org.bitcoinj.utils.Threading"
        name: "lock"
        parameters:
        - name: "clazz"
          valueUuid: "uuid265"
        signature: "lock(Class): ReentrantLock"
        returnValueUuid: "<init>_reentrantLock1"
        access: 9
    - type: "RESULT"
      name: "result"
      modelFingerprint: "870EAE666A21D50FEBBD5B84C45B95B3"
      index: 6
      valueUuid: "getFilter_bloomFilter1"
    uuid: "9266e2a3-866e-38e5-be88-a823742ce3e0"
    deleted: false
    disabled: false
    ignoredBySystem: false
    prover: "DEFAULT"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.bitcoinj.wallet.BasicKeyChain"
        parameters:
        - name: "crypter"
          value:
            sapientType: "MOCK"
            valueType: "org.bitcoinj.crypto.KeyCrypter"
            uuid: "<init>_keyCrypter1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      valueType: "org.bitcoinj.wallet.BasicKeyChain"
      uuid: "target"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: 0
      valueType: "int"
      uuid: "getFilter_int1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: 0.0
      valueType: "double"
      uuid: "getFilter_double1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: 0
      valueType: "int"
      uuid: "getFilter_int2"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "REAL"
      valueType: "org.bitcoinj.utils.Threading"
      uuid: "uuid266"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.bitcoinj.utils.Threading"
        method: "lock"
        methodParameters:
        - value:
            sapientType: "CLASS"
            content: !<regular>
              value: "org.bitcoinj.wallet.BasicKeyChain"
            valueType: "java.lang.Class"
            genericValueType: "org.bitcoinj.wallet.BasicKeyChain"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
      valueType: "java.util.concurrent.locks.ReentrantLock"
      uuid: "<init>_reentrantLock1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.bitcoinj.wallet.BasicKeyChain"
      valueType: "java.lang.Class"
      genericValueType: "org.bitcoinj.wallet.BasicKeyChain"
      uuid: "uuid265"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.bitcoinj.core.BloomFilter"
        parameters:
        - name: "elements"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 0
            valueType: "int"
            uuid: "getFilter_int1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "falsePositiveRate"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 0.0
            valueType: "double"
            uuid: "getFilter_double1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "randomNonce"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 0
            valueType: "int"
            uuid: "getFilter_int2"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: true
      valueType: "org.bitcoinj.core.BloomFilter"
      uuid: "getFilter_bloomFilter1"
      fixed: true
      equalsMethodPresent: true
      explicitCastNeeded: false
- method:
    name: "numBloomFilterEntries"
    signature: "numBloomFilterEntries() : int"
    sourceCodeSignature: "int numBloomFilterEntries()"
    instructionFingerprint: "4D3CAACE83B5BC254A0F083E43F7E2C2"
  paths:
  - pathId: "path1"
    testPathName: "numBloomFilterEntriesTest"
    constructorSignature: "<init>(org.bitcoinj.crypto.KeyCrypter) : void"
    modelFingerprint: "A2DE71009B13686EB765D5389C11DFC9"
    problemWasSolvedByProver: true
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "35099553EB48D2AEC42E2A9279A21C51"
      index: 1
      valueUuid: "target"
    - type: "STATIC"
      name: "Threading"
      modelFingerprint: "F7EA5C46482BE836BD810E3E7E297587"
      index: 2
      valueUuid: "uuid268"
      methodExercised:
        target: "org.bitcoinj.utils.Threading"
        name: "lock"
        parameters:
        - name: "clazz"
          valueUuid: "uuid267"
        signature: "lock(Class): ReentrantLock"
        returnValueUuid: "<init>_reentrantLock1"
        access: 9
    - type: "RESULT"
      name: "result"
      modelFingerprint: "158A76FAE4C1E5741587C22A6148B6F0"
      index: 3
      valueUuid: "uuid269"
    uuid: "bce340de-c9e7-3b09-ae2c-d943d6a73f89"
    deleted: false
    disabled: false
    ignoredBySystem: false
    prover: "DEFAULT"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.bitcoinj.wallet.BasicKeyChain"
        parameters:
        - name: "crypter"
          value:
            sapientType: "MOCK"
            valueType: "org.bitcoinj.crypto.KeyCrypter"
            uuid: "<init>_keyCrypter1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      valueType: "org.bitcoinj.wallet.BasicKeyChain"
      uuid: "target"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "REAL"
      valueType: "org.bitcoinj.utils.Threading"
      uuid: "uuid268"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.bitcoinj.utils.Threading"
        method: "lock"
        methodParameters:
        - value:
            sapientType: "CLASS"
            content: !<regular>
              value: "org.bitcoinj.wallet.BasicKeyChain"
            valueType: "java.lang.Class"
            genericValueType: "org.bitcoinj.wallet.BasicKeyChain"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
      valueType: "java.util.concurrent.locks.ReentrantLock"
      uuid: "<init>_reentrantLock1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.bitcoinj.wallet.BasicKeyChain"
      valueType: "java.lang.Class"
      genericValueType: "org.bitcoinj.wallet.BasicKeyChain"
      uuid: "uuid267"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: 0
      valueType: "int"
      uuid: "uuid269"
      fixed: true
      equalsMethodPresent: true
      explicitCastNeeded: false
- method:
    name: "findOldestKeyAfter"
    signature: "findOldestKeyAfter(java.time.Instant) : java.util.Optional<org.bitcoinj.crypto.ECKey>"
    sourceCodeSignature: "Optional<ECKey> findOldestKeyAfter(Instant time)"
    instructionFingerprint: "E8DFC1C6753620068EBA65F5EF2AA36C"
  paths:
  - pathId: "path1"
    testPathName: "findOldestKeyAfterWhenHashToKeysValuesIsEmpty"
    constructorSignature: "<init>(org.bitcoinj.crypto.KeyCrypter) : void"
    modelFingerprint: "5A3AEFF8133FA97A766DF74C28B7DE69"
    problemWasSolvedByProver: true
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "35099553EB48D2AEC42E2A9279A21C51"
      index: 1
      valueUuid: "target"
    - type: "INPUT"
      name: "time"
      modelFingerprint: "1B3E2EE745C7B5B4A3953F9C6FA563D3"
      index: 2
      valueUuid: "findOldestKeyAfter_instant1"
    - type: "STATIC"
      name: "Threading"
      modelFingerprint: "F7EA5C46482BE836BD810E3E7E297587"
      index: 3
      valueUuid: "uuid271"
      methodExercised:
        target: "org.bitcoinj.utils.Threading"
        name: "lock"
        parameters:
        - name: "clazz"
          valueUuid: "uuid270"
        signature: "lock(Class): ReentrantLock"
        returnValueUuid: "<init>_reentrantLock1"
        access: 9
    - type: "RESULT"
      name: "result"
      modelFingerprint: "22834AE7403127A3D9C50BF0BADF382A"
      index: 4
      valueUuid: "findOldestKeyAfter_optional1"
    uuid: "92d970e1-425c-316a-b84d-dd818fccb15d"
    deleted: false
    disabled: false
    ignoredBySystem: false
    prover: "DEFAULT"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.bitcoinj.wallet.BasicKeyChain"
        parameters:
        - name: "crypter"
          value:
            sapientType: "MOCK"
            valueType: "org.bitcoinj.crypto.KeyCrypter"
            uuid: "<init>_keyCrypter1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      valueType: "org.bitcoinj.wallet.BasicKeyChain"
      uuid: "target"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.time.Instant"
        method: "ofEpochSecond"
        methodParameters:
        - name: "epochSecond"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 1700000000
            valueType: "int"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
      valueType: "java.time.Instant"
      uuid: "findOldestKeyAfter_instant1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "REAL"
      valueType: "org.bitcoinj.utils.Threading"
      uuid: "uuid271"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.bitcoinj.utils.Threading"
        method: "lock"
        methodParameters:
        - value:
            sapientType: "CLASS"
            content: !<regular>
              value: "org.bitcoinj.wallet.BasicKeyChain"
            valueType: "java.lang.Class"
            genericValueType: "org.bitcoinj.wallet.BasicKeyChain"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
      valueType: "java.util.concurrent.locks.ReentrantLock"
      uuid: "<init>_reentrantLock1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.bitcoinj.wallet.BasicKeyChain"
      valueType: "java.lang.Class"
      genericValueType: "org.bitcoinj.wallet.BasicKeyChain"
      uuid: "uuid270"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OPTIONAL"
      content: !<optional>
        value:
          sapientType: "NULL"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        target: "java.util.Optional"
      valueType: "java.util.Optional"
      genericValueType: "org.bitcoinj.crypto.ECKey"
      uuid: "findOldestKeyAfter_optional1"
      fixed: false
      equalsMethodPresent: true
      explicitCastNeeded: false
- method:
    name: "findOldestKeyAfter"
    signature: "findOldestKeyAfter(long) : org.bitcoinj.crypto.ECKey"
    sourceCodeSignature: "ECKey findOldestKeyAfter(long timeSecs)"
    instructionFingerprint: "A4881B5FA9419E82751DE1FBF991AEE2"
  paths:
  - pathId: "path1"
    testPathName: "findOldestKeyAfter1Test"
    constructorSignature: "<init>(org.bitcoinj.crypto.KeyCrypter) : void"
    modelFingerprint: "04F1D36C91537BCB018C26F3E9E032E6"
    problemWasSolvedByProver: true
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "35099553EB48D2AEC42E2A9279A21C51"
      index: 1
      valueUuid: "target"
    - type: "INPUT"
      name: "timeSecs"
      modelFingerprint: "DF74AB8094E9E52096AA0F42AFB26C7C"
      index: 2
      valueUuid: "findOldestKeyAfter_long1"
    - type: "STATIC"
      name: "Threading"
      modelFingerprint: "F7EA5C46482BE836BD810E3E7E297587"
      index: 3
      valueUuid: "uuid273"
      methodExercised:
        target: "org.bitcoinj.utils.Threading"
        name: "lock"
        parameters:
        - name: "clazz"
          valueUuid: "uuid272"
        signature: "lock(Class): ReentrantLock"
        returnValueUuid: "<init>_reentrantLock1"
        access: 9
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "4CBA46D5FEB4C360C060060481567438"
      index: 4
      methodExercised:
        target: "target"
        name: "findOldestKeyAfter"
        parameters:
        - name: "time"
          valueUuid: "findOldestKeyAfter_instant1"
        signature: "findOldestKeyAfter(Instant): Optional"
        returnValueUuid: "findOldestKeyAfter_optional1"
        access: 1
    - type: "RESULT"
      name: "result"
      modelFingerprint: "08890B6BF3164EA84B2BFA20C164B778"
      index: 5
      valueUuid: "uuid274"
    uuid: "f86a5b47-e867-37c3-8872-383eb8f89aac"
    deleted: false
    disabled: false
    ignoredBySystem: false
    prover: "DEFAULT"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.bitcoinj.wallet.BasicKeyChain"
        parameters:
        - name: "crypter"
          value:
            sapientType: "MOCK"
            valueType: "org.bitcoinj.crypto.KeyCrypter"
            uuid: "<init>_keyCrypter1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      valueType: "org.bitcoinj.wallet.BasicKeyChain"
      uuid: "target"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: 1
      valueType: "long"
      uuid: "findOldestKeyAfter_long1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "REAL"
      valueType: "org.bitcoinj.utils.Threading"
      uuid: "uuid273"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.bitcoinj.utils.Threading"
        method: "lock"
        methodParameters:
        - value:
            sapientType: "CLASS"
            content: !<regular>
              value: "org.bitcoinj.wallet.BasicKeyChain"
            valueType: "java.lang.Class"
            genericValueType: "org.bitcoinj.wallet.BasicKeyChain"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
      valueType: "java.util.concurrent.locks.ReentrantLock"
      uuid: "<init>_reentrantLock1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.bitcoinj.wallet.BasicKeyChain"
      valueType: "java.lang.Class"
      genericValueType: "org.bitcoinj.wallet.BasicKeyChain"
      uuid: "uuid272"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OPTIONAL"
      content: !<optional>
        value:
          sapientType: "NULL"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        target: "java.util.Optional"
      valueType: "java.util.Optional"
      genericValueType: "org.bitcoinj.crypto.ECKey"
      uuid: "findOldestKeyAfter_optional1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.time.Instant"
        method: "ofEpochSecond"
        methodParameters:
        - value:
            sapientType: "BASIC"
            content: !<regular>
              value: 1
            valueType: "long"
            uuid: "findOldestKeyAfter_long1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
      valueType: "java.time.Instant"
      uuid: "findOldestKeyAfter_instant1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "NULL"
      valueType: "org.bitcoinj.crypto.ECKey"
      uuid: "uuid274"
      fixed: false
      equalsMethodPresent: true
      explicitCastNeeded: true
- method:
    name: "findKeysBefore"
    signature: "findKeysBefore(java.time.Instant) : java.util.List<org.bitcoinj.crypto.ECKey>"
    sourceCodeSignature: "List<ECKey> findKeysBefore(Instant time)"
    instructionFingerprint: "DF7CAA5EC720BEB6CC4774E394663725"
  paths:
  - pathId: "path1"
    testPathName: "findKeysBeforeWhenHashToKeysValuesIsEmpty"
    constructorSignature: "<init>(org.bitcoinj.crypto.KeyCrypter) : void"
    modelFingerprint: "AF8B70B3D456D3873005EEE0873C516B"
    problemWasSolvedByProver: true
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "35099553EB48D2AEC42E2A9279A21C51"
      index: 1
      valueUuid: "target"
    - type: "INPUT"
      name: "time"
      modelFingerprint: "1B3E2EE745C7B5B4A3953F9C6FA563D3"
      index: 2
      valueUuid: "findKeysBefore_instant1"
    - type: "STATIC"
      name: "Threading"
      modelFingerprint: "F7EA5C46482BE836BD810E3E7E297587"
      index: 3
      valueUuid: "uuid276"
      methodExercised:
        target: "org.bitcoinj.utils.Threading"
        name: "lock"
        parameters:
        - name: "clazz"
          valueUuid: "uuid275"
        signature: "lock(Class): ReentrantLock"
        returnValueUuid: "<init>_reentrantLock1"
        access: 9
    - type: "RESULT"
      name: "result"
      modelFingerprint: "5F5C60B0AADBAA7A9ED99F5DEE47026A"
      index: 4
      valueUuid: "findKeysBefore_linkedList1"
    uuid: "b76a6220-3783-3356-ae38-5dddbf5dead9"
    deleted: false
    disabled: false
    ignoredBySystem: false
    prover: "DEFAULT"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.bitcoinj.wallet.BasicKeyChain"
        parameters:
        - name: "crypter"
          value:
            sapientType: "MOCK"
            valueType: "org.bitcoinj.crypto.KeyCrypter"
            uuid: "<init>_keyCrypter1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      valueType: "org.bitcoinj.wallet.BasicKeyChain"
      uuid: "target"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.time.Instant"
        method: "ofEpochSecond"
        methodParameters:
        - name: "epochSecond"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 1700000000
            valueType: "int"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
      valueType: "java.time.Instant"
      uuid: "findKeysBefore_instant1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "REAL"
      valueType: "org.bitcoinj.utils.Threading"
      uuid: "uuid276"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.bitcoinj.utils.Threading"
        method: "lock"
        methodParameters:
        - value:
            sapientType: "CLASS"
            content: !<regular>
              value: "org.bitcoinj.wallet.BasicKeyChain"
            valueType: "java.lang.Class"
            genericValueType: "org.bitcoinj.wallet.BasicKeyChain"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
      valueType: "java.util.concurrent.locks.ReentrantLock"
      uuid: "<init>_reentrantLock1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.bitcoinj.wallet.BasicKeyChain"
      valueType: "java.lang.Class"
      genericValueType: "org.bitcoinj.wallet.BasicKeyChain"
      uuid: "uuid275"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.LinkedList"
        parameters: []
        values: []
      valueType: "java.util.List"
      genericValueType: "org.bitcoinj.crypto.ECKey"
      uuid: "findKeysBefore_linkedList1"
      fixed: false
      equalsMethodPresent: true
      explicitCastNeeded: false
- method:
    name: "findKeysBefore"
    signature: "findKeysBefore(long) : java.util.List<org.bitcoinj.crypto.ECKey>"
    sourceCodeSignature: "List<ECKey> findKeysBefore(long timeSecs)"
    instructionFingerprint: "B23802A5EAE3D0A00A8EE1EFA120993E"
  paths:
  - pathId: "path1"
    testPathName: "findKeysBefore1Test"
    constructorSignature: "<init>(org.bitcoinj.crypto.KeyCrypter) : void"
    modelFingerprint: "D802ABBDDD338B0F44A0011C50184428"
    problemWasSolvedByProver: true
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "35099553EB48D2AEC42E2A9279A21C51"
      index: 1
      valueUuid: "target"
    - type: "INPUT"
      name: "timeSecs"
      modelFingerprint: "DF74AB8094E9E52096AA0F42AFB26C7C"
      index: 2
      valueUuid: "findKeysBefore_long1"
    - type: "STATIC"
      name: "Threading"
      modelFingerprint: "F7EA5C46482BE836BD810E3E7E297587"
      index: 3
      valueUuid: "uuid278"
      methodExercised:
        target: "org.bitcoinj.utils.Threading"
        name: "lock"
        parameters:
        - name: "clazz"
          valueUuid: "uuid277"
        signature: "lock(Class): ReentrantLock"
        returnValueUuid: "<init>_reentrantLock1"
        access: 9
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "36EE1E1371C6561E67FAB66A21E0F9E6"
      index: 4
      methodExercised:
        target: "target"
        name: "findKeysBefore"
        parameters:
        - name: "time"
          valueUuid: "findKeysBefore_instant1"
        signature: "findKeysBefore(Instant): List"
        returnValueUuid: "findKeysBefore_list1"
        access: 1
    - type: "RESULT"
      name: "result"
      modelFingerprint: "6DF45785DA4A51B7AE28D5F0F20F6DB8"
      index: 5
      valueUuid: "findKeysBefore_list1"
    uuid: "5cba9991-a1d7-3cf6-b24a-e46b4bae8418"
    deleted: false
    disabled: false
    ignoredBySystem: false
    prover: "DEFAULT"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.bitcoinj.wallet.BasicKeyChain"
        parameters:
        - name: "crypter"
          value:
            sapientType: "MOCK"
            valueType: "org.bitcoinj.crypto.KeyCrypter"
            uuid: "<init>_keyCrypter1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      valueType: "org.bitcoinj.wallet.BasicKeyChain"
      uuid: "target"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: 1
      valueType: "long"
      uuid: "findKeysBefore_long1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "REAL"
      valueType: "org.bitcoinj.utils.Threading"
      uuid: "uuid278"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.bitcoinj.utils.Threading"
        method: "lock"
        methodParameters:
        - value:
            sapientType: "CLASS"
            content: !<regular>
              value: "org.bitcoinj.wallet.BasicKeyChain"
            valueType: "java.lang.Class"
            genericValueType: "org.bitcoinj.wallet.BasicKeyChain"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
      valueType: "java.util.concurrent.locks.ReentrantLock"
      uuid: "<init>_reentrantLock1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.bitcoinj.wallet.BasicKeyChain"
      valueType: "java.lang.Class"
      genericValueType: "org.bitcoinj.wallet.BasicKeyChain"
      uuid: "uuid277"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.List"
      genericValueType: "org.bitcoinj.crypto.ECKey"
      uuid: "findKeysBefore_list1"
      fixed: false
      equalsMethodPresent: true
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.time.Instant"
        method: "ofEpochSecond"
        methodParameters:
        - value:
            sapientType: "BASIC"
            content: !<regular>
              value: 1
            valueType: "long"
            uuid: "findKeysBefore_long1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
      valueType: "java.time.Instant"
      uuid: "findKeysBefore_instant1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.List"
      genericValueType: "org.bitcoinj.crypto.ECKey"
      uuid: "findKeysBefore_list1"
      fixed: false
      equalsMethodPresent: true
      explicitCastNeeded: false
- method:
    name: "toString"
    signature: "toString(boolean,org.bitcoinj.crypto.AesKey,org.bitcoinj.base.Network)\
      \ : java.lang.String"
    sourceCodeSignature: "String toString(boolean includePrivateKeys, @Nullable AesKey\
      \ aesKey, Network network)"
    instructionFingerprint: "836E761E78A54B5B16C0A900F0D22334"
  paths:
  - pathId: "path1"
    testPathName: "toStringWhenKeysIsNotEmpty"
    constructorSignature: "<init>(org.bitcoinj.crypto.KeyCrypter) : void"
    modelFingerprint: "A597287CB88A3C875316497B1B3EC661"
    problemWasSolvedByProver: false
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "A293FA6E16AEC57C6F6DEAD09EFB735A"
      index: 1
      valueUuid: "target"
    - type: "INPUT"
      name: "includePrivateKeys"
      modelFingerprint: "98252565939A2C2E475AAFECD4F3A62E"
      index: 2
      valueUuid: "toString_boolean1"
    - type: "INPUT"
      name: "aesKey"
      modelFingerprint: "7A748A4B6A869B7D49331C3D0A13C5CE"
      index: 3
      valueUuid: "toString_aesKey1"
    - type: "INPUT"
      name: "network"
      modelFingerprint: "21265044845AADF4BB42838860E37312"
      index: 4
      valueUuid: "toString_network1"
    - type: "STATIC"
      name: "Threading"
      modelFingerprint: "F55B90D8DD053AB7565D437A67FC8C9E"
      index: 5
      valueUuid: "uuid2"
      methodExercised:
        target: "org.bitcoinj.utils.Threading"
        name: "lock"
        parameters:
        - name: "clazz"
          valueUuid: "uuid1"
        signature: "lock(Class): ReentrantLock"
        returnValueUuid: "<init>_reentrantLock1"
        access: 9
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "12CB27CBF7A483F2A7CFA91BFC3ABAD7"
      index: 6
      methodExercised:
        target: "target"
        name: "getKeys"
        parameters: []
        signature: "getKeys(): List"
        returnValueUuid: "toString_list1"
        access: 1
    - type: "LOCAL_VARIABLE"
      name: "key"
      modelFingerprint: "A79DB3B7AF037495BABA43B17113D51C"
      index: 7
      valueUuid: "toString_object1"
      methodExercised:
        target: "key"
        name: "formatKeyWithAddress"
        parameters:
        - name: "includePrivateKeys"
          valueUuid: "toString_boolean1"
        - name: "aesKey"
          valueUuid: "toString_aesKey1"
        - name: "builder"
          valueUuid: "toString_stringBuilder1"
        - name: "network"
          valueUuid: "toString_network1"
        - name: "outputScriptType"
          valueUuid: "uuid3"
        - name: "comment"
          valueUuid: "uuid4"
        signature: "formatKeyWithAddress(boolean,AesKey,StringBuilder,Network,not-detected,String):\
          \ void"
        returnValueUuid: "toString_void2"
        access: 1
    - type: "RESULT"
      name: "result"
      modelFingerprint: "D1F433D4EB9F8805FF391E82DAB508AB"
      index: 8
      valueUuid: "toString_string1"
    uuid: "2f338cc5-4f2a-30e5-87d8-039bec302a04"
    deleted: false
    disabled: true
    ignoredBySystem: false
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: java.util.Collections.sort(java.util.List<org.bitcoinj.crypto.ECKey>,java.util.Comparator)\
        \ : void"
    prover: "LLM"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: true
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.bitcoinj.wallet.BasicKeyChain"
        parameters:
        - name: "crypter"
          value:
            sapientType: "MOCK"
            valueType: "org.bitcoinj.crypto.KeyCrypter"
            uuid: "<init>_keyCrypter1"
            fixed: false
            nameForMock: "some_crypter_value"
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      valueType: "org.bitcoinj.wallet.BasicKeyChain"
      uuid: "target"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "toString_boolean1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.bitcoinj.crypto.AesKey"
        parameters:
        - name: "keyBytes"
          value:
            sapientType: "ARRAY"
            content: !<array>
              values: {}
            valueType: "byte[]"
            uuid: "toString_aesKey1-keyBytes"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      valueType: "org.bitcoinj.crypto.AesKey"
      uuid: "toString_aesKey1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.bitcoinj.base.Network"
      uuid: "toString_network1"
      fixed: false
      nameForMock: "some_network_value"
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.bitcoinj.utils.Threading"
      uuid: "uuid2"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.bitcoinj.utils.Threading"
        method: "lock"
        methodParameters:
        - value:
            sapientType: "CLASS"
            content: !<regular>
              value: "org.bitcoinj.wallet.BasicKeyChain"
            valueType: "java.lang.Class"
            genericValueType: "org.bitcoinj.wallet.BasicKeyChain"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
      valueType: "java.util.concurrent.locks.ReentrantLock"
      uuid: "<init>_reentrantLock1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.bitcoinj.wallet.BasicKeyChain"
      valueType: "java.lang.Class"
      genericValueType: "org.bitcoinj.wallet.BasicKeyChain"
      uuid: "uuid1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.ArrayList"
        parameters: []
        values:
        - sapientType: "MOCK"
          valueType: "org.bitcoinj.crypto.ECKey"
          uuid: "toString_object1"
          fixed: false
          collectionUuid: "toString_list1"
          equalsMethodPresent: false
          explicitCastNeeded: false
      valueType: "java.util.List"
      genericValueType: "org.bitcoinj.crypto.ECKey"
      uuid: "toString_list1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.bitcoinj.crypto.ECKey"
      uuid: "toString_object1"
      fixed: false
      collectionUuid: "toString_list1"
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      valueType: "void"
      uuid: "toString_void2"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "toString_boolean1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.bitcoinj.crypto.AesKey"
        parameters:
        - name: "keyBytes"
          value:
            sapientType: "ARRAY"
            content: !<array>
              values: {}
            valueType: "byte[]"
            uuid: "toString_aesKey1-keyBytes"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      valueType: "org.bitcoinj.crypto.AesKey"
      uuid: "toString_aesKey1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "STRING_BUILDER"
      content: !<string-builder>
        values: []
        initValues: []
      valueType: "java.lang.StringBuilder"
      uuid: "toString_stringBuilder1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.bitcoinj.base.Network"
      uuid: "toString_network1"
      fixed: false
      nameForMock: "some_network_value"
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "NULL"
      uuid: "uuid3"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "imported"
      valueType: "java.lang.String"
      uuid: "uuid4"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: ""
      valueType: "java.lang.String"
      uuid: "toString_string1"
      fixed: false
      equalsMethodPresent: true
      explicitCastNeeded: false
  - pathId: "path2"
    testPathName: "toStringWhenKeysIsEmpty"
    constructorSignature: "<init>(org.bitcoinj.crypto.KeyCrypter) : void"
    modelFingerprint: "B7E54A28404603685BA6B3EC940AB5EA"
    problemWasSolvedByProver: false
    truncated: true
    inputParameters: []
    uuid: "67e90694-8ad8-38de-a1bf-7bbecc663c22"
    deleted: true
    disabled: false
    ignoredBySystem: true
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: java.util.Collections.sort(java.util.List<org.bitcoinj.crypto.ECKey>,java.util.Comparator)\
        \ : void"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues: []
- method:
    name: "toString"
    signature: "toString(boolean,org.bitcoinj.crypto.AesKey,org.bitcoinj.core.NetworkParameters)\
      \ : java.lang.String"
    sourceCodeSignature: "String toString(boolean includePrivateKeys, @Nullable AesKey\
      \ aesKey, NetworkParameters params)"
    instructionFingerprint: "63D44F600D1D39A08DC08CAD13DDB789"
  paths:
  - pathId: "path1"
    testPathName: "toString1Test"
    constructorSignature: "<init>(org.bitcoinj.crypto.KeyCrypter) : void"
    modelFingerprint: "07285379E3FD36540ED986AF34E958B8"
    problemWasSolvedByProver: true
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "35099553EB48D2AEC42E2A9279A21C51"
      index: 1
      valueUuid: "target"
    - type: "INPUT"
      name: "includePrivateKeys"
      modelFingerprint: "E5B35BC2A050FDF3A36DB54EB387B4AE"
      index: 2
      valueUuid: "toString_boolean1"
    - type: "INPUT"
      name: "aesKey"
      modelFingerprint: "DCA4AEF5E8DED66D0B002FF53D6204FF"
      index: 3
      valueUuid: "toString_aesKey1"
    - type: "INPUT"
      name: "params"
      modelFingerprint: "00E8B0A409051C389A8EA4BD13728A98"
      index: 4
      valueUuid: "toString_networkParameters1"
    - type: "STATIC"
      name: "Threading"
      modelFingerprint: "F7EA5C46482BE836BD810E3E7E297587"
      index: 5
      valueUuid: "uuid286"
      methodExercised:
        target: "org.bitcoinj.utils.Threading"
        name: "lock"
        parameters:
        - name: "clazz"
          valueUuid: "uuid285"
        signature: "lock(Class): ReentrantLock"
        returnValueUuid: "<init>_reentrantLock1"
        access: 9
    - type: "LOCAL_VARIABLE"
      name: "params"
      modelFingerprint: "D3F477F2203E38AED3675605B36AEDBC"
      index: 6
      valueUuid: "toString_networkParameters1"
      methodExercised:
        target: "params"
        name: "network"
        parameters: []
        signature: "network(): Network"
        returnValueUuid: "toString_network1"
        access: 1
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "A686B69EA07CD4E19D1353C1D15E7C74"
      index: 7
      methodExercised:
        target: "target"
        name: "toString"
        parameters:
        - name: "includePrivateKeys"
          valueUuid: "toString_boolean1"
        - name: "aesKey"
          valueUuid: "toString_aesKey1"
        - name: "network"
          valueUuid: "toString_network1"
        signature: "toString(boolean,AesKey,Network): String"
        returnValueUuid: "toString_string1"
        access: 1
    - type: "RESULT"
      name: "result"
      modelFingerprint: "D1F433D4EB9F8805FF391E82DAB508AB"
      index: 8
      valueUuid: "toString_string1"
    uuid: "cabd8b84-4f2d-339c-9d46-60cffe26dac3"
    deleted: false
    disabled: false
    ignoredBySystem: false
    prover: "DEFAULT"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.bitcoinj.wallet.BasicKeyChain"
        parameters:
        - name: "crypter"
          value:
            sapientType: "MOCK"
            valueType: "org.bitcoinj.crypto.KeyCrypter"
            uuid: "<init>_keyCrypter1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      valueType: "org.bitcoinj.wallet.BasicKeyChain"
      uuid: "target"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "toString_boolean1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.bitcoinj.crypto.AesKey"
      uuid: "toString_aesKey1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.bitcoinj.core.NetworkParameters"
      uuid: "toString_networkParameters1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "REAL"
      valueType: "org.bitcoinj.utils.Threading"
      uuid: "uuid286"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.bitcoinj.utils.Threading"
        method: "lock"
        methodParameters:
        - value:
            sapientType: "CLASS"
            content: !<regular>
              value: "org.bitcoinj.wallet.BasicKeyChain"
            valueType: "java.lang.Class"
            genericValueType: "org.bitcoinj.wallet.BasicKeyChain"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
      valueType: "java.util.concurrent.locks.ReentrantLock"
      uuid: "<init>_reentrantLock1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.bitcoinj.wallet.BasicKeyChain"
      valueType: "java.lang.Class"
      genericValueType: "org.bitcoinj.wallet.BasicKeyChain"
      uuid: "uuid285"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.bitcoinj.core.NetworkParameters"
      uuid: "toString_networkParameters1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.bitcoinj.base.Network"
      uuid: "toString_network1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_toString1"
      valueType: "java.lang.String"
      uuid: "toString_string1"
      fixed: false
      equalsMethodPresent: true
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "toString_boolean1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.bitcoinj.crypto.AesKey"
      uuid: "toString_aesKey1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.bitcoinj.base.Network"
      uuid: "toString_network1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_toString1"
      valueType: "java.lang.String"
      uuid: "toString_string1"
      fixed: false
      equalsMethodPresent: true
      explicitCastNeeded: false
