---
modelFingerprint: "4952CB4247E3D6AB450650C417AEB6C6"
methods:
- method:
    name: "getDisplayNameFromCertificate"
    signature: "getDisplayNameFromCertificate(java.security.cert.X509Certificate,boolean)\
      \ : java.lang.String"
    sourceCodeSignature: "String getDisplayNameFromCertificate(@Nonnull X509Certificate\
      \ certificate, boolean withLocation)"
    tryCatchBlocks:
    - idExternalInstruction: 0
      id: 1
      catchExceptions:
      - "java.security.cert.CertificateParsingException"
    instructionFingerprint: "344F449892DAB3801267195AE77254FF"
  paths:
  - pathId: "path36"
    testPathName: "getDisplayNameFromCertificateWhenCommonNameIsNull"
    modelFingerprint: "B70E6A0C333F463A628DE618EB2216FE"
    problemWasSolvedByProver: false
    truncated: true
    inputParameters: []
    uuid: "0f6e0e0c-83af-38b1-b203-8b9852d4f95b"
    deleted: true
    disabled: false
    ignoredBySystem: true
    variablesCouldNotBeIsolated: "name"
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: java.security.cert.X509Certificate.getSubjectX500Principal()\
        \ : javax.security.auth.x500.X500Principal"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues: []
  - pathId: "path7"
    testPathName: "getDisplayNameFromCertificateWhenCommonNameIsNotNull"
    modelFingerprint: "64724F8521E22A6829B74FAD40A79DD5"
    problemWasSolvedByProver: false
    truncated: true
    inputParameters: []
    uuid: "489d94e8-b749-3885-96ac-c627cc6b2369"
    deleted: true
    disabled: false
    ignoredBySystem: true
    variablesCouldNotBeIsolated: "name"
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: java.security.cert.X509Certificate.getSubjectX500Principal()\
        \ : javax.security.auth.x500.X500Principal"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues: []
  - pathId: "path8"
    testPathName: "getDisplayNameFromCertificateWhenOrgIsNullAndCommonNameIsNull"
    modelFingerprint: "43BEAF2FCED92FAF9269F7BD28E79C05"
    problemWasSolvedByProver: false
    truncated: true
    inputParameters: []
    uuid: "5f984c17-7f01-3ed4-a293-96e0ab7a3ed2"
    deleted: true
    disabled: false
    ignoredBySystem: true
    variablesCouldNotBeIsolated: "name"
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: java.security.cert.X509Certificate.getSubjectX500Principal()\
        \ : javax.security.auth.x500.X500Principal"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues: []
  - pathId: "path35"
    testPathName: "getDisplayNameFromCertificateWhenSubjectAlternativeNamesIsEmptyAndOrgIsNullAndCommonNameIsNull"
    modelFingerprint: "DE1310308C03782BC940CF0C29ABAF94"
    problemWasSolvedByProver: false
    truncated: true
    inputParameters: []
    uuid: "e6e52832-8c8a-3876-8f4d-c495611d6c18"
    deleted: true
    disabled: false
    ignoredBySystem: true
    variablesCouldNotBeIsolated: "name"
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: java.security.cert.X509Certificate.getSubjectX500Principal()\
        \ : javax.security.auth.x500.X500Principal"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues: []
  - pathId: "path5"
    testPathName: "getDisplayNameFromCertificateWhenOrgIsNullAndCommonNameIsNotNull"
    modelFingerprint: "358FB8CD81927007E6C9A7B65C2F9A8E"
    problemWasSolvedByProver: false
    truncated: true
    inputParameters: []
    uuid: "343323e0-12ee-38d8-b5a4-27a3092d677e"
    deleted: true
    disabled: false
    ignoredBySystem: true
    variablesCouldNotBeIsolated: "name"
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: java.security.cert.X509Certificate.getSubjectX500Principal()\
        \ : javax.security.auth.x500.X500Principal"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues: []
  - pathId: "path6"
    testPathName: "getDisplayNameFromCertificateWhenSubjectAlternativeNamesIsNotNullAndSubjectAlternativeNamesIsEmptyAndOrgIsNullAndCommon"
    modelFingerprint: "BE13B5BFDA70F4C3E1FE00EB088CED48"
    problemWasSolvedByProver: false
    truncated: true
    inputParameters: []
    uuid: "a78e956c-9488-340a-a550-3ae3f26ef415"
    deleted: true
    disabled: false
    ignoredBySystem: true
    variablesCouldNotBeIsolated: "name"
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: java.security.cert.X509Certificate.getSubjectX500Principal()\
        \ : javax.security.auth.x500.X500Principal"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues: []
  - pathId: "path42"
    testPathName: "getDisplayNameFromCertificateWhenCaughtCertificateParsingExceptionAndOrgIsNullAndCommonNameIsNotNull"
    modelFingerprint: "1ACFA16CED2809FC48B97F642CA2AD51"
    problemWasSolvedByProver: false
    catchBlockExercised:
      idExternalInstruction: 0
      id: 1
      catchExceptions:
      - "java.security.cert.CertificateParsingException"
    truncated: true
    inputParameters: []
    uuid: "ff088907-29d7-3612-b669-d2e71bcb4dda"
    deleted: true
    disabled: false
    ignoredBySystem: true
    variablesCouldNotBeIsolated: "name"
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: java.security.cert.X509Certificate.getSubjectX500Principal()\
        \ : javax.security.auth.x500.X500Principal"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues: []
  - pathId: "path43"
    testPathName: "getDisplayNameFromCertificateWhenCaughtCertificateParsingExceptionAndOrgIsNullAndCommonNameIsNull"
    modelFingerprint: "609291079DFF99A19525F9183B7D10B1"
    problemWasSolvedByProver: false
    catchBlockExercised:
      idExternalInstruction: 0
      id: 1
      catchExceptions:
      - "java.security.cert.CertificateParsingException"
    truncated: true
    inputParameters: []
    uuid: "380306ce-02ad-3b61-b248-060f5d3cdd21"
    deleted: true
    disabled: false
    ignoredBySystem: true
    variablesCouldNotBeIsolated: "name"
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: java.security.cert.X509Certificate.getSubjectX500Principal()\
        \ : javax.security.auth.x500.X500Principal"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues: []
  - pathId: "path18"
    testPathName: "getDisplayNameFromCertificateWhenWithLocation"
    modelFingerprint: "F3073298B9647DBE9E4E466B35E6918E"
    problemWasSolvedByProver: false
    truncated: true
    inputParameters: []
    uuid: "276036c3-34f7-3f0f-93bf-6472bc9c868d"
    deleted: true
    disabled: false
    ignoredBySystem: true
    variablesCouldNotBeIsolated: "name"
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: java.security.cert.X509Certificate.getSubjectX500Principal()\
        \ : javax.security.auth.x500.X500Principal"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues: []
  - pathId: "path19"
    testPathName: "getDisplayNameFromCertificateWhenNotWithLocation"
    modelFingerprint: "3B6BE8A6A16F55692024CE79BFD40594"
    problemWasSolvedByProver: false
    truncated: true
    inputParameters: []
    uuid: "427622bd-da68-39ac-8fd0-3550eaa9435a"
    deleted: true
    disabled: false
    ignoredBySystem: true
    variablesCouldNotBeIsolated: "name"
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: java.security.cert.X509Certificate.getSubjectX500Principal()\
        \ : javax.security.auth.x500.X500Principal"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues: []
  - pathId: "path20"
    testPathName: "getDisplayNameFromCertificateWhenSubjectAlternativeNamesIsNullAndOrgIsNullAndCommonNameIsNull"
    modelFingerprint: "5C1A18F31E628F683C102DF7BB34DFC3"
    problemWasSolvedByProver: false
    truncated: true
    inputParameters: []
    uuid: "dacd6721-f362-3da9-adcb-d5afb3a1db08"
    deleted: true
    disabled: false
    ignoredBySystem: true
    variablesCouldNotBeIsolated: "name"
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: java.security.cert.X509Certificate.getSubjectX500Principal()\
        \ : javax.security.auth.x500.X500Principal"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues: []
  - pathId: "path33"
    testPathName: "getDisplayNameFromCertificateWhenSubjectAlternativeNameGet0Equals1AndOrgIsNullAndCommonNameIsNull"
    modelFingerprint: "ACEBCD75367154BD11DB10531B1AF5DC"
    problemWasSolvedByProver: false
    truncated: true
    inputParameters: []
    uuid: "2e7c5330-01c0-3ce2-bde8-4cc68b7a379c"
    deleted: true
    disabled: false
    ignoredBySystem: true
    variablesCouldNotBeIsolated: "name"
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: java.security.cert.X509Certificate.getSubjectX500Principal()\
        \ : javax.security.auth.x500.X500Principal"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues: []
  - pathId: "path34"
    testPathName: "getDisplayNameFromCertificateWhenSubjectAlternativeNameGet0NotEquals1AndOrgIsNullAndCommonNameIsNull"
    modelFingerprint: "72F99F49F86BF23B3799659352DEB2E6"
    problemWasSolvedByProver: false
    truncated: true
    inputParameters: []
    uuid: "44cf1386-3530-318f-a184-0164a701c20a"
    deleted: true
    disabled: false
    ignoredBySystem: true
    variablesCouldNotBeIsolated: "name"
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: java.security.cert.X509Certificate.getSubjectX500Principal()\
        \ : javax.security.auth.x500.X500Principal"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues: []
  - pathId: "path1"
    testPathName: "getDisplayNameFromCertificateWhenSubjectAlternativeNameGet0Equals1AndOrgIsNullAndCommonNameIsNotNull"
    modelFingerprint: "7BE288D6DADEBECB5421F26600B10BCB"
    problemWasSolvedByProver: false
    truncated: false
    inputParameters:
    - type: "INPUT"
      name: "certificate"
      modelFingerprint: "DBDCFF0DDD8031E8D812FA6146AAF829"
      index: 1
      valueUuid: "getDisplayNameFromCertificate_x509Certificate1"
    - type: "INPUT"
      name: "withLocation"
      modelFingerprint: "C2D534C8D5567151F37B9D1A5764EBC8"
      index: 2
      valueUuid: "getDisplayNameFromCertificate_boolean1"
    - type: "LOCAL_VARIABLE"
      name: "name"
      modelFingerprint: "AF013A3D9F75BAEE4BA10D6EDAD23778"
      index: 3
      valueUuid: "getDisplayNameFromCertificate_x500Name1"
      methodExercised:
        target: "name"
        name: "getRDNs"
        parameters: []
        signature: "getRDNs(): RDN[]"
        returnValueUuid: "getDisplayNameFromCertificate_rDN[]1"
        access: 1
    - type: "LOCAL_VARIABLE"
      name: "rdn"
      modelFingerprint: "9721CD15C1B884EE74D662C537446858"
      index: 4
      valueUuid: "getDisplayNameFromCertificate_rDN1"
      methodExercised:
        target: "rdn"
        name: "getFirst"
        parameters: []
        signature: "getFirst(): AttributeTypeAndValue"
        returnValueUuid: "getDisplayNameFromCertificate_attributeTypeAndValue1"
        access: 1
    - type: "LOCAL_VARIABLE"
      name: "pair"
      modelFingerprint: "F1515DFA23D0C880672B7182A5BC997C"
      index: 5
      valueUuid: "getDisplayNameFromCertificate_attributeTypeAndValue1"
      methodExercised:
        target: "pair"
        name: "getValue"
        parameters: []
        signature: "getValue(): ASN1Encodable"
        returnValueUuid: "getDisplayNameFromCertificate_aSN1Encodable1"
        access: 1
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "3E781DD8112C2943B8A8F0BAC11651F4"
      index: 6
      valueUuid: "getDisplayNameFromCertificate_aSN1Encodable1checkCast"
      methodExercised:
        target: "org.bouncycastle.asn1.ASN1String"
        name: "getString"
        parameters: []
        signature: "getString(): String"
        returnValueUuid: "getDisplayNameFromCertificate_string2"
        access: 1025
    - type: "LOCAL_VARIABLE"
      name: "pair"
      modelFingerprint: "11BC163B18D6F960E5E99FB7F953FF6B"
      index: 7
      valueUuid: "getDisplayNameFromCertificate_attributeTypeAndValue1"
      methodExercised:
        target: "pair"
        name: "getType"
        parameters: []
        signature: "getType(): ASN1ObjectIdentifier"
        returnValueUuid: "getDisplayNameFromCertificate_aSN1ObjectIdentifier2"
        access: 1
    - type: "LOCAL_VARIABLE"
      name: "var9"
      modelFingerprint: "D19009C03FC63CDFE2A0615538177222"
      index: 8
      idsTryCatchBlockSurrounding:
      - 1
      valueUuid: "getDisplayNameFromCertificate_iterator1"
      methodExercised:
        target: "var9"
        name: "hasNext"
        parameters: []
        signature: "hasNext(): boolean"
        returnValueUuid: "getDisplayNameFromCertificate_boolean3"
        access: 1025
    - type: "LOCAL_VARIABLE"
      name: "var9"
      modelFingerprint: "92C26F644506DB8DC19F493515B71AA9"
      index: 9
      idsTryCatchBlockSurrounding:
      - 1
      valueUuid: "getDisplayNameFromCertificate_iterator1"
      methodExercised:
        target: "var9"
        name: "next"
        parameters: []
        signature: "next(): Object"
        returnValueUuid: "getDisplayNameFromCertificate_object1"
        access: 1025
    - type: "LOCAL_VARIABLE"
      name: "var9"
      modelFingerprint: "D394C76917006A687D18E7C1BB9C73B0"
      index: 10
      idsTryCatchBlockSurrounding:
      - 1
      valueUuid: "getDisplayNameFromCertificate_iterator1"
      methodExercised:
        target: "var9"
        name: "hasNext"
        parameters: []
        signature: "hasNext(): boolean"
        returnValueUuid: "getDisplayNameFromCertificate_boolean4"
        access: 1025
    - type: "RESULT"
      name: "result"
      modelFingerprint: "D1F433D4EB9F8805FF391E82DAB508AB"
      index: 11
      valueUuid: "getDisplayNameFromCertificate_string2"
    uuid: "b66ac6a5-4982-36ef-9d06-ea8aa43be4dd"
    deleted: false
    disabled: true
    ignoredBySystem: false
    variablesCouldNotBeIsolated: "name"
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: java.security.cert.X509Certificate.getSubjectX500Principal()\
        \ : javax.security.auth.x500.X500Principal"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: true
    allValues:
    - sapientType: "MOCK"
      valueType: "java.security.cert.X509Certificate"
      uuid: "getDisplayNameFromCertificate_x509Certificate1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "getDisplayNameFromCertificate_boolean1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.bouncycastle.asn1.x500.X500Name"
        parameters:
        - name: "arg0"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "arg0"
            valueType: "java.lang.String"
            uuid: "getDisplayNameFromCertificate_string1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: true
      valueType: "org.bouncycastle.asn1.x500.X500Name"
      uuid: "getDisplayNameFromCertificate_x500Name1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "ARRAY"
      content: !<array>
        values:
          0:
            sapientType: "MOCK"
            valueType: "org.bouncycastle.asn1.x500.RDN"
            uuid: "getDisplayNameFromCertificate_rDN1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
      valueType: "org.bouncycastle.asn1.x500.RDN[]"
      uuid: "getDisplayNameFromCertificate_rDN[]1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.bouncycastle.asn1.x500.RDN"
      uuid: "getDisplayNameFromCertificate_rDN1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.bouncycastle.asn1.x500.AttributeTypeAndValue"
      uuid: "getDisplayNameFromCertificate_attributeTypeAndValue1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.bouncycastle.asn1.x500.AttributeTypeAndValue"
      uuid: "getDisplayNameFromCertificate_attributeTypeAndValue1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.bouncycastle.asn1.ASN1Encodable"
      uuid: "getDisplayNameFromCertificate_aSN1Encodable1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.bouncycastle.asn1.ASN1String"
      uuid: "getDisplayNameFromCertificate_aSN1Encodable1checkCast"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_getString1"
      valueType: "java.lang.String"
      uuid: "getDisplayNameFromCertificate_string2"
      fixed: false
      equalsMethodPresent: true
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.bouncycastle.asn1.x500.AttributeTypeAndValue"
      uuid: "getDisplayNameFromCertificate_attributeTypeAndValue1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<static_field_return>
        target: "org.bouncycastle.asn1.x500.style.RFC4519Style"
        fieldName: "cn"
      valueType: "org.bouncycastle.asn1.ASN1ObjectIdentifier"
      uuid: "getDisplayNameFromCertificate_aSN1ObjectIdentifier2"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "ITERATOR"
      content: !<iterator>
        collectionValue:
          sapientType: "COLLECTION"
          content: !<collection>
            collectionClass: "java.util.ArrayList"
            parameters: []
            values:
            - sapientType: "COLLECTION"
              content: !<collection>
                collectionClass: "java.util.ArrayList"
                parameters: []
                values:
                - sapientType: "BASIC"
                  content: !<regular>
                    value: 1
                  valueType: "java.lang.Integer"
                  uuid: "getDisplayNameFromCertificate_object2"
                  fixed: false
                  collectionUuid: "getDisplayNameFromCertificate_object1"
                  equalsMethodPresent: false
                  explicitCastNeeded: true
                - sapientType: "BASIC"
                  content: !<regular>
                    value: "var9ItemItem1Item2"
                  valueType: "java.lang.String"
                  uuid: "getDisplayNameFromCertificate_object3"
                  fixed: false
                  collectionUuid: "getDisplayNameFromCertificate_object1"
                  equalsMethodPresent: false
                  explicitCastNeeded: true
              valueType: "java.util.List"
              genericValueType: "?"
              uuid: "getDisplayNameFromCertificate_object1"
              fixed: false
              collectionUuid: "getDisplayNameFromCertificate_collection1"
              equalsMethodPresent: false
              explicitCastNeeded: false
          valueType: "java.util.Collection"
          genericValueType: "java.util.List<?>"
          uuid: "getDisplayNameFromCertificate_collection1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
      valueType: "java.util.Iterator"
      genericValueType: "java.util.List<?>"
      uuid: "getDisplayNameFromCertificate_iterator1"
      fixed: false
      collectionUuid: "getDisplayNameFromCertificate_collection1"
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "getDisplayNameFromCertificate_boolean3"
      fixed: false
      collectionUuid: "getDisplayNameFromCertificate_collection1"
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "ITERATOR"
      content: !<iterator>
        collectionValue:
          sapientType: "COLLECTION"
          content: !<collection>
            collectionClass: "java.util.ArrayList"
            parameters: []
            values:
            - sapientType: "COLLECTION"
              content: !<collection>
                collectionClass: "java.util.ArrayList"
                parameters: []
                values:
                - sapientType: "BASIC"
                  content: !<regular>
                    value: 1
                  valueType: "java.lang.Integer"
                  uuid: "getDisplayNameFromCertificate_object2"
                  fixed: false
                  collectionUuid: "getDisplayNameFromCertificate_object1"
                  equalsMethodPresent: false
                  explicitCastNeeded: true
                - sapientType: "BASIC"
                  content: !<regular>
                    value: "var9ItemItem1Item2"
                  valueType: "java.lang.String"
                  uuid: "getDisplayNameFromCertificate_object3"
                  fixed: false
                  collectionUuid: "getDisplayNameFromCertificate_object1"
                  equalsMethodPresent: false
                  explicitCastNeeded: true
              valueType: "java.util.List"
              genericValueType: "?"
              uuid: "getDisplayNameFromCertificate_object1"
              fixed: false
              collectionUuid: "getDisplayNameFromCertificate_collection1"
              equalsMethodPresent: false
              explicitCastNeeded: false
          valueType: "java.util.Collection"
          genericValueType: "java.util.List<?>"
          uuid: "getDisplayNameFromCertificate_collection1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
      valueType: "java.util.Iterator"
      genericValueType: "java.util.List<?>"
      uuid: "getDisplayNameFromCertificate_iterator1"
      fixed: false
      collectionUuid: "getDisplayNameFromCertificate_collection1"
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.ArrayList"
        parameters: []
        values:
        - sapientType: "BASIC"
          content: !<regular>
            value: 1
          valueType: "java.lang.Integer"
          uuid: "getDisplayNameFromCertificate_object2"
          fixed: false
          collectionUuid: "getDisplayNameFromCertificate_object1"
          equalsMethodPresent: false
          explicitCastNeeded: true
        - sapientType: "BASIC"
          content: !<regular>
            value: "var9ItemItem1Item2"
          valueType: "java.lang.String"
          uuid: "getDisplayNameFromCertificate_object3"
          fixed: false
          collectionUuid: "getDisplayNameFromCertificate_object1"
          equalsMethodPresent: false
          explicitCastNeeded: true
      valueType: "java.util.List"
      genericValueType: "?"
      uuid: "getDisplayNameFromCertificate_object1"
      fixed: false
      collectionUuid: "getDisplayNameFromCertificate_collection1"
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "ITERATOR"
      content: !<iterator>
        collectionValue:
          sapientType: "COLLECTION"
          content: !<collection>
            collectionClass: "java.util.ArrayList"
            parameters: []
            values:
            - sapientType: "COLLECTION"
              content: !<collection>
                collectionClass: "java.util.ArrayList"
                parameters: []
                values:
                - sapientType: "BASIC"
                  content: !<regular>
                    value: 1
                  valueType: "java.lang.Integer"
                  uuid: "getDisplayNameFromCertificate_object2"
                  fixed: false
                  collectionUuid: "getDisplayNameFromCertificate_object1"
                  equalsMethodPresent: false
                  explicitCastNeeded: true
                - sapientType: "BASIC"
                  content: !<regular>
                    value: "var9ItemItem1Item2"
                  valueType: "java.lang.String"
                  uuid: "getDisplayNameFromCertificate_object3"
                  fixed: false
                  collectionUuid: "getDisplayNameFromCertificate_object1"
                  equalsMethodPresent: false
                  explicitCastNeeded: true
              valueType: "java.util.List"
              genericValueType: "?"
              uuid: "getDisplayNameFromCertificate_object1"
              fixed: false
              collectionUuid: "getDisplayNameFromCertificate_collection1"
              equalsMethodPresent: false
              explicitCastNeeded: false
          valueType: "java.util.Collection"
          genericValueType: "java.util.List<?>"
          uuid: "getDisplayNameFromCertificate_collection1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
      valueType: "java.util.Iterator"
      genericValueType: "java.util.List<?>"
      uuid: "getDisplayNameFromCertificate_iterator1"
      fixed: false
      collectionUuid: "getDisplayNameFromCertificate_collection1"
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "getDisplayNameFromCertificate_boolean4"
      fixed: false
      collectionUuid: "getDisplayNameFromCertificate_collection1"
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_getString1"
      valueType: "java.lang.String"
      uuid: "getDisplayNameFromCertificate_string2"
      fixed: false
      equalsMethodPresent: true
      explicitCastNeeded: false
  - pathId: "path2"
    testPathName: "getDisplayNameFromCertificateWhenSubjectAlternativeNamesIsNotEmptyAndSubjectAlternativeNameGet0Equals1AndOrgIsNullAndCo"
    modelFingerprint: "98964CB0F8227AA7C99F26FAD0E3AB51"
    problemWasSolvedByProver: false
    truncated: true
    inputParameters: []
    uuid: "39401227-57fb-3412-b7c5-0b84f250df28"
    deleted: true
    disabled: false
    ignoredBySystem: true
    variablesCouldNotBeIsolated: "name"
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: java.security.cert.X509Certificate.getSubjectX500Principal()\
        \ : javax.security.auth.x500.X500Principal"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues: []
  - pathId: "path3"
    testPathName: "getDisplayNameFromCertificateWhenSubjectAlternativeNameGet0NotEquals1AndOrgIsNullAndCommonNameIsNotNull"
    modelFingerprint: "F9DB691D8677D4EBDD2320AF3571DD28"
    problemWasSolvedByProver: false
    truncated: true
    inputParameters: []
    uuid: "9318bcd2-6875-3c58-9553-de778d6c4709"
    deleted: true
    disabled: false
    ignoredBySystem: true
    variablesCouldNotBeIsolated: "name"
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: java.security.cert.X509Certificate.getSubjectX500Principal()\
        \ : javax.security.auth.x500.X500Principal"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues: []
  - pathId: "path4"
    testPathName: "getDisplayNameFromCertificateWhenSubjectAlternativeNamesIsNotEmptyAndSubjectAlternativeNameGet0NotEquals1AndOrgIsNullAn"
    modelFingerprint: "E5980DDDA2DD99B5DE08B1C02A406B0C"
    problemWasSolvedByProver: false
    truncated: true
    inputParameters: []
    uuid: "f7a8bb47-c73b-310d-85b4-e62d1acfd46a"
    deleted: true
    disabled: false
    ignoredBySystem: true
    variablesCouldNotBeIsolated: "name"
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: java.security.cert.X509Certificate.getSubjectX500Principal()\
        \ : javax.security.auth.x500.X500Principal"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues: []
  - pathId: "path40"
    testPathName: "getDisplayNameFromCertificateWhenSubjectAlternativeNamesIsEmptyAndCaughtCertificateParsingExceptionAndOrgIsNullAndCommo"
    modelFingerprint: "FF36B75977FBC56C36716254D629DB51"
    problemWasSolvedByProver: false
    catchBlockExercised:
      idExternalInstruction: 0
      id: 1
      catchExceptions:
      - "java.security.cert.CertificateParsingException"
    truncated: true
    inputParameters: []
    uuid: "8da31d23-9881-3ae8-8073-c2ea4337fb66"
    deleted: true
    disabled: false
    ignoredBySystem: true
    variablesCouldNotBeIsolated: "name"
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: java.security.cert.X509Certificate.getSubjectX500Principal()\
        \ : javax.security.auth.x500.X500Principal"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues: []
  - pathId: "path41"
    testPathName: "getDisplayNameFromCertificateWhenCaughtCertificateParsingExceptionAndOrgIsNullAndCommonNameIsNull2"
    modelFingerprint: "6C31388EB9C7221547A23594016EF57B"
    problemWasSolvedByProver: false
    catchBlockExercised:
      idExternalInstruction: 0
      id: 1
      catchExceptions:
      - "java.security.cert.CertificateParsingException"
    truncated: true
    inputParameters: []
    uuid: "ff444b1d-8394-3c63-a809-9437a2f1d81f"
    deleted: true
    disabled: false
    ignoredBySystem: true
    variablesCouldNotBeIsolated: "name"
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: java.security.cert.X509Certificate.getSubjectX500Principal()\
        \ : javax.security.auth.x500.X500Principal"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues: []
  - pathId: "path15"
    testPathName: "getDisplayNameFromCertificateWhenOrgIsNotNullAndWithLocation"
    modelFingerprint: "5A1F40C089E1A2040E0FB1EB5573A096"
    problemWasSolvedByProver: false
    truncated: true
    inputParameters: []
    uuid: "e29b5846-12e1-3cc0-8711-3086f30e3a51"
    deleted: true
    disabled: false
    ignoredBySystem: true
    variablesCouldNotBeIsolated: "name"
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: java.security.cert.X509Certificate.getSubjectX500Principal()\
        \ : javax.security.auth.x500.X500Principal"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues: []
  - pathId: "path16"
    testPathName: "getDisplayNameFromCertificateWhenOrgIsNotNullAndNotWithLocation"
    modelFingerprint: "B5F21E0EA532D4382A23BE0803B151AD"
    problemWasSolvedByProver: false
    truncated: true
    inputParameters: []
    uuid: "84acedd0-678c-3b62-81d8-2a01e7c4bbf2"
    deleted: true
    disabled: false
    ignoredBySystem: true
    variablesCouldNotBeIsolated: "name"
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: java.security.cert.X509Certificate.getSubjectX500Principal()\
        \ : javax.security.auth.x500.X500Principal"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues: []
  - pathId: "path17"
    testPathName: "getDisplayNameFromCertificateWhenSubjectAlternativeNamesIsEmptyAndOrgIsNullAndCommonNameIsNull2"
    modelFingerprint: "9EB59DD5F3FD52D615E5E880851D7650"
    problemWasSolvedByProver: false
    truncated: true
    inputParameters: []
    uuid: "6d973b29-6d20-3864-bb8d-92aad652cb93"
    deleted: true
    disabled: false
    ignoredBySystem: true
    variablesCouldNotBeIsolated: "name"
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: java.security.cert.X509Certificate.getSubjectX500Principal()\
        \ : javax.security.auth.x500.X500Principal"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues: []
  - pathId: "path24"
    testPathName: "getDisplayNameFromCertificateWhenTypeEqualsRFC4519StyleLAndSubjectAlternativeNamesIsNullAndOrgIsNullAndCommonNameIsNull"
    modelFingerprint: "0BD40B0C730A9B4388A9FF075ECE4FFE"
    problemWasSolvedByProver: false
    truncated: true
    inputParameters: []
    uuid: "70464047-60b7-3d4e-9150-8ca5c9d0f019"
    deleted: true
    disabled: false
    ignoredBySystem: true
    variablesCouldNotBeIsolated: "name"
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: java.security.cert.X509Certificate.getSubjectX500Principal()\
        \ : javax.security.auth.x500.X500Principal"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues: []
  - pathId: "path37"
    testPathName: "getDisplayNameFromCertificateWhenSubjectAlternativeNameGet0Equals1AndCaughtCertificateParsingExceptionAndOrgIsNullAndCo"
    modelFingerprint: "5620B35C4914D91BDC294DFC28FC2F39"
    problemWasSolvedByProver: false
    catchBlockExercised:
      idExternalInstruction: 0
      id: 1
      catchExceptions:
      - "java.security.cert.CertificateParsingException"
    truncated: false
    inputParameters:
    - type: "INPUT"
      name: "certificate"
      modelFingerprint: "AB949112D997C08B6DCFFA656363C91E"
      index: 1
      valueUuid: "getDisplayNameFromCertificate_x509Certificate1"
    - type: "INPUT"
      name: "withLocation"
      modelFingerprint: "F33501894F8943478CF92036B95C1DAE"
      index: 2
      valueUuid: "getDisplayNameFromCertificate_boolean1"
    - type: "LOCAL_VARIABLE"
      name: "certificate"
      modelFingerprint: "C1F1AAA6F54FDD23B670072A5713B53F"
      index: 3
      valueUuid: "getDisplayNameFromCertificate_x509Certificate1"
      methodExercised:
        target: "certificate"
        name: "getSubjectX500Principal"
        parameters: []
        signature: "getSubjectX500Principal(): X500Principal"
        returnValueUuid: "getDisplayNameFromCertificate_x500Principal1"
        access: 1
    - type: "LOCAL_VARIABLE"
      name: "name"
      modelFingerprint: "AF013A3D9F75BAEE4BA10D6EDAD23778"
      index: 4
      valueUuid: "getDisplayNameFromCertificate_x500Name1"
      methodExercised:
        target: "name"
        name: "getRDNs"
        parameters: []
        signature: "getRDNs(): RDN[]"
        returnValueUuid: "getDisplayNameFromCertificate_rDN[]1"
        access: 1
    - type: "LOCAL_VARIABLE"
      name: "rdn"
      modelFingerprint: "AC73514AB48C245DC23E06A5060D8D11"
      index: 5
      valueUuid: "getDisplayNameFromCertificate_rDN1"
      methodExercised:
        target: "rdn"
        name: "getFirst"
        parameters: []
        signature: "getFirst(): AttributeTypeAndValue"
        returnValueUuid: "getDisplayNameFromCertificate_attributeTypeAndValue1"
        access: 1
    - type: "LOCAL_VARIABLE"
      name: "pair"
      modelFingerprint: "B3191AAB8E8C2D9D9E2E4065AF304C29"
      index: 6
      valueUuid: "getDisplayNameFromCertificate_attributeTypeAndValue1"
      methodExercised:
        target: "pair"
        name: "getValue"
        parameters: []
        signature: "getValue(): ASN1Encodable"
        returnValueUuid: "getDisplayNameFromCertificate_aSN1Encodable1"
        access: 1
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "79205187C209F5D5F16543F3AFA5AEE7"
      index: 7
      valueUuid: "getDisplayNameFromCertificate_aSN1Encodable1checkCast"
      methodExercised:
        target: "org.bouncycastle.asn1.ASN1String"
        name: "getString"
        parameters: []
        signature: "getString(): String"
        returnValueUuid: "getDisplayNameFromCertificate_string2"
        access: 1025
    - type: "LOCAL_VARIABLE"
      name: "pair"
      modelFingerprint: "B30960C003AB0B6A6A0EFDA276085C4D"
      index: 8
      valueUuid: "getDisplayNameFromCertificate_attributeTypeAndValue1"
      methodExercised:
        target: "pair"
        name: "getType"
        parameters: []
        signature: "getType(): ASN1ObjectIdentifier"
        returnValueUuid: "getDisplayNameFromCertificate_aSN1ObjectIdentifier2"
        access: 1
    - type: "LOCAL_VARIABLE"
      name: "certificate"
      modelFingerprint: "478C030AF96C244FD44DBA6FEB62178B"
      index: 9
      idsTryCatchBlockSurrounding:
      - 1
      valueUuid: "getDisplayNameFromCertificate_x509Certificate1"
      methodExercised:
        target: "certificate"
        name: "getSubjectAlternativeNames"
        parameters: []
        throwsExceptions:
        - "java.security.cert.CertificateParsingException"
        signature: "getSubjectAlternativeNames(): Collection throws java.security.cert.CertificateParsingException"
        returnValueUuid: "getDisplayNameFromCertificate_collection1"
        access: 1
    - type: "LOCAL_VARIABLE"
      name: "var9"
      modelFingerprint: "43AC789783D17911ED56B58E6837D761"
      index: 10
      idsTryCatchBlockSurrounding:
      - 1
      valueUuid: "getDisplayNameFromCertificate_iterator1"
      methodExercised:
        target: "var9"
        name: "hasNext"
        parameters: []
        signature: "hasNext(): boolean"
        returnValueUuid: "getDisplayNameFromCertificate_boolean3"
        access: 1025
    - type: "LOCAL_VARIABLE"
      name: "var9"
      modelFingerprint: "544D12DCD8706B9D2E4751AE01E38C2A"
      index: 11
      idsTryCatchBlockSurrounding:
      - 1
      valueUuid: "getDisplayNameFromCertificate_iterator1"
      methodExercised:
        target: "var9"
        name: "next"
        parameters: []
        signature: "next(): Object"
        returnValueUuid: "getDisplayNameFromCertificate_object1"
        access: 1025
    - type: "LOCAL_VARIABLE"
      name: "var9"
      modelFingerprint: "312C23DF382B30D283FA126C30A3BF71"
      index: 12
      idsTryCatchBlockSurrounding:
      - 1
      valueUuid: "getDisplayNameFromCertificate_iterator1"
      methodExercised:
        target: "var9"
        name: "hasNext"
        parameters: []
        signature: "hasNext(): boolean"
        returnValueUuid: "getDisplayNameFromCertificate_boolean4"
        access: 1025
    - type: "RESULT"
      name: "result"
      modelFingerprint: "FF22E18EEBDF66F3A4CFE59A0E75C07E"
      index: 13
      valueUuid: "getDisplayNameFromCertificate_string2"
    uuid: "722fb798-075e-33cc-a6ae-b5fa34045336"
    deleted: false
    disabled: true
    ignoredBySystem: false
    variablesCouldNotBeIsolated: "name"
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: javax.security.auth.x500.X500Principal.getName()\
        \ : java.lang.String"
    prover: "LLM"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: true
    allValues:
    - sapientType: "MOCK"
      valueType: "java.security.cert.X509Certificate"
      uuid: "getDisplayNameFromCertificate_x509Certificate1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "getDisplayNameFromCertificate_boolean1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "java.security.cert.X509Certificate"
      uuid: "getDisplayNameFromCertificate_x509Certificate1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<new>
        target: "javax.security.auth.x500.X500Principal"
        parameters:
        - name: "name"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "name1"
            valueType: "java.lang.String"
            uuid: "getDisplayNameFromCertificate_x500Principal1-name"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      valueType: "javax.security.auth.x500.X500Principal"
      uuid: "getDisplayNameFromCertificate_x500Principal1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.bouncycastle.asn1.x500.X500Name"
        parameters:
        - name: "arg0"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "arg0"
            valueType: "java.lang.String"
            uuid: "getDisplayNameFromCertificate_string1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: true
      valueType: "org.bouncycastle.asn1.x500.X500Name"
      uuid: "getDisplayNameFromCertificate_x500Name1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "ARRAY"
      content: !<array>
        values:
          0:
            sapientType: "MOCK"
            valueType: "org.bouncycastle.asn1.x500.RDN"
            uuid: "getDisplayNameFromCertificate_rDN1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
      valueType: "org.bouncycastle.asn1.x500.RDN[]"
      uuid: "getDisplayNameFromCertificate_rDN[]1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.bouncycastle.asn1.x500.RDN"
      uuid: "getDisplayNameFromCertificate_rDN1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.bouncycastle.asn1.x500.AttributeTypeAndValue"
      uuid: "getDisplayNameFromCertificate_attributeTypeAndValue1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.bouncycastle.asn1.x500.AttributeTypeAndValue"
      uuid: "getDisplayNameFromCertificate_attributeTypeAndValue1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.bouncycastle.asn1.ASN1Encodable"
      uuid: "getDisplayNameFromCertificate_aSN1Encodable1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.bouncycastle.asn1.ASN1String"
      uuid: "getDisplayNameFromCertificate_aSN1Encodable1checkCast"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_getString1"
      valueType: "java.lang.String"
      uuid: "getDisplayNameFromCertificate_string2"
      fixed: false
      equalsMethodPresent: true
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.bouncycastle.asn1.x500.AttributeTypeAndValue"
      uuid: "getDisplayNameFromCertificate_attributeTypeAndValue1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<static_field_return>
        target: "org.bouncycastle.asn1.x500.style.RFC4519Style"
        fieldName: "cn"
      valueType: "org.bouncycastle.asn1.ASN1ObjectIdentifier"
      uuid: "getDisplayNameFromCertificate_aSN1ObjectIdentifier2"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "java.security.cert.X509Certificate"
      uuid: "getDisplayNameFromCertificate_x509Certificate1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.ArrayList"
        parameters: []
        values:
        - sapientType: "COLLECTION"
          content: !<collection>
            collectionClass: "java.util.ArrayList"
            parameters: []
            values:
            - sapientType: "OBJECT"
              content: !<new>
                target: "java.lang.Object"
                parameters: []
                privateConstructor: false
                createdByTargetCode: false
              valueType: "java.lang.Object"
              uuid: "getDisplayNameFromCertificate_collection1-0-0"
              fixed: false
              collectionUuid: "getDisplayNameFromCertificate_collection1-0"
              equalsMethodPresent: false
              explicitCastNeeded: false
          valueType: "java.util.List"
          genericValueType: "?"
          uuid: "getDisplayNameFromCertificate_collection1-0"
          fixed: false
          collectionUuid: "getDisplayNameFromCertificate_collection1"
          equalsMethodPresent: false
          explicitCastNeeded: false
      valueType: "java.util.Collection"
      genericValueType: "java.util.List<?>"
      uuid: "getDisplayNameFromCertificate_collection1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "ITERATOR"
      content: !<iterator>
        collectionValue:
          sapientType: "COLLECTION"
          content: !<collection>
            collectionClass: "java.util.ArrayList"
            parameters: []
            values:
            - sapientType: "COLLECTION"
              content: !<collection>
                collectionClass: "java.util.ArrayList"
                parameters: []
                values:
                - sapientType: "OBJECT"
                  content: !<new>
                    target: "java.lang.Object"
                    parameters: []
                    privateConstructor: false
                    createdByTargetCode: false
                  valueType: "java.lang.Object"
                  uuid: "getDisplayNameFromCertificate_collection1-0-0"
                  fixed: false
                  collectionUuid: "getDisplayNameFromCertificate_collection1-0"
                  equalsMethodPresent: false
                  explicitCastNeeded: false
              valueType: "java.util.List"
              genericValueType: "?"
              uuid: "getDisplayNameFromCertificate_collection1-0"
              fixed: false
              collectionUuid: "getDisplayNameFromCertificate_collection1"
              equalsMethodPresent: false
              explicitCastNeeded: false
          valueType: "java.util.Collection"
          genericValueType: "java.util.List<?>"
          uuid: "getDisplayNameFromCertificate_collection1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
      valueType: "java.util.Iterator"
      genericValueType: "java.util.List<?>"
      uuid: "getDisplayNameFromCertificate_iterator1"
      fixed: false
      collectionUuid: "getDisplayNameFromCertificate_collection1"
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "getDisplayNameFromCertificate_boolean3"
      fixed: false
      collectionUuid: "getDisplayNameFromCertificate_collection1"
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "ITERATOR"
      content: !<iterator>
        collectionValue:
          sapientType: "COLLECTION"
          content: !<collection>
            collectionClass: "java.util.ArrayList"
            parameters: []
            values:
            - sapientType: "COLLECTION"
              content: !<collection>
                collectionClass: "java.util.ArrayList"
                parameters: []
                values:
                - sapientType: "OBJECT"
                  content: !<new>
                    target: "java.lang.Object"
                    parameters: []
                    privateConstructor: false
                    createdByTargetCode: false
                  valueType: "java.lang.Object"
                  uuid: "getDisplayNameFromCertificate_collection1-0-0"
                  fixed: false
                  collectionUuid: "getDisplayNameFromCertificate_collection1-0"
                  equalsMethodPresent: false
                  explicitCastNeeded: false
              valueType: "java.util.List"
              genericValueType: "?"
              uuid: "getDisplayNameFromCertificate_collection1-0"
              fixed: false
              collectionUuid: "getDisplayNameFromCertificate_collection1"
              equalsMethodPresent: false
              explicitCastNeeded: false
          valueType: "java.util.Collection"
          genericValueType: "java.util.List<?>"
          uuid: "getDisplayNameFromCertificate_collection1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
      valueType: "java.util.Iterator"
      genericValueType: "java.util.List<?>"
      uuid: "getDisplayNameFromCertificate_iterator1"
      fixed: false
      collectionUuid: "getDisplayNameFromCertificate_collection1"
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.ArrayList"
        parameters: []
        values:
        - sapientType: "BASIC"
          content: !<regular>
            value: 1
          valueType: "java.lang.Integer"
          uuid: "getDisplayNameFromCertificate_object2"
          fixed: false
          collectionUuid: "getDisplayNameFromCertificate_object1"
          equalsMethodPresent: false
          explicitCastNeeded: true
        - sapientType: "BASIC"
          content: !<regular>
            value: "return_of_getSubjectAlternativeNamesItem1Item2"
          valueType: "java.lang.String"
          uuid: "getDisplayNameFromCertificate_object3"
          fixed: false
          collectionUuid: "getDisplayNameFromCertificate_object1"
          equalsMethodPresent: false
          explicitCastNeeded: true
      valueType: "java.util.List"
      genericValueType: "?"
      uuid: "getDisplayNameFromCertificate_object1"
      fixed: false
      collectionUuid: "getDisplayNameFromCertificate_collection1"
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "ITERATOR"
      content: !<iterator>
        collectionValue:
          sapientType: "COLLECTION"
          content: !<collection>
            collectionClass: "java.util.ArrayList"
            parameters: []
            values:
            - sapientType: "COLLECTION"
              content: !<collection>
                collectionClass: "java.util.ArrayList"
                parameters: []
                values:
                - sapientType: "OBJECT"
                  content: !<new>
                    target: "java.lang.Object"
                    parameters: []
                    privateConstructor: false
                    createdByTargetCode: false
                  valueType: "java.lang.Object"
                  uuid: "getDisplayNameFromCertificate_collection1-0-0"
                  fixed: false
                  collectionUuid: "getDisplayNameFromCertificate_collection1-0"
                  equalsMethodPresent: false
                  explicitCastNeeded: false
              valueType: "java.util.List"
              genericValueType: "?"
              uuid: "getDisplayNameFromCertificate_collection1-0"
              fixed: false
              collectionUuid: "getDisplayNameFromCertificate_collection1"
              equalsMethodPresent: false
              explicitCastNeeded: false
          valueType: "java.util.Collection"
          genericValueType: "java.util.List<?>"
          uuid: "getDisplayNameFromCertificate_collection1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
      valueType: "java.util.Iterator"
      genericValueType: "java.util.List<?>"
      uuid: "getDisplayNameFromCertificate_iterator1"
      fixed: false
      collectionUuid: "getDisplayNameFromCertificate_collection1"
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "getDisplayNameFromCertificate_boolean4"
      fixed: false
      collectionUuid: "getDisplayNameFromCertificate_collection1"
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_getString1"
      valueType: "java.lang.String"
      uuid: "getDisplayNameFromCertificate_string2"
      fixed: false
      equalsMethodPresent: true
      explicitCastNeeded: false
  - pathId: "path38"
    testPathName: "getDisplayNameFromCertificateWhenCaughtCertificateParsingExceptionAndOrgIsNullAndCommonNameIsNull3"
    modelFingerprint: "8262EE8F412E1528F08E378FA3EF72EC"
    problemWasSolvedByProver: false
    catchBlockExercised:
      idExternalInstruction: 0
      id: 1
      catchExceptions:
      - "java.security.cert.CertificateParsingException"
    truncated: false
    inputParameters:
    - type: "INPUT"
      name: "certificate"
      modelFingerprint: "AB949112D997C08B6DCFFA656363C91E"
      index: 1
      valueUuid: "getDisplayNameFromCertificate_x509Certificate1"
    - type: "INPUT"
      name: "withLocation"
      modelFingerprint: "F33501894F8943478CF92036B95C1DAE"
      index: 2
      valueUuid: "getDisplayNameFromCertificate_boolean1"
    - type: "LOCAL_VARIABLE"
      name: "certificate"
      modelFingerprint: "C1F1AAA6F54FDD23B670072A5713B53F"
      index: 3
      valueUuid: "getDisplayNameFromCertificate_x509Certificate1"
      methodExercised:
        target: "certificate"
        name: "getSubjectX500Principal"
        parameters: []
        signature: "getSubjectX500Principal(): X500Principal"
        returnValueUuid: "getDisplayNameFromCertificate_x500Principal1"
        access: 1
    - type: "LOCAL_VARIABLE"
      name: "name"
      modelFingerprint: "AF013A3D9F75BAEE4BA10D6EDAD23778"
      index: 4
      valueUuid: "getDisplayNameFromCertificate_x500Name1"
      methodExercised:
        target: "name"
        name: "getRDNs"
        parameters: []
        signature: "getRDNs(): RDN[]"
        returnValueUuid: "getDisplayNameFromCertificate_rDN[]1"
        access: 1
    - type: "LOCAL_VARIABLE"
      name: "rdn"
      modelFingerprint: "AC73514AB48C245DC23E06A5060D8D11"
      index: 5
      valueUuid: "getDisplayNameFromCertificate_rDN1"
      methodExercised:
        target: "rdn"
        name: "getFirst"
        parameters: []
        signature: "getFirst(): AttributeTypeAndValue"
        returnValueUuid: "getDisplayNameFromCertificate_attributeTypeAndValue1"
        access: 1
    - type: "LOCAL_VARIABLE"
      name: "pair"
      modelFingerprint: "B3191AAB8E8C2D9D9E2E4065AF304C29"
      index: 6
      valueUuid: "getDisplayNameFromCertificate_attributeTypeAndValue1"
      methodExercised:
        target: "pair"
        name: "getValue"
        parameters: []
        signature: "getValue(): ASN1Encodable"
        returnValueUuid: "getDisplayNameFromCertificate_aSN1Encodable1"
        access: 1
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "0A618BCF8DDA99AB38962DBC02B1FE11"
      index: 7
      valueUuid: "getDisplayNameFromCertificate_aSN1Encodable1checkCast"
      methodExercised:
        target: "org.bouncycastle.asn1.ASN1String"
        name: "getString"
        parameters: []
        signature: "getString(): String"
        returnValueUuid: "getDisplayNameFromCertificate_string2"
        access: 1025
    - type: "LOCAL_VARIABLE"
      name: "pair"
      modelFingerprint: "B30960C003AB0B6A6A0EFDA276085C4D"
      index: 8
      valueUuid: "getDisplayNameFromCertificate_attributeTypeAndValue1"
      methodExercised:
        target: "pair"
        name: "getType"
        parameters: []
        signature: "getType(): ASN1ObjectIdentifier"
        returnValueUuid: "getDisplayNameFromCertificate_aSN1ObjectIdentifier2"
        access: 1
    - type: "LOCAL_VARIABLE"
      name: "certificate"
      modelFingerprint: "478C030AF96C244FD44DBA6FEB62178B"
      index: 9
      idsTryCatchBlockSurrounding:
      - 1
      valueUuid: "getDisplayNameFromCertificate_x509Certificate1"
      methodExercised:
        target: "certificate"
        name: "getSubjectAlternativeNames"
        parameters: []
        throwsExceptions:
        - "java.security.cert.CertificateParsingException"
        signature: "getSubjectAlternativeNames(): Collection throws java.security.cert.CertificateParsingException"
        returnValueUuid: "getDisplayNameFromCertificate_collection1"
        access: 1
    - type: "LOCAL_VARIABLE"
      name: "var9"
      modelFingerprint: "43AC789783D17911ED56B58E6837D761"
      index: 10
      idsTryCatchBlockSurrounding:
      - 1
      valueUuid: "getDisplayNameFromCertificate_iterator1"
      methodExercised:
        target: "var9"
        name: "hasNext"
        parameters: []
        signature: "hasNext(): boolean"
        returnValueUuid: "getDisplayNameFromCertificate_boolean3"
        access: 1025
    - type: "LOCAL_VARIABLE"
      name: "var9"
      modelFingerprint: "822BBEC5B40F2B4D56A34D218297FDF5"
      index: 11
      idsTryCatchBlockSurrounding:
      - 1
      valueUuid: "getDisplayNameFromCertificate_iterator1"
      methodExercised:
        target: "var9"
        name: "next"
        parameters: []
        signature: "next(): Object"
        returnValueUuid: "getDisplayNameFromCertificate_object1"
        access: 1025
    - type: "LOCAL_VARIABLE"
      name: "var9"
      modelFingerprint: "312C23DF382B30D283FA126C30A3BF71"
      index: 12
      idsTryCatchBlockSurrounding:
      - 1
      valueUuid: "getDisplayNameFromCertificate_iterator1"
      methodExercised:
        target: "var9"
        name: "hasNext"
        parameters: []
        signature: "hasNext(): boolean"
        returnValueUuid: "getDisplayNameFromCertificate_boolean4"
        access: 1025
    - type: "RESULT"
      name: "result"
      modelFingerprint: "D1F433D4EB9F8805FF391E82DAB508AB"
      index: 13
      valueUuid: "getDisplayNameFromCertificate_string2"
    uuid: "d8013215-cc85-3759-a685-56efad6e3827"
    deleted: false
    disabled: true
    ignoredBySystem: false
    variablesCouldNotBeIsolated: "name"
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: javax.security.auth.x500.X500Principal.getName()\
        \ : java.lang.String"
    prover: "LLM"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: true
    allValues:
    - sapientType: "MOCK"
      valueType: "java.security.cert.X509Certificate"
      uuid: "getDisplayNameFromCertificate_x509Certificate1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "getDisplayNameFromCertificate_boolean1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "java.security.cert.X509Certificate"
      uuid: "getDisplayNameFromCertificate_x509Certificate1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<new>
        target: "javax.security.auth.x500.X500Principal"
        parameters:
        - name: "name"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "name1"
            valueType: "java.lang.String"
            uuid: "getDisplayNameFromCertificate_x500Principal1-name"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      valueType: "javax.security.auth.x500.X500Principal"
      uuid: "getDisplayNameFromCertificate_x500Principal1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.bouncycastle.asn1.x500.X500Name"
        parameters:
        - name: "arg0"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "arg0"
            valueType: "java.lang.String"
            uuid: "getDisplayNameFromCertificate_string1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: true
      valueType: "org.bouncycastle.asn1.x500.X500Name"
      uuid: "getDisplayNameFromCertificate_x500Name1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "ARRAY"
      content: !<array>
        values:
          0:
            sapientType: "MOCK"
            valueType: "org.bouncycastle.asn1.x500.RDN"
            uuid: "getDisplayNameFromCertificate_rDN1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
      valueType: "org.bouncycastle.asn1.x500.RDN[]"
      uuid: "getDisplayNameFromCertificate_rDN[]1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.bouncycastle.asn1.x500.RDN"
      uuid: "getDisplayNameFromCertificate_rDN1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.bouncycastle.asn1.x500.AttributeTypeAndValue"
      uuid: "getDisplayNameFromCertificate_attributeTypeAndValue1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.bouncycastle.asn1.x500.AttributeTypeAndValue"
      uuid: "getDisplayNameFromCertificate_attributeTypeAndValue1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.bouncycastle.asn1.ASN1Encodable"
      uuid: "getDisplayNameFromCertificate_aSN1Encodable1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.bouncycastle.asn1.ASN1String"
      uuid: "getDisplayNameFromCertificate_aSN1Encodable1checkCast"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_getString1"
      valueType: "java.lang.String"
      uuid: "getDisplayNameFromCertificate_string2"
      fixed: false
      equalsMethodPresent: true
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.bouncycastle.asn1.x500.AttributeTypeAndValue"
      uuid: "getDisplayNameFromCertificate_attributeTypeAndValue1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<static_field_return>
        target: "org.bouncycastle.asn1.x500.style.RFC4519Style"
        fieldName: "cn"
      valueType: "org.bouncycastle.asn1.ASN1ObjectIdentifier"
      uuid: "getDisplayNameFromCertificate_aSN1ObjectIdentifier2"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "java.security.cert.X509Certificate"
      uuid: "getDisplayNameFromCertificate_x509Certificate1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.ArrayList"
        parameters: []
        values:
        - sapientType: "COLLECTION"
          content: !<collection>
            collectionClass: "java.util.ArrayList"
            parameters: []
            values:
            - sapientType: "OBJECT"
              content: !<new>
                target: "java.lang.Object"
                parameters: []
                privateConstructor: false
                createdByTargetCode: false
              valueType: "java.lang.Object"
              uuid: "getDisplayNameFromCertificate_collection1-0-0"
              fixed: false
              collectionUuid: "getDisplayNameFromCertificate_collection1-0"
              equalsMethodPresent: false
              explicitCastNeeded: false
          valueType: "java.util.List"
          genericValueType: "?"
          uuid: "getDisplayNameFromCertificate_collection1-0"
          fixed: false
          collectionUuid: "getDisplayNameFromCertificate_collection1"
          equalsMethodPresent: false
          explicitCastNeeded: false
      valueType: "java.util.Collection"
      genericValueType: "java.util.List<?>"
      uuid: "getDisplayNameFromCertificate_collection1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "ITERATOR"
      content: !<iterator>
        collectionValue:
          sapientType: "COLLECTION"
          content: !<collection>
            collectionClass: "java.util.ArrayList"
            parameters: []
            values:
            - sapientType: "COLLECTION"
              content: !<collection>
                collectionClass: "java.util.ArrayList"
                parameters: []
                values:
                - sapientType: "OBJECT"
                  content: !<new>
                    target: "java.lang.Object"
                    parameters: []
                    privateConstructor: false
                    createdByTargetCode: false
                  valueType: "java.lang.Object"
                  uuid: "getDisplayNameFromCertificate_collection1-0-0"
                  fixed: false
                  collectionUuid: "getDisplayNameFromCertificate_collection1-0"
                  equalsMethodPresent: false
                  explicitCastNeeded: false
              valueType: "java.util.List"
              genericValueType: "?"
              uuid: "getDisplayNameFromCertificate_collection1-0"
              fixed: false
              collectionUuid: "getDisplayNameFromCertificate_collection1"
              equalsMethodPresent: false
              explicitCastNeeded: false
          valueType: "java.util.Collection"
          genericValueType: "java.util.List<?>"
          uuid: "getDisplayNameFromCertificate_collection1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
      valueType: "java.util.Iterator"
      genericValueType: "java.util.List<?>"
      uuid: "getDisplayNameFromCertificate_iterator1"
      fixed: false
      collectionUuid: "getDisplayNameFromCertificate_collection1"
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "getDisplayNameFromCertificate_boolean3"
      fixed: false
      collectionUuid: "getDisplayNameFromCertificate_collection1"
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "ITERATOR"
      content: !<iterator>
        collectionValue:
          sapientType: "COLLECTION"
          content: !<collection>
            collectionClass: "java.util.ArrayList"
            parameters: []
            values:
            - sapientType: "COLLECTION"
              content: !<collection>
                collectionClass: "java.util.ArrayList"
                parameters: []
                values:
                - sapientType: "OBJECT"
                  content: !<new>
                    target: "java.lang.Object"
                    parameters: []
                    privateConstructor: false
                    createdByTargetCode: false
                  valueType: "java.lang.Object"
                  uuid: "getDisplayNameFromCertificate_collection1-0-0"
                  fixed: false
                  collectionUuid: "getDisplayNameFromCertificate_collection1-0"
                  equalsMethodPresent: false
                  explicitCastNeeded: false
              valueType: "java.util.List"
              genericValueType: "?"
              uuid: "getDisplayNameFromCertificate_collection1-0"
              fixed: false
              collectionUuid: "getDisplayNameFromCertificate_collection1"
              equalsMethodPresent: false
              explicitCastNeeded: false
          valueType: "java.util.Collection"
          genericValueType: "java.util.List<?>"
          uuid: "getDisplayNameFromCertificate_collection1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
      valueType: "java.util.Iterator"
      genericValueType: "java.util.List<?>"
      uuid: "getDisplayNameFromCertificate_iterator1"
      fixed: false
      collectionUuid: "getDisplayNameFromCertificate_collection1"
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.ArrayList"
        parameters: []
        values:
        - sapientType: "BASIC"
          content: !<regular>
            value: 1
          valueType: "java.lang.Integer"
          uuid: "getDisplayNameFromCertificate_object2"
          fixed: false
          collectionUuid: "getDisplayNameFromCertificate_object1"
          equalsMethodPresent: false
          explicitCastNeeded: true
        - sapientType: "BASIC"
          content: !<regular>
            value: "return_of_getSubjectAlternativeNamesItem1Item2"
          valueType: "java.lang.String"
          uuid: "getDisplayNameFromCertificate_object3"
          fixed: false
          collectionUuid: "getDisplayNameFromCertificate_object1"
          equalsMethodPresent: true
          explicitCastNeeded: true
      valueType: "java.util.List"
      genericValueType: "?"
      uuid: "getDisplayNameFromCertificate_object1"
      fixed: false
      collectionUuid: "getDisplayNameFromCertificate_collection1"
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "ITERATOR"
      content: !<iterator>
        collectionValue:
          sapientType: "COLLECTION"
          content: !<collection>
            collectionClass: "java.util.ArrayList"
            parameters: []
            values:
            - sapientType: "COLLECTION"
              content: !<collection>
                collectionClass: "java.util.ArrayList"
                parameters: []
                values:
                - sapientType: "OBJECT"
                  content: !<new>
                    target: "java.lang.Object"
                    parameters: []
                    privateConstructor: false
                    createdByTargetCode: false
                  valueType: "java.lang.Object"
                  uuid: "getDisplayNameFromCertificate_collection1-0-0"
                  fixed: false
                  collectionUuid: "getDisplayNameFromCertificate_collection1-0"
                  equalsMethodPresent: false
                  explicitCastNeeded: false
              valueType: "java.util.List"
              genericValueType: "?"
              uuid: "getDisplayNameFromCertificate_collection1-0"
              fixed: false
              collectionUuid: "getDisplayNameFromCertificate_collection1"
              equalsMethodPresent: false
              explicitCastNeeded: false
          valueType: "java.util.Collection"
          genericValueType: "java.util.List<?>"
          uuid: "getDisplayNameFromCertificate_collection1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
      valueType: "java.util.Iterator"
      genericValueType: "java.util.List<?>"
      uuid: "getDisplayNameFromCertificate_iterator1"
      fixed: false
      collectionUuid: "getDisplayNameFromCertificate_collection1"
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "getDisplayNameFromCertificate_boolean4"
      fixed: false
      collectionUuid: "getDisplayNameFromCertificate_collection1"
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_getString1"
      valueType: "java.lang.String"
      uuid: "getDisplayNameFromCertificate_string2"
      fixed: false
      equalsMethodPresent: true
      explicitCastNeeded: false
  - pathId: "path39"
    testPathName: "getDisplayNameFromCertificateWhenSubjectAlternativeNameGet0NotEquals1AndCaughtCertificateParsingExceptionAndOrgIsNullAn"
    modelFingerprint: "FD8E992E02904CA55D4E61F13B0B55EE"
    problemWasSolvedByProver: false
    catchBlockExercised:
      idExternalInstruction: 0
      id: 1
      catchExceptions:
      - "java.security.cert.CertificateParsingException"
    truncated: true
    inputParameters: []
    uuid: "1265b785-54eb-3082-b587-b2eca36c5ccd"
    deleted: true
    disabled: false
    ignoredBySystem: true
    variablesCouldNotBeIsolated: "name"
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: java.security.cert.X509Certificate.getSubjectX500Principal()\
        \ : javax.security.auth.x500.X500Principal"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues: []
  - pathId: "path9"
    testPathName: "getDisplayNameFromCertificateWhenSubjectAlternativeNameGet0Equals1AndOrgIsNotNullAndWithLocation"
    modelFingerprint: "74877264288377B6F459BC7E1CCAC029"
    problemWasSolvedByProver: false
    truncated: false
    inputParameters:
    - type: "INPUT"
      name: "certificate"
      modelFingerprint: "DBDCFF0DDD8031E8D812FA6146AAF829"
      index: 1
      valueUuid: "getDisplayNameFromCertificate_x509Certificate1"
    - type: "INPUT"
      name: "withLocation"
      modelFingerprint: "C5ECEDE35CFA6A5DB46E0283497FE3A6"
      index: 2
      valueUuid: "getDisplayNameFromCertificate_boolean1"
    - type: "LOCAL_VARIABLE"
      name: "name"
      modelFingerprint: "AF013A3D9F75BAEE4BA10D6EDAD23778"
      index: 3
      valueUuid: "getDisplayNameFromCertificate_x500Name1"
      methodExercised:
        target: "name"
        name: "getRDNs"
        parameters: []
        signature: "getRDNs(): RDN[]"
        returnValueUuid: "getDisplayNameFromCertificate_rDN[]1"
        access: 1
    - type: "LOCAL_VARIABLE"
      name: "rdn"
      modelFingerprint: "9721CD15C1B884EE74D662C537446858"
      index: 4
      valueUuid: "getDisplayNameFromCertificate_rDN1"
      methodExercised:
        target: "rdn"
        name: "getFirst"
        parameters: []
        signature: "getFirst(): AttributeTypeAndValue"
        returnValueUuid: "getDisplayNameFromCertificate_attributeTypeAndValue1"
        access: 1
    - type: "LOCAL_VARIABLE"
      name: "pair"
      modelFingerprint: "F1515DFA23D0C880672B7182A5BC997C"
      index: 5
      valueUuid: "getDisplayNameFromCertificate_attributeTypeAndValue1"
      methodExercised:
        target: "pair"
        name: "getValue"
        parameters: []
        signature: "getValue(): ASN1Encodable"
        returnValueUuid: "getDisplayNameFromCertificate_aSN1Encodable1"
        access: 1
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "E9D195B16BBD93BD500EF022950DA9ED"
      index: 6
      valueUuid: "getDisplayNameFromCertificate_aSN1Encodable1checkCast"
      methodExercised:
        target: "org.bouncycastle.asn1.ASN1String"
        name: "getString"
        parameters: []
        signature: "getString(): String"
        returnValueUuid: "getDisplayNameFromCertificate_string2"
        access: 1025
    - type: "LOCAL_VARIABLE"
      name: "pair"
      modelFingerprint: "11BC163B18D6F960E5E99FB7F953FF6B"
      index: 7
      valueUuid: "getDisplayNameFromCertificate_attributeTypeAndValue1"
      methodExercised:
        target: "pair"
        name: "getType"
        parameters: []
        signature: "getType(): ASN1ObjectIdentifier"
        returnValueUuid: "getDisplayNameFromCertificate_aSN1ObjectIdentifier3"
        access: 1
    - type: "LOCAL_VARIABLE"
      name: "var9"
      modelFingerprint: "D19009C03FC63CDFE2A0615538177222"
      index: 8
      idsTryCatchBlockSurrounding:
      - 1
      valueUuid: "getDisplayNameFromCertificate_iterator1"
      methodExercised:
        target: "var9"
        name: "hasNext"
        parameters: []
        signature: "hasNext(): boolean"
        returnValueUuid: "getDisplayNameFromCertificate_boolean4"
        access: 1025
    - type: "LOCAL_VARIABLE"
      name: "var9"
      modelFingerprint: "92C26F644506DB8DC19F493515B71AA9"
      index: 9
      idsTryCatchBlockSurrounding:
      - 1
      valueUuid: "getDisplayNameFromCertificate_iterator1"
      methodExercised:
        target: "var9"
        name: "next"
        parameters: []
        signature: "next(): Object"
        returnValueUuid: "getDisplayNameFromCertificate_object1"
        access: 1025
    - type: "LOCAL_VARIABLE"
      name: "var9"
      modelFingerprint: "D394C76917006A687D18E7C1BB9C73B0"
      index: 10
      idsTryCatchBlockSurrounding:
      - 1
      valueUuid: "getDisplayNameFromCertificate_iterator1"
      methodExercised:
        target: "var9"
        name: "hasNext"
        parameters: []
        signature: "hasNext(): boolean"
        returnValueUuid: "getDisplayNameFromCertificate_boolean5"
        access: 1025
    - type: "RESULT"
      name: "result"
      modelFingerprint: "BCAF1333B8FD89D2E42C34124911ED44"
      index: 11
      valueUuid: "getDisplayNameFromCertificate_object4"
    uuid: "9b126afb-4ecf-320d-8ce7-bca2184ac8f1"
    deleted: false
    disabled: true
    ignoredBySystem: false
    variablesCouldNotBeIsolated: "name"
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: java.security.cert.X509Certificate.getSubjectX500Principal()\
        \ : javax.security.auth.x500.X500Principal"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: true
    allValues:
    - sapientType: "MOCK"
      valueType: "java.security.cert.X509Certificate"
      uuid: "getDisplayNameFromCertificate_x509Certificate1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "getDisplayNameFromCertificate_boolean1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.bouncycastle.asn1.x500.X500Name"
        parameters:
        - name: "arg0"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "arg0"
            valueType: "java.lang.String"
            uuid: "getDisplayNameFromCertificate_string1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: true
      valueType: "org.bouncycastle.asn1.x500.X500Name"
      uuid: "getDisplayNameFromCertificate_x500Name1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "ARRAY"
      content: !<array>
        values:
          0:
            sapientType: "MOCK"
            valueType: "org.bouncycastle.asn1.x500.RDN"
            uuid: "getDisplayNameFromCertificate_rDN1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
      valueType: "org.bouncycastle.asn1.x500.RDN[]"
      uuid: "getDisplayNameFromCertificate_rDN[]1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.bouncycastle.asn1.x500.RDN"
      uuid: "getDisplayNameFromCertificate_rDN1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.bouncycastle.asn1.x500.AttributeTypeAndValue"
      uuid: "getDisplayNameFromCertificate_attributeTypeAndValue1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.bouncycastle.asn1.x500.AttributeTypeAndValue"
      uuid: "getDisplayNameFromCertificate_attributeTypeAndValue1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.bouncycastle.asn1.ASN1Encodable"
      uuid: "getDisplayNameFromCertificate_aSN1Encodable1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.bouncycastle.asn1.ASN1String"
      uuid: "getDisplayNameFromCertificate_aSN1Encodable1checkCast"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "A"
      valueType: "java.lang.String"
      uuid: "getDisplayNameFromCertificate_string2"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.bouncycastle.asn1.x500.AttributeTypeAndValue"
      uuid: "getDisplayNameFromCertificate_attributeTypeAndValue1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<static_field_return>
        target: "org.bouncycastle.asn1.x500.style.RFC4519Style"
        fieldName: "o"
      valueType: "org.bouncycastle.asn1.ASN1ObjectIdentifier"
      uuid: "getDisplayNameFromCertificate_aSN1ObjectIdentifier3"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "ITERATOR"
      content: !<iterator>
        collectionValue:
          sapientType: "COLLECTION"
          content: !<collection>
            collectionClass: "java.util.ArrayList"
            parameters: []
            values:
            - sapientType: "COLLECTION"
              content: !<collection>
                collectionClass: "java.util.ArrayList"
                parameters: []
                values:
                - sapientType: "BASIC"
                  content: !<regular>
                    value: 1
                  valueType: "java.lang.Integer"
                  uuid: "getDisplayNameFromCertificate_object2"
                  fixed: false
                  collectionUuid: "getDisplayNameFromCertificate_object1"
                  equalsMethodPresent: false
                  explicitCastNeeded: true
                - sapientType: "BASIC"
                  content: !<regular>
                    value: "var9ItemItem1Item2"
                  valueType: "java.lang.String"
                  uuid: "getDisplayNameFromCertificate_object3"
                  fixed: false
                  collectionUuid: "getDisplayNameFromCertificate_object1"
                  equalsMethodPresent: false
                  explicitCastNeeded: true
              valueType: "java.util.List"
              genericValueType: "?"
              uuid: "getDisplayNameFromCertificate_object1"
              fixed: false
              collectionUuid: "getDisplayNameFromCertificate_collection1"
              equalsMethodPresent: false
              explicitCastNeeded: false
          valueType: "java.util.Collection"
          genericValueType: "java.util.List<?>"
          uuid: "getDisplayNameFromCertificate_collection1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
      valueType: "java.util.Iterator"
      genericValueType: "java.util.List<?>"
      uuid: "getDisplayNameFromCertificate_iterator1"
      fixed: false
      collectionUuid: "getDisplayNameFromCertificate_collection1"
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "getDisplayNameFromCertificate_boolean4"
      fixed: false
      collectionUuid: "getDisplayNameFromCertificate_collection1"
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "ITERATOR"
      content: !<iterator>
        collectionValue:
          sapientType: "COLLECTION"
          content: !<collection>
            collectionClass: "java.util.ArrayList"
            parameters: []
            values:
            - sapientType: "COLLECTION"
              content: !<collection>
                collectionClass: "java.util.ArrayList"
                parameters: []
                values:
                - sapientType: "BASIC"
                  content: !<regular>
                    value: 1
                  valueType: "java.lang.Integer"
                  uuid: "getDisplayNameFromCertificate_object2"
                  fixed: false
                  collectionUuid: "getDisplayNameFromCertificate_object1"
                  equalsMethodPresent: false
                  explicitCastNeeded: true
                - sapientType: "BASIC"
                  content: !<regular>
                    value: "var9ItemItem1Item2"
                  valueType: "java.lang.String"
                  uuid: "getDisplayNameFromCertificate_object3"
                  fixed: false
                  collectionUuid: "getDisplayNameFromCertificate_object1"
                  equalsMethodPresent: false
                  explicitCastNeeded: true
              valueType: "java.util.List"
              genericValueType: "?"
              uuid: "getDisplayNameFromCertificate_object1"
              fixed: false
              collectionUuid: "getDisplayNameFromCertificate_collection1"
              equalsMethodPresent: false
              explicitCastNeeded: false
          valueType: "java.util.Collection"
          genericValueType: "java.util.List<?>"
          uuid: "getDisplayNameFromCertificate_collection1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
      valueType: "java.util.Iterator"
      genericValueType: "java.util.List<?>"
      uuid: "getDisplayNameFromCertificate_iterator1"
      fixed: false
      collectionUuid: "getDisplayNameFromCertificate_collection1"
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.ArrayList"
        parameters: []
        values:
        - sapientType: "BASIC"
          content: !<regular>
            value: 1
          valueType: "java.lang.Integer"
          uuid: "getDisplayNameFromCertificate_object2"
          fixed: false
          collectionUuid: "getDisplayNameFromCertificate_object1"
          equalsMethodPresent: false
          explicitCastNeeded: true
        - sapientType: "BASIC"
          content: !<regular>
            value: "var9ItemItem1Item2"
          valueType: "java.lang.String"
          uuid: "getDisplayNameFromCertificate_object3"
          fixed: false
          collectionUuid: "getDisplayNameFromCertificate_object1"
          equalsMethodPresent: false
          explicitCastNeeded: true
      valueType: "java.util.List"
      genericValueType: "?"
      uuid: "getDisplayNameFromCertificate_object1"
      fixed: false
      collectionUuid: "getDisplayNameFromCertificate_collection1"
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "ITERATOR"
      content: !<iterator>
        collectionValue:
          sapientType: "COLLECTION"
          content: !<collection>
            collectionClass: "java.util.ArrayList"
            parameters: []
            values:
            - sapientType: "COLLECTION"
              content: !<collection>
                collectionClass: "java.util.ArrayList"
                parameters: []
                values:
                - sapientType: "BASIC"
                  content: !<regular>
                    value: 1
                  valueType: "java.lang.Integer"
                  uuid: "getDisplayNameFromCertificate_object2"
                  fixed: false
                  collectionUuid: "getDisplayNameFromCertificate_object1"
                  equalsMethodPresent: false
                  explicitCastNeeded: true
                - sapientType: "BASIC"
                  content: !<regular>
                    value: "var9ItemItem1Item2"
                  valueType: "java.lang.String"
                  uuid: "getDisplayNameFromCertificate_object3"
                  fixed: false
                  collectionUuid: "getDisplayNameFromCertificate_object1"
                  equalsMethodPresent: false
                  explicitCastNeeded: true
              valueType: "java.util.List"
              genericValueType: "?"
              uuid: "getDisplayNameFromCertificate_object1"
              fixed: false
              collectionUuid: "getDisplayNameFromCertificate_collection1"
              equalsMethodPresent: false
              explicitCastNeeded: false
          valueType: "java.util.Collection"
          genericValueType: "java.util.List<?>"
          uuid: "getDisplayNameFromCertificate_collection1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
      valueType: "java.util.Iterator"
      genericValueType: "java.util.List<?>"
      uuid: "getDisplayNameFromCertificate_iterator1"
      fixed: false
      collectionUuid: "getDisplayNameFromCertificate_collection1"
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "getDisplayNameFromCertificate_boolean5"
      fixed: false
      collectionUuid: "getDisplayNameFromCertificate_collection1"
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "A"
      valueType: "java.lang.String"
      uuid: "getDisplayNameFromCertificate_object4"
      fixed: false
      collectionUuid: "getDisplayNameFromCertificate_list1"
      equalsMethodPresent: true
      explicitCastNeeded: false
  - pathId: "path10"
    testPathName: "getDisplayNameFromCertificateWhenSubjectAlternativeNameGet0Equals1AndOrgIsNotNullAndNotWithLocation"
    modelFingerprint: "5CE638BC5F8B16A02FC0CD574EF10D27"
    problemWasSolvedByProver: false
    truncated: false
    inputParameters:
    - type: "INPUT"
      name: "certificate"
      modelFingerprint: "DBDCFF0DDD8031E8D812FA6146AAF829"
      index: 1
      valueUuid: "getDisplayNameFromCertificate_x509Certificate1"
    - type: "INPUT"
      name: "withLocation"
      modelFingerprint: "51CEC06C0223E6BC6136269E88E213BC"
      index: 2
      valueUuid: "getDisplayNameFromCertificate_boolean1"
    - type: "LOCAL_VARIABLE"
      name: "name"
      modelFingerprint: "AF013A3D9F75BAEE4BA10D6EDAD23778"
      index: 3
      valueUuid: "getDisplayNameFromCertificate_x500Name1"
      methodExercised:
        target: "name"
        name: "getRDNs"
        parameters: []
        signature: "getRDNs(): RDN[]"
        returnValueUuid: "getDisplayNameFromCertificate_rDN[]1"
        access: 1
    - type: "LOCAL_VARIABLE"
      name: "rdn"
      modelFingerprint: "9721CD15C1B884EE74D662C537446858"
      index: 4
      valueUuid: "getDisplayNameFromCertificate_rDN1"
      methodExercised:
        target: "rdn"
        name: "getFirst"
        parameters: []
        signature: "getFirst(): AttributeTypeAndValue"
        returnValueUuid: "getDisplayNameFromCertificate_attributeTypeAndValue1"
        access: 1
    - type: "LOCAL_VARIABLE"
      name: "pair"
      modelFingerprint: "F1515DFA23D0C880672B7182A5BC997C"
      index: 5
      valueUuid: "getDisplayNameFromCertificate_attributeTypeAndValue1"
      methodExercised:
        target: "pair"
        name: "getValue"
        parameters: []
        signature: "getValue(): ASN1Encodable"
        returnValueUuid: "getDisplayNameFromCertificate_aSN1Encodable1"
        access: 1
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "3E781DD8112C2943B8A8F0BAC11651F4"
      index: 6
      valueUuid: "getDisplayNameFromCertificate_aSN1Encodable1checkCast"
      methodExercised:
        target: "org.bouncycastle.asn1.ASN1String"
        name: "getString"
        parameters: []
        signature: "getString(): String"
        returnValueUuid: "getDisplayNameFromCertificate_string2"
        access: 1025
    - type: "LOCAL_VARIABLE"
      name: "pair"
      modelFingerprint: "11BC163B18D6F960E5E99FB7F953FF6B"
      index: 7
      valueUuid: "getDisplayNameFromCertificate_attributeTypeAndValue1"
      methodExercised:
        target: "pair"
        name: "getType"
        parameters: []
        signature: "getType(): ASN1ObjectIdentifier"
        returnValueUuid: "getDisplayNameFromCertificate_aSN1ObjectIdentifier3"
        access: 1
    - type: "LOCAL_VARIABLE"
      name: "var9"
      modelFingerprint: "D19009C03FC63CDFE2A0615538177222"
      index: 8
      idsTryCatchBlockSurrounding:
      - 1
      valueUuid: "getDisplayNameFromCertificate_iterator1"
      methodExercised:
        target: "var9"
        name: "hasNext"
        parameters: []
        signature: "hasNext(): boolean"
        returnValueUuid: "getDisplayNameFromCertificate_boolean4"
        access: 1025
    - type: "LOCAL_VARIABLE"
      name: "var9"
      modelFingerprint: "92C26F644506DB8DC19F493515B71AA9"
      index: 9
      idsTryCatchBlockSurrounding:
      - 1
      valueUuid: "getDisplayNameFromCertificate_iterator1"
      methodExercised:
        target: "var9"
        name: "next"
        parameters: []
        signature: "next(): Object"
        returnValueUuid: "getDisplayNameFromCertificate_object1"
        access: 1025
    - type: "LOCAL_VARIABLE"
      name: "var9"
      modelFingerprint: "D394C76917006A687D18E7C1BB9C73B0"
      index: 10
      idsTryCatchBlockSurrounding:
      - 1
      valueUuid: "getDisplayNameFromCertificate_iterator1"
      methodExercised:
        target: "var9"
        name: "hasNext"
        parameters: []
        signature: "hasNext(): boolean"
        returnValueUuid: "getDisplayNameFromCertificate_boolean5"
        access: 1025
    - type: "RESULT"
      name: "result"
      modelFingerprint: "D1F433D4EB9F8805FF391E82DAB508AB"
      index: 11
      valueUuid: "getDisplayNameFromCertificate_string2"
    uuid: "952fa8a8-3c02-3d6a-9923-08544e80f75a"
    deleted: false
    disabled: true
    ignoredBySystem: false
    variablesCouldNotBeIsolated: "name"
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: java.security.cert.X509Certificate.getSubjectX500Principal()\
        \ : javax.security.auth.x500.X500Principal"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: true
    allValues:
    - sapientType: "MOCK"
      valueType: "java.security.cert.X509Certificate"
      uuid: "getDisplayNameFromCertificate_x509Certificate1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "getDisplayNameFromCertificate_boolean1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.bouncycastle.asn1.x500.X500Name"
        parameters:
        - name: "arg0"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "arg0"
            valueType: "java.lang.String"
            uuid: "getDisplayNameFromCertificate_string1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: true
      valueType: "org.bouncycastle.asn1.x500.X500Name"
      uuid: "getDisplayNameFromCertificate_x500Name1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "ARRAY"
      content: !<array>
        values:
          0:
            sapientType: "MOCK"
            valueType: "org.bouncycastle.asn1.x500.RDN"
            uuid: "getDisplayNameFromCertificate_rDN1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
      valueType: "org.bouncycastle.asn1.x500.RDN[]"
      uuid: "getDisplayNameFromCertificate_rDN[]1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.bouncycastle.asn1.x500.RDN"
      uuid: "getDisplayNameFromCertificate_rDN1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.bouncycastle.asn1.x500.AttributeTypeAndValue"
      uuid: "getDisplayNameFromCertificate_attributeTypeAndValue1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.bouncycastle.asn1.x500.AttributeTypeAndValue"
      uuid: "getDisplayNameFromCertificate_attributeTypeAndValue1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.bouncycastle.asn1.ASN1Encodable"
      uuid: "getDisplayNameFromCertificate_aSN1Encodable1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.bouncycastle.asn1.ASN1String"
      uuid: "getDisplayNameFromCertificate_aSN1Encodable1checkCast"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_getString1"
      valueType: "java.lang.String"
      uuid: "getDisplayNameFromCertificate_string2"
      fixed: false
      equalsMethodPresent: true
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.bouncycastle.asn1.x500.AttributeTypeAndValue"
      uuid: "getDisplayNameFromCertificate_attributeTypeAndValue1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<static_field_return>
        target: "org.bouncycastle.asn1.x500.style.RFC4519Style"
        fieldName: "o"
      valueType: "org.bouncycastle.asn1.ASN1ObjectIdentifier"
      uuid: "getDisplayNameFromCertificate_aSN1ObjectIdentifier3"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "ITERATOR"
      content: !<iterator>
        collectionValue:
          sapientType: "COLLECTION"
          content: !<collection>
            collectionClass: "java.util.ArrayList"
            parameters: []
            values:
            - sapientType: "COLLECTION"
              content: !<collection>
                collectionClass: "java.util.ArrayList"
                parameters: []
                values:
                - sapientType: "BASIC"
                  content: !<regular>
                    value: 1
                  valueType: "java.lang.Integer"
                  uuid: "getDisplayNameFromCertificate_object2"
                  fixed: false
                  collectionUuid: "getDisplayNameFromCertificate_object1"
                  equalsMethodPresent: false
                  explicitCastNeeded: true
                - sapientType: "BASIC"
                  content: !<regular>
                    value: "var9ItemItem1Item2"
                  valueType: "java.lang.String"
                  uuid: "getDisplayNameFromCertificate_object3"
                  fixed: false
                  collectionUuid: "getDisplayNameFromCertificate_object1"
                  equalsMethodPresent: false
                  explicitCastNeeded: true
              valueType: "java.util.List"
              genericValueType: "?"
              uuid: "getDisplayNameFromCertificate_object1"
              fixed: false
              collectionUuid: "getDisplayNameFromCertificate_collection1"
              equalsMethodPresent: false
              explicitCastNeeded: false
          valueType: "java.util.Collection"
          genericValueType: "java.util.List<?>"
          uuid: "getDisplayNameFromCertificate_collection1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
      valueType: "java.util.Iterator"
      genericValueType: "java.util.List<?>"
      uuid: "getDisplayNameFromCertificate_iterator1"
      fixed: false
      collectionUuid: "getDisplayNameFromCertificate_collection1"
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "getDisplayNameFromCertificate_boolean4"
      fixed: false
      collectionUuid: "getDisplayNameFromCertificate_collection1"
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "ITERATOR"
      content: !<iterator>
        collectionValue:
          sapientType: "COLLECTION"
          content: !<collection>
            collectionClass: "java.util.ArrayList"
            parameters: []
            values:
            - sapientType: "COLLECTION"
              content: !<collection>
                collectionClass: "java.util.ArrayList"
                parameters: []
                values:
                - sapientType: "BASIC"
                  content: !<regular>
                    value: 1
                  valueType: "java.lang.Integer"
                  uuid: "getDisplayNameFromCertificate_object2"
                  fixed: false
                  collectionUuid: "getDisplayNameFromCertificate_object1"
                  equalsMethodPresent: false
                  explicitCastNeeded: true
                - sapientType: "BASIC"
                  content: !<regular>
                    value: "var9ItemItem1Item2"
                  valueType: "java.lang.String"
                  uuid: "getDisplayNameFromCertificate_object3"
                  fixed: false
                  collectionUuid: "getDisplayNameFromCertificate_object1"
                  equalsMethodPresent: false
                  explicitCastNeeded: true
              valueType: "java.util.List"
              genericValueType: "?"
              uuid: "getDisplayNameFromCertificate_object1"
              fixed: false
              collectionUuid: "getDisplayNameFromCertificate_collection1"
              equalsMethodPresent: false
              explicitCastNeeded: false
          valueType: "java.util.Collection"
          genericValueType: "java.util.List<?>"
          uuid: "getDisplayNameFromCertificate_collection1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
      valueType: "java.util.Iterator"
      genericValueType: "java.util.List<?>"
      uuid: "getDisplayNameFromCertificate_iterator1"
      fixed: false
      collectionUuid: "getDisplayNameFromCertificate_collection1"
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.ArrayList"
        parameters: []
        values:
        - sapientType: "BASIC"
          content: !<regular>
            value: 1
          valueType: "java.lang.Integer"
          uuid: "getDisplayNameFromCertificate_object2"
          fixed: false
          collectionUuid: "getDisplayNameFromCertificate_object1"
          equalsMethodPresent: false
          explicitCastNeeded: true
        - sapientType: "BASIC"
          content: !<regular>
            value: "var9ItemItem1Item2"
          valueType: "java.lang.String"
          uuid: "getDisplayNameFromCertificate_object3"
          fixed: false
          collectionUuid: "getDisplayNameFromCertificate_object1"
          equalsMethodPresent: false
          explicitCastNeeded: true
      valueType: "java.util.List"
      genericValueType: "?"
      uuid: "getDisplayNameFromCertificate_object1"
      fixed: false
      collectionUuid: "getDisplayNameFromCertificate_collection1"
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "ITERATOR"
      content: !<iterator>
        collectionValue:
          sapientType: "COLLECTION"
          content: !<collection>
            collectionClass: "java.util.ArrayList"
            parameters: []
            values:
            - sapientType: "COLLECTION"
              content: !<collection>
                collectionClass: "java.util.ArrayList"
                parameters: []
                values:
                - sapientType: "BASIC"
                  content: !<regular>
                    value: 1
                  valueType: "java.lang.Integer"
                  uuid: "getDisplayNameFromCertificate_object2"
                  fixed: false
                  collectionUuid: "getDisplayNameFromCertificate_object1"
                  equalsMethodPresent: false
                  explicitCastNeeded: true
                - sapientType: "BASIC"
                  content: !<regular>
                    value: "var9ItemItem1Item2"
                  valueType: "java.lang.String"
                  uuid: "getDisplayNameFromCertificate_object3"
                  fixed: false
                  collectionUuid: "getDisplayNameFromCertificate_object1"
                  equalsMethodPresent: false
                  explicitCastNeeded: true
              valueType: "java.util.List"
              genericValueType: "?"
              uuid: "getDisplayNameFromCertificate_object1"
              fixed: false
              collectionUuid: "getDisplayNameFromCertificate_collection1"
              equalsMethodPresent: false
              explicitCastNeeded: false
          valueType: "java.util.Collection"
          genericValueType: "java.util.List<?>"
          uuid: "getDisplayNameFromCertificate_collection1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
      valueType: "java.util.Iterator"
      genericValueType: "java.util.List<?>"
      uuid: "getDisplayNameFromCertificate_iterator1"
      fixed: false
      collectionUuid: "getDisplayNameFromCertificate_collection1"
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "getDisplayNameFromCertificate_boolean5"
      fixed: false
      collectionUuid: "getDisplayNameFromCertificate_collection1"
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_getString1"
      valueType: "java.lang.String"
      uuid: "getDisplayNameFromCertificate_string2"
      fixed: false
      equalsMethodPresent: true
      explicitCastNeeded: false
  - pathId: "path11"
    testPathName: "getDisplayNameFromCertificateWhenSubjectAlternativeNameGet0Equals1AndOrgIsNullAndCommonNameIsNull2"
    modelFingerprint: "BB6A684FEA966F04C1F541CCC2D6A7C5"
    problemWasSolvedByProver: false
    truncated: true
    inputParameters: []
    uuid: "84f7f2ed-16db-342b-bd0f-d6e41a778dfa"
    deleted: true
    disabled: false
    ignoredBySystem: true
    variablesCouldNotBeIsolated: "name"
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: java.security.cert.X509Certificate.getSubjectX500Principal()\
        \ : javax.security.auth.x500.X500Principal"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues: []
  - pathId: "path12"
    testPathName: "getDisplayNameFromCertificateWhenSubjectAlternativeNameGet0NotEquals1AndOrgIsNotNullAndWithLocation"
    modelFingerprint: "7BF5346DC5844D6BED1CF77FDF0D036D"
    problemWasSolvedByProver: false
    truncated: true
    inputParameters: []
    uuid: "58fb34b8-9eab-3f19-a772-defee5261dd9"
    deleted: true
    disabled: false
    ignoredBySystem: true
    variablesCouldNotBeIsolated: "name"
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: java.security.cert.X509Certificate.getSubjectX500Principal()\
        \ : javax.security.auth.x500.X500Principal"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues: []
  - pathId: "path13"
    testPathName: "getDisplayNameFromCertificateWhenSubjectAlternativeNameGet0NotEquals1AndOrgIsNotNullAndNotWithLocation"
    modelFingerprint: "0F48FD778ED15689A61B00CC75FAE0CF"
    problemWasSolvedByProver: false
    truncated: true
    inputParameters: []
    uuid: "496d8701-57cd-3490-ab3e-70c0e7f2c84e"
    deleted: true
    disabled: false
    ignoredBySystem: true
    variablesCouldNotBeIsolated: "name"
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: java.security.cert.X509Certificate.getSubjectX500Principal()\
        \ : javax.security.auth.x500.X500Principal"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues: []
  - pathId: "path14"
    testPathName: "getDisplayNameFromCertificateWhenSubjectAlternativeNameGet0NotEquals1AndOrgIsNullAndCommonNameIsNull2"
    modelFingerprint: "9DF911BAFC60C0ACFEC39993F1772BD0"
    problemWasSolvedByProver: false
    truncated: true
    inputParameters: []
    uuid: "dc59f229-e5ca-365c-bbbc-4fe6c5fc9018"
    deleted: true
    disabled: false
    ignoredBySystem: true
    variablesCouldNotBeIsolated: "name"
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: java.security.cert.X509Certificate.getSubjectX500Principal()\
        \ : javax.security.auth.x500.X500Principal"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues: []
  - pathId: "path23"
    testPathName: "getDisplayNameFromCertificateWhenSubjectAlternativeNamesIsEmptyAndOrgIsNullAndCommonNameIsNull3"
    modelFingerprint: "F6D90E94FBBB9A50F07D4C6CC4059B5A"
    problemWasSolvedByProver: false
    truncated: true
    inputParameters: []
    uuid: "27476f42-1862-3929-be8c-322a52a74595"
    deleted: true
    disabled: false
    ignoredBySystem: true
    variablesCouldNotBeIsolated: "name"
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: java.security.cert.X509Certificate.getSubjectX500Principal()\
        \ : javax.security.auth.x500.X500Principal"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues: []
  - pathId: "path28"
    testPathName: "getDisplayNameFromCertificateWhenTypeEqualsRFC4519StyleCAndSubjectAlternativeNamesIsNullAndOrgIsNullAndCommonNameIsNull"
    modelFingerprint: "3D1CDAC075BB662325E1D2A243DB76FD"
    problemWasSolvedByProver: false
    truncated: true
    inputParameters: []
    uuid: "c263772c-ee61-364b-96e8-d25b06cb359c"
    deleted: true
    disabled: false
    ignoredBySystem: true
    variablesCouldNotBeIsolated: "name"
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: java.security.cert.X509Certificate.getSubjectX500Principal()\
        \ : javax.security.auth.x500.X500Principal"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues: []
  - pathId: "path32"
    testPathName: "getDisplayNameFromCertificateWhenTypeNotEqualsRFC4519StyleCAndSubjectAlternativeNamesIsNullAndOrgIsNullAndCommonNameIsN"
    modelFingerprint: "0B1EBF8FE066E2673AB0AE3FFB8B2C8B"
    problemWasSolvedByProver: false
    truncated: true
    inputParameters: []
    uuid: "34cd0ea4-a7e4-3562-8953-90bdf1378101"
    deleted: true
    disabled: false
    ignoredBySystem: true
    variablesCouldNotBeIsolated: "name"
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: java.security.cert.X509Certificate.getSubjectX500Principal()\
        \ : javax.security.auth.x500.X500Principal"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues: []
  - pathId: "path44"
    testPathName: "getDisplayNameFromCertificateWhenCaughtCertificateParsingExceptionAndOrgIsNotNullAndWithLocation"
    modelFingerprint: "3241A209B1D0E8CDE5757AD0B6D96545"
    problemWasSolvedByProver: false
    catchBlockExercised:
      idExternalInstruction: 0
      id: 1
      catchExceptions:
      - "java.security.cert.CertificateParsingException"
    truncated: false
    inputParameters:
    - type: "INPUT"
      name: "certificate"
      modelFingerprint: "AB949112D997C08B6DCFFA656363C91E"
      index: 1
      valueUuid: "getDisplayNameFromCertificate_x509Certificate1"
    - type: "INPUT"
      name: "withLocation"
      modelFingerprint: "F33501894F8943478CF92036B95C1DAE"
      index: 2
      valueUuid: "getDisplayNameFromCertificate_boolean1"
    - type: "LOCAL_VARIABLE"
      name: "certificate"
      modelFingerprint: "C1F1AAA6F54FDD23B670072A5713B53F"
      index: 3
      valueUuid: "getDisplayNameFromCertificate_x509Certificate1"
      methodExercised:
        target: "certificate"
        name: "getSubjectX500Principal"
        parameters: []
        signature: "getSubjectX500Principal(): X500Principal"
        returnValueUuid: "getDisplayNameFromCertificate_x500Principal1"
        access: 1
    - type: "LOCAL_VARIABLE"
      name: "name"
      modelFingerprint: "AF013A3D9F75BAEE4BA10D6EDAD23778"
      index: 4
      valueUuid: "getDisplayNameFromCertificate_x500Name1"
      methodExercised:
        target: "name"
        name: "getRDNs"
        parameters: []
        signature: "getRDNs(): RDN[]"
        returnValueUuid: "getDisplayNameFromCertificate_rDN[]1"
        access: 1
    - type: "LOCAL_VARIABLE"
      name: "rdn"
      modelFingerprint: "AC73514AB48C245DC23E06A5060D8D11"
      index: 5
      valueUuid: "getDisplayNameFromCertificate_rDN1"
      methodExercised:
        target: "rdn"
        name: "getFirst"
        parameters: []
        signature: "getFirst(): AttributeTypeAndValue"
        returnValueUuid: "getDisplayNameFromCertificate_attributeTypeAndValue1"
        access: 1
    - type: "LOCAL_VARIABLE"
      name: "pair"
      modelFingerprint: "B3191AAB8E8C2D9D9E2E4065AF304C29"
      index: 6
      valueUuid: "getDisplayNameFromCertificate_attributeTypeAndValue1"
      methodExercised:
        target: "pair"
        name: "getValue"
        parameters: []
        signature: "getValue(): ASN1Encodable"
        returnValueUuid: "getDisplayNameFromCertificate_aSN1Encodable1"
        access: 1
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "633CF9EE29A42F01EC804EDF6EC752F6"
      index: 7
      valueUuid: "getDisplayNameFromCertificate_aSN1Encodable1checkCast"
      methodExercised:
        target: "org.bouncycastle.asn1.ASN1String"
        name: "getString"
        parameters: []
        signature: "getString(): String"
        returnValueUuid: "getDisplayNameFromCertificate_string2"
        access: 1025
    - type: "LOCAL_VARIABLE"
      name: "pair"
      modelFingerprint: "B30960C003AB0B6A6A0EFDA276085C4D"
      index: 8
      valueUuid: "getDisplayNameFromCertificate_attributeTypeAndValue1"
      methodExercised:
        target: "pair"
        name: "getType"
        parameters: []
        signature: "getType(): ASN1ObjectIdentifier"
        returnValueUuid: "getDisplayNameFromCertificate_aSN1ObjectIdentifier3"
        access: 1
    - type: "LOCAL_VARIABLE"
      name: "certificate"
      modelFingerprint: "478C030AF96C244FD44DBA6FEB62178B"
      index: 9
      idsTryCatchBlockSurrounding:
      - 1
      valueUuid: "getDisplayNameFromCertificate_x509Certificate1"
      methodExercised:
        target: "certificate"
        name: "getSubjectAlternativeNames"
        parameters: []
        throwsExceptions:
        - "java.security.cert.CertificateParsingException"
        signature: "getSubjectAlternativeNames(): Collection throws java.security.cert.CertificateParsingException"
        returnValueUuid: "getDisplayNameFromCertificate_collection1"
        access: 1
    - type: "LOCAL_VARIABLE"
      name: "var9"
      modelFingerprint: "43AC789783D17911ED56B58E6837D761"
      index: 10
      idsTryCatchBlockSurrounding:
      - 1
      valueUuid: "getDisplayNameFromCertificate_iterator1"
      methodExercised:
        target: "var9"
        name: "hasNext"
        parameters: []
        signature: "hasNext(): boolean"
        returnValueUuid: "getDisplayNameFromCertificate_boolean4"
        access: 1025
    - type: "LOCAL_VARIABLE"
      name: "var9"
      modelFingerprint: "544D12DCD8706B9D2E4751AE01E38C2A"
      index: 11
      idsTryCatchBlockSurrounding:
      - 1
      valueUuid: "getDisplayNameFromCertificate_iterator1"
      methodExercised:
        target: "var9"
        name: "next"
        parameters: []
        signature: "next(): Object"
        returnValueUuid: "getDisplayNameFromCertificate_object1"
        access: 1025
    - type: "LOCAL_VARIABLE"
      name: "var9"
      modelFingerprint: "312C23DF382B30D283FA126C30A3BF71"
      index: 12
      idsTryCatchBlockSurrounding:
      - 1
      valueUuid: "getDisplayNameFromCertificate_iterator1"
      methodExercised:
        target: "var9"
        name: "hasNext"
        parameters: []
        signature: "hasNext(): boolean"
        returnValueUuid: "getDisplayNameFromCertificate_boolean5"
        access: 1025
    - type: "RESULT"
      name: "result"
      modelFingerprint: "8107C9D4BFA44362D2581B19A1CB908C"
      index: 13
      valueUuid: "getDisplayNameFromCertificate_string2"
    uuid: "7ef183af-fd44-3d97-9888-8c11c10023e6"
    deleted: false
    disabled: true
    ignoredBySystem: false
    variablesCouldNotBeIsolated: "name"
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: javax.security.auth.x500.X500Principal.getName()\
        \ : java.lang.String"
    prover: "LLM"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: true
    allValues:
    - sapientType: "MOCK"
      valueType: "java.security.cert.X509Certificate"
      uuid: "getDisplayNameFromCertificate_x509Certificate1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "getDisplayNameFromCertificate_boolean1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "java.security.cert.X509Certificate"
      uuid: "getDisplayNameFromCertificate_x509Certificate1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<new>
        target: "javax.security.auth.x500.X500Principal"
        parameters:
        - name: "name"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "name1"
            valueType: "java.lang.String"
            uuid: "getDisplayNameFromCertificate_x500Principal1-name"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      valueType: "javax.security.auth.x500.X500Principal"
      uuid: "getDisplayNameFromCertificate_x500Principal1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.bouncycastle.asn1.x500.X500Name"
        parameters:
        - name: "arg0"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "arg0"
            valueType: "java.lang.String"
            uuid: "getDisplayNameFromCertificate_string1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: true
      valueType: "org.bouncycastle.asn1.x500.X500Name"
      uuid: "getDisplayNameFromCertificate_x500Name1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "ARRAY"
      content: !<array>
        values:
          0:
            sapientType: "MOCK"
            valueType: "org.bouncycastle.asn1.x500.RDN"
            uuid: "getDisplayNameFromCertificate_rDN1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
      valueType: "org.bouncycastle.asn1.x500.RDN[]"
      uuid: "getDisplayNameFromCertificate_rDN[]1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.bouncycastle.asn1.x500.RDN"
      uuid: "getDisplayNameFromCertificate_rDN1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.bouncycastle.asn1.x500.AttributeTypeAndValue"
      uuid: "getDisplayNameFromCertificate_attributeTypeAndValue1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.bouncycastle.asn1.x500.AttributeTypeAndValue"
      uuid: "getDisplayNameFromCertificate_attributeTypeAndValue1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.bouncycastle.asn1.ASN1Encodable"
      uuid: "getDisplayNameFromCertificate_aSN1Encodable1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.bouncycastle.asn1.ASN1String"
      uuid: "getDisplayNameFromCertificate_aSN1Encodable1checkCast"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "<String value>"
      valueType: "java.lang.String"
      uuid: "getDisplayNameFromCertificate_string2"
      fixed: false
      equalsMethodPresent: true
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.bouncycastle.asn1.x500.AttributeTypeAndValue"
      uuid: "getDisplayNameFromCertificate_attributeTypeAndValue1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<static_field_return>
        target: "org.bouncycastle.asn1.x500.style.RFC4519Style"
        fieldName: "o"
      valueType: "org.bouncycastle.asn1.ASN1ObjectIdentifier"
      uuid: "getDisplayNameFromCertificate_aSN1ObjectIdentifier3"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "java.security.cert.X509Certificate"
      uuid: "getDisplayNameFromCertificate_x509Certificate1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.ArrayList"
        parameters: []
        values:
        - sapientType: "COLLECTION"
          content: !<collection>
            collectionClass: "java.util.ArrayList"
            parameters: []
            values:
            - sapientType: "OBJECT"
              content: !<new>
                target: "java.lang.Object"
                parameters: []
                privateConstructor: false
                createdByTargetCode: false
              valueType: "java.lang.Object"
              uuid: "getDisplayNameFromCertificate_collection1-0-0"
              fixed: false
              collectionUuid: "getDisplayNameFromCertificate_collection1-0"
              equalsMethodPresent: false
              explicitCastNeeded: false
          valueType: "java.util.List"
          genericValueType: "?"
          uuid: "getDisplayNameFromCertificate_collection1-0"
          fixed: false
          collectionUuid: "getDisplayNameFromCertificate_collection1"
          equalsMethodPresent: false
          explicitCastNeeded: false
      valueType: "java.util.Collection"
      genericValueType: "java.util.List<?>"
      uuid: "getDisplayNameFromCertificate_collection1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "ITERATOR"
      content: !<iterator>
        collectionValue:
          sapientType: "COLLECTION"
          content: !<collection>
            collectionClass: "java.util.ArrayList"
            parameters: []
            values:
            - sapientType: "COLLECTION"
              content: !<collection>
                collectionClass: "java.util.ArrayList"
                parameters: []
                values:
                - sapientType: "OBJECT"
                  content: !<new>
                    target: "java.lang.Object"
                    parameters: []
                    privateConstructor: false
                    createdByTargetCode: false
                  valueType: "java.lang.Object"
                  uuid: "getDisplayNameFromCertificate_collection1-0-0"
                  fixed: false
                  collectionUuid: "getDisplayNameFromCertificate_collection1-0"
                  equalsMethodPresent: false
                  explicitCastNeeded: false
              valueType: "java.util.List"
              genericValueType: "?"
              uuid: "getDisplayNameFromCertificate_collection1-0"
              fixed: false
              collectionUuid: "getDisplayNameFromCertificate_collection1"
              equalsMethodPresent: false
              explicitCastNeeded: false
          valueType: "java.util.Collection"
          genericValueType: "java.util.List<?>"
          uuid: "getDisplayNameFromCertificate_collection1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
      valueType: "java.util.Iterator"
      genericValueType: "java.util.List<?>"
      uuid: "getDisplayNameFromCertificate_iterator1"
      fixed: false
      collectionUuid: "getDisplayNameFromCertificate_collection1"
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "getDisplayNameFromCertificate_boolean4"
      fixed: false
      collectionUuid: "getDisplayNameFromCertificate_collection1"
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "ITERATOR"
      content: !<iterator>
        collectionValue:
          sapientType: "COLLECTION"
          content: !<collection>
            collectionClass: "java.util.ArrayList"
            parameters: []
            values:
            - sapientType: "COLLECTION"
              content: !<collection>
                collectionClass: "java.util.ArrayList"
                parameters: []
                values:
                - sapientType: "OBJECT"
                  content: !<new>
                    target: "java.lang.Object"
                    parameters: []
                    privateConstructor: false
                    createdByTargetCode: false
                  valueType: "java.lang.Object"
                  uuid: "getDisplayNameFromCertificate_collection1-0-0"
                  fixed: false
                  collectionUuid: "getDisplayNameFromCertificate_collection1-0"
                  equalsMethodPresent: false
                  explicitCastNeeded: false
              valueType: "java.util.List"
              genericValueType: "?"
              uuid: "getDisplayNameFromCertificate_collection1-0"
              fixed: false
              collectionUuid: "getDisplayNameFromCertificate_collection1"
              equalsMethodPresent: false
              explicitCastNeeded: false
          valueType: "java.util.Collection"
          genericValueType: "java.util.List<?>"
          uuid: "getDisplayNameFromCertificate_collection1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
      valueType: "java.util.Iterator"
      genericValueType: "java.util.List<?>"
      uuid: "getDisplayNameFromCertificate_iterator1"
      fixed: false
      collectionUuid: "getDisplayNameFromCertificate_collection1"
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.ArrayList"
        parameters: []
        values:
        - sapientType: "BASIC"
          content: !<regular>
            value: 1
          valueType: "java.lang.Integer"
          uuid: "getDisplayNameFromCertificate_object2"
          fixed: false
          collectionUuid: "getDisplayNameFromCertificate_object1"
          equalsMethodPresent: false
          explicitCastNeeded: true
        - sapientType: "BASIC"
          content: !<regular>
            value: "return_of_getSubjectAlternativeNamesItem1Item2"
          valueType: "java.lang.String"
          uuid: "getDisplayNameFromCertificate_object3"
          fixed: false
          collectionUuid: "getDisplayNameFromCertificate_object1"
          equalsMethodPresent: false
          explicitCastNeeded: true
      valueType: "java.util.List"
      genericValueType: "?"
      uuid: "getDisplayNameFromCertificate_object1"
      fixed: false
      collectionUuid: "getDisplayNameFromCertificate_collection1"
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "ITERATOR"
      content: !<iterator>
        collectionValue:
          sapientType: "COLLECTION"
          content: !<collection>
            collectionClass: "java.util.ArrayList"
            parameters: []
            values:
            - sapientType: "COLLECTION"
              content: !<collection>
                collectionClass: "java.util.ArrayList"
                parameters: []
                values:
                - sapientType: "OBJECT"
                  content: !<new>
                    target: "java.lang.Object"
                    parameters: []
                    privateConstructor: false
                    createdByTargetCode: false
                  valueType: "java.lang.Object"
                  uuid: "getDisplayNameFromCertificate_collection1-0-0"
                  fixed: false
                  collectionUuid: "getDisplayNameFromCertificate_collection1-0"
                  equalsMethodPresent: false
                  explicitCastNeeded: false
              valueType: "java.util.List"
              genericValueType: "?"
              uuid: "getDisplayNameFromCertificate_collection1-0"
              fixed: false
              collectionUuid: "getDisplayNameFromCertificate_collection1"
              equalsMethodPresent: false
              explicitCastNeeded: false
          valueType: "java.util.Collection"
          genericValueType: "java.util.List<?>"
          uuid: "getDisplayNameFromCertificate_collection1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
      valueType: "java.util.Iterator"
      genericValueType: "java.util.List<?>"
      uuid: "getDisplayNameFromCertificate_iterator1"
      fixed: false
      collectionUuid: "getDisplayNameFromCertificate_collection1"
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "getDisplayNameFromCertificate_boolean5"
      fixed: false
      collectionUuid: "getDisplayNameFromCertificate_collection1"
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "<String value>"
      valueType: "java.lang.String"
      uuid: "getDisplayNameFromCertificate_string2"
      fixed: false
      equalsMethodPresent: true
      explicitCastNeeded: false
  - pathId: "path45"
    testPathName: "getDisplayNameFromCertificateWhenCaughtCertificateParsingExceptionAndOrgIsNotNullAndNotWithLocation"
    modelFingerprint: "C2F090E752C698242615B9BE4076CEFC"
    problemWasSolvedByProver: false
    catchBlockExercised:
      idExternalInstruction: 0
      id: 1
      catchExceptions:
      - "java.security.cert.CertificateParsingException"
    truncated: false
    inputParameters:
    - type: "INPUT"
      name: "certificate"
      modelFingerprint: "AB949112D997C08B6DCFFA656363C91E"
      index: 1
      valueUuid: "getDisplayNameFromCertificate_x509Certificate1"
    - type: "INPUT"
      name: "withLocation"
      modelFingerprint: "F33501894F8943478CF92036B95C1DAE"
      index: 2
      valueUuid: "getDisplayNameFromCertificate_boolean1"
    - type: "LOCAL_VARIABLE"
      name: "certificate"
      modelFingerprint: "C1F1AAA6F54FDD23B670072A5713B53F"
      index: 3
      valueUuid: "getDisplayNameFromCertificate_x509Certificate1"
      methodExercised:
        target: "certificate"
        name: "getSubjectX500Principal"
        parameters: []
        signature: "getSubjectX500Principal(): X500Principal"
        returnValueUuid: "getDisplayNameFromCertificate_x500Principal1"
        access: 1
    - type: "LOCAL_VARIABLE"
      name: "name"
      modelFingerprint: "AF013A3D9F75BAEE4BA10D6EDAD23778"
      index: 4
      valueUuid: "getDisplayNameFromCertificate_x500Name1"
      methodExercised:
        target: "name"
        name: "getRDNs"
        parameters: []
        signature: "getRDNs(): RDN[]"
        returnValueUuid: "getDisplayNameFromCertificate_rDN[]1"
        access: 1
    - type: "LOCAL_VARIABLE"
      name: "rdn"
      modelFingerprint: "AC73514AB48C245DC23E06A5060D8D11"
      index: 5
      valueUuid: "getDisplayNameFromCertificate_rDN1"
      methodExercised:
        target: "rdn"
        name: "getFirst"
        parameters: []
        signature: "getFirst(): AttributeTypeAndValue"
        returnValueUuid: "getDisplayNameFromCertificate_attributeTypeAndValue1"
        access: 1
    - type: "LOCAL_VARIABLE"
      name: "pair"
      modelFingerprint: "B3191AAB8E8C2D9D9E2E4065AF304C29"
      index: 6
      valueUuid: "getDisplayNameFromCertificate_attributeTypeAndValue1"
      methodExercised:
        target: "pair"
        name: "getValue"
        parameters: []
        signature: "getValue(): ASN1Encodable"
        returnValueUuid: "getDisplayNameFromCertificate_aSN1Encodable1"
        access: 1
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "79205187C209F5D5F16543F3AFA5AEE7"
      index: 7
      valueUuid: "getDisplayNameFromCertificate_aSN1Encodable1checkCast"
      methodExercised:
        target: "org.bouncycastle.asn1.ASN1String"
        name: "getString"
        parameters: []
        signature: "getString(): String"
        returnValueUuid: "getDisplayNameFromCertificate_string2"
        access: 1025
    - type: "LOCAL_VARIABLE"
      name: "pair"
      modelFingerprint: "B30960C003AB0B6A6A0EFDA276085C4D"
      index: 8
      valueUuid: "getDisplayNameFromCertificate_attributeTypeAndValue1"
      methodExercised:
        target: "pair"
        name: "getType"
        parameters: []
        signature: "getType(): ASN1ObjectIdentifier"
        returnValueUuid: "getDisplayNameFromCertificate_aSN1ObjectIdentifier3"
        access: 1
    - type: "LOCAL_VARIABLE"
      name: "certificate"
      modelFingerprint: "478C030AF96C244FD44DBA6FEB62178B"
      index: 9
      idsTryCatchBlockSurrounding:
      - 1
      valueUuid: "getDisplayNameFromCertificate_x509Certificate1"
      methodExercised:
        target: "certificate"
        name: "getSubjectAlternativeNames"
        parameters: []
        throwsExceptions:
        - "java.security.cert.CertificateParsingException"
        signature: "getSubjectAlternativeNames(): Collection throws java.security.cert.CertificateParsingException"
        returnValueUuid: "getDisplayNameFromCertificate_collection1"
        access: 1
    - type: "LOCAL_VARIABLE"
      name: "var9"
      modelFingerprint: "43AC789783D17911ED56B58E6837D761"
      index: 10
      idsTryCatchBlockSurrounding:
      - 1
      valueUuid: "getDisplayNameFromCertificate_iterator1"
      methodExercised:
        target: "var9"
        name: "hasNext"
        parameters: []
        signature: "hasNext(): boolean"
        returnValueUuid: "getDisplayNameFromCertificate_boolean4"
        access: 1025
    - type: "LOCAL_VARIABLE"
      name: "var9"
      modelFingerprint: "544D12DCD8706B9D2E4751AE01E38C2A"
      index: 11
      idsTryCatchBlockSurrounding:
      - 1
      valueUuid: "getDisplayNameFromCertificate_iterator1"
      methodExercised:
        target: "var9"
        name: "next"
        parameters: []
        signature: "next(): Object"
        returnValueUuid: "getDisplayNameFromCertificate_object1"
        access: 1025
    - type: "LOCAL_VARIABLE"
      name: "var9"
      modelFingerprint: "312C23DF382B30D283FA126C30A3BF71"
      index: 12
      idsTryCatchBlockSurrounding:
      - 1
      valueUuid: "getDisplayNameFromCertificate_iterator1"
      methodExercised:
        target: "var9"
        name: "hasNext"
        parameters: []
        signature: "hasNext(): boolean"
        returnValueUuid: "getDisplayNameFromCertificate_boolean5"
        access: 1025
    - type: "RESULT"
      name: "result"
      modelFingerprint: "FF22E18EEBDF66F3A4CFE59A0E75C07E"
      index: 13
      valueUuid: "getDisplayNameFromCertificate_string2"
    uuid: "d6b0cd47-df61-3f50-a735-1d3c5c7e8b9f"
    deleted: false
    disabled: true
    ignoredBySystem: false
    variablesCouldNotBeIsolated: "name"
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: javax.security.auth.x500.X500Principal.getName()\
        \ : java.lang.String"
    prover: "LLM"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: true
    allValues:
    - sapientType: "MOCK"
      valueType: "java.security.cert.X509Certificate"
      uuid: "getDisplayNameFromCertificate_x509Certificate1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "getDisplayNameFromCertificate_boolean1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "java.security.cert.X509Certificate"
      uuid: "getDisplayNameFromCertificate_x509Certificate1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<new>
        target: "javax.security.auth.x500.X500Principal"
        parameters:
        - name: "name"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "name1"
            valueType: "java.lang.String"
            uuid: "getDisplayNameFromCertificate_x500Principal1-name"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      valueType: "javax.security.auth.x500.X500Principal"
      uuid: "getDisplayNameFromCertificate_x500Principal1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.bouncycastle.asn1.x500.X500Name"
        parameters:
        - name: "arg0"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "arg0"
            valueType: "java.lang.String"
            uuid: "getDisplayNameFromCertificate_string1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: true
      valueType: "org.bouncycastle.asn1.x500.X500Name"
      uuid: "getDisplayNameFromCertificate_x500Name1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "ARRAY"
      content: !<array>
        values:
          0:
            sapientType: "MOCK"
            valueType: "org.bouncycastle.asn1.x500.RDN"
            uuid: "getDisplayNameFromCertificate_rDN1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
      valueType: "org.bouncycastle.asn1.x500.RDN[]"
      uuid: "getDisplayNameFromCertificate_rDN[]1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.bouncycastle.asn1.x500.RDN"
      uuid: "getDisplayNameFromCertificate_rDN1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.bouncycastle.asn1.x500.AttributeTypeAndValue"
      uuid: "getDisplayNameFromCertificate_attributeTypeAndValue1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.bouncycastle.asn1.x500.AttributeTypeAndValue"
      uuid: "getDisplayNameFromCertificate_attributeTypeAndValue1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.bouncycastle.asn1.ASN1Encodable"
      uuid: "getDisplayNameFromCertificate_aSN1Encodable1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.bouncycastle.asn1.ASN1String"
      uuid: "getDisplayNameFromCertificate_aSN1Encodable1checkCast"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_getString1"
      valueType: "java.lang.String"
      uuid: "getDisplayNameFromCertificate_string2"
      fixed: false
      equalsMethodPresent: true
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.bouncycastle.asn1.x500.AttributeTypeAndValue"
      uuid: "getDisplayNameFromCertificate_attributeTypeAndValue1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<static_field_return>
        target: "org.bouncycastle.asn1.x500.style.RFC4519Style"
        fieldName: "o"
      valueType: "org.bouncycastle.asn1.ASN1ObjectIdentifier"
      uuid: "getDisplayNameFromCertificate_aSN1ObjectIdentifier3"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "java.security.cert.X509Certificate"
      uuid: "getDisplayNameFromCertificate_x509Certificate1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.ArrayList"
        parameters: []
        values:
        - sapientType: "COLLECTION"
          content: !<collection>
            collectionClass: "java.util.ArrayList"
            parameters: []
            values:
            - sapientType: "OBJECT"
              content: !<new>
                target: "java.lang.Object"
                parameters: []
                privateConstructor: false
                createdByTargetCode: false
              valueType: "java.lang.Object"
              uuid: "getDisplayNameFromCertificate_collection1-0-0"
              fixed: false
              collectionUuid: "getDisplayNameFromCertificate_collection1-0"
              equalsMethodPresent: false
              explicitCastNeeded: false
          valueType: "java.util.List"
          genericValueType: "?"
          uuid: "getDisplayNameFromCertificate_collection1-0"
          fixed: false
          collectionUuid: "getDisplayNameFromCertificate_collection1"
          equalsMethodPresent: false
          explicitCastNeeded: false
      valueType: "java.util.Collection"
      genericValueType: "java.util.List<?>"
      uuid: "getDisplayNameFromCertificate_collection1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "ITERATOR"
      content: !<iterator>
        collectionValue:
          sapientType: "COLLECTION"
          content: !<collection>
            collectionClass: "java.util.ArrayList"
            parameters: []
            values:
            - sapientType: "COLLECTION"
              content: !<collection>
                collectionClass: "java.util.ArrayList"
                parameters: []
                values:
                - sapientType: "OBJECT"
                  content: !<new>
                    target: "java.lang.Object"
                    parameters: []
                    privateConstructor: false
                    createdByTargetCode: false
                  valueType: "java.lang.Object"
                  uuid: "getDisplayNameFromCertificate_collection1-0-0"
                  fixed: false
                  collectionUuid: "getDisplayNameFromCertificate_collection1-0"
                  equalsMethodPresent: false
                  explicitCastNeeded: false
              valueType: "java.util.List"
              genericValueType: "?"
              uuid: "getDisplayNameFromCertificate_collection1-0"
              fixed: false
              collectionUuid: "getDisplayNameFromCertificate_collection1"
              equalsMethodPresent: false
              explicitCastNeeded: false
          valueType: "java.util.Collection"
          genericValueType: "java.util.List<?>"
          uuid: "getDisplayNameFromCertificate_collection1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
      valueType: "java.util.Iterator"
      genericValueType: "java.util.List<?>"
      uuid: "getDisplayNameFromCertificate_iterator1"
      fixed: false
      collectionUuid: "getDisplayNameFromCertificate_collection1"
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "getDisplayNameFromCertificate_boolean4"
      fixed: false
      collectionUuid: "getDisplayNameFromCertificate_collection1"
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "ITERATOR"
      content: !<iterator>
        collectionValue:
          sapientType: "COLLECTION"
          content: !<collection>
            collectionClass: "java.util.ArrayList"
            parameters: []
            values:
            - sapientType: "COLLECTION"
              content: !<collection>
                collectionClass: "java.util.ArrayList"
                parameters: []
                values:
                - sapientType: "OBJECT"
                  content: !<new>
                    target: "java.lang.Object"
                    parameters: []
                    privateConstructor: false
                    createdByTargetCode: false
                  valueType: "java.lang.Object"
                  uuid: "getDisplayNameFromCertificate_collection1-0-0"
                  fixed: false
                  collectionUuid: "getDisplayNameFromCertificate_collection1-0"
                  equalsMethodPresent: false
                  explicitCastNeeded: false
              valueType: "java.util.List"
              genericValueType: "?"
              uuid: "getDisplayNameFromCertificate_collection1-0"
              fixed: false
              collectionUuid: "getDisplayNameFromCertificate_collection1"
              equalsMethodPresent: false
              explicitCastNeeded: false
          valueType: "java.util.Collection"
          genericValueType: "java.util.List<?>"
          uuid: "getDisplayNameFromCertificate_collection1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
      valueType: "java.util.Iterator"
      genericValueType: "java.util.List<?>"
      uuid: "getDisplayNameFromCertificate_iterator1"
      fixed: false
      collectionUuid: "getDisplayNameFromCertificate_collection1"
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.ArrayList"
        parameters: []
        values:
        - sapientType: "BASIC"
          content: !<regular>
            value: 1
          valueType: "java.lang.Integer"
          uuid: "getDisplayNameFromCertificate_object2"
          fixed: false
          collectionUuid: "getDisplayNameFromCertificate_object1"
          equalsMethodPresent: false
          explicitCastNeeded: true
        - sapientType: "BASIC"
          content: !<regular>
            value: "return_of_getSubjectAlternativeNamesItem1Item2"
          valueType: "java.lang.String"
          uuid: "getDisplayNameFromCertificate_object3"
          fixed: false
          collectionUuid: "getDisplayNameFromCertificate_object1"
          equalsMethodPresent: false
          explicitCastNeeded: true
      valueType: "java.util.List"
      genericValueType: "?"
      uuid: "getDisplayNameFromCertificate_object1"
      fixed: false
      collectionUuid: "getDisplayNameFromCertificate_collection1"
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "ITERATOR"
      content: !<iterator>
        collectionValue:
          sapientType: "COLLECTION"
          content: !<collection>
            collectionClass: "java.util.ArrayList"
            parameters: []
            values:
            - sapientType: "COLLECTION"
              content: !<collection>
                collectionClass: "java.util.ArrayList"
                parameters: []
                values:
                - sapientType: "OBJECT"
                  content: !<new>
                    target: "java.lang.Object"
                    parameters: []
                    privateConstructor: false
                    createdByTargetCode: false
                  valueType: "java.lang.Object"
                  uuid: "getDisplayNameFromCertificate_collection1-0-0"
                  fixed: false
                  collectionUuid: "getDisplayNameFromCertificate_collection1-0"
                  equalsMethodPresent: false
                  explicitCastNeeded: false
              valueType: "java.util.List"
              genericValueType: "?"
              uuid: "getDisplayNameFromCertificate_collection1-0"
              fixed: false
              collectionUuid: "getDisplayNameFromCertificate_collection1"
              equalsMethodPresent: false
              explicitCastNeeded: false
          valueType: "java.util.Collection"
          genericValueType: "java.util.List<?>"
          uuid: "getDisplayNameFromCertificate_collection1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
      valueType: "java.util.Iterator"
      genericValueType: "java.util.List<?>"
      uuid: "getDisplayNameFromCertificate_iterator1"
      fixed: false
      collectionUuid: "getDisplayNameFromCertificate_collection1"
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "getDisplayNameFromCertificate_boolean5"
      fixed: false
      collectionUuid: "getDisplayNameFromCertificate_collection1"
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_getString1"
      valueType: "java.lang.String"
      uuid: "getDisplayNameFromCertificate_string2"
      fixed: false
      equalsMethodPresent: true
      explicitCastNeeded: false
  - pathId: "path46"
    testPathName: "getDisplayNameFromCertificateWhenSubjectAlternativeNameGet0NotEquals1AndCaughtCertificateParsingExceptionAndOrgIsNotNul"
    modelFingerprint: "566697A05800F51F8214AC67408C2F2E"
    problemWasSolvedByProver: false
    catchBlockExercised:
      idExternalInstruction: 0
      id: 1
      catchExceptions:
      - "java.security.cert.CertificateParsingException"
    truncated: true
    inputParameters: []
    uuid: "4e934683-dfaf-3fc8-8a67-e9fbf537d077"
    deleted: true
    disabled: false
    ignoredBySystem: true
    variablesCouldNotBeIsolated: "name"
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: java.security.cert.X509Certificate.getSubjectX500Principal()\
        \ : javax.security.auth.x500.X500Principal"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues: []
  - pathId: "path21"
    testPathName: "getDisplayNameFromCertificateWhenSubjectAlternativeNameGet0Equals1AndOrgIsNullAndCommonNameIsNull3"
    modelFingerprint: "BBF78F74B298F1367A0638162CCE6A1A"
    problemWasSolvedByProver: false
    truncated: false
    inputParameters:
    - type: "INPUT"
      name: "certificate"
      modelFingerprint: "DBDCFF0DDD8031E8D812FA6146AAF829"
      index: 1
      valueUuid: "getDisplayNameFromCertificate_x509Certificate1"
    - type: "INPUT"
      name: "withLocation"
      modelFingerprint: "C2D534C8D5567151F37B9D1A5764EBC8"
      index: 2
      valueUuid: "getDisplayNameFromCertificate_boolean1"
    - type: "LOCAL_VARIABLE"
      name: "name"
      modelFingerprint: "AF013A3D9F75BAEE4BA10D6EDAD23778"
      index: 3
      valueUuid: "getDisplayNameFromCertificate_x500Name1"
      methodExercised:
        target: "name"
        name: "getRDNs"
        parameters: []
        signature: "getRDNs(): RDN[]"
        returnValueUuid: "getDisplayNameFromCertificate_rDN[]1"
        access: 1
    - type: "LOCAL_VARIABLE"
      name: "rdn"
      modelFingerprint: "9721CD15C1B884EE74D662C537446858"
      index: 4
      valueUuid: "getDisplayNameFromCertificate_rDN1"
      methodExercised:
        target: "rdn"
        name: "getFirst"
        parameters: []
        signature: "getFirst(): AttributeTypeAndValue"
        returnValueUuid: "getDisplayNameFromCertificate_attributeTypeAndValue1"
        access: 1
    - type: "LOCAL_VARIABLE"
      name: "pair"
      modelFingerprint: "F1515DFA23D0C880672B7182A5BC997C"
      index: 5
      valueUuid: "getDisplayNameFromCertificate_attributeTypeAndValue1"
      methodExercised:
        target: "pair"
        name: "getValue"
        parameters: []
        signature: "getValue(): ASN1Encodable"
        returnValueUuid: "getDisplayNameFromCertificate_aSN1Encodable1"
        access: 1
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "D6DBE64C951C8A54980812F566A53043"
      index: 6
      valueUuid: "getDisplayNameFromCertificate_aSN1Encodable1checkCast"
      methodExercised:
        target: "org.bouncycastle.asn1.ASN1String"
        name: "getString"
        parameters: []
        signature: "getString(): String"
        returnValueUuid: "getDisplayNameFromCertificate_string2"
        access: 1025
    - type: "LOCAL_VARIABLE"
      name: "pair"
      modelFingerprint: "11BC163B18D6F960E5E99FB7F953FF6B"
      index: 7
      valueUuid: "getDisplayNameFromCertificate_attributeTypeAndValue1"
      methodExercised:
        target: "pair"
        name: "getType"
        parameters: []
        signature: "getType(): ASN1ObjectIdentifier"
        returnValueUuid: "getDisplayNameFromCertificate_aSN1ObjectIdentifier4"
        access: 1
    - type: "LOCAL_VARIABLE"
      name: "var9"
      modelFingerprint: "FED3DEDADCB87809D43AD3CD874BA30C"
      index: 8
      idsTryCatchBlockSurrounding:
      - 1
      valueUuid: "getDisplayNameFromCertificate_iterator1"
      methodExercised:
        target: "var9"
        name: "hasNext"
        parameters: []
        signature: "hasNext(): boolean"
        returnValueUuid: "getDisplayNameFromCertificate_boolean5"
        access: 1025
    - type: "LOCAL_VARIABLE"
      name: "var9"
      modelFingerprint: "BA2378CDCBC2D4D26B126A27E8E3D5D8"
      index: 9
      idsTryCatchBlockSurrounding:
      - 1
      valueUuid: "getDisplayNameFromCertificate_iterator1"
      methodExercised:
        target: "var9"
        name: "next"
        parameters: []
        signature: "next(): Object"
        returnValueUuid: "getDisplayNameFromCertificate_object1"
        access: 1025
    - type: "LOCAL_VARIABLE"
      name: "var9"
      modelFingerprint: "B94C018197DB6ED4DA63D538EDB6E806"
      index: 10
      idsTryCatchBlockSurrounding:
      - 1
      valueUuid: "getDisplayNameFromCertificate_iterator1"
      methodExercised:
        target: "var9"
        name: "hasNext"
        parameters: []
        signature: "hasNext(): boolean"
        returnValueUuid: "getDisplayNameFromCertificate_boolean6"
        access: 1025
    - type: "RESULT"
      name: "result"
      modelFingerprint: "D1F433D4EB9F8805FF391E82DAB508AB"
      index: 11
      valueUuid: "getDisplayNameFromCertificate_object3"
    uuid: "fc7f4ba2-9d5c-3bbe-96dc-cc8f8cf9a49f"
    deleted: false
    disabled: true
    ignoredBySystem: false
    variablesCouldNotBeIsolated: "name"
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: java.security.cert.X509Certificate.getSubjectX500Principal()\
        \ : javax.security.auth.x500.X500Principal"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: true
    allValues:
    - sapientType: "MOCK"
      valueType: "java.security.cert.X509Certificate"
      uuid: "getDisplayNameFromCertificate_x509Certificate1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "getDisplayNameFromCertificate_boolean1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.bouncycastle.asn1.x500.X500Name"
        parameters:
        - name: "arg0"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "arg0"
            valueType: "java.lang.String"
            uuid: "getDisplayNameFromCertificate_string1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: true
      valueType: "org.bouncycastle.asn1.x500.X500Name"
      uuid: "getDisplayNameFromCertificate_x500Name1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "ARRAY"
      content: !<array>
        values:
          0:
            sapientType: "MOCK"
            valueType: "org.bouncycastle.asn1.x500.RDN"
            uuid: "getDisplayNameFromCertificate_rDN1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
      valueType: "org.bouncycastle.asn1.x500.RDN[]"
      uuid: "getDisplayNameFromCertificate_rDN[]1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.bouncycastle.asn1.x500.RDN"
      uuid: "getDisplayNameFromCertificate_rDN1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.bouncycastle.asn1.x500.AttributeTypeAndValue"
      uuid: "getDisplayNameFromCertificate_attributeTypeAndValue1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.bouncycastle.asn1.x500.AttributeTypeAndValue"
      uuid: "getDisplayNameFromCertificate_attributeTypeAndValue1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.bouncycastle.asn1.ASN1Encodable"
      uuid: "getDisplayNameFromCertificate_aSN1Encodable1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.bouncycastle.asn1.ASN1String"
      uuid: "getDisplayNameFromCertificate_aSN1Encodable1checkCast"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_getString1"
      valueType: "java.lang.String"
      uuid: "getDisplayNameFromCertificate_string2"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.bouncycastle.asn1.x500.AttributeTypeAndValue"
      uuid: "getDisplayNameFromCertificate_attributeTypeAndValue1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<static_field_return>
        target: "org.bouncycastle.asn1.x500.style.RFC4519Style"
        fieldName: "l"
      valueType: "org.bouncycastle.asn1.ASN1ObjectIdentifier"
      uuid: "getDisplayNameFromCertificate_aSN1ObjectIdentifier4"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "ITERATOR"
      content: !<iterator>
        collectionValue:
          sapientType: "COLLECTION"
          content: !<collection>
            collectionClass: "java.util.ArrayList"
            parameters: []
            values:
            - sapientType: "COLLECTION"
              content: !<collection>
                collectionClass: "java.util.ArrayList"
                parameters: []
                values:
                - sapientType: "BASIC"
                  content: !<regular>
                    value: 1
                  valueType: "java.lang.Integer"
                  uuid: "getDisplayNameFromCertificate_object2"
                  fixed: false
                  collectionUuid: "getDisplayNameFromCertificate_object1"
                  equalsMethodPresent: false
                  explicitCastNeeded: true
                - sapientType: "BASIC"
                  content: !<regular>
                    value: "var9ItemItem1Item2"
                  valueType: "java.lang.String"
                  uuid: "getDisplayNameFromCertificate_object3"
                  fixed: false
                  collectionUuid: "getDisplayNameFromCertificate_object1"
                  equalsMethodPresent: true
                  explicitCastNeeded: true
              valueType: "java.util.List"
              genericValueType: "?"
              uuid: "getDisplayNameFromCertificate_object1"
              fixed: false
              collectionUuid: "getDisplayNameFromCertificate_collection1"
              equalsMethodPresent: false
              explicitCastNeeded: false
          valueType: "java.util.Collection"
          genericValueType: "java.util.List<?>"
          uuid: "getDisplayNameFromCertificate_collection1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
      valueType: "java.util.Iterator"
      genericValueType: "java.util.List<?>"
      uuid: "getDisplayNameFromCertificate_iterator1"
      fixed: false
      collectionUuid: "getDisplayNameFromCertificate_collection1"
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "getDisplayNameFromCertificate_boolean5"
      fixed: false
      collectionUuid: "getDisplayNameFromCertificate_collection1"
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "ITERATOR"
      content: !<iterator>
        collectionValue:
          sapientType: "COLLECTION"
          content: !<collection>
            collectionClass: "java.util.ArrayList"
            parameters: []
            values:
            - sapientType: "COLLECTION"
              content: !<collection>
                collectionClass: "java.util.ArrayList"
                parameters: []
                values:
                - sapientType: "BASIC"
                  content: !<regular>
                    value: 1
                  valueType: "java.lang.Integer"
                  uuid: "getDisplayNameFromCertificate_object2"
                  fixed: false
                  collectionUuid: "getDisplayNameFromCertificate_object1"
                  equalsMethodPresent: false
                  explicitCastNeeded: true
                - sapientType: "BASIC"
                  content: !<regular>
                    value: "var9ItemItem1Item2"
                  valueType: "java.lang.String"
                  uuid: "getDisplayNameFromCertificate_object3"
                  fixed: false
                  collectionUuid: "getDisplayNameFromCertificate_object1"
                  equalsMethodPresent: true
                  explicitCastNeeded: true
              valueType: "java.util.List"
              genericValueType: "?"
              uuid: "getDisplayNameFromCertificate_object1"
              fixed: false
              collectionUuid: "getDisplayNameFromCertificate_collection1"
              equalsMethodPresent: false
              explicitCastNeeded: false
          valueType: "java.util.Collection"
          genericValueType: "java.util.List<?>"
          uuid: "getDisplayNameFromCertificate_collection1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
      valueType: "java.util.Iterator"
      genericValueType: "java.util.List<?>"
      uuid: "getDisplayNameFromCertificate_iterator1"
      fixed: false
      collectionUuid: "getDisplayNameFromCertificate_collection1"
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.ArrayList"
        parameters: []
        values:
        - sapientType: "BASIC"
          content: !<regular>
            value: 1
          valueType: "java.lang.Integer"
          uuid: "getDisplayNameFromCertificate_object2"
          fixed: false
          collectionUuid: "getDisplayNameFromCertificate_object1"
          equalsMethodPresent: false
          explicitCastNeeded: true
        - sapientType: "BASIC"
          content: !<regular>
            value: "var9ItemItem1Item2"
          valueType: "java.lang.String"
          uuid: "getDisplayNameFromCertificate_object3"
          fixed: false
          collectionUuid: "getDisplayNameFromCertificate_object1"
          equalsMethodPresent: true
          explicitCastNeeded: true
      valueType: "java.util.List"
      genericValueType: "?"
      uuid: "getDisplayNameFromCertificate_object1"
      fixed: false
      collectionUuid: "getDisplayNameFromCertificate_collection1"
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "ITERATOR"
      content: !<iterator>
        collectionValue:
          sapientType: "COLLECTION"
          content: !<collection>
            collectionClass: "java.util.ArrayList"
            parameters: []
            values:
            - sapientType: "COLLECTION"
              content: !<collection>
                collectionClass: "java.util.ArrayList"
                parameters: []
                values:
                - sapientType: "BASIC"
                  content: !<regular>
                    value: 1
                  valueType: "java.lang.Integer"
                  uuid: "getDisplayNameFromCertificate_object2"
                  fixed: false
                  collectionUuid: "getDisplayNameFromCertificate_object1"
                  equalsMethodPresent: false
                  explicitCastNeeded: true
                - sapientType: "BASIC"
                  content: !<regular>
                    value: "var9ItemItem1Item2"
                  valueType: "java.lang.String"
                  uuid: "getDisplayNameFromCertificate_object3"
                  fixed: false
                  collectionUuid: "getDisplayNameFromCertificate_object1"
                  equalsMethodPresent: true
                  explicitCastNeeded: true
              valueType: "java.util.List"
              genericValueType: "?"
              uuid: "getDisplayNameFromCertificate_object1"
              fixed: false
              collectionUuid: "getDisplayNameFromCertificate_collection1"
              equalsMethodPresent: false
              explicitCastNeeded: false
          valueType: "java.util.Collection"
          genericValueType: "java.util.List<?>"
          uuid: "getDisplayNameFromCertificate_collection1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
      valueType: "java.util.Iterator"
      genericValueType: "java.util.List<?>"
      uuid: "getDisplayNameFromCertificate_iterator1"
      fixed: false
      collectionUuid: "getDisplayNameFromCertificate_collection1"
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "getDisplayNameFromCertificate_boolean6"
      fixed: false
      collectionUuid: "getDisplayNameFromCertificate_collection1"
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "var9ItemItem1Item2"
      valueType: "java.lang.String"
      uuid: "getDisplayNameFromCertificate_object3"
      fixed: false
      collectionUuid: "getDisplayNameFromCertificate_object1"
      equalsMethodPresent: true
      explicitCastNeeded: true
  - pathId: "path22"
    testPathName: "getDisplayNameFromCertificateWhenSubjectAlternativeNameGet0NotEquals1AndOrgIsNullAndCommonNameIsNull3"
    modelFingerprint: "C4F769530EDE179989953B2E2FFDFDC1"
    problemWasSolvedByProver: false
    truncated: true
    inputParameters: []
    uuid: "e38610e3-bd94-32cc-adc0-a0c5f349a0fd"
    deleted: true
    disabled: false
    ignoredBySystem: true
    variablesCouldNotBeIsolated: "name"
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: java.security.cert.X509Certificate.getSubjectX500Principal()\
        \ : javax.security.auth.x500.X500Principal"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues: []
  - pathId: "path27"
    testPathName: "getDisplayNameFromCertificateWhenSubjectAlternativeNamesIsEmptyAndOrgIsNullAndCommonNameIsNull4"
    modelFingerprint: "F3E10554EEC23B1108FA19C3E295DFB4"
    problemWasSolvedByProver: false
    truncated: true
    inputParameters: []
    uuid: "1612a8c2-5ffc-364f-890d-3f8716663d1f"
    deleted: true
    disabled: false
    ignoredBySystem: true
    variablesCouldNotBeIsolated: "name"
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: java.security.cert.X509Certificate.getSubjectX500Principal()\
        \ : javax.security.auth.x500.X500Principal"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues: []
  - pathId: "path31"
    testPathName: "getDisplayNameFromCertificateWhenSubjectAlternativeNamesIsEmptyAndOrgIsNullAndCommonNameIsNull5"
    modelFingerprint: "5DA6B4268A2040C0AA9A0D4A9609F841"
    problemWasSolvedByProver: false
    truncated: true
    inputParameters: []
    uuid: "efeeb292-6f96-3d50-a57d-3a7a8d9fa050"
    deleted: true
    disabled: false
    ignoredBySystem: true
    variablesCouldNotBeIsolated: "name"
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: java.security.cert.X509Certificate.getSubjectX500Principal()\
        \ : javax.security.auth.x500.X500Principal"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues: []
  - pathId: "path25"
    testPathName: "getDisplayNameFromCertificateWhenSubjectAlternativeNameGet0Equals1AndOrgIsNullAndCommonNameIsNull4"
    modelFingerprint: "9D00FD628BEB7C9EA412BB553CB2DDCF"
    problemWasSolvedByProver: false
    truncated: false
    inputParameters:
    - type: "INPUT"
      name: "certificate"
      modelFingerprint: "DBDCFF0DDD8031E8D812FA6146AAF829"
      index: 1
      valueUuid: "getDisplayNameFromCertificate_x509Certificate1"
    - type: "INPUT"
      name: "withLocation"
      modelFingerprint: "C2D534C8D5567151F37B9D1A5764EBC8"
      index: 2
      valueUuid: "getDisplayNameFromCertificate_boolean1"
    - type: "LOCAL_VARIABLE"
      name: "name"
      modelFingerprint: "AF013A3D9F75BAEE4BA10D6EDAD23778"
      index: 3
      valueUuid: "getDisplayNameFromCertificate_x500Name1"
      methodExercised:
        target: "name"
        name: "getRDNs"
        parameters: []
        signature: "getRDNs(): RDN[]"
        returnValueUuid: "getDisplayNameFromCertificate_rDN[]1"
        access: 1
    - type: "LOCAL_VARIABLE"
      name: "rdn"
      modelFingerprint: "9721CD15C1B884EE74D662C537446858"
      index: 4
      valueUuid: "getDisplayNameFromCertificate_rDN1"
      methodExercised:
        target: "rdn"
        name: "getFirst"
        parameters: []
        signature: "getFirst(): AttributeTypeAndValue"
        returnValueUuid: "getDisplayNameFromCertificate_attributeTypeAndValue1"
        access: 1
    - type: "LOCAL_VARIABLE"
      name: "pair"
      modelFingerprint: "F1515DFA23D0C880672B7182A5BC997C"
      index: 5
      valueUuid: "getDisplayNameFromCertificate_attributeTypeAndValue1"
      methodExercised:
        target: "pair"
        name: "getValue"
        parameters: []
        signature: "getValue(): ASN1Encodable"
        returnValueUuid: "getDisplayNameFromCertificate_aSN1Encodable1"
        access: 1
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "D6DBE64C951C8A54980812F566A53043"
      index: 6
      valueUuid: "getDisplayNameFromCertificate_aSN1Encodable1checkCast"
      methodExercised:
        target: "org.bouncycastle.asn1.ASN1String"
        name: "getString"
        parameters: []
        signature: "getString(): String"
        returnValueUuid: "getDisplayNameFromCertificate_string2"
        access: 1025
    - type: "LOCAL_VARIABLE"
      name: "pair"
      modelFingerprint: "11BC163B18D6F960E5E99FB7F953FF6B"
      index: 7
      valueUuid: "getDisplayNameFromCertificate_attributeTypeAndValue1"
      methodExercised:
        target: "pair"
        name: "getType"
        parameters: []
        signature: "getType(): ASN1ObjectIdentifier"
        returnValueUuid: "getDisplayNameFromCertificate_aSN1ObjectIdentifier5"
        access: 1
    - type: "LOCAL_VARIABLE"
      name: "var9"
      modelFingerprint: "FED3DEDADCB87809D43AD3CD874BA30C"
      index: 8
      idsTryCatchBlockSurrounding:
      - 1
      valueUuid: "getDisplayNameFromCertificate_iterator1"
      methodExercised:
        target: "var9"
        name: "hasNext"
        parameters: []
        signature: "hasNext(): boolean"
        returnValueUuid: "getDisplayNameFromCertificate_boolean6"
        access: 1025
    - type: "LOCAL_VARIABLE"
      name: "var9"
      modelFingerprint: "BA2378CDCBC2D4D26B126A27E8E3D5D8"
      index: 9
      idsTryCatchBlockSurrounding:
      - 1
      valueUuid: "getDisplayNameFromCertificate_iterator1"
      methodExercised:
        target: "var9"
        name: "next"
        parameters: []
        signature: "next(): Object"
        returnValueUuid: "getDisplayNameFromCertificate_object1"
        access: 1025
    - type: "LOCAL_VARIABLE"
      name: "var9"
      modelFingerprint: "B94C018197DB6ED4DA63D538EDB6E806"
      index: 10
      idsTryCatchBlockSurrounding:
      - 1
      valueUuid: "getDisplayNameFromCertificate_iterator1"
      methodExercised:
        target: "var9"
        name: "hasNext"
        parameters: []
        signature: "hasNext(): boolean"
        returnValueUuid: "getDisplayNameFromCertificate_boolean7"
        access: 1025
    - type: "RESULT"
      name: "result"
      modelFingerprint: "D1F433D4EB9F8805FF391E82DAB508AB"
      index: 11
      valueUuid: "getDisplayNameFromCertificate_object3"
    uuid: "f04150a9-1b71-39de-a286-8cda15c1405b"
    deleted: false
    disabled: true
    ignoredBySystem: false
    variablesCouldNotBeIsolated: "name"
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: java.security.cert.X509Certificate.getSubjectX500Principal()\
        \ : javax.security.auth.x500.X500Principal"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: true
    allValues:
    - sapientType: "MOCK"
      valueType: "java.security.cert.X509Certificate"
      uuid: "getDisplayNameFromCertificate_x509Certificate1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "getDisplayNameFromCertificate_boolean1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.bouncycastle.asn1.x500.X500Name"
        parameters:
        - name: "arg0"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "arg0"
            valueType: "java.lang.String"
            uuid: "getDisplayNameFromCertificate_string1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: true
      valueType: "org.bouncycastle.asn1.x500.X500Name"
      uuid: "getDisplayNameFromCertificate_x500Name1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "ARRAY"
      content: !<array>
        values:
          0:
            sapientType: "MOCK"
            valueType: "org.bouncycastle.asn1.x500.RDN"
            uuid: "getDisplayNameFromCertificate_rDN1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
      valueType: "org.bouncycastle.asn1.x500.RDN[]"
      uuid: "getDisplayNameFromCertificate_rDN[]1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.bouncycastle.asn1.x500.RDN"
      uuid: "getDisplayNameFromCertificate_rDN1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.bouncycastle.asn1.x500.AttributeTypeAndValue"
      uuid: "getDisplayNameFromCertificate_attributeTypeAndValue1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.bouncycastle.asn1.x500.AttributeTypeAndValue"
      uuid: "getDisplayNameFromCertificate_attributeTypeAndValue1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.bouncycastle.asn1.ASN1Encodable"
      uuid: "getDisplayNameFromCertificate_aSN1Encodable1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.bouncycastle.asn1.ASN1String"
      uuid: "getDisplayNameFromCertificate_aSN1Encodable1checkCast"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_getString1"
      valueType: "java.lang.String"
      uuid: "getDisplayNameFromCertificate_string2"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.bouncycastle.asn1.x500.AttributeTypeAndValue"
      uuid: "getDisplayNameFromCertificate_attributeTypeAndValue1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<static_field_return>
        target: "org.bouncycastle.asn1.x500.style.RFC4519Style"
        fieldName: "c"
      valueType: "org.bouncycastle.asn1.ASN1ObjectIdentifier"
      uuid: "getDisplayNameFromCertificate_aSN1ObjectIdentifier5"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "ITERATOR"
      content: !<iterator>
        collectionValue:
          sapientType: "COLLECTION"
          content: !<collection>
            collectionClass: "java.util.ArrayList"
            parameters: []
            values:
            - sapientType: "COLLECTION"
              content: !<collection>
                collectionClass: "java.util.ArrayList"
                parameters: []
                values:
                - sapientType: "BASIC"
                  content: !<regular>
                    value: 1
                  valueType: "java.lang.Integer"
                  uuid: "getDisplayNameFromCertificate_object2"
                  fixed: false
                  collectionUuid: "getDisplayNameFromCertificate_object1"
                  equalsMethodPresent: false
                  explicitCastNeeded: true
                - sapientType: "BASIC"
                  content: !<regular>
                    value: "var9ItemItem1Item2"
                  valueType: "java.lang.String"
                  uuid: "getDisplayNameFromCertificate_object3"
                  fixed: false
                  collectionUuid: "getDisplayNameFromCertificate_object1"
                  equalsMethodPresent: true
                  explicitCastNeeded: true
              valueType: "java.util.List"
              genericValueType: "?"
              uuid: "getDisplayNameFromCertificate_object1"
              fixed: false
              collectionUuid: "getDisplayNameFromCertificate_collection1"
              equalsMethodPresent: false
              explicitCastNeeded: false
          valueType: "java.util.Collection"
          genericValueType: "java.util.List<?>"
          uuid: "getDisplayNameFromCertificate_collection1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
      valueType: "java.util.Iterator"
      genericValueType: "java.util.List<?>"
      uuid: "getDisplayNameFromCertificate_iterator1"
      fixed: false
      collectionUuid: "getDisplayNameFromCertificate_collection1"
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "getDisplayNameFromCertificate_boolean6"
      fixed: false
      collectionUuid: "getDisplayNameFromCertificate_collection1"
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "ITERATOR"
      content: !<iterator>
        collectionValue:
          sapientType: "COLLECTION"
          content: !<collection>
            collectionClass: "java.util.ArrayList"
            parameters: []
            values:
            - sapientType: "COLLECTION"
              content: !<collection>
                collectionClass: "java.util.ArrayList"
                parameters: []
                values:
                - sapientType: "BASIC"
                  content: !<regular>
                    value: 1
                  valueType: "java.lang.Integer"
                  uuid: "getDisplayNameFromCertificate_object2"
                  fixed: false
                  collectionUuid: "getDisplayNameFromCertificate_object1"
                  equalsMethodPresent: false
                  explicitCastNeeded: true
                - sapientType: "BASIC"
                  content: !<regular>
                    value: "var9ItemItem1Item2"
                  valueType: "java.lang.String"
                  uuid: "getDisplayNameFromCertificate_object3"
                  fixed: false
                  collectionUuid: "getDisplayNameFromCertificate_object1"
                  equalsMethodPresent: true
                  explicitCastNeeded: true
              valueType: "java.util.List"
              genericValueType: "?"
              uuid: "getDisplayNameFromCertificate_object1"
              fixed: false
              collectionUuid: "getDisplayNameFromCertificate_collection1"
              equalsMethodPresent: false
              explicitCastNeeded: false
          valueType: "java.util.Collection"
          genericValueType: "java.util.List<?>"
          uuid: "getDisplayNameFromCertificate_collection1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
      valueType: "java.util.Iterator"
      genericValueType: "java.util.List<?>"
      uuid: "getDisplayNameFromCertificate_iterator1"
      fixed: false
      collectionUuid: "getDisplayNameFromCertificate_collection1"
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.ArrayList"
        parameters: []
        values:
        - sapientType: "BASIC"
          content: !<regular>
            value: 1
          valueType: "java.lang.Integer"
          uuid: "getDisplayNameFromCertificate_object2"
          fixed: false
          collectionUuid: "getDisplayNameFromCertificate_object1"
          equalsMethodPresent: false
          explicitCastNeeded: true
        - sapientType: "BASIC"
          content: !<regular>
            value: "var9ItemItem1Item2"
          valueType: "java.lang.String"
          uuid: "getDisplayNameFromCertificate_object3"
          fixed: false
          collectionUuid: "getDisplayNameFromCertificate_object1"
          equalsMethodPresent: true
          explicitCastNeeded: true
      valueType: "java.util.List"
      genericValueType: "?"
      uuid: "getDisplayNameFromCertificate_object1"
      fixed: false
      collectionUuid: "getDisplayNameFromCertificate_collection1"
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "ITERATOR"
      content: !<iterator>
        collectionValue:
          sapientType: "COLLECTION"
          content: !<collection>
            collectionClass: "java.util.ArrayList"
            parameters: []
            values:
            - sapientType: "COLLECTION"
              content: !<collection>
                collectionClass: "java.util.ArrayList"
                parameters: []
                values:
                - sapientType: "BASIC"
                  content: !<regular>
                    value: 1
                  valueType: "java.lang.Integer"
                  uuid: "getDisplayNameFromCertificate_object2"
                  fixed: false
                  collectionUuid: "getDisplayNameFromCertificate_object1"
                  equalsMethodPresent: false
                  explicitCastNeeded: true
                - sapientType: "BASIC"
                  content: !<regular>
                    value: "var9ItemItem1Item2"
                  valueType: "java.lang.String"
                  uuid: "getDisplayNameFromCertificate_object3"
                  fixed: false
                  collectionUuid: "getDisplayNameFromCertificate_object1"
                  equalsMethodPresent: true
                  explicitCastNeeded: true
              valueType: "java.util.List"
              genericValueType: "?"
              uuid: "getDisplayNameFromCertificate_object1"
              fixed: false
              collectionUuid: "getDisplayNameFromCertificate_collection1"
              equalsMethodPresent: false
              explicitCastNeeded: false
          valueType: "java.util.Collection"
          genericValueType: "java.util.List<?>"
          uuid: "getDisplayNameFromCertificate_collection1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
      valueType: "java.util.Iterator"
      genericValueType: "java.util.List<?>"
      uuid: "getDisplayNameFromCertificate_iterator1"
      fixed: false
      collectionUuid: "getDisplayNameFromCertificate_collection1"
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "getDisplayNameFromCertificate_boolean7"
      fixed: false
      collectionUuid: "getDisplayNameFromCertificate_collection1"
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "var9ItemItem1Item2"
      valueType: "java.lang.String"
      uuid: "getDisplayNameFromCertificate_object3"
      fixed: false
      collectionUuid: "getDisplayNameFromCertificate_object1"
      equalsMethodPresent: true
      explicitCastNeeded: true
  - pathId: "path26"
    testPathName: "getDisplayNameFromCertificateWhenSubjectAlternativeNameGet0NotEquals1AndOrgIsNullAndCommonNameIsNull4"
    modelFingerprint: "651E243935210A9F78CF14FB1B53921F"
    problemWasSolvedByProver: false
    truncated: true
    inputParameters: []
    uuid: "2c78e91d-2566-3645-82f5-1baeaab024ad"
    deleted: true
    disabled: false
    ignoredBySystem: true
    variablesCouldNotBeIsolated: "name"
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: java.security.cert.X509Certificate.getSubjectX500Principal()\
        \ : javax.security.auth.x500.X500Principal"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues: []
  - pathId: "path29"
    testPathName: "getDisplayNameFromCertificateWhenSubjectAlternativeNameGet0Equals1AndOrgIsNullAndCommonNameIsNull5"
    modelFingerprint: "EBEAED36DB3636EAF30CF083297FFE1E"
    problemWasSolvedByProver: false
    truncated: true
    inputParameters: []
    uuid: "1b582a75-149a-3f6b-bef0-1d4927f22e87"
    deleted: true
    disabled: false
    ignoredBySystem: true
    variablesCouldNotBeIsolated: "name"
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: java.security.cert.X509Certificate.getSubjectX500Principal()\
        \ : javax.security.auth.x500.X500Principal"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues: []
  - pathId: "path30"
    testPathName: "getDisplayNameFromCertificateWhenSubjectAlternativeNameGet0NotEquals1AndOrgIsNullAndCommonNameIsNull5"
    modelFingerprint: "82D10969B000024C3BA467CAA5249CE7"
    problemWasSolvedByProver: false
    truncated: true
    inputParameters: []
    uuid: "fcdaebfc-6ba0-393a-86c9-5ced46816015"
    deleted: true
    disabled: false
    ignoredBySystem: true
    variablesCouldNotBeIsolated: "name"
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: java.security.cert.X509Certificate.getSubjectX500Principal()\
        \ : javax.security.auth.x500.X500Principal"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues: []
- method:
    name: "loadKeyStore"
    signature: "loadKeyStore(java.lang.String,java.lang.String,java.io.InputStream)\
      \ : java.security.KeyStore"
    sourceCodeSignature: "KeyStore loadKeyStore(String keystoreType, @Nullable String\
      \ keystorePassword, InputStream is)"
    tryCatchBlocks:
    - idExternalInstruction: 0
      id: 2
      catchExceptions:
      - "java.io.IOException"
    - idExternalInstruction: 0
      id: 3
      catchExceptions:
      - "java.io.IOException"
      - "java.security.GeneralSecurityException"
    - idExternalInstruction: 0
      id: 4
      catchExceptions:
      - "java.io.IOException"
    instructionFingerprint: "8E4748A9B5C2EF547F4901FE7929997D"
  paths:
  - pathId: "path1"
    testPathName: "loadKeyStoreWhenKeystorePasswordIsNotNull"
    modelFingerprint: "BF15D2ADE7E766A990694074FE8CCF6A"
    problemWasSolvedByProver: false
    truncated: false
    inputParameters:
    - type: "INPUT"
      name: "keystoreType"
      modelFingerprint: "622CC76273DE40F0A05057B489006376"
      index: 1
      valueUuid: "loadKeyStore_string1"
    - type: "INPUT"
      name: "keystorePassword"
      modelFingerprint: "1CB216E0D0C2D6C316308772B425BAB4"
      index: 2
      valueUuid: "loadKeyStore_string2"
    - type: "INPUT"
      name: "is"
      modelFingerprint: "866D8CB15BEC24BE6900E4C74FD9D1EE"
      index: 3
      valueUuid: "loadKeyStore_inputStream1"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "FBD0B6C9B1BD5CC3641F1995BCFA8A63"
      index: 4
      valueUuid: "loadKeyStore_keyStore1"
    uuid: "35d016a0-3c7d-33f3-b548-d9fc0510bc0d"
    deleted: false
    disabled: true
    ignoredBySystem: false
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: java.security.KeyStore.load(java.io.InputStream,char[])\
        \ : void"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: true
    allValues:
    - sapientType: "BASIC"
      content: !<regular>
        value: "A"
      valueType: "java.lang.String"
      uuid: "loadKeyStore_string1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "B"
      valueType: "java.lang.String"
      uuid: "loadKeyStore_string2"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "INPUT_STREAM"
      content: !<inputStream>
        values: []
      valueType: "java.io.InputStream"
      uuid: "loadKeyStore_inputStream1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "java.security.KeyStore"
      uuid: "loadKeyStore_keyStore1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
  - pathId: "path2"
    testPathName: "loadKeyStoreWhenKeystorePasswordIsNull"
    modelFingerprint: "2A6EDBCB3928B66F2BB03BB177191267"
    problemWasSolvedByProver: false
    truncated: false
    inputParameters:
    - type: "INPUT"
      name: "keystoreType"
      modelFingerprint: "622CC76273DE40F0A05057B489006376"
      index: 1
      valueUuid: "loadKeyStore_string1"
    - type: "INPUT"
      name: "keystorePassword"
      modelFingerprint: "01EF097B0DB2D9B30BBBCAEF6ED467BD"
      index: 2
      valueUuid: "loadKeyStore_string2"
    - type: "INPUT"
      name: "is"
      modelFingerprint: "866D8CB15BEC24BE6900E4C74FD9D1EE"
      index: 3
      valueUuid: "loadKeyStore_inputStream1"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "FBD0B6C9B1BD5CC3641F1995BCFA8A63"
      index: 4
      valueUuid: "loadKeyStore_keyStore1"
    uuid: "85a902d1-23ca-3d00-9a51-8b5328cf477b"
    deleted: false
    disabled: true
    ignoredBySystem: false
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: java.security.KeyStore.load(java.io.InputStream,null)\
        \ : void"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: true
    allValues:
    - sapientType: "BASIC"
      content: !<regular>
        value: "A"
      valueType: "java.lang.String"
      uuid: "loadKeyStore_string1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "NULL"
      valueType: "java.lang.String"
      uuid: "loadKeyStore_string2"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "INPUT_STREAM"
      content: !<inputStream>
        values: []
      valueType: "java.io.InputStream"
      uuid: "loadKeyStore_inputStream1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "java.security.KeyStore"
      uuid: "loadKeyStore_keyStore1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
  - pathId: "path5"
    testPathName: "loadKeyStoreWhenCaughtIOExceptionOrGeneralSecurityExceptionThrowsKeyStoreException"
    modelFingerprint: "D91FE90F576B87601588315B74692913"
    problemWasSolvedByProver: false
    catchBlockExercised:
      idExternalInstruction: 0
      id: 3
      catchExceptions:
      - "java.io.IOException"
      - "java.security.GeneralSecurityException"
    truncated: true
    inputParameters: []
    uuid: "b463c0c1-a881-309c-adf1-f23358974f30"
    deleted: true
    disabled: false
    ignoredBySystem: true
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: java.security.KeyStore.load(java.io.InputStream,char[])\
        \ : void"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues: []
  - pathId: "path3"
    testPathName: "loadKeyStoreWhenCaughtIOException"
    modelFingerprint: "F3214C318BC7823723256AC046B39DCE"
    problemWasSolvedByProver: false
    catchBlockExercised:
      idExternalInstruction: 0
      id: 2
      catchExceptions:
      - "java.io.IOException"
    truncated: false
    inputParameters:
    - type: "INPUT"
      name: "keystoreType"
      modelFingerprint: "622CC76273DE40F0A05057B489006376"
      index: 1
      valueUuid: "loadKeyStore_string1"
    - type: "INPUT"
      name: "keystorePassword"
      modelFingerprint: "1CB216E0D0C2D6C316308772B425BAB4"
      index: 2
      valueUuid: "loadKeyStore_string2"
    - type: "INPUT"
      name: "is"
      modelFingerprint: "866D8CB15BEC24BE6900E4C74FD9D1EE"
      index: 3
      valueUuid: "loadKeyStore_inputStream1"
    - type: "STATIC"
      name: "KeyStore"
      modelFingerprint: "59FC0A4CA7D98D027F8292C1329E9562"
      index: 4
      idsTryCatchBlockSurrounding:
      - 3
      valueUuid: "uuid2"
      methodExercised:
        target: "java.security.KeyStore"
        name: "getInstance"
        parameters:
        - name: "objs"
          valueUuid: "loadKeyStore_string1"
        throwsExceptions:
        - "java.security.KeyStoreException"
        signature: "getInstance(String): KeyStore throws java.security.KeyStoreException"
        returnValueUuid: "loadKeyStore_keyStore1"
        access: 9
    - type: "LOCAL_VARIABLE"
      name: "keystore"
      modelFingerprint: "77160BC17E0220BA5190EBAD43CD4714"
      index: 5
      idsTryCatchBlockSurrounding:
      - 3
      valueUuid: "loadKeyStore_keyStore1"
      methodExercised:
        target: "keystore"
        name: "load"
        parameters:
        - name: "stream"
          valueUuid: "loadKeyStore_inputStream1"
        - name: "password"
          valueUuid: "loadKeyStore_char[]1"
        throwsExceptions:
        - "java.io.IOException"
        - "java.security.NoSuchAlgorithmException"
        - "java.security.cert.CertificateException"
        signature: "load(InputStream,char[]): void throws java.io.IOException,java.security.NoSuchAlgorithmException,java.security.cert.CertificateException"
        returnValueUuid: "loadKeyStore_void1"
        access: 17
    - type: "LOCAL_VARIABLE"
      name: "is"
      modelFingerprint: "001A17F1D69B08435321DF0C614E51C2"
      index: 6
      idsTryCatchBlockSurrounding:
      - 2
      valueUuid: "loadKeyStore_inputStream1"
      methodExercised:
        target: "is"
        name: "close"
        parameters: []
        throwsExceptions:
        - "java.io.IOException"
        signature: "close(): void throws java.io.IOException"
        returnValueUuid: "loadKeyStore_void2"
        access: 1
    - type: "RESULT"
      name: "result"
      modelFingerprint: "FBD0B6C9B1BD5CC3641F1995BCFA8A63"
      index: 7
      valueUuid: "loadKeyStore_keyStore1"
    uuid: "8d373036-7da5-3e2e-b4d6-2bfe866fbd36"
    deleted: false
    disabled: false
    ignoredBySystem: false
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: java.security.KeyStore.load(java.io.InputStream,char[])\
        \ : void"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues:
    - sapientType: "BASIC"
      content: !<regular>
        value: "A"
      valueType: "java.lang.String"
      uuid: "loadKeyStore_string1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "B"
      valueType: "java.lang.String"
      uuid: "loadKeyStore_string2"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "INPUT_STREAM"
      content: !<inputStream>
        values: []
      valueType: "java.io.InputStream"
      uuid: "loadKeyStore_inputStream1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "java.security.KeyStore"
      uuid: "uuid2"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "java.security.KeyStore"
      uuid: "loadKeyStore_keyStore1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "A"
      valueType: "java.lang.String"
      uuid: "loadKeyStore_string1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "java.security.KeyStore"
      uuid: "loadKeyStore_keyStore1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      valueType: "void"
      uuid: "loadKeyStore_void1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "INPUT_STREAM"
      content: !<inputStream>
        values: []
      valueType: "java.io.InputStream"
      uuid: "loadKeyStore_inputStream1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "ARRAY"
      content: !<array>
        values:
          0:
            sapientType: "BASIC"
            content: !<regular>
              value: "B"
            valueType: "char"
            uuid: "loadKeyStore_char[]1-item0"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
      valueType: "char[]"
      uuid: "loadKeyStore_char[]1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "INPUT_STREAM"
      content: !<inputStream>
        values: []
      valueType: "java.io.InputStream"
      uuid: "loadKeyStore_inputStream1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      valueType: "void"
      uuid: "loadKeyStore_void2"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "java.security.KeyStore"
      uuid: "loadKeyStore_keyStore1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
  - pathId: "path6"
    testPathName: "loadKeyStoreWhenKeystorePasswordIsNullAndCaughtIOExceptionOrGeneralSecurityExceptionThrowsKeyStoreException"
    modelFingerprint: "DA246D96E5C77FC7CC7DD9FC765EE122"
    problemWasSolvedByProver: false
    catchBlockExercised:
      idExternalInstruction: 0
      id: 3
      catchExceptions:
      - "java.io.IOException"
      - "java.security.GeneralSecurityException"
    truncated: false
    inputParameters:
    - type: "INPUT"
      name: "keystoreType"
      modelFingerprint: "622CC76273DE40F0A05057B489006376"
      index: 1
      valueUuid: "loadKeyStore_string1"
    - type: "INPUT"
      name: "keystorePassword"
      modelFingerprint: "01EF097B0DB2D9B30BBBCAEF6ED467BD"
      index: 2
      valueUuid: "loadKeyStore_string2"
    - type: "INPUT"
      name: "is"
      modelFingerprint: "866D8CB15BEC24BE6900E4C74FD9D1EE"
      index: 3
      valueUuid: "loadKeyStore_inputStream1"
    - type: "STATIC"
      name: "KeyStore"
      modelFingerprint: "59FC0A4CA7D98D027F8292C1329E9562"
      index: 4
      idsTryCatchBlockSurrounding:
      - 3
      valueUuid: "uuid3"
      methodExercised:
        target: "java.security.KeyStore"
        name: "getInstance"
        parameters:
        - name: "objs"
          valueUuid: "loadKeyStore_string1"
        throwsExceptions:
        - "java.security.KeyStoreException"
        signature: "getInstance(String): KeyStore throws java.security.KeyStoreException"
        returnValueUuid: "loadKeyStore_keyStore1"
        access: 9
    - type: "LOCAL_VARIABLE"
      name: "keystore"
      modelFingerprint: "8DA4A04C1F076C4899358FAC001E6A87"
      index: 5
      idsTryCatchBlockSurrounding:
      - 3
      valueUuid: "loadKeyStore_keyStore1"
      methodExercised:
        target: "keystore"
        name: "load"
        parameters:
        - name: "stream"
          valueUuid: "loadKeyStore_inputStream1"
        - name: "password"
          valueUuid: "uuid4"
        throwsExceptions:
        - "java.io.IOException"
        - "java.security.NoSuchAlgorithmException"
        - "java.security.cert.CertificateException"
        signature: "load(InputStream,not-detected): void throws java.io.IOException,java.security.NoSuchAlgorithmException,java.security.cert.CertificateException"
        returnValueUuid: "loadKeyStore_void1"
        access: 17
    - type: "RESULT"
      name: "result"
      modelFingerprint: "F420CE155A905C71C3ABBFD31AA38CB1"
      index: 6
      valueUuid: "loadKeyStore_keyStoreException1"
    uuid: "420b4466-523a-3024-bb2d-6860e3e3e4e4"
    deleted: false
    disabled: true
    ignoredBySystem: false
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: java.security.KeyStore.load(java.io.InputStream,null)\
        \ : void"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: true
    allValues:
    - sapientType: "BASIC"
      content: !<regular>
        value: "A"
      valueType: "java.lang.String"
      uuid: "loadKeyStore_string1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "NULL"
      valueType: "java.lang.String"
      uuid: "loadKeyStore_string2"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "INPUT_STREAM"
      content: !<inputStream>
        values: []
      valueType: "java.io.InputStream"
      uuid: "loadKeyStore_inputStream1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "java.security.KeyStore"
      uuid: "uuid3"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "java.security.KeyStore"
      uuid: "loadKeyStore_keyStore1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "A"
      valueType: "java.lang.String"
      uuid: "loadKeyStore_string1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "java.security.KeyStore"
      uuid: "loadKeyStore_keyStore1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      valueType: "void"
      uuid: "loadKeyStore_void1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "INPUT_STREAM"
      content: !<inputStream>
        values: []
      valueType: "java.io.InputStream"
      uuid: "loadKeyStore_inputStream1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "NULL"
      uuid: "uuid4"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "EXCEPTION"
      content: !<new>
        target: "java.security.KeyStoreException"
        parameters:
        - name: "cause"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "java.lang.Exception"
              parameters: []
              privateConstructor: false
              createdByTargetCode: false
            valueType: "java.lang.Exception"
            uuid: "loadKeyStore_exception1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: true
      valueType: "java.security.KeyStoreException"
      uuid: "loadKeyStore_keyStoreException1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
  - pathId: "path4"
    testPathName: "loadKeyStoreWhenKeystorePasswordIsNullAndCaughtIOException"
    modelFingerprint: "6F3E96825A78151CD79A9960B6B13201"
    problemWasSolvedByProver: false
    catchBlockExercised:
      idExternalInstruction: 0
      id: 2
      catchExceptions:
      - "java.io.IOException"
    truncated: true
    inputParameters: []
    uuid: "2d381cc2-cbcf-3109-8eba-72edefeb58c0"
    deleted: true
    disabled: false
    ignoredBySystem: true
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: java.security.KeyStore.load(java.io.InputStream,null)\
        \ : void"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues: []
