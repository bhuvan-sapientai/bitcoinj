---
modelFingerprint: "AA418477D4EB0B751A02762A479568DB"
methods:
- method:
    name: "init"
    signature: "init() : void"
    sourceCodeSignature: "void init()"
    instructionFingerprint: "5E1FFB5142ADC559A23C9007224CD552"
  paths:
  - pathId: "path1"
    testPathName: "initTest"
    modelFingerprint: "44200F4BECF164AD078220089EFE33E3"
    problemWasSolvedByProver: true
    truncated: false
    inputParameters:
    - type: "STATIC"
      name: "BriefLogFormatter"
      modelFingerprint: "1C5ABA145C946576DEB4C11F2983C3DC"
      index: 1
      valueUuid: "uuid1"
      methodExercised:
        target: "org.bitcoinj.utils.BriefLogFormatter"
        name: "init"
        parameters:
        - name: "level"
          valueUuid: "init_level1"
        signature: "init(Level): void"
        returnValueUuid: "init_void1"
        access: 9
    - type: "RESULT"
      name: "result"
      modelFingerprint: "68041019986276EDF5D420282D883A57"
      index: 2
      valueUuid: "uuid2"
    uuid: "e991d51a-89a1-3fbd-8961-0087bc961914"
    deleted: false
    disabled: false
    ignoredBySystem: false
    prover: "DEFAULT"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues:
    - sapientType: "MOCK"
      valueType: "org.bitcoinj.utils.BriefLogFormatter"
      uuid: "uuid1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      valueType: "void"
      uuid: "init_void1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<static_field_return>
        target: "java.util.logging.Level"
        fieldName: "INFO"
      valueType: "java.util.logging.Level"
      uuid: "init_level1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      uuid: "uuid2"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
- method:
    name: "init"
    signature: "init(java.util.logging.Level) : void"
    sourceCodeSignature: "void init(Level level)"
    instructionFingerprint: "55CC1AD7C6A2158C23155D5FA90D8560"
  paths:
  - pathId: "path1"
    testPathName: "init1WhenHandlersLengthGreaterThan0"
    modelFingerprint: "678D851F046239D2B7C9963BEB99B61F"
    problemWasSolvedByProver: false
    truncated: false
    inputParameters:
    - type: "INPUT"
      name: "level"
      modelFingerprint: "79E71258C696EF6B82225C2DB87C5A8C"
      index: 1
      valueUuid: "init_level1"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "68041019986276EDF5D420282D883A57"
      index: 2
      valueUuid: "uuid1"
    uuid: "77d9580d-0a0c-3794-aeb1-13da2a5e4954"
    deleted: false
    disabled: true
    ignoredBySystem: false
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: java.util.logging.Handler.setFormatter(org.bitcoinj.utils.BriefLogFormatter)\
        \ : void"
    prover: "LLM"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: true
    allValues:
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.util.logging.Level"
        method: "parse"
        methodParameters:
        - name: "x"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "x1"
            valueType: "java.lang.String"
            uuid: "init_level1-x"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
      valueType: "java.util.logging.Level"
      uuid: "init_level1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      uuid: "uuid1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
  - pathId: "path2"
    testPathName: "init1WhenHandlersLengthNotGreaterThan0"
    modelFingerprint: "91761A4E706E2ECFEDC5281E10CB19BC"
    problemWasSolvedByProver: true
    truncated: true
    inputParameters: []
    uuid: "a6fa8782-d4d5-3e71-8559-14b571ec4036"
    deleted: true
    disabled: false
    ignoredBySystem: true
    prover: "DEFAULT"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues: []
- method:
    name: "initVerbose"
    signature: "initVerbose() : void"
    sourceCodeSignature: "void initVerbose()"
    instructionFingerprint: "11072153A4E78ECF711565D49FBA4F9B"
  paths:
  - pathId: "path1"
    testPathName: "initVerboseTest"
    modelFingerprint: "44200F4BECF164AD078220089EFE33E3"
    problemWasSolvedByProver: true
    truncated: false
    inputParameters:
    - type: "STATIC"
      name: "BriefLogFormatter"
      modelFingerprint: "1C5ABA145C946576DEB4C11F2983C3DC"
      index: 1
      valueUuid: "uuid5"
      methodExercised:
        target: "org.bitcoinj.utils.BriefLogFormatter"
        name: "init"
        parameters:
        - name: "level"
          valueUuid: "initVerbose_level1"
        signature: "init(Level): void"
        returnValueUuid: "initVerbose_void1"
        access: 9
    - type: "RESULT"
      name: "result"
      modelFingerprint: "68041019986276EDF5D420282D883A57"
      index: 2
      valueUuid: "uuid6"
    uuid: "3a6e416d-0a41-3b1a-be46-3cb72a3f10ca"
    deleted: false
    disabled: false
    ignoredBySystem: false
    prover: "DEFAULT"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues:
    - sapientType: "MOCK"
      valueType: "org.bitcoinj.utils.BriefLogFormatter"
      uuid: "uuid5"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      valueType: "void"
      uuid: "initVerbose_void1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<static_field_return>
        target: "java.util.logging.Level"
        fieldName: "ALL"
      valueType: "java.util.logging.Level"
      uuid: "initVerbose_level1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      uuid: "uuid6"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
- method:
    name: "initWithSilentBitcoinJ"
    signature: "initWithSilentBitcoinJ() : void"
    sourceCodeSignature: "void initWithSilentBitcoinJ()"
    instructionFingerprint: "4369CAA94A79D7F069A28D2C7B25C79E"
  paths:
  - pathId: "path1"
    testPathName: "initWithSilentBitcoinJTest"
    modelFingerprint: "866A961E0AA88A17692669BAA37BFD42"
    problemWasSolvedByProver: true
    truncated: false
    inputParameters:
    - type: "STATIC"
      name: "BriefLogFormatter"
      modelFingerprint: "5165073B68B06D4F6A5682E31FD67EE5"
      index: 1
      valueUuid: "uuid7"
      methodExercised:
        target: "org.bitcoinj.utils.BriefLogFormatter"
        name: "init"
        parameters: []
        signature: "init(): void"
        returnValueUuid: "initWithSilentBitcoinJ_void1"
        access: 9
    - type: "RESULT"
      name: "result"
      modelFingerprint: "68041019986276EDF5D420282D883A57"
      index: 2
      valueUuid: "uuid8"
    uuid: "dea246d0-4e1d-3d3e-b66a-74b9c8e925ed"
    deleted: false
    disabled: false
    ignoredBySystem: false
    prover: "DEFAULT"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues:
    - sapientType: "MOCK"
      valueType: "org.bitcoinj.utils.BriefLogFormatter"
      uuid: "uuid7"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      valueType: "void"
      uuid: "initWithSilentBitcoinJ_void1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      uuid: "uuid8"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
- method:
    name: "format"
    signature: "format(java.util.logging.LogRecord) : java.lang.String"
    sourceCodeSignature: "String format(LogRecord logRecord)"
    instructionFingerprint: "33D81B463E2E6BD229B3F30774F3DBCC"
  paths:
  - pathId: "path1"
    testPathName: "formatWhenLogRecordGetThrownIsNotNull"
    constructorSignature: "<init>() : void"
    modelFingerprint: "0309DE27C60B49BBF8184FF5BD1A3663"
    problemWasSolvedByProver: false
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "4DB0F57EEFC6BBF1691C61D6F11B96D4"
      index: 1
      valueUuid: "target"
    - type: "INPUT"
      name: "logRecord"
      modelFingerprint: "2AF93D4E8AE23EC993623FD6E7460DF6"
      index: 2
      valueUuid: "format_logRecord1"
    - type: "LOCAL_VARIABLE"
      name: "logRecord"
      modelFingerprint: "E06D3176EA6E91B3DCB5563FCE34BEB8"
      index: 3
      valueUuid: "format_logRecord1"
      methodExercised:
        target: "logRecord"
        name: "getThreadID"
        parameters: []
        signature: "getThreadID(): int"
        returnValueUuid: "format_int1"
        access: 131073
    - type: "LOCAL_VARIABLE"
      name: "logRecord"
      modelFingerprint: "EE1E733A6A4F4701E0C0CD9AC6327F58"
      index: 4
      valueUuid: "format_logRecord1"
      methodExercised:
        target: "logRecord"
        name: "getSourceClassName"
        parameters: []
        signature: "getSourceClassName(): String"
        returnValueUuid: "format_string1"
        access: 1
    - type: "LOCAL_VARIABLE"
      name: "logRecord"
      modelFingerprint: "F5ACB3F37C92128B70C820F7E911C016"
      index: 5
      valueUuid: "format_logRecord1"
      methodExercised:
        target: "logRecord"
        name: "getSourceMethodName"
        parameters: []
        signature: "getSourceMethodName(): String"
        returnValueUuid: "format_string3"
        access: 1
    - type: "LOCAL_VARIABLE"
      name: "logRecord"
      modelFingerprint: "7AC3107B163079170001F2EA360F1E13"
      index: 6
      valueUuid: "format_logRecord1"
      methodExercised:
        target: "logRecord"
        name: "getMillis"
        parameters: []
        signature: "getMillis(): long"
        returnValueUuid: "format_long1"
        access: 1
    - type: "LOCAL_VARIABLE"
      name: "logRecord"
      modelFingerprint: "8A34C8EAD62718070CD5DEAEEEF78E9F"
      index: 7
      valueUuid: "format_logRecord1"
      methodExercised:
        target: "logRecord"
        name: "getMessage"
        parameters: []
        signature: "getMessage(): String"
        returnValueUuid: "format_string5"
        access: 1
    - type: "LOCAL_VARIABLE"
      name: "logRecord"
      modelFingerprint: "1FF048E14BB19EB1D303AE52A8549F96"
      index: 8
      valueUuid: "format_logRecord1"
      methodExercised:
        target: "logRecord"
        name: "getThrown"
        parameters: []
        signature: "getThrown(): Throwable"
        returnValueUuid: "format_throwable1"
        access: 1
    - type: "LOCAL_VARIABLE"
      name: "logRecord"
      modelFingerprint: "1FF048E14BB19EB1D303AE52A8549F96"
      index: 9
      valueUuid: "format_logRecord1"
      methodExercised:
        target: "logRecord"
        name: "getThrown"
        parameters: []
        signature: "getThrown(): Throwable"
        returnValueUuid: "format_throwable2"
        access: 1
    - type: "RESULT"
      name: "result"
      modelFingerprint: "D1F433D4EB9F8805FF391E82DAB508AB"
      index: 10
      valueUuid: "format_string7"
    uuid: "5378ac91-7deb-341c-89c9-a5f9224b65ce"
    deleted: false
    disabled: true
    ignoredBySystem: false
    variablesCouldNotBeIsolated: "ISO_LOCAL_TIME, messageFormat"
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: java.time.LocalDateTime.ofInstant(java.time.Instant,java.time.ZoneOffset)\
        \ : java.time.LocalDateTime"
    prover: "LLM"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: true
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.bitcoinj.utils.BriefLogFormatter"
        parameters: []
        privateConstructor: false
        createdByTargetCode: false
      valueType: "org.bitcoinj.utils.BriefLogFormatter"
      uuid: "target"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "java.util.logging.LogRecord"
      uuid: "format_logRecord1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "java.util.logging.LogRecord"
      uuid: "format_logRecord1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: -1
      valueType: "int"
      uuid: "format_int1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "java.util.logging.LogRecord"
      uuid: "format_logRecord1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "A"
      valueType: "java.lang.String"
      uuid: "format_string1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "java.util.logging.LogRecord"
      uuid: "format_logRecord1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_getSourceMethodName1"
      valueType: "java.lang.String"
      uuid: "format_string3"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "java.util.logging.LogRecord"
      uuid: "format_logRecord1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: -1
      valueType: "long"
      uuid: "format_long1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "java.util.logging.LogRecord"
      uuid: "format_logRecord1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_getMessage1"
      valueType: "java.lang.String"
      uuid: "format_string5"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "java.util.logging.LogRecord"
      uuid: "format_logRecord1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Throwable"
        parameters: []
        privateConstructor: false
        createdByTargetCode: false
      valueType: "java.lang.Throwable"
      uuid: "format_throwable1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "java.util.logging.LogRecord"
      uuid: "format_logRecord1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Throwable"
        parameters: []
        privateConstructor: false
        createdByTargetCode: false
      valueType: "java.lang.Throwable"
      uuid: "format_throwable2"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "result1"
      valueType: "java.lang.String"
      uuid: "format_string7"
      fixed: false
      equalsMethodPresent: true
      explicitCastNeeded: false
  - pathId: "path2"
    testPathName: "formatWhenLogRecordGetThrownIsNull"
    constructorSignature: "<init>() : void"
    modelFingerprint: "BBAAC64DEE7314410DFB4F3C1D91B5D7"
    problemWasSolvedByProver: false
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "4DB0F57EEFC6BBF1691C61D6F11B96D4"
      index: 1
      valueUuid: "target"
    - type: "INPUT"
      name: "logRecord"
      modelFingerprint: "2AF93D4E8AE23EC993623FD6E7460DF6"
      index: 2
      valueUuid: "format_logRecord1"
    - type: "LOCAL_VARIABLE"
      name: "logRecord"
      modelFingerprint: "E06D3176EA6E91B3DCB5563FCE34BEB8"
      index: 3
      valueUuid: "format_logRecord1"
      methodExercised:
        target: "logRecord"
        name: "getThreadID"
        parameters: []
        signature: "getThreadID(): int"
        returnValueUuid: "format_int1"
        access: 131073
    - type: "LOCAL_VARIABLE"
      name: "logRecord"
      modelFingerprint: "EE1E733A6A4F4701E0C0CD9AC6327F58"
      index: 4
      valueUuid: "format_logRecord1"
      methodExercised:
        target: "logRecord"
        name: "getSourceClassName"
        parameters: []
        signature: "getSourceClassName(): String"
        returnValueUuid: "format_string1"
        access: 1
    - type: "LOCAL_VARIABLE"
      name: "logRecord"
      modelFingerprint: "F5ACB3F37C92128B70C820F7E911C016"
      index: 5
      valueUuid: "format_logRecord1"
      methodExercised:
        target: "logRecord"
        name: "getSourceMethodName"
        parameters: []
        signature: "getSourceMethodName(): String"
        returnValueUuid: "format_string3"
        access: 1
    - type: "LOCAL_VARIABLE"
      name: "logRecord"
      modelFingerprint: "7AC3107B163079170001F2EA360F1E13"
      index: 6
      valueUuid: "format_logRecord1"
      methodExercised:
        target: "logRecord"
        name: "getMillis"
        parameters: []
        signature: "getMillis(): long"
        returnValueUuid: "format_long1"
        access: 1
    - type: "LOCAL_VARIABLE"
      name: "logRecord"
      modelFingerprint: "8A34C8EAD62718070CD5DEAEEEF78E9F"
      index: 7
      valueUuid: "format_logRecord1"
      methodExercised:
        target: "logRecord"
        name: "getMessage"
        parameters: []
        signature: "getMessage(): String"
        returnValueUuid: "format_string5"
        access: 1
    - type: "LOCAL_VARIABLE"
      name: "logRecord"
      modelFingerprint: "F9930330BB5CD2A5D231DA34D17446FC"
      index: 8
      valueUuid: "format_logRecord1"
      methodExercised:
        target: "logRecord"
        name: "getThrown"
        parameters: []
        signature: "getThrown(): Throwable"
        returnValueUuid: "format_throwable1"
        access: 1
    - type: "RESULT"
      name: "result"
      modelFingerprint: "D1F433D4EB9F8805FF391E82DAB508AB"
      index: 9
      valueUuid: "format_string6"
    uuid: "ac8ff3d4-4f6a-3dff-8982-4e680415e084"
    deleted: false
    disabled: true
    ignoredBySystem: false
    variablesCouldNotBeIsolated: "ISO_LOCAL_TIME, messageFormat"
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: java.time.LocalDateTime.ofInstant(java.time.Instant,java.time.ZoneOffset)\
        \ : java.time.LocalDateTime"
    prover: "LLM"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: true
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.bitcoinj.utils.BriefLogFormatter"
        parameters: []
        privateConstructor: false
        createdByTargetCode: false
      valueType: "org.bitcoinj.utils.BriefLogFormatter"
      uuid: "target"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "java.util.logging.LogRecord"
      uuid: "format_logRecord1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "java.util.logging.LogRecord"
      uuid: "format_logRecord1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: -1
      valueType: "int"
      uuid: "format_int1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "java.util.logging.LogRecord"
      uuid: "format_logRecord1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "A"
      valueType: "java.lang.String"
      uuid: "format_string1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "java.util.logging.LogRecord"
      uuid: "format_logRecord1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_getSourceMethodName1"
      valueType: "java.lang.String"
      uuid: "format_string3"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "java.util.logging.LogRecord"
      uuid: "format_logRecord1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: -1
      valueType: "long"
      uuid: "format_long1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "java.util.logging.LogRecord"
      uuid: "format_logRecord1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_getMessage1"
      valueType: "java.lang.String"
      uuid: "format_string5"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "java.util.logging.LogRecord"
      uuid: "format_logRecord1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "NULL"
      valueType: "java.lang.Throwable"
      uuid: "format_throwable1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "result1"
      valueType: "java.lang.String"
      uuid: "format_string6"
      fixed: false
      equalsMethodPresent: true
      explicitCastNeeded: false
